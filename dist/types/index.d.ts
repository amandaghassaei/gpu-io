import { isWebGL2Supported, isHighpSupportedInVertexShader, isHighpSupportedInFragmentShader, getVertexShaderMediumpPrecision, getFragmentShaderMediumpPrecision, preprocessFragmentShader, preprocessVertexShader, makeShaderHeader, isPowerOf2, initSequentialFloatArray } from './utils';
import { GPUComposer } from './GPUComposer';
import { GPULayer } from './GPULayer';
import { GPUProgram } from './GPUProgram';
declare const _testing: {
    makeShaderHeader: typeof makeShaderHeader;
    preprocessVertexShader: typeof preprocessVertexShader;
    preprocessFragmentShader: typeof preprocessFragmentShader;
    isPowerOf2: typeof isPowerOf2;
    initSequentialFloatArray: typeof initSequentialFloatArray;
};
declare const WebGLCompute: {
    GPUComposer: typeof GPUComposer;
    GPULayer: typeof GPULayer;
    GPUProgram: typeof GPUProgram;
    isWebGL2Supported: typeof isWebGL2Supported;
    isHighpSupportedInVertexShader: typeof isHighpSupportedInVertexShader;
    isHighpSupportedInFragmentShader: typeof isHighpSupportedInFragmentShader;
    getVertexShaderMediumpPrecision: typeof getVertexShaderMediumpPrecision;
    getFragmentShaderMediumpPrecision: typeof getFragmentShaderMediumpPrecision;
    HALF_FLOAT: "HALF_FLOAT";
    FLOAT: "FLOAT";
    UNSIGNED_BYTE: "UNSIGNED_BYTE";
    BYTE: "BYTE";
    UNSIGNED_SHORT: "UNSIGNED_SHORT";
    SHORT: "SHORT";
    UNSIGNED_INT: "UNSIGNED_INT";
    INT: "INT";
    BOOL: "BOOL";
    UINT: "UINT";
    LINEAR: "LINEAR";
    NEAREST: "NEAREST";
    REPEAT: "REPEAT";
    CLAMP_TO_EDGE: "CLAMP_TO_EDGE";
    RGB: "RGB";
    RGBA: "RGBA";
    validArrayTypes: (Float32ArrayConstructor | Uint8ArrayConstructor | Int8ArrayConstructor | Uint16ArrayConstructor | Int16ArrayConstructor | Uint32ArrayConstructor | Int32ArrayConstructor | ArrayConstructor)[];
    validDataTypes: string[];
    validFilters: string[];
    validWraps: string[];
    validTextureFormats: string[];
    validTextureTypes: string[];
    GLSL3: "300 es";
    GLSL1: "100";
    PRECISION_LOW_P: "lowp";
    PRECISION_MEDIUM_P: "mediump";
    PRECISION_HIGH_P: "highp";
    FLOAT_1D_UNIFORM: "1f";
    FLOAT_2D_UNIFORM: "2f";
    FLOAT_3D_UNIFORM: "3f";
    FLOAT_4D_UNIFORM: "3f";
    INT_1D_UNIFORM: "1i";
    INT_2D_UNIFORM: "2i";
    INT_3D_UNIFORM: "3i";
    INT_4D_UNIFORM: "3i";
    DEFAULT_PROGRAM_NAME: "DEFAULT";
    DEFAULT_W_UV_PROGRAM_NAME: "DEFAULT_W_UV";
    DEFAULT_W_NORMAL_PROGRAM_NAME: "DEFAULT_W_NORMAL";
    DEFAULT_W_UV_NORMAL_PROGRAM_NAME: "DEFAULT_W_UV_NORMAL";
    SEGMENT_PROGRAM_NAME: "SEGMENT";
    DATA_LAYER_POINTS_PROGRAM_NAME: "DATA_LAYER_POINTS";
    DATA_LAYER_LINES_PROGRAM_NAME: "DATA_LAYER_LINES";
    DATA_LAYER_VECTOR_FIELD_PROGRAM_NAME: "DATA_LAYER_VECTOR_FIELD";
    DEFAULT_ERROR_CALLBACK: (msg: string) => never;
    DEFAULT_CIRCLE_NUM_SEGMENTS: 18;
};
export default WebGLCompute;
export * from './Constants';
export { GPUComposer, GPULayer, GPUProgram, isWebGL2Supported, isHighpSupportedInVertexShader, isHighpSupportedInFragmentShader, getVertexShaderMediumpPrecision, getFragmentShaderMediumpPrecision, _testing, };

{"version":3,"sources":["webpack://GPUIO/webpack/universalModuleDefinition","webpack://GPUIO/./node_modules/@petamoriken/float16/src/lib.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/hfround.js","webpack://GPUIO/./node_modules/lodash-es/_freeGlobal.js","webpack://GPUIO/./node_modules/lodash-es/_root.js","webpack://GPUIO/./node_modules/lodash-es/_Symbol.js","webpack://GPUIO/./node_modules/lodash-es/_getRawTag.js","webpack://GPUIO/./node_modules/lodash-es/_objectToString.js","webpack://GPUIO/./node_modules/lodash-es/_baseGetTag.js","webpack://GPUIO/./node_modules/lodash-es/isObject.js","webpack://GPUIO/./node_modules/lodash-es/isFunction.js","webpack://GPUIO/./node_modules/lodash-es/_coreJsData.js","webpack://GPUIO/./node_modules/lodash-es/_isMasked.js","webpack://GPUIO/./node_modules/lodash-es/_toSource.js","webpack://GPUIO/./node_modules/lodash-es/_baseIsNative.js","webpack://GPUIO/./node_modules/lodash-es/_getValue.js","webpack://GPUIO/./node_modules/lodash-es/_getNative.js","webpack://GPUIO/./node_modules/lodash-es/_nativeCreate.js","webpack://GPUIO/./node_modules/lodash-es/_hashClear.js","webpack://GPUIO/./node_modules/lodash-es/_hashDelete.js","webpack://GPUIO/./node_modules/lodash-es/_hashGet.js","webpack://GPUIO/./node_modules/lodash-es/_hashHas.js","webpack://GPUIO/./node_modules/lodash-es/_hashSet.js","webpack://GPUIO/./node_modules/lodash-es/_Hash.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheClear.js","webpack://GPUIO/./node_modules/lodash-es/eq.js","webpack://GPUIO/./node_modules/lodash-es/_assocIndexOf.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheDelete.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheGet.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheHas.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheSet.js","webpack://GPUIO/./node_modules/lodash-es/_ListCache.js","webpack://GPUIO/./node_modules/lodash-es/_Map.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheClear.js","webpack://GPUIO/./node_modules/lodash-es/_isKeyable.js","webpack://GPUIO/./node_modules/lodash-es/_getMapData.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheDelete.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheGet.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheHas.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheSet.js","webpack://GPUIO/./node_modules/lodash-es/_MapCache.js","webpack://GPUIO/./node_modules/lodash-es/memoize.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/bug.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/spec.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/is.js","webpack://GPUIO/./node_modules/lodash-es/isObjectLike.js","webpack://GPUIO/./node_modules/lodash-es/_baseIsArrayBuffer.js","webpack://GPUIO/./node_modules/lodash-es/_baseUnary.js","webpack://GPUIO/./node_modules/lodash-es/_nodeUtil.js","webpack://GPUIO/./node_modules/lodash-es/isArrayBuffer.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/Float16Array.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/private.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/dataView.js","webpack://GPUIO/./node_modules/changedpi/dist/index.js","webpack://GPUIO/./node_modules/file-saver/dist/FileSaver.min.js","webpack://GPUIO/./src/GPUComposer.ts","webpack://GPUIO/./src/GPULayer.ts","webpack://GPUIO/./src/GPULayerHelpers.ts","webpack://GPUIO/./src/GPUProgram.ts","webpack://GPUIO/./src/Vector4.ts","webpack://GPUIO/./src/checks.ts","webpack://GPUIO/./src/constants.ts","webpack://GPUIO/./src/extensions.ts","webpack://GPUIO/./src/index.ts","webpack://GPUIO/./src/regex.ts","webpack://GPUIO/./src/utils.ts","webpack://GPUIO/./src/glsl/common/precision.glsl","webpack://GPUIO/./src/glsl/frag/CopyFragShader.glsl","webpack://GPUIO/./src/glsl/frag/SetValueFragShader.glsl","webpack://GPUIO/./src/glsl/frag/VectorMagnitudeFragShader.glsl","webpack://GPUIO/./src/glsl/frag/WrappedLineColorFragShader.glsl","webpack://GPUIO/./src/glsl/vert/DefaultVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerLinesVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerPointsVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerVectorFieldVertShader.glsl","webpack://GPUIO/./src/glsl/vert/SegmentVertShader.glsl","webpack://GPUIO/webpack/bootstrap","webpack://GPUIO/webpack/runtime/define property getters","webpack://GPUIO/webpack/runtime/global","webpack://GPUIO/webpack/runtime/hasOwnProperty shorthand","webpack://GPUIO/webpack/runtime/make namespace object","webpack://GPUIO/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","buffer","ArrayBuffer","floatView","Float32Array","uint32View","Uint32Array","baseTable","shiftTable","i","e","roundToFloat16Bits","num","f","mantissaTable","exponentTable","offsetTable","m","convertToNumber","float16bits","hfround","Number","isFinite","global","Object","freeSelf","Function","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","undefined","value","isOwn","call","tag","unmasked","result","type","uid","maskSrcKey","exec","func","funcToString","reIsHostCtor","reIsNative","RegExp","replace","test","object","key","this","__data__","size","has","data","Hash","entries","index","length","clear","entry","set","get","other","array","splice","Array","pop","push","ListCache","map","MapCache","memoize","resolver","TypeError","memoized","args","arguments","apply","cache","Cache","isTypedArrayIndexedPropertyWritable","getOwnPropertyDescriptor","Uint8Array","writable","ToInteger","target","number","isNaN","Math","trunc","defaultCompareFunction","x","y","isNaN_x","isNaN_y","isPlusZero_x","isPlusZero_y","is","isDataView","view","DataView","isStringNumberKey","freeExports","nodeType","freeModule","freeProcess","nodeUtil","types","require","binding","nodeIsArrayBuffer","_","wm","WeakMap","obj","create","createPrivateStorage","isFloat16Array","Float16Array","assertFloat16Array","copyToArray","applyHandler","thisArg","defaultFloat16ArrayMethods","Reflect","handler","wrapper","ret","proxy","Proxy","isFrozen","getPrototypeOf","setPrototypeOf","defineProperty","descriptor","deleteProperty","isExtensible","preventExtensions","ownKeys","Uint16Array","input","byteOffset","super","arrayLike","Symbol","iterator","src","opts","from","mapFunc","val","keys","values","callback","l","start","offset","reverse","fill","copyWithin","compareFunction","_convertToNumber","sort","slice","subarray","element","join","toLocaleString","toStringTag","Float16Array$prototype","WeakSet","add","getFloat16","dataView","getUint16","setFloat16","setUint16","calcCrc","buf","c","pngDataTable","crcTable","Int32Array","n","k","createPngDataTable","changeDpiBlob","blob","dpi","headerChunk","Promise","resolve","reject","fileReader","FileReader","onload","dataArray","tail","changedArray","changeDpiOnArray","Blob","readAsArrayBuffer","changeDpiDataUrl","base64Image","dataSplitted","split","format","body","headerLength","overwritepHYs","indexOf","PNG","b64Index","b64index","b64PhysSignature1","b64PhysSignature2","b64PhysSignature3","detectPhysChunkFromDataUrl","ceil","JPEG","stringHeader","substring","restOfData","headerBytes","atob","charCodeAt","finalArray","base64Header","btoa","String","fromCharCode","arr","isArray","arr2","_toConsumableArray","_P","_H","_Y","_S","physChunk","crc","crcChunk","startingIndex","searchStartOfPhys","chunkLength","finalHeader","b","a","autoBom","console","warn","d","XMLHttpRequest","open","responseType","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","navigator","userAgent","saveAs","HTMLAnchorElement","h","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","innerText","HTMLElement","safari","onloadend","readAsDataURL","defaultVertexShaderSource","params","_errorThrown","_circlePositionsBuffer","_extensions","_copyPrograms","_setValuePrograms","_vectorMagnitudePrograms","_vertexShaders","DEFAULT_PROGRAM_NAME","DEFAULT_W_UV_PROGRAM_NAME","defines","DEFAULT_W_NORMAL_PROGRAM_NAME","DEFAULT_W_UV_NORMAL_PROGRAM_NAME","SEGMENT_PROGRAM_NAME","LAYER_POINTS_PROGRAM_NAME","LAYER_VECTOR_FIELD_PROGRAM_NAME","LAYER_LINES_PROGRAM_NAME","verboseLogging","_numTicks","validKeys","forEach","Error","_errorCallback","message","errorCallback","DEFAULT_ERROR_CALLBACK","canvas","gl","context","_gl","contextID","getContext","contextOptions","WEBGL2","WEBGL1","EXPERIMENTAL_WEBGL","isWebGL2","log","glslVersion","GLSL3","GLSL1","intPrecision","PRECISION_HIGH_P","floatPrecision","disable","DEPTH_TEST","pixelStorei","UNPACK_ALIGNMENT","bindBuffer","ARRAY_BUFFER","resize","clientWidth","clientHeight","_maxNumTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","initWithThreeRenderer","renderer","composer","GPUComposer","capabilities","precision","domElement","_glslKeyForType","HALF_FLOAT","FLOAT","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","INT","UINT","BYTE","SHORT","_setValueProgramForType","program","GPUProgram","fragmentShader","uniforms","_copyProgramForType","_getWrappedLineColorProgram","_wrappedLineColorProgram","_vectorMagnitudeProgramForType","_getQuadPositionsBuffer","_quadPositionsBuffer","fsQuadPositions","_initVertexBuffer","_getBoundaryPositionsBuffer","_boundaryPositionsBuffer","boundaryPositions","_getCirclePositionsBuffer","numSegments","unitCirclePoints","cos","PI","sin","circlePositions","createBuffer","bufferData","STATIC_DRAW","_cloneGPULayer","gpuLayer","dimensions","width","height","getValues","clone","GPULayer","numComponents","filter","wrapS","wrapT","numBuffers","clearValue","step","getStateAtIndex","bufferIndex","output","currentState","initTexture","url","isString","NEAREST","isValidFilter","validFilters","CLAMP_TO_EDGE","isValidWrap","validWraps","RGBA","isValidTextureFormat","validTextureFormats","isValidTextureType","validTextureTypes","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","srcFormat","srcType","pixel","texImage2D","image","Image","isPowerOf2","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","onLoad","_getVertexShaderWithName","programName","vertexShader","shader","preprocessedSrc","preprocessVertexShader","compileShader","VERTEX_SHADER","_width","_height","_drawSetup","fullscreenRender","inputTextures","constructor","WebGLTexture","layer","_setOutputLayer","useProgram","activeTexture","TEXTURE0","_setBlendMode","shouldBlendAlpha","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","_addLayerToInputs","_inputLayers","previous","_passThroughLayerDataFromInputToOutput","state","copyProgram","_internalType","_prepareForWrite","_usingTextureOverrideForCurrentBuffer","viewport","bindFramebuffer","FRAMEBUFFER","_setVertexAttribute","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","_setPositionAttribute","_setIndexAttribute","_setUVAttribute","glProgram","_defaultProgram","_setVertexUniform","drawArrays","TRIANGLE_STRIP","stepBoundary","onePx","singleEdge","LINES","LINE_LOOP","stepNonBoundary","stepCircle","position","radius","DEFAULT_CIRCLE_NUM_SEGMENTS","TRIANGLE_FAN","stepSegment","position1","position2","thickness","_segmentProgram","diffX","diffY","angle","atan2","centerX","centerY","sqrt","numCapSegments","endCaps","stepPolyline","vertices","positions","closeLoop","halfThickness","numPositions","uvs","includeUVs","normals","includeNormals","s1","s2","n1","n2","n3","v1","v2","length1","u","v3","v4","length2","cross","abs","length3","acos","_defaultProgramWithUVNormal","_defaultProgramWithUV","_defaultProgramWithNormal","stepTriangleStrip","count","stepLines","indices","LINE_STRIP","drawLayerAsPoints","_pointIndexArray","color","setUniform","_layerPointsProgram","BOOL","pointSize","positionLayerDimensions","wrapX","wrapY","_pointIndexBuffer","initSequentialFloatArray","POINTS","drawLayerAsLines","_layerLinesProgram","_indexedLinesIndexBuffer","floatArray","drawLayerAsVectorField","_vectorFieldIndexArray","_layerVectorFieldProgram","vectorScale","vectorSpacing","spacedDimensions","floor","_vectorFieldIndexBuffer","drawLayerMagnitude","scale","resetThreeState","_renderer","getViewport","utils","Vector4","setRenderTarget","resetState","savePNG","filename","toBlob","then","tick","_lastTickTime","_lastTickFPS","currentTime","performance","now","fps","milliseconds","currentFPS","parseFloat","toFixed","numTicks","dispose","deleteShader","_clearValue","_bufferIndex","_buffers","isObject","JSON","stringify","_composer","isPositiveInteger","calcGPULayerSize","_length","defaultFilter","LINEAR","isValidDataType","validDataTypes","internalType","getGPULayerInternalType","getGLTextureParameters","glFormat","glInternalFormat","glType","glNumChannels","_glInternalFormat","_glFormat","_glType","_glNumChannels","internalFilter","getGPULayerInternalFilter","_internalFilter","_glFilter","_internalWrapS","getGPULayerInternalWrap","wrap","_glWrapS","_internalWrapT","_glWrapT","_initBuffers","is1D","_textureOverrides","validatedArray","validateGPULayerArray","getError","framebuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","incrementBufferIndex","_bindFramebuffer","setFromArray","applyToAllBuffers","endIndex","_destroyBuffers","isValidClearValue","isNumber","startIndex","fillLength","initArrayForType","float16View","RGBA_INTEGER","readyToRead","readPixels","OUTPUT_LENGTH","index1","index2","multiplier","imageData","getImageData","indexFlipped","putImageData","attachToThreeTexture","offsetTextureProperties","properties","__webglTexture","__webglInit","deleteTexture","deleteFramebuffer","results","framebufferWriteSupport","filterWrapSupport","halfFloatsAsFloats","Int8Array","Int16Array","shouldCastIntTypeAsFloat","RED","RG","RGB","RED_INTEGER","RG_INTEGER","RGB_INTEGER","R16F","RG16F","RGB16F","RGBA16F","R32F","RG32F","RGB32F","RGBA32F","R8UI","RG8UI","RGB8UI","RGBA8UI","R8I","RG8I","RGB8I","RGBA8I","R16I","RG16I","RGB16I","RGBA16I","R16UI","RG16UI","RGB16UI","RGBA16UI","R32I","RG32I","RGB32I","RGBA32I","R32UI","RG32UI","RGB32UI","RGBA32UI","getExtension","OES_TEXTURE_HALF_FLOAT","HALF_FLOAT_OES","missingParams","testFramebufferAttachment","validStatus","testFilterWrap","glWrap","glFilter","valuesTyped","valuesTyped16","isUnsignedIntType","isIntType","filtered","supported","tol","wrapValue","max","min","expected","_x","minMaxValuesForType","Infinity","MIN_UNSIGNED_BYTE","MAX_UNSIGNED_BYTE","MIN_BYTE","MAX_BYTE","MIN_UNSIGNED_SHORT","MAX_UNSIGNED_SHORT","MIN_SHORT","MAX_SHORT","MIN_UNSIGNED_INT","MAX_UNSIGNED_INT","MIN_INT","MAX_INT","exp","remainder","pow","OES_TEXTURE_HAlF_FLOAT_LINEAR","OES_TEXTURE_FLOAT_LINEAR","EXT_COLOR_BUFFER_FLOAT","EXT_COLOR_BUFFER_HALF_FLOAT","OES_TEXTURE_FLOAT","shouldTypeCast","validArrayTypes","arrayLength","shouldResize","_len","origValue","clipped","_defines","_uniforms","_programs","fragmentShaderSource","_fragmentShaderSource","preprocessFragmentShader","_compile","_fragmentShader","definesNeedUpdate","FRAGMENT_SHADER","_getProgramWithName","initGLProgram","uniformNames","uniformName","uniform","_setProgramUniform","isGLSL3","_location","getUniformLocation","getUniform","badType","BOOL_1D_UNIFORM","BOOL_2D_UNIFORM","BOOL_3D_UNIFORM","BOOL_4D_UNIFORM","isBoolean","FLOAT_1D_UNIFORM","FLOAT_2D_UNIFORM","FLOAT_3D_UNIFORM","FLOAT_4D_UNIFORM","INT_1D_UNIFORM","INT_2D_UNIFORM","INT_3D_UNIFORM","INT_4D_UNIFORM","isInteger","UINT_1D_UNIFORM","UINT_2D_UNIFORM","UINT_3D_UNIFORM","UINT_4D_UNIFORM","isNonNegativeInteger","uniform1i","uniform2i","uniform3i","uniform4i","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1ui","uniform2uiv","uniform3uiv","uniform4uiv","currentType","uniformInternalTypeForValue","isChanged","find","deleteProgram","z","w","copy","v","isNumberOfType","REPEAT","PRECISION_LOW_P","PRECISION_MEDIUM_P","MIN_HALF_FLOAT_INT","MAX_HALF_FLOAT_INT","MIN_FLOAT_INT","MAX_FLOAT_INT","WEBGL_DEPTH_TEXTURE","extensionName","optional","extension","_testing","isFloatType","isSignedIntType","makeShaderHeader","extensions","regex","checks","GPULayerHelpers","isWebGL2Supported","isHighpSupportedInVertexShader","isHighpSupportedInFragmentShader","getVertexShaderMediumpPrecision","getFragmentShaderMediumpPrecision","escapeRegExp","string","typecastVariable","shaderSource","variableName","regexMatch","assignmentExpressions","match","regexValueMatch","regexReplace","_castVaryingToFloat","regexString","castToFloatExpressions","regexVariableMatch","variable","castVaryingToFloat","containsOutFragColor","getFragmentOutType","assignmentFound","filler","gl_FragColor","containsGLFragColor","out_fragColor","origLength","precisionSource","supportsWebGL2","supportsHighpVertex","supportsHighpFragment","mediumpVertexPrecision","mediumpFragmentPrecision","intForPrecision","convertDefinesToString","definesSource","versionSource","precisionDefinesSource","GPUIO_INT_PRECISION","GPUIO_FLOAT_PRECISION","shaderType","createShader","shaderHeader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","WebGL2RenderingContext","WebGL2ComputeRenderingContext","isHighpSupported","vsSource","fsSource","vs","fs","vertexSupport","fragmentSupport","test1PxCalc","addUniforms","positionLocation","deleteBuffer","preprocessShader","stripVersion","stripPrecision","stripComments","convertShaderToGLSL1","glsl1Sampler2D","glsl1Uint","glsl1Texture","vLocation","uniform3f","mediumpPrecision","highpToMediump","glsl1VertexIn","glsl1VertexOut","convertVertexShaderToGLSL1","checkFragmentShaderForFragColor","glsl1FragmentIn","glsl1FragmentOut","convertFragmentShaderToGLSL1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","o","enumerable","globalThis","prop","r"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,IARlB,CASGK,MAAM,WACT,M,8HCRA,MAAMC,EAAS,IAAIC,YAAY,GACzBC,EAAY,IAAIC,aAAaH,GAC7BI,EAAa,IAAIC,YAAYL,GAG7BM,EAAY,IAAID,YAAY,KAC5BE,EAAa,IAAIF,YAAY,KAEnC,IAAI,IAAIG,EAAI,EAAGA,EAAI,MAAOA,EAAG,CACzB,MAAMC,EAAID,EAAI,IAGVC,GAAK,IACLH,EAAc,EAAJE,GAAa,EACvBF,EAAc,IAAJE,GAAa,MACvBD,EAAe,EAAJC,GAAa,GACxBD,EAAe,IAAJC,GAAa,IAGjBC,GAAK,IACZH,EAAc,EAAJE,GAAc,OAAYC,EAAI,GACxCH,EAAc,IAAJE,GAAc,OAAYC,EAAI,GAAO,MAC/CF,EAAe,EAAJC,IAAcC,EAAI,EAC7BF,EAAe,IAAJC,IAAcC,EAAI,GAGtBA,GAAK,IACZH,EAAc,EAAJE,GAAeC,EAAI,IAAO,GACpCH,EAAc,IAAJE,GAAeC,EAAI,IAAO,GAAM,MAC1CF,EAAe,EAAJC,GAAa,GACxBD,EAAe,IAAJC,GAAa,IAGjBC,EAAI,KACXH,EAAc,EAAJE,GAAa,MACvBF,EAAc,IAAJE,GAAa,MACvBD,EAAe,EAAJC,GAAa,GACxBD,EAAe,IAAJC,GAAa,KAIxBF,EAAc,EAAJE,GAAa,MACvBF,EAAc,IAAJE,GAAa,MACvBD,EAAe,EAAJC,GAAa,GACxBD,EAAe,IAAJC,GAAa,IASzB,SAASE,EAAmBC,GAC/BT,EAAU,GAAKS,EAEf,MAAMC,EAAIR,EAAW,GACfK,EAAKG,GAAK,GAAM,IACtB,OAAON,EAAUG,KAAW,QAAJG,IAAmBL,EAAWE,IAI1D,MAAMI,EAAgB,IAAIR,YAAY,MAChCS,EAAgB,IAAIT,YAAY,IAChCU,EAAc,IAAIV,YAAY,IAEpCQ,EAAc,GAAK,EACnB,IAAI,IAAIL,EAAI,EAAGA,EAAI,OAAQA,EAAG,CAC1B,IAAIQ,EAAIR,GAAK,GACTC,EAAI,EAGR,KAA2B,IAAhB,QAAJO,IACHP,GAAK,QACLO,IAAM,EAGVA,IAAK,QACLP,GAAK,UAELI,EAAcL,GAAKQ,EAAIP,EAE3B,IAAI,IAAID,EAAI,KAAMA,EAAI,OAAQA,EAC1BK,EAAcL,GAAK,WAAeA,EAAI,MAAS,IAGnDM,EAAc,GAAK,EACnB,IAAI,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACrBM,EAAcN,GAAKA,GAAK,GAE5BM,EAAc,IAAM,WACpBA,EAAc,IAAM,WACpB,IAAI,IAAIN,EAAI,GAAIA,EAAI,KAAMA,EACtBM,EAAcN,GAAK,YAAeA,EAAI,IAAO,IAEjDM,EAAc,IAAM,WAEpBC,EAAY,GAAK,EACjB,IAAI,IAAIP,EAAI,EAAGA,EAAI,KAAMA,EAEjBO,EAAYP,GADN,KAANA,EACiB,EAEA,KASlB,SAASS,EAAgBC,GAC5B,MAAMF,EAAIE,GAAe,GAEzB,OADAd,EAAW,GAAKS,EAAcE,EAAYC,IAAoB,KAAdE,IAAwBJ,EAAcE,GAC/Ed,EAAU,GC7GN,SAASiB,EAAQR,GAI5B,GAHAA,EAAMS,OAAOT,IAGRS,OAAOC,SAASV,IAAgB,IAARA,EACzB,OAAOA,EAIX,OAAOM,EADKP,EAAmBC,ICZnC,QAFkC,iBAAVW,QAAsBA,QAAUA,OAAOC,SAAWA,QAAUD,OCEpF,IAAIE,EAA0B,iBAARzB,MAAoBA,MAAQA,KAAKwB,SAAWA,QAAUxB,KAK5E,QAFW,GAAcyB,GAAYC,SAAS,cAATA,GCDrC,QAFa,SCAb,IAAIC,EAAcH,OAAOI,UAGrB,EAAiBD,EAAYE,eAO7BC,EAAuBH,EAAYI,SAGnCC,EAAiB,EAAS,mBAAqBC,EA6BnD,QApBA,SAAmBC,GACjB,IAAIC,EAAQ,EAAeC,KAAKF,EAAOF,GACnCK,EAAMH,EAAMF,GAEhB,IACEE,EAAMF,QAAkBC,EACxB,IAAIK,GAAW,EACf,MAAO5B,IAET,IAAI6B,EAAST,EAAqBM,KAAKF,GAQvC,OAPII,IACEH,EACFD,EAAMF,GAAkBK,SAEjBH,EAAMF,IAGVO,GCzCT,IAOI,EAPcf,OAAOI,UAOcG,SAavC,QAJA,SAAwBG,GACtB,OAAO,EAAqBE,KAAKF,ICbnC,IAII,EAAiB,EAAS,mBAAqBD,EAkBnD,QATA,SAAoBC,GAClB,OAAa,MAATA,OACeD,IAAVC,EAdQ,qBADL,gBAiBJ,GAAkB,KAAkBV,OAAOU,GAC/C,EAAUA,GACV,EAAeA,ICMrB,QALA,SAAkBA,GAChB,IAAIM,SAAcN,EAClB,OAAgB,MAATA,IAA0B,UAARM,GAA4B,YAARA,ICS/C,QAVA,SAAoBN,GAClB,IAAK,EAASA,GACZ,OAAO,EAIT,IAAIG,EAAM,EAAWH,GACrB,MA5BY,qBA4BLG,GA3BI,8BA2BcA,GA7BZ,0BA6B6BA,GA1B7B,kBA0BgDA,GC5B/D,QAFiB,wBCAjB,IACMI,EADFC,GACED,EAAM,SAASE,KAAK,GAAc,QAAmB,iBAA4B,KACvE,iBAAmBF,EAAO,GAc1C,QAJA,SAAkBG,GAChB,QAASF,GAAeA,KAAcE,GCfxC,IAGIC,EAHYnB,SAASE,UAGIG,SAqB7B,QAZA,SAAkBa,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOC,EAAaT,KAAKQ,GACzB,MAAOlC,IACT,IACE,OAAQkC,EAAO,GACf,MAAOlC,KAEX,MAAO,ICbT,IAGIoC,EAAe,8BAGf,EAAYpB,SAASE,UACrB,EAAcJ,OAAOI,UAGrB,EAAe,EAAUG,SAGzB,EAAiB,EAAYF,eAG7BkB,EAAaC,OAAO,IACtB,EAAaZ,KAAK,GAAgBa,QAjBjB,sBAiBuC,QACvDA,QAAQ,yDAA0D,SAAW,KAmBhF,QARA,SAAsBf,GACpB,SAAK,EAASA,IAAU,EAASA,MAGnB,EAAWA,GAASa,EAAaD,GAChCI,KAAK,EAAShB,KC/B/B,QAJA,SAAkBiB,EAAQC,GACxB,OAAiB,MAAVD,OAAiBlB,EAAYkB,EAAOC,ICO7C,QALA,SAAmBD,EAAQC,GACzB,IAAIlB,EAAQ,EAASiB,EAAQC,GAC7B,OAAO,EAAalB,GAASA,OAAQD,GCRvC,QAFmB,EAAUT,OAAQ,UCWrC,QALA,WACE6B,KAAKC,SAAW,EAAe,EAAa,MAAQ,GACpDD,KAAKE,KAAO,GCKd,QANA,SAAoBH,GAClB,IAAIb,EAASc,KAAKG,IAAIJ,WAAeC,KAAKC,SAASF,GAEnD,OADAC,KAAKE,MAAQhB,EAAS,EAAI,EACnBA,GCVT,IAMI,EAHcf,OAAOI,UAGQC,eAoBjC,QATA,SAAiBuB,GACf,IAAIK,EAAOJ,KAAKC,SAChB,GAAI,EAAc,CAChB,IAAIf,EAASkB,EAAKL,GAClB,MArBiB,8BAqBVb,OAA4BN,EAAYM,EAEjD,OAAO,EAAeH,KAAKqB,EAAML,GAAOK,EAAKL,QAAOnB,GCvBtD,IAGI,EAHcT,OAAOI,UAGQC,eAgBjC,QALA,SAAiBuB,GACf,IAAIK,EAAOJ,KAAKC,SAChB,OAAO,OAA8BrB,IAAdwB,EAAKL,GAAsB,EAAehB,KAAKqB,EAAML,ICG9E,QAPA,SAAiBA,EAAKlB,GACpB,IAAIuB,EAAOJ,KAAKC,SAGhB,OAFAD,KAAKE,MAAQF,KAAKG,IAAIJ,GAAO,EAAI,EACjCK,EAAKL,GAAQ,QAA0BnB,IAAVC,EAfV,4BAekDA,EAC9DmB,MCNT,SAASK,EAAKC,GACZ,IAAIC,GAAS,EACTC,EAAoB,MAAXF,EAAkB,EAAIA,EAAQE,OAG3C,IADAR,KAAKS,UACIF,EAAQC,GAAQ,CACvB,IAAIE,EAAQJ,EAAQC,GACpBP,KAAKW,IAAID,EAAM,GAAIA,EAAM,KAK7BL,EAAK9B,UAAUkC,MAAQ,EACvBJ,EAAK9B,UAAkB,OAAI,EAC3B8B,EAAK9B,UAAUqC,IAAM,EACrBP,EAAK9B,UAAU4B,IAAM,EACrBE,EAAK9B,UAAUoC,IAAM,EAErB,UCnBA,SALA,WACEX,KAAKC,SAAW,GAChBD,KAAKE,KAAO,GC2Bd,SAJA,SAAYrB,EAAOgC,GACjB,OAAOhC,IAAUgC,GAAUhC,GAAUA,GAASgC,GAAUA,GCb1D,SAVA,SAAsBC,EAAOf,GAE3B,IADA,IAAIS,EAASM,EAAMN,OACZA,KACL,GAAI,GAAGM,EAAMN,GAAQ,GAAIT,GACvB,OAAOS,EAGX,OAAQ,GCdV,IAGIO,GAHaC,MAAMzC,UAGCwC,OA4BxB,SAjBA,SAAyBhB,GACvB,IAAIK,EAAOJ,KAAKC,SACZM,EAAQ,GAAaH,EAAML,GAE/B,QAAIQ,EAAQ,KAIRA,GADYH,EAAKI,OAAS,EAE5BJ,EAAKa,MAELF,GAAOhC,KAAKqB,EAAMG,EAAO,KAEzBP,KAAKE,MACA,ICbT,SAPA,SAAsBH,GACpB,IAAIK,EAAOJ,KAAKC,SACZM,EAAQ,GAAaH,EAAML,GAE/B,OAAOQ,EAAQ,OAAI3B,EAAYwB,EAAKG,GAAO,ICA7C,SAJA,SAAsBR,GACpB,OAAO,GAAaC,KAAKC,SAAUF,IAAQ,GCa7C,SAbA,SAAsBA,EAAKlB,GACzB,IAAIuB,EAAOJ,KAAKC,SACZM,EAAQ,GAAaH,EAAML,GAQ/B,OANIQ,EAAQ,KACRP,KAAKE,KACPE,EAAKc,KAAK,CAACnB,EAAKlB,KAEhBuB,EAAKG,GAAO,GAAK1B,EAEZmB,MCTT,SAASmB,GAAUb,GACjB,IAAIC,GAAS,EACTC,EAAoB,MAAXF,EAAkB,EAAIA,EAAQE,OAG3C,IADAR,KAAKS,UACIF,EAAQC,GAAQ,CACvB,IAAIE,EAAQJ,EAAQC,GACpBP,KAAKW,IAAID,EAAM,GAAIA,EAAM,KAK7BS,GAAU5C,UAAUkC,MAAQ,GAC5BU,GAAU5C,UAAkB,OAAI,GAChC4C,GAAU5C,UAAUqC,IAAM,GAC1BO,GAAU5C,UAAU4B,IAAM,GAC1BgB,GAAU5C,UAAUoC,IAAM,GAE1B,YCzBA,SAFU,EAAU,EAAM,OCgB1B,SATA,WACEX,KAAKE,KAAO,EACZF,KAAKC,SAAW,CACd,KAAQ,IAAI,EACZ,IAAO,IAAK,IAAO,IACnB,OAAU,IAAI,ICFlB,SAPA,SAAmBpB,GACjB,IAAIM,SAAcN,EAClB,MAAgB,UAARM,GAA4B,UAARA,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAVN,EACU,OAAVA,GCMP,SAPA,SAAoBuC,EAAKrB,GACvB,IAAIK,EAAOgB,EAAInB,SACf,OAAO,GAAUF,GACbK,EAAmB,iBAAPL,EAAkB,SAAW,QACzCK,EAAKgB,KCGX,SANA,SAAwBrB,GACtB,IAAIb,EAAS,GAAWc,KAAMD,GAAa,OAAEA,GAE7C,OADAC,KAAKE,MAAQhB,EAAS,EAAI,EACnBA,GCCT,SAJA,SAAqBa,GACnB,OAAO,GAAWC,KAAMD,GAAKa,IAAIb,ICGnC,SAJA,SAAqBA,GACnB,OAAO,GAAWC,KAAMD,GAAKI,IAAIJ,ICSnC,SATA,SAAqBA,EAAKlB,GACxB,IAAIuB,EAAO,GAAWJ,KAAMD,GACxBG,EAAOE,EAAKF,KAIhB,OAFAE,EAAKO,IAAIZ,EAAKlB,GACdmB,KAAKE,MAAQE,EAAKF,MAAQA,EAAO,EAAI,EAC9BF,MCLT,SAASqB,GAASf,GAChB,IAAIC,GAAS,EACTC,EAAoB,MAAXF,EAAkB,EAAIA,EAAQE,OAG3C,IADAR,KAAKS,UACIF,EAAQC,GAAQ,CACvB,IAAIE,EAAQJ,EAAQC,GACpBP,KAAKW,IAAID,EAAM,GAAIA,EAAM,KAK7BW,GAAS9C,UAAUkC,MAAQ,GAC3BY,GAAS9C,UAAkB,OAAI,GAC/B8C,GAAS9C,UAAUqC,IAAM,GACzBS,GAAS9C,UAAU4B,IAAM,GACzBkB,GAAS9C,UAAUoC,IAAM,GAEzB,YCkBA,SAASW,GAAQ/B,EAAMgC,GACrB,GAAmB,mBAARhC,GAAmC,MAAZgC,GAAuC,mBAAZA,EAC3D,MAAM,IAAIC,UAhDQ,uBAkDpB,IAAIC,EAAW,WACb,IAAIC,EAAOC,UACP5B,EAAMwB,EAAWA,EAASK,MAAM5B,KAAM0B,GAAQA,EAAK,GACnDG,EAAQJ,EAASI,MAErB,GAAIA,EAAM1B,IAAIJ,GACZ,OAAO8B,EAAMjB,IAAIb,GAEnB,IAAIb,EAASK,EAAKqC,MAAM5B,KAAM0B,GAE9B,OADAD,EAASI,MAAQA,EAAMlB,IAAIZ,EAAKb,IAAW2C,EACpC3C,GAGT,OADAuC,EAASI,MAAQ,IAAKP,GAAQQ,OAAS,IAChCL,EAITH,GAAQQ,MAAQ,GAEhB,YCpEaC,GAAsC5D,OAAO6D,yBAAyB,IAAIC,WAAW,GAAI,GAAGC,SCAlG,SAASC,GAAUC,GACtB,IAAIC,EAA2B,iBAAXD,EAAsBpE,OAAOoE,GAAUA,EAI3D,OAHIpE,OAAOsE,MAAMD,KACbA,EAAS,GAENE,KAAKC,MAAMH,GAQf,SAASI,GAAuBC,EAAGC,GACtC,MAAOC,EAASC,GAAW,CAAC7E,OAAOsE,MAAMI,GAAI1E,OAAOsE,MAAMK,IAE1D,GAAIC,GAAWC,EACX,OAAO,EAGX,GAAID,EACA,OAAO,EAGX,GAAIC,EACA,OAAQ,EAGZ,GAAIH,EAAIC,EACJ,OAAQ,EAGZ,GAAID,EAAIC,EACJ,OAAO,EAGX,GAAU,IAAND,GAAiB,IAANC,EAAS,CACpB,MAAOG,EAAcC,GAAgB,CAAC5E,OAAO6E,GAAGN,EAAG,GAAIvE,OAAO6E,GAAGL,EAAG,IAEpE,IAAKG,GAAgBC,EACjB,OAAQ,EAGZ,GAAID,IAAiBC,EACjB,OAAO,EAIf,OAAO,EC5CJ,SAASE,GAAWC,GACvB,OAAOA,aAAgBC,SAOpB,SAASC,GAAkBrD,GAC9B,MAAsB,iBAARA,GAAoBA,IAAQoC,GAAUpC,GAAO,GCW/D,SAJA,SAAsBlB,GACpB,OAAgB,MAATA,GAAiC,iBAATA,GCTjC,SAJA,SAA2BA,GACzB,OAAO,GAAaA,IAVD,wBAUW,EAAWA,ICA3C,SANA,SAAmBU,GACjB,OAAO,SAASV,GACd,OAAOU,EAAKV,KCNhB,IAAIwE,GAAgC,iBAAX9G,SAAuBA,UAAYA,QAAQ+G,UAAY/G,QAG5EgH,GAAaF,IAAgC,iBAAV7G,QAAsBA,SAAWA,OAAO8G,UAAY9G,OAMvFgH,GAHgBD,IAAcA,GAAWhH,UAAY8G,IAGtB,UAG/BI,GAAY,WACd,IAEE,IAAIC,EAAQH,IAAcA,GAAWI,SAAWJ,GAAWI,QAAQ,QAAQD,MAE3E,OAAIA,GAKGF,IAAeA,GAAYI,SAAWJ,GAAYI,QAAQ,QACjE,MAAOvG,KAXI,GCVf,IAAIwG,GDwBJ,OCxBoC,cAqBpC,SAFoBA,GAAoB,GAAUA,IAAqB,GCjBvE,MAAMC,GCJC,WACN,MAAMC,EAAK,IAAIC,QACf,OAAQrH,IACP,IAAIsH,EAAMF,EAAGnD,IAAIjE,GACjB,OAAIsH,IAGHA,EAAM9F,OAAO+F,OAAO,MACpBH,EAAGpD,IAAIhE,EAAMsH,GACNA,IDLAE,GAMV,SAASC,GAAehC,GACpB,OAAOA,aAAkBiC,GAO7B,SAASC,GAAmBlC,GACxB,IAAKgC,GAAehC,GAChB,MAAM,IAAIZ,UAAU,8BAgB5B,SAAS+C,GAAYzG,GACjB,MAAM0C,EAAS1C,EAAY0C,OAErBM,EAAQ,IAAIE,MAAMR,GACxB,IAAI,IAAIpD,EAAI,EAAGA,EAAIoD,IAAUpD,EACzB0D,EAAM1D,GAAKS,EAAgBC,EAAYV,IAG3C,OAAO0D,EAIX,MAAM0D,GAAe,CACjB,MAAMjF,EAAMkF,EAAS/C,GAEjB,OAAI0C,GAAeK,KAtBE,mBADSrC,EAuB8B7C,IAtBzBmF,GAA2BvE,IAAIiC,IAuBvDuC,QAAQ/C,MAAMrC,EAAMuE,GAAEW,GAASrC,OAAQV,GAG3CiD,QAAQ/C,MAAMrC,EAAMkF,EAAS/C,GA3B5C,IAAsCU,IAgChCwC,GAAU,CACZ,IAAIxC,EAAQrC,GACR,IAAI8E,EAAU,KAMd,GALK9C,KACD8C,EAAUzC,EACVA,EAAS0B,GAAEe,GAASzC,QAGpBgB,GAAkBrD,GAClB,OAAO4E,QAAQxE,IAAIiC,EAAQrC,GAAOlC,EAAgB8G,QAAQ/D,IAAIwB,EAAQrC,SAAQnB,EAC3E,CACH,MAAMkG,EAAkB,OAAZD,GAAoBF,QAAQxE,IAAI0E,EAAS9E,GAAO4E,QAAQ/D,IAAIiE,EAAS9E,GAAO4E,QAAQ/D,IAAIwB,EAAQrC,GAE5G,GAAmB,mBAAR+E,EACP,OAAOA,EAIX,IAAIC,EAAQjB,GAAEgB,GAAKC,MAMnB,YAJcnG,IAAVmG,IACAA,EAAQjB,GAAEgB,GAAKC,MAAQ,IAAIC,MAAMF,EAAKN,KAGnCO,IAIf,IAAI3C,EAAQrC,EAAKlB,GACb,IAAIgG,EAAU,KAMd,OALK9C,KACD8C,EAAUzC,EACVA,EAAS0B,GAAEe,GAASzC,QAGpBgB,GAAkBrD,GACX4E,QAAQhE,IAAIyB,EAAQrC,EAAKzC,EAAmBuB,IAGnC,OAAZgG,GAAsBF,QAAQxE,IAAIiC,EAAQrC,KAAQ5B,OAAO8G,SAASJ,GAG3DF,QAAQhE,IAAIyB,EAAQrC,EAAKlB,GAFzB8F,QAAQhE,IAAIkE,EAAS9E,EAAKlB,KAQ5CkD,KACD6C,GAAQM,eAAkBL,GAAqBF,QAAQO,eAAepB,GAAEe,GAASzC,QACjFwC,GAAQO,eAAiB,CAACN,EAAStG,IAAuBoG,QAAQQ,eAAerB,GAAEe,GAASzC,OAAQ7D,GAEpGqG,GAAQQ,eAAiB,CAACP,EAAS9E,EAAKsF,KACpC,MAAMjD,EAAS0B,GAAEe,GAASzC,OAC1B,OAAQuC,QAAQxE,IAAIiC,EAAQrC,IAAQ5B,OAAO8G,SAASJ,GAAWF,QAAQS,eAAeP,EAAS9E,EAAKsF,GAAcV,QAAQS,eAAehD,EAAQrC,EAAKsF,IAE1JT,GAAQU,eAAiB,CAACT,EAAS9E,KAC/B,MAAMqC,EAAS0B,GAAEe,GAASzC,OAC1B,OAAOuC,QAAQxE,IAAI0E,EAAS9E,GAAO4E,QAAQW,eAAeT,EAAS9E,GAAO4E,QAAQW,eAAelD,EAAQrC,IAG7G6E,GAAQzE,IAAM,CAAC0E,EAAS9E,IAAiB4E,QAAQxE,IAAI0E,EAAS9E,IAAQ4E,QAAQxE,IAAI2D,GAAEe,GAASzC,OAAQrC,GAErG6E,GAAQW,aAAgBV,GAAqBF,QAAQY,aAAaV,GAClED,GAAQY,kBAAqBX,GAAqBF,QAAQa,kBAAkBX,GAE5ED,GAAQ5C,yBAA2B,CAAC6C,EAAS9E,IAAiB4E,QAAQ3C,yBAAyB6C,EAAS9E,GACxG6E,GAAQa,QAAWZ,GAAqBF,QAAQc,QAAQZ,IAG7C,MAAMR,WAAqBqB,YAEtC,YAAYC,EAAOC,EAAYpF,GAE3B,GAAI4D,GAAeuB,GACfE,MAAM/B,GAAE6B,GAAOvD,aAGZ,GAAc,OAAVuD,GAAmC,iBAAVA,GAAuB,GAAcA,GAcrE,OAAOhE,UAAUnB,QACb,KAAK,EACDqF,QACA,MAEJ,KAAK,EACDA,MAAMF,GACN,MAEJ,KAAK,EACDE,MAAMF,EAAOC,GACb,MAEJ,KAAK,EACDC,MAAMF,EAAOC,EAAYpF,GACzB,MAEJ,QAEIqF,SAASlE,eAjC4D,CAE7E,MAAMmE,EAAanB,QAAQxE,IAAIwF,EAAO,gBAAwC/G,IAA3B+G,EAAMI,OAAOC,UAAuCL,EAAb,IAAIA,GAExFnF,EAASsF,EAAUtF,OACzBqF,MAAMrF,GAEN,IAAI,IAAIpD,EAAI,EAAGA,EAAIoD,IAAUpD,EAEzB4C,KAAK5C,GAAKE,EAAmBwI,EAAU1I,IA4B/C,IAAI2H,EAEJ,GAAIhD,GACAgD,EAAQ,IAAIC,MAAMhF,KAAM4E,QACrB,CACH,MAAMC,EAAU1G,OAAO+F,OAAO,MAC9BJ,GAAEe,GAASzC,OAASpC,KACpB+E,EAAQ,IAAIC,MAAMH,EAASD,IAS/B,OALAd,GAAEiB,GAAO3C,OAASpC,KAGlB8D,GAAE9D,MAAM+E,MAAQA,EAETA,EAIX,YAAYkB,KAAQC,GAChB,GAAoB,IAAhBA,EAAK1F,OACL,OAAO,IAAI6D,GAAaqB,YAAYS,KAAKF,EAAK3I,GAAoBV,QAGtE,MAAMwJ,EAAUF,EAAK,GACfzB,EAAUyB,EAAK,GAErB,OAAO,IAAI7B,GAAaqB,YAAYS,KAAKF,GAAK,SAAUI,KAAQ3E,GAC5D,OAAOpE,EAAmB8I,EAAQrH,KAAKiB,KAAMqG,KAAQ3E,MACtD+C,GAAS7H,QAGhB,aAAa8E,GACT,OAAO,IAAI2C,GAAa3C,GAI5B,EAAGqE,OAAOC,YACN,IAAI,MAAMK,KAAOR,MAAME,OAAOC,kBACpBnI,EAAgBwI,GAI9B,OACI,OAAOR,MAAMS,OAGjB,UACI,IAAI,MAAMD,KAAOR,MAAMU,eACb1I,EAAgBwI,GAK9B,WACI,IAAI,MAAOjJ,EAAGiJ,KAAQR,MAAMvF,eAClB,CAAClD,EAAGS,EAAgBwI,IAMlC,IAAIG,KAAaN,GACb5B,GAAmBtE,MAEnB,MAAMyE,EAAUyB,EAAK,GAEfpF,EAAQ,GACd,IAAI,IAAI1D,EAAI,EAAGqJ,EAAIzG,KAAKQ,OAAQpD,EAAIqJ,IAAKrJ,EAAG,CACxC,MAAMiJ,EAAMxI,EAAgBmC,KAAK5C,IACjC0D,EAAMI,KAAKsF,EAASzH,KAAK0F,EAAS4B,EAAKjJ,EAAG0G,GAAE9D,MAAM+E,QAGtD,OAAO,IAAIV,GAAavD,GAI5B,OAAO0F,KAAaN,GAChB5B,GAAmBtE,MAEnB,MAAMyE,EAAUyB,EAAK,GAEfpF,EAAQ,GACd,IAAI,IAAI1D,EAAI,EAAGqJ,EAAIzG,KAAKQ,OAAQpD,EAAIqJ,IAAKrJ,EAAG,CACxC,MAAMiJ,EAAMxI,EAAgBmC,KAAK5C,IAC7BoJ,EAASzH,KAAK0F,EAAS4B,EAAKjJ,EAAG0G,GAAE9D,MAAM+E,QACvCjE,EAAMI,KAAKmF,GAInB,OAAO,IAAIhC,GAAavD,GAG5B,OAAO0F,KAAaN,GAGhB,IAAIG,EAAKK,EAFTpC,GAAmBtE,MAIC,IAAhBkG,EAAK1F,QACL6F,EAAMxI,EAAgBmC,KAAK,IAC3B0G,EAAQ,IAERL,EAAMH,EAAK,GACXQ,EAAQ,GAGZ,IAAI,IAAItJ,EAAIsJ,EAAOD,EAAIzG,KAAKQ,OAAQpD,EAAIqJ,IAAKrJ,EACzCiJ,EAAMG,EAASH,EAAKxI,EAAgBmC,KAAK5C,IAAKA,EAAG0G,GAAE9D,MAAM+E,OAG7D,OAAOsB,EAGX,YAAYG,KAAaN,GAGrB,IAAIG,EAAKK,EAFTpC,GAAmBtE,MAInB,MAAMQ,EAASR,KAAKQ,OACA,IAAhB0F,EAAK1F,QACL6F,EAAMxI,EAAgBmC,KAAKQ,EAAS,IACpCkG,EAAQlG,EAAS,IAEjB6F,EAAMH,EAAK,GACXQ,EAAQlG,GAGZ,IAAI,IAAIpD,EAAIsJ,EAAOtJ,KACfiJ,EAAMG,EAASH,EAAKxI,EAAgBmC,KAAK5C,IAAKA,EAAG0G,GAAE9D,MAAM+E,OAG7D,OAAOsB,EAGX,QAAQG,KAAaN,GACjB5B,GAAmBtE,MAEnB,MAAMyE,EAAUyB,EAAK,GAErB,IAAI,IAAI9I,EAAI,EAAGqJ,EAAIzG,KAAKQ,OAAQpD,EAAIqJ,IAAKrJ,EACrCoJ,EAASzH,KAAK0F,EAAS5G,EAAgBmC,KAAK5C,IAAKA,EAAG0G,GAAE9D,MAAM+E,OAIpE,KAAKyB,KAAaN,GACd5B,GAAmBtE,MAEnB,MAAMyE,EAAUyB,EAAK,GAErB,IAAI,IAAI9I,EAAI,EAAGqJ,EAAIzG,KAAKQ,OAAQpD,EAAIqJ,IAAKrJ,EAAG,CACxC,MAAMyB,EAAQhB,EAAgBmC,KAAK5C,IACnC,GAAIoJ,EAASzH,KAAK0F,EAAS5F,EAAOzB,EAAG0G,GAAE9D,MAAM+E,OACzC,OAAOlG,GAKnB,UAAU2H,KAAaN,GACnB5B,GAAmBtE,MAEnB,MAAMyE,EAAUyB,EAAK,GAErB,IAAI,IAAI9I,EAAI,EAAGqJ,EAAIzG,KAAKQ,OAAQpD,EAAIqJ,IAAKrJ,EAAG,CACxC,MAAMyB,EAAQhB,EAAgBmC,KAAK5C,IACnC,GAAIoJ,EAASzH,KAAK0F,EAAS5F,EAAOzB,EAAG0G,GAAE9D,MAAM+E,OACzC,OAAO3H,EAIf,OAAQ,EAGZ,MAAMoJ,KAAaN,GACf5B,GAAmBtE,MAEnB,MAAMyE,EAAUyB,EAAK,GAErB,IAAI,IAAI9I,EAAI,EAAGqJ,EAAIzG,KAAKQ,OAAQpD,EAAIqJ,IAAKrJ,EACrC,IAAKoJ,EAASzH,KAAK0F,EAAS5G,EAAgBmC,KAAK5C,IAAKA,EAAG0G,GAAE9D,MAAM+E,OAC7D,OAAO,EAIf,OAAO,EAGX,KAAKyB,KAAaN,GACd5B,GAAmBtE,MAEnB,MAAMyE,EAAUyB,EAAK,GAErB,IAAI,IAAI9I,EAAI,EAAGqJ,EAAIzG,KAAKQ,OAAQpD,EAAIqJ,IAAKrJ,EACrC,GAAIoJ,EAASzH,KAAK0F,EAAS5G,EAAgBmC,KAAK5C,IAAKA,EAAG0G,GAAE9D,MAAM+E,OAC5D,OAAO,EAIf,OAAO,EAIX,IAAIY,KAAUO,GACV5B,GAAmBtE,MAEnB,MAAM2G,EAAST,EAAK,GAEpB,IAAIpI,EAGJ,GAAIsG,GAAeuB,GACf7H,EAAcgG,GAAE6B,GAAOvD,WAGpB,CACH,MAAM0D,EAAanB,QAAQxE,IAAIwF,EAAO,gBAAwC/G,IAA3B+G,EAAMI,OAAOC,UAAuCL,EAAb,IAAIA,GACxFnF,EAASsF,EAAUtF,OAEzB1C,EAAc,IAAI4H,YAAYlF,GAC9B,IAAI,IAAIpD,EAAI,EAAGqJ,EAAIX,EAAUtF,OAAQpD,EAAIqJ,IAAKrJ,EAC1CU,EAAYV,GAAKE,EAAmBwI,EAAU1I,IAItDyI,MAAMlF,IAAI7C,EAAa6I,GAG3B,UAKI,OAJArC,GAAmBtE,MAEnB6F,MAAMe,UAEC9C,GAAE9D,MAAM+E,MAGnB,KAAKlG,KAAUqH,GAKX,OAJA5B,GAAmBtE,MAEnB6F,MAAMgB,KAAKvJ,EAAmBuB,MAAWqH,GAElCpC,GAAE9D,MAAM+E,MAGnB,WAAW3C,EAAQsE,KAAUR,GAKzB,OAJA5B,GAAmBtE,MAEnB6F,MAAMiB,WAAW1E,EAAQsE,KAAUR,GAE5BpC,GAAE9D,MAAM+E,MAGnB,QAAQmB,GACJ5B,GAAmBtE,MAEnB,IAAI+G,EAAkBb,EAAK,QAEHtH,IAApBmI,IACAA,EAAkBtE,IAGtB,MAAMuE,EAAmB,GAAQnJ,GAIjC,OAFAgI,MAAMoB,MAAK,CAACvE,EAAGC,IAAeoE,EAAgBC,EAAiBtE,GAAIsE,EAAiBrE,MAE7EmB,GAAE9D,MAAM+E,MAKnB,SAASmB,GAGL,IAAIpI,EAFJwG,GAAmBtE,MAKnB,IACIlC,EAAc+H,MAAMqB,SAAShB,GAC/B,MAAM7I,GACJ,KAAIA,aAAamE,WAIb,MAAMnE,EAFNS,EADe,IAAI4H,YAAY1F,KAAKpD,OAAQoD,KAAK4F,WAAY5F,KAAKQ,QAC7C0G,SAAShB,GAMtC,OAAO,IAAI7B,GAAavG,EAAYlB,QAIxC,YAAYsJ,GAGR,IAAIpI,EAFJwG,GAAmBtE,MAKnB,IACIlC,EAAc+H,MAAMsB,YAAYjB,GAClC,MAAM7I,GACJ,KAAIA,aAAamE,WAIb,MAAMnE,EAFNS,EADe,IAAI4H,YAAY1F,KAAKpD,OAAQoD,KAAK4F,WAAY5F,KAAKQ,QAC7C2G,YAAYjB,GAMzC,OAAO,IAAI7B,GAAavG,EAAYlB,OAAQkB,EAAY8H,WAAY9H,EAAY0C,QAIpF,QAAQ4G,KAAYlB,GAChB5B,GAAmBtE,MAEnB,MAAMQ,EAASR,KAAKQ,OAEpB,IAAI2F,EAAOhE,GAAU+D,EAAK,IAEtBC,EAAO,IACPA,GAAQ3F,EACJ2F,EAAO,IACPA,EAAO,IAIf,IAAI,IAAI/I,EAAI+I,EAAMM,EAAIjG,EAAQpD,EAAIqJ,IAAKrJ,EACnC,GAAIS,EAAgBmC,KAAK5C,MAAQgK,EAC7B,OAAOhK,EAIf,OAAQ,EAGZ,YAAYgK,KAAYlB,GACpB5B,GAAmBtE,MAEnB,MAAMQ,EAASR,KAAKQ,OAEpB,IAAI2F,EAAOhE,GAAU+D,EAAK,IAE1BC,EAAgB,IAATA,EAAa3F,EAAS2F,EAAO,EAEhCA,GAAQ,EACRA,EAAOA,EAAO3F,EAAS2F,EAAO3F,EAE9B2F,GAAQ3F,EAGZ,IAAI,IAAIpD,EAAI+I,EAAM/I,KACd,GAAIS,EAAgBmC,KAAK5C,MAAQgK,EAC7B,OAAOhK,EAIf,OAAQ,EAGZ,SAASgK,KAAYlB,GACjB5B,GAAmBtE,MAEnB,MAAMQ,EAASR,KAAKQ,OAEpB,IAAI2F,EAAOhE,GAAU+D,EAAK,IAEtBC,EAAO,IACPA,GAAQ3F,EACJ2F,EAAO,IACPA,EAAO,IAIf,MAAM7D,EAAQtE,OAAOsE,MAAM8E,GAC3B,IAAI,IAAIhK,EAAI+I,EAAMM,EAAIjG,EAAQpD,EAAIqJ,IAAKrJ,EAAG,CACtC,MAAMyB,EAAQhB,EAAgBmC,KAAK5C,IAEnC,GAAIkF,GAAStE,OAAOsE,MAAMzD,GACtB,OAAO,EAGX,GAAIA,IAAUuI,EACV,OAAO,EAIf,OAAO,EAIX,QAAQlB,GACJ5B,GAAmBtE,MAInB,OAFcuE,GAAYvE,MAEbqH,QAAQnB,GAGzB,kBAAkBA,GACd5B,GAAmBtE,MAKnB,OAHcuE,GAAYvE,MAGbsH,kBAAkBpB,GAInCtF,IAAKmF,OAAOwB,eACR,GAAInD,GAAepE,MACf,MAAO,gBAKnB,MAAMwH,GAAyBnD,GAAa9F,UAEtCmG,GAA6B,IAAI+C,QACvC,IAAI,MAAM1H,KAAO4E,QAAQc,QAAQ+B,IAAyB,CACtD,MAAMnB,EAAMmB,GAAuBzH,GAChB,mBAARsG,GACP3B,GAA2BgD,IAAIrB,GE5kBhC,SAASsB,GAAWC,EAAUhC,KAAeM,GAChD,IAAKjD,GAAW2E,GACZ,MAAM,IAAIpG,UAAU,4DAGxB,OAAO3D,EAAiB+J,EAASC,UAAUjC,KAAeM,IAUvD,SAAS4B,GAAWF,EAAUhC,EAAY/G,KAAUqH,GACvD,IAAKjD,GAAW2E,GACZ,MAAM,IAAIpG,UAAU,4DAGxBoG,EAASG,UAAUnC,EAAYtI,EAAmBuB,MAAWqH,K,yBCPjE,SAAS8B,EAAQC,GACf,IAAIC,GAAK,EACJC,IAAcA,EAfrB,WAGE,IADA,IAAIC,EAAW,IAAIC,WAAW,KACrBC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAE5B,IADA,IAAIJ,EAAII,EACCC,EAAI,EAAGA,EAAI,EAAGA,IACrBL,EAAQ,EAAJA,EAAQ,WAAaA,IAAM,EAAIA,IAAM,EAE3CE,EAASE,GAAKJ,EAEhB,OAAOE,EAK2BI,IAClC,IAAK,IAAIF,EAAI,EAAGA,EAAIL,EAAIzH,OAAQ8H,IAC9BJ,EAAIC,EAA4B,KAAdD,EAAID,EAAIK,KAAcJ,IAAM,EAEhD,OAAY,EAALA,EA3BT/J,OAAOiH,eAAe7I,EAAS,aAAc,CAC3CsC,OAAO,IAETtC,EAAQkM,cAgDR,SAAuBC,EAAMC,GAG3B,IAAIC,EAAcF,EAAKxB,MAAM,EAAG,IAChC,OAAO,IAAI2B,SAAQ,SAAUC,EAASC,GACpC,IAAIC,EAAa,IAAIC,WACrBD,EAAWE,OAAS,WAClB,IAAIC,EAAY,IAAIlH,WAAW+G,EAAW9J,QACtCkK,EAAOV,EAAKxB,MAAM,IAClBmC,EAAeC,EAAiBH,EAAWR,EAAKD,EAAKvJ,MACzD2J,EAAQ,IAAIS,KAAK,CAACF,EAAcD,GAAO,CAAEjK,KAAMuJ,EAAKvJ,SAEtD6J,EAAWQ,kBAAkBZ,OA3DjCrM,EAAQkN,iBA+DR,SAA0BC,EAAaf,GACrC,IAAIgB,EAAeD,EAAYE,MAAM,KACjCC,EAASF,EAAa,GACtBG,EAAOH,EAAa,GACpBxK,OAAO,EACP4K,OAAe,EACfC,GAAgB,EACpB,IAA6B,IAAzBH,EAAOI,QAAQC,GAAa,CAC9B/K,EAAO+K,EACP,IAAIC,EA2BR,SAAoC/J,GAClC,IAAIgK,EAAWhK,EAAK6J,QAAQI,IACV,IAAdD,IACFA,EAAWhK,EAAK6J,QAAQK,KAER,IAAdF,IACFA,EAAWhK,EAAK6J,QAAQM,IAG1B,OAAOH,EApCUI,CAA2BV,GAEtCK,GAAY,GACdJ,EAAgD,EAAjCxH,KAAKkI,MAAMN,EAAW,IAAM,GAC3CH,GAAgB,GAEhBD,EAAe,IAGW,IAA1BF,EAAOI,QAAQS,KACjBvL,EAAOuL,EACPX,EAAe,IAQjB,IAJA,IAAIY,EAAeb,EAAKc,UAAU,EAAGb,GACjCc,EAAaf,EAAKc,UAAUb,GAC5Be,EAAcC,KAAKJ,GACnBxB,EAAY,IAAIlH,WAAW6I,EAAYtK,QAClCpD,EAAI,EAAGA,EAAI+L,EAAU3I,OAAQpD,IACpC+L,EAAU/L,GAAK0N,EAAYE,WAAW5N,GAExC,IAAI6N,EAAa3B,EAAiBH,EAAWR,EAAKxJ,EAAM6K,GACpDkB,EAAeC,KAAKC,OAAOC,aAAazJ,MAAMwJ,OA7FpD,SAA4BE,GAAO,GAAItK,MAAMuK,QAAQD,GAAM,CAAE,IAAK,IAAIlO,EAAI,EAAGoO,EAAOxK,MAAMsK,EAAI9K,QAASpD,EAAIkO,EAAI9K,OAAQpD,IAAOoO,EAAKpO,GAAKkO,EAAIlO,GAAM,OAAOoO,EAAe,OAAOxK,MAAMmF,KAAKmF,GA6F9HG,CAAmBR,KAC7E,MAAO,CAACpB,EAAQ,IAAKqB,EAAcL,GAAYxD,KAAK,KAtEtD,IAAIc,OAAe,EAEf+B,EAAM,YACNQ,EAAO,aASPL,EAAoB,WACpBC,EAAoB,WACpBC,EAAoB,WAEpBmB,EAAK,IAAIV,WAAW,GACpBW,EAAK,IAAIX,WAAW,GACpBY,EAAK,IAAIZ,WAAW,GACpBa,EAAK,IAAIb,WAAW,GA6ExB,SAAS1B,EAAiBH,EAAWR,EAAKkB,EAAQG,GAChD,GAAIH,IAAWa,EAMb,OALAvB,EAAU,IAAM,EAChBA,EAAU,IAAMR,GAAO,EACvBQ,EAAU,IAAY,IAANR,EAChBQ,EAAU,IAAMR,GAAO,EACvBQ,EAAU,IAAY,IAANR,EACTQ,EAET,GAAIU,IAAWK,EAAK,CAClB,IAAI4B,EAAY,IAAI7J,WAAW,IAK/B0G,GAAO,QACPmD,EAAU,GAAKJ,EACfI,EAAU,GAAKH,EACfG,EAAU,GAAKF,EACfE,EAAU,GAAKD,EACfC,EAAU,GAAKnD,IAAQ,GACvBmD,EAAU,GAAKnD,IAAQ,GACvBmD,EAAU,GAAKnD,IAAQ,EACvBmD,EAAU,GAAW,IAANnD,EACfmD,EAAU,GAAKA,EAAU,GACzBA,EAAU,GAAKA,EAAU,GACzBA,EAAU,IAAMA,EAAU,GAC1BA,EAAU,IAAMA,EAAU,GAC1BA,EAAU,IAAM,EAEhB,IAAIC,EAAM/D,EAAQ8D,GAEdE,EAAW,IAAI/J,WAAW,GAM9B,GALA+J,EAAS,GAAKD,IAAQ,GACtBC,EAAS,GAAKD,IAAQ,GACtBC,EAAS,GAAKD,IAAQ,EACtBC,EAAS,GAAW,IAAND,EAEV/B,EAAe,CACjB,IAAIiC,EAlDV,SAA2B7L,GAIzB,IAHA,IAGShD,EAHIgD,EAAKI,OAAS,EAGNpD,GAAK,EAAGA,IAC3B,GAAoB,IAAhBgD,EAAKhD,EAAI,IAAYgD,EAAKhD,EAAI,KAAOsO,GAAMtL,EAAKhD,EAAI,KAAOuO,GAAMvL,EAAKhD,EAAI,KAAOwO,GAAMxL,EAAKhD,KAAOyO,EACrG,OAAOzO,EAAI,EA4CS8O,CAAkB/C,GAGtC,OAFAA,EAAUxI,IAAImL,EAAWG,GACzB9C,EAAUxI,IAAIqL,EAAUC,EAAgB,IACjC9C,EAQP,IAAIgD,EAAc,IAAIlK,WAAW,GACjCkK,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjBA,EAAY,GAAK,EAEjB,IAAIC,EAAc,IAAInK,WAAW,IAKjC,OAJAmK,EAAYzL,IAAIwI,EAAW,GAC3BiD,EAAYzL,IAAIwL,EAAa,IAC7BC,EAAYzL,IAAImL,EAAW,IAC3BM,EAAYzL,IAAIqL,EAAU,IACnBI,K,oBC7Lb,UAAwD,EAAO,QAAI,0BAAF,EAA8F,WAAW,aAAa,SAASC,EAAEC,EAAED,GAAG,YAAM,IAAoBA,EAAEA,EAAE,CAACE,SAAQ,GAAI,iBAAiBF,IAAIG,QAAQC,KAAK,sDAAsDJ,EAAE,CAACE,SAASF,IAAIA,EAAEE,SAAS,6EAA6E1M,KAAKyM,EAAEnN,MAAM,IAAIoK,KAAK,CAAC,SAAS+C,GAAG,CAACnN,KAAKmN,EAAEnN,OAAOmN,EAAE,SAASpE,EAAEoE,EAAED,EAAEnE,GAAG,IAAIwE,EAAE,IAAIC,eAAeD,EAAEE,KAAK,MAAMN,GAAGI,EAAEG,aAAa,OAAOH,EAAExD,OAAO,WAAW4D,EAAEJ,EAAEK,SAASV,EAAEnE,IAAIwE,EAAEM,QAAQ,WAAWR,QAAQS,MAAM,4BAA4BP,EAAEQ,OAAO,SAASR,EAAEJ,GAAG,IAAID,EAAE,IAAIM,eAAeN,EAAEO,KAAK,OAAON,GAAE,GAAI,IAAID,EAAEa,OAAO,MAAMZ,IAAI,OAAO,KAAKD,EAAEc,QAAQ,KAAKd,EAAEc,OAAO,SAAS9P,EAAEiP,GAAG,IAAIA,EAAEc,cAAc,IAAIC,WAAW,UAAU,MAAMnF,GAAG,IAAImE,EAAEiB,SAASC,YAAY,eAAelB,EAAEmB,eAAe,SAAQ,GAAG,EAAGC,OAAO,EAAE,EAAE,EAAE,GAAG,IAAG,GAAG,GAAG,GAAG,EAAG,EAAE,MAAMnB,EAAEc,cAAcf,IAAI,IAAI7O,EAAE,iBAAiBiQ,QAAQA,OAAOA,SAASA,OAAOA,OAAO,iBAAiB9Q,MAAMA,KAAKA,OAAOA,KAAKA,KAAK,iBAAiB,EAAAmQ,GAAQ,EAAAA,EAAO5O,SAAS,EAAA4O,EAAO,EAAAA,OAAO,EAAOR,EAAE9O,EAAEkQ,WAAW,YAAY7N,KAAK6N,UAAUC,YAAY,cAAc9N,KAAK6N,UAAUC,aAAa,SAAS9N,KAAK6N,UAAUC,WAAWb,EAAEtP,EAAEoQ,SAAS,iBAAiBH,QAAQA,SAASjQ,EAAE,aAAa,aAAaqQ,kBAAkBtP,YAAY+N,EAAE,SAASD,EAAES,EAAEgB,GAAG,IAAI1Q,EAAEI,EAAEuQ,KAAKvQ,EAAEwQ,UAAUC,EAAEX,SAASY,cAAc,KAAKpB,EAAEA,GAAGT,EAAE8B,MAAM,WAAWF,EAAEG,SAAStB,EAAEmB,EAAEI,IAAI,WAAW,iBAAiBhC,GAAG4B,EAAEK,KAAKjC,EAAE4B,EAAEM,SAASC,SAASD,OAAOlR,EAAE4Q,GAAGvB,EAAEuB,EAAEK,MAAMpG,EAAEmE,EAAES,EAAEgB,GAAGzQ,EAAE4Q,EAAEA,EAAE7L,OAAO,YAAY6L,EAAEK,KAAKlR,EAAEqR,gBAAgBpC,GAAGqC,YAAW,WAAWtR,EAAEuR,gBAAgBV,EAAEK,QAAO,KAAKI,YAAW,WAAWrR,EAAE4Q,KAAI,KAAK,qBAAqBP,UAAU,SAASlQ,EAAEsP,EAAEgB,GAAG,GAAGhB,EAAEA,GAAGtP,EAAE2Q,MAAM,WAAW,iBAAiB3Q,EAAEkQ,UAAUkB,iBAAiBvC,EAAE7O,EAAEsQ,GAAGhB,QAAQ,GAAGJ,EAAElP,GAAG0K,EAAE1K,EAAEsP,EAAEgB,OAAO,CAAC,IAAI1Q,EAAEkQ,SAASY,cAAc,KAAK9Q,EAAEkR,KAAK9Q,EAAEJ,EAAEgF,OAAO,SAASsM,YAAW,WAAWrR,EAAED,QAAO,SAASiP,EAAEK,EAAErP,EAAEyP,GAAG,IAAGA,EAAEA,GAAGF,KAAK,GAAG,aAAcE,EAAEQ,SAASuB,MAAM/B,EAAEQ,SAASxD,KAAKgF,UAAU,kBAAkB,iBAAiBzC,EAAE,OAAOnE,EAAEmE,EAAEK,EAAErP,GAAG,IAAIyQ,EAAE,6BAA6BzB,EAAElN,KAAK/B,EAAE,eAAeyC,KAAKrC,EAAEuR,cAAcvR,EAAEwR,OAAOf,EAAE,eAAepO,KAAK6N,UAAUC,WAAW,IAAIM,GAAGH,GAAG1Q,GAAGkP,IAAI,oBAAoBrD,WAAW,CAAC,IAAIV,EAAE,IAAIU,WAAWV,EAAE0G,UAAU,WAAW,IAAI3C,EAAE/D,EAAErJ,OAAOoN,EAAE2B,EAAE3B,EAAEA,EAAE1M,QAAQ,eAAe,yBAAyBkN,EAAEA,EAAE0B,SAASF,KAAKhC,EAAEkC,SAASlC,EAAEQ,EAAE,MAAMvE,EAAE2G,cAAc7C,OAAO,CAAC,IAAI5F,EAAEjJ,EAAEuQ,KAAKvQ,EAAEwQ,UAAUpQ,EAAE6I,EAAEgI,gBAAgBpC,GAAGS,EAAEA,EAAE0B,SAAS5Q,EAAE4Q,SAASF,KAAK1Q,EAAEkP,EAAE,KAAK4B,YAAW,WAAWjI,EAAEkI,gBAAgB/Q,KAAI,QAAQJ,EAAEoQ,OAAOd,EAAEc,OAAOd,EAA+BtQ,EAAOD,QAAQuQ,IAA1kF,gC,2iBCCnE,aACA,SACA,SA6CA,SAOA,SACA,SAOA,SAQMqC,EAA4B,EAAQ,KAE1C,aAyHC,WACCC,G,MAhHO,KAAAC,cAAe,EAiBf,KAAAC,uBAAyD,GAYxD,KAAAC,YAAsC,GAG9B,KAAAC,cAKb,CACHvJ,IAAK,EAAQ,MAIG,KAAAwJ,kBAKb,CACHxJ,IAAK,EAAQ,MAGG,KAAAyJ,yBAKb,CACHzJ,IAAK,EAAQ,MAOL,KAAA0J,iBAAc,MAKrB,EAAAC,sBAAuB,CACvB3J,IAAKkJ,GAEN,EAAC,EAAAU,2BAA4B,CAC5B5J,IAAKkJ,EACLW,QAAS,CACR,mBAAsB,MAGxB,EAAC,EAAAC,+BAAgC,CAChC9J,IAAKkJ,EACLW,QAAS,CACR,uBAA0B,MAG5B,EAAC,EAAAE,kCAAmC,CACnC/J,IAAKkJ,EACLW,QAAS,CACR,mBAAsB,IACtB,uBAA0B,MAG5B,EAAC,EAAAG,sBAAuB,CACvBhK,IAAK,EAAQ,MAEd,EAAC,EAAAiK,2BAA4B,CAC5BjK,IAAK,EAAQ,MAEd,EAAC,EAAAkK,iCAAkC,CAClClK,IAAK,EAAQ,MAEd,EAAC,EAAAmK,0BAA2B,CAC3BnK,IAAK,EAAQ,M,GAIf,KAAAoK,gBAAiB,EAIT,KAAAC,UAAY,EAqBnB,IAAMC,EAAY,CAAC,SAAU,UAAW,YAAa,iBAAkB,cAAe,iBAAkB,iBAElGjK,EAAOnI,OAAOmI,KAAK8I,GACzB9I,EAAKkK,SAAQ,SAAAzQ,GACZ,GAAIwQ,EAAUtG,QAAQlK,GAAO,EAC5B,MAAM,IAAI0Q,MAAM,uBAAgB1Q,EAAG,gEAAwDwQ,EAAUlJ,KAAK,MAAK,SAJ5F,CAAC,UAQTmJ,SAAQ,SAAAzQ,GACpB,GAAIuG,EAAK2D,QAAQlK,GAAO,EACvB,MAAM,IAAI0Q,MAAM,+BAAwB1Q,EAAG,yDAIfnB,IAA1BwQ,EAAOiB,iBAA8BrQ,KAAKqQ,eAAiBjB,EAAOiB,gBAGtE,IAAM1T,EAAOqD,KACbA,KAAK0Q,eAAiB,SAACC,GAClBhU,EAAK0S,eAGT1S,EAAK0S,cAAe,EACpBD,EAAOwB,cAAgBxB,EAAOwB,cAAcD,IAAW,IAAAE,wBAAuBF,KAGvE,IAAAG,EAAW1B,EAAM,OACzBpP,KAAK8Q,OAASA,EACd,IAAIC,EAAK3B,EAAO4B,QAGhB,IAAKD,EAAI,CAGP,IAQME,EATP,GAAI7B,EAAO8B,WACJD,EAAMH,EAAOK,WAAW/B,EAAO8B,UAAW9B,EAAOgC,iBAItDL,EAAKE,EAFLzE,QAAQC,KAAK,6DAAsD2C,EAAO8B,UAAS,MAKrF,IAAKH,GACEE,EAAMH,EAAOK,WAAW,EAAAE,OAAQjC,EAAOgC,iBACzCN,EAAOK,WAAW,EAAAG,OAAQlC,EAAOgC,iBACjCN,EAAOK,WAAW,EAAAI,mBAAoBnC,EAAOgC,mBAEhDL,EAAKE,GAGP,IAAKF,EAEJ,YADA/Q,KAAK0Q,eAAe,wCAIlB,IAAAc,UAAST,GACR/Q,KAAKqQ,gBAAgB7D,QAAQiF,IAAI,4BAEjCzR,KAAKqQ,gBAAgB7D,QAAQiF,IAAI,4BAEtCzR,KAAK+Q,GAAKA,EAGV,IAAIW,EAActC,EAAOsC,eAAgB,IAAAF,UAAST,GAAM,EAAAY,MAAQ,EAAAC,QAC3D,IAAAJ,UAAST,IAAOW,IAAgB,EAAAC,QACpCnF,QAAQC,KAAK,0EACbiF,EAAc,EAAAE,OAGf5R,KAAK0R,YAAcA,EAGnB1R,KAAK6R,aAAezC,EAAOyC,cAAgB,EAAAC,iBAC3C9R,KAAK+R,eAAiB3C,EAAO2C,gBAAkB,EAAAD,iBAI/Cf,EAAGiB,QAAQjB,EAAGkB,YAGdlB,EAAGmB,YAAYnB,EAAGoB,iBAAkB,GAWpCpB,EAAGqB,WAAWrB,EAAGsB,aAAc,MAG/BrS,KAAKsS,OAAOxB,EAAOyB,YAAazB,EAAO0B,cAGvCxS,KAAKyS,gBAAkBzS,KAAK+Q,GAAG2B,aAAa1S,KAAK+Q,GAAG4B,yBAChD3S,KAAKqQ,gBAAgB7D,QAAQiF,IAAI,UAAGzR,KAAKyS,gBAAe,mBA86C9D,OA36CQ,EAAAG,sBAAP,SACCC,EACAzD,GAKA,IAAM0D,EAAW,IAAIC,EAAY,EAAD,GAE9BhB,eAAgBc,EAASG,aAAaC,WAA8B,EAAAnB,iBACpED,aAAcgB,EAASG,aAAaC,WAA8B,EAAAnB,kBAC/D1C,GAAM,CACT0B,OAAQ+B,EAASK,WACjBlC,QAAS6B,EAAS1B,aAClBO,YAAamB,EAASG,aAAaxB,SAAW,EAAAG,MAAQ,EAAAC,SAMxD,OADAkB,EAASD,SAAWA,EACbC,GAGR,YAAAtB,SAAA,WACC,OAAO,IAAAA,UAASxR,KAAK+Q,KAGd,YAAAoC,gBAAR,SAAwBhU,GACvB,OAAQA,GACP,KAAK,EAAAiU,WACL,KAAK,EAAAC,MACJ,OAAO,EAAAA,MACR,KAAK,EAAAC,cACL,KAAK,EAAAC,eACL,KAAK,EAAAC,aACJ,OAAIxT,KAAK0R,cAAgB,EAAAE,MAAc,EAAA6B,IAChC,EAAAC,KACR,KAAK,EAAAC,KACL,KAAK,EAAAC,MACL,KAAK,EAAAH,IACJ,OAAO,EAAAA,IACR,QACC,MAAM,IAAIhD,MAAM,wBAAiBtR,EAAI,iDAQxC,YAAA0U,wBAAA,SAAwB1U,G,MACfsQ,EAAsBzP,KAAI,kBAC5BD,EAAMC,KAAKmT,gBAAgBhU,GACjC,QAA+BP,IAA3B6Q,EAAkB1P,GAAoB,CACzC,IAAM+T,EAAU,IAAI,EAAAC,WAAW/T,KAAM,CACpCmO,KAAM,mBAAYpO,GAClBiU,eAAgBvE,EAAkBxJ,IAClCgO,SAAU,CACT,CACC9F,KAAM,UACNtP,MAAO,CAAC,EAAG,EAAG,EAAG,GACjBM,KAAMY,IAGR+P,SAAO,KACN,EAAC,gBAAS/P,IAAQ,I,KAGpB0P,EAAkB1P,GAAO+T,EAE1B,OAAOrE,EAAkB1P,IAGlB,YAAAmU,oBAAR,SAA4B/U,G,MACnBqQ,EAAkBxP,KAAI,cACxBD,EAAMC,KAAKmT,gBAAgBhU,GACjC,QAA2BP,IAAvB4Q,EAAczP,GAAoB,CACrC,IAAM+T,EAAU,IAAI,EAAAC,WAAW/T,KAAM,CACpCmO,KAAM,eAAQpO,GACdiU,eAAgBxE,EAAcvJ,IAC9BgO,SAAU,CACT,CACC9F,KAAM,UACNtP,MAAO,EACPM,KAAM,EAAAsU,MAGR3D,SAAO,KACN,EAAC,gBAAS/P,IAAQ,I,KAGpByP,EAAczP,GAAO+T,EAEtB,OAAOtE,EAAczP,IAGd,YAAAoU,4BAAR,WACC,QAAsCvV,IAAlCoB,KAAKoU,yBAAwC,CAChD,IAAMN,EAAU,IAAI,EAAAC,WAAW/T,KAAM,CACpCmO,KAAM,mBACN6F,eAAgB,EAAQ,OAEzBhU,KAAKoU,yBAA2BN,EAEjC,OAAO9T,KAAKoU,0BAGL,YAAAC,+BAAR,SAAuClV,G,MAC9BuQ,EAA6B1P,KAAI,yBACnCD,EAAMC,KAAKmT,gBAAgBhU,GACjC,QAAsCP,IAAlC8Q,EAAyB3P,GAAoB,CAChD,IAAM+T,EAAU,IAAI,EAAAC,WAAW/T,KAAM,CACpCmO,KAAM,0BAAmBpO,GACzBiU,eAAgBtE,EAAyBzJ,IACzC6J,SAAO,KACN,EAAC,gBAAS/P,IAAQ,I,KAGpB2P,EAAyB3P,GAAO+T,EAEjC,OAAOpE,EAAyB3P,IAGzB,YAAAuU,wBAAR,WACC,QAAkC1V,IAA9BoB,KAAKuU,qBAAoC,CAC5C,IAAMC,EAAkB,IAAIzX,aAAa,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,IACpEiD,KAAKuU,qBAAuBvU,KAAKyU,kBAAkBD,GAEpD,OAAOxU,KAAKuU,sBAGL,YAAAG,4BAAR,WACC,QAAsC9V,IAAlCoB,KAAK2U,yBAAwC,CAChD,IAAMC,EAAoB,IAAI7X,aAAa,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAC9EiD,KAAK2U,yBAA2B3U,KAAKyU,kBAAkBG,GAExD,OAAO5U,KAAK2U,0BAGL,YAAAE,0BAAR,SAAkCC,GACzB,IAAAxF,EAA2BtP,KAAI,uBACvC,GAA2CpB,MAAvC0Q,EAAuBwF,GAA2B,CAErD,IADA,IAAMC,EAAmB,CAAC,EAAG,GACpB3X,EAAI,EAAGA,GAAK0X,EAAa1X,IACjC2X,EAAiB7T,KAChBqB,KAAKyS,IAAI,EAAIzS,KAAK0S,GAAK7X,EAAI0X,GAC3BvS,KAAK2S,IAAI,EAAI3S,KAAK0S,GAAK7X,EAAI0X,IAG7B,IAAMK,EAAkB,IAAIpY,aAAagY,GACnCnY,EAASoD,KAAKyU,kBAAkBU,GACtC7F,EAAuBwF,GAAelY,EAEvC,OAAO0S,EAAuBwF,IAGvB,YAAAL,kBAAR,SACCrU,GAEM,IAAEsQ,EAAuB1Q,KAAT,eAAE+Q,EAAO/Q,KAAL,GACpBpD,EAASmU,EAAGqE,eAClB,GAAKxY,EAOL,OAHAmU,EAAGqB,WAAWrB,EAAGsB,aAAczV,GAE/BmU,EAAGsE,WAAWtE,EAAGsB,aAAcjS,EAAM2Q,EAAGuE,aACjC1Y,EANN8T,EAAe,kCAajB,YAAA6E,eAAA,SAAeC,EAAoBrH,GAClC,IAAIsH,EAAwC,EAC5C,IACCA,EAAaD,EAAShV,OACrB,SACDiV,EAAa,CAACD,EAASE,MAAOF,EAASG,QAIxC,IAAM7U,EAAQ0U,EAAStT,cAAWtD,EAAY4W,EAASI,YAEjDC,EAAQ,IAAI,EAAAC,SAAS9V,KAAM,CAChCmO,KAAMA,GAAQ,UAAGqH,EAASrH,KAAI,UAC9BsH,WAAU,EACVtW,KAAMqW,EAASrW,KACf4W,cAAeP,EAASO,cACxBC,OAAQR,EAASQ,OACjBC,MAAOT,EAASS,MAChBC,MAAOV,EAASU,MAChBhU,SAAUsT,EAAStT,SACnBiU,WAAYX,EAASW,WACrBC,WAAYZ,EAASY,WACrBtV,MAAK,IAKN,GAAI0U,EAAStT,SAAU,CACtB,IAAK,IAAI9E,EAAI,EAAGA,EAAIoY,EAASW,WAAa,EAAG/Y,IAC5C4C,KAAKqW,KAAK,CACTvC,QAAS9T,KAAKkU,oBAAoBsB,EAASrW,MAC3CwG,MAAO6P,EAASc,iBAAiBd,EAASe,YAAcnZ,EAAI,GAAKoY,EAASW,YAC1EK,OAAQX,IAGV7V,KAAKqW,KAAK,CACTvC,QAAS9T,KAAKkU,oBAAoBsB,EAASrW,MAC3CwG,MAAO6P,EAASiB,aAChBD,OAAQX,IAOV,OAAOA,GAGR,YAAAa,YAAA,SACCtH,GAYA,IAAMmB,EAAY,CAAC,OAAQ,MAAO,SAAU,QAAS,QAAS,SAAU,OAAQ,UAChFpS,OAAOmI,KAAK8I,GAAQoB,SAAQ,SAAAzQ,GAC3B,GAAIwQ,EAAUtG,QAAQlK,GAAO,EAC5B,MAAM,IAAI0Q,MAAM,uBAAgB1Q,EAAG,0DAAkDqP,EAAOjB,KAAI,8BAAsBoC,EAAUlJ,KAAK,MAAK,SAGpI,IAAAsP,EAAcvH,EAAM,IAAfjB,EAASiB,EAAM,KAC5B,KAAK,IAAAwH,UAASD,GACb,MAAM,IAAIlG,MAAM,kFAA2EkG,EAAG,2BAAmBA,EAAG,MAErH,KAAK,IAAAC,UAASzI,GACb,MAAM,IAAIsC,MAAM,mFAA4EtC,EAAI,2BAAmBA,EAAI,MAIxH,IAAM6H,OAA2BpX,IAAlBwQ,EAAO4G,OAAuB5G,EAAO4G,OAAS,EAAAa,QAC7D,KAAK,IAAAC,eAAcd,GAClB,MAAM,IAAIvF,MAAM,0BAAmBuF,EAAM,0BAAkB7H,EAAI,sBAAc,EAAA4I,aAAa1P,KAAK,MAAK,MAIrG,IAAM4O,OAAyBrX,IAAjBwQ,EAAO6G,MAAsB7G,EAAO6G,MAAQ,EAAAe,cAC1D,KAAK,IAAAC,aAAYhB,GAChB,MAAM,IAAIxF,MAAM,yBAAkBwF,EAAK,0BAAkB9H,EAAI,sBAAc,EAAA+I,WAAW7P,KAAK,MAAK,MAEjG,IAAM6O,OAAyBtX,IAAjBwQ,EAAO8G,MAAsB9G,EAAO8G,MAAQ,EAAAc,cAC1D,KAAK,IAAAC,aAAYf,GAChB,MAAM,IAAIzF,MAAM,yBAAkByF,EAAK,0BAAkB/H,EAAI,sBAAc,EAAA+I,WAAW7P,KAAK,MAAK,MAIjG,IAAMwC,OAA2BjL,IAAlBwQ,EAAOvF,OAAuBuF,EAAOvF,OAAS,EAAAsN,KAC7D,KAAK,IAAAC,sBAAqBvN,GACzB,MAAM,IAAI4G,MAAM,0BAAmB5G,EAAM,0BAAkBsE,EAAI,sBAAc,EAAAkJ,oBAAoBhQ,KAAK,MAAK,MAI5G,IAAMlI,OAAuBP,IAAhBwQ,EAAOjQ,KAAqBiQ,EAAOjQ,KAAO,EAAAmU,cACvD,KAAK,IAAAgE,oBAAmBnY,GACvB,MAAM,IAAIsR,MAAM,wBAAiBtR,EAAI,0BAAkBgP,EAAI,sBAAc,EAAAoJ,kBAAkBlQ,KAAK,MAAK,MAGhG,IAAE0J,EAAuB/Q,KAArB,GAAE0Q,EAAmB1Q,KAAL,eACpBwX,EAAUzG,EAAG0G,gBACnB,GAAgB,OAAZD,EACH,MAAM,IAAI/G,MAAM,6BAEjBM,EAAG2G,YAAY3G,EAAG4G,WAAYH,GAM9B,IACMI,EAAiB7G,EAAGoG,KAIpBU,EAAY9G,EAAGlH,GACfiO,EAAU/G,EAAG5R,GACb4Y,EAAQ,IAAI9V,WAAW,CAAC,EAAG,EAAG,EAAG,IACvC8O,EAAGiH,WAAWjH,EAAG4G,WARH,EAQsBC,EANtB,EACC,EACA,EAKSC,EAAWC,EAASC,GAE5C,IAAME,EAAQ,IAAIC,MAiClB,OAhCAD,EAAM/O,OAAS,WACd6H,EAAG2G,YAAY3G,EAAG4G,WAAYH,GAC9BzG,EAAGiH,WAAWjH,EAAG4G,WAdJ,EAcuBC,EACnCC,EAAWC,EAASG,IAKjB,IAAAE,YAAWF,EAAMvC,SAAU,IAAAyC,YAAWF,EAAMtC,SAK/CnJ,QAAQC,KAAK,kBAAW0B,EAAI,wBAAgB8J,EAAMvC,MAAK,aAAKuC,EAAMtC,OAAM,0BAMzE5E,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGsH,eAAgBtH,EAAGkF,IACtDlF,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGuH,eAAgBvH,EAAGmF,IACtDnF,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGwH,mBAAoBxH,EAAGiF,IAC1DjF,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGyH,mBAAoBzH,EAAGiF,IAGtD5G,EAAOqJ,QAAQrJ,EAAOqJ,OAAOjB,IAElCS,EAAMjL,QAAU,SAAC3P,GAChBqT,EAAe,8BAAuBvC,EAAI,aAAK9Q,KAEhD4a,EAAMhS,IAAM0Q,EAELa,GAOR,YAAAkB,yBAAA,SAAyBvK,EAA6BwK,GAC/C,MAOF3Y,KANH0Q,EAAc,iBACdf,EAAc,iBACdoB,EAAE,KACFW,EAAW,cACXG,EAAY,eACZE,EAAc,iBAET6G,EAAejJ,EAAexB,GACpC,QAA4BvP,IAAxBga,EAAaC,OAAsB,CAEtC,GAAyB,KAArBD,EAAa3S,IAChB,MAAM,IAAIwK,MAAM,sCAA+BkI,EAAW,qDAA6CxK,EAAI,OAE5G,IAAM2K,GAAkB,IAAAC,wBAAuBH,EAAa3S,IAAKyL,GAC3DmH,GAAS,IAAAG,eACdjI,EACAW,EACAG,EACAE,EACA+G,EACA/H,EAAGkI,cACHN,EACAjI,EACAkI,EAAa9I,SAEd,IAAK+I,EAEJ,YADAnI,EAAe,6BAAsBvC,EAAI,2CAAmCwK,EAAW,OAIxFC,EAAaC,OAASA,EAEvB,OAAOD,EAAaC,QAGrB,YAAAvG,OAAA,SAAOoD,EAAeC,GACb,IAAA7E,EAAW9Q,KAAI,OAGvB8Q,EAAO4E,MAAQA,EACf5E,EAAO6E,OAASA,EAEhB3V,KAAKkZ,OAASxD,EACd1V,KAAKmZ,QAAUxD,GAGR,YAAAyD,WAAR,SACCtF,EACAuF,EACA1T,EACA6Q,GAEQ,IAAAzF,EAAO/Q,KAAI,GAEnB,GAAK8T,EAAL,CAQA,IAAMwF,EAAgC,GACtC,GAAI3T,EACH,GAAIA,EAAM4T,cAAgBC,aACzBF,EAAcpY,KAAKyE,QACb,GAAIA,EAAM4T,cAAgB,EAAAzD,SAChCwD,EAAcpY,KAAMyE,EAAmB8Q,mBAEvC,IAAK,IAAIrZ,EAAI,EAAGA,EAAKuI,EAAsCnF,OAAQpD,IAAK,CACvE,IAAMqc,EAAS9T,EAAsCvI,GACrDkc,EAAcpY,KAAMuY,EAAmBhD,aAAgBgD,EAAmBhD,aAAegD,GAO5FzZ,KAAK0Z,gBAAgBL,EAAkB1T,EAAO6Q,GAG9CzF,EAAG4I,WAAW7F,GAGd,IAAS1W,EAAI,EAAGA,EAAIkc,EAAc9Y,OAAQpD,IACzC2T,EAAG6I,cAAc7I,EAAG8I,SAAWzc,GAC/B2T,EAAG2G,YAAY3G,EAAG4G,WAAY2B,EAAclc,MAItC,YAAA0c,cAAR,SAAsBC,GACb,IAAAhJ,EAAO/Q,KAAI,GACf+Z,IACHhJ,EAAGiJ,OAAOjJ,EAAGkJ,OACblJ,EAAGmJ,UAAUnJ,EAAGoJ,UAAWpJ,EAAGqJ,uBAIxB,YAAAC,kBAAR,SACCZ,EACA9T,GAGA,IAAI2U,EAAe3U,EACnB,IAAI,IAAA4F,SAAQ+O,GACIA,EAA6CrQ,QAAQwP,GACxD,GACVa,EAA6CpZ,KAAKuY,QAGpD,GAAIa,IAAiBb,EAAO,CAC3B,IAAMc,EAAWD,EACjBA,EAAe,GACXC,GAAWD,EAA6CpZ,KAAKqZ,GAChED,EAA6CpZ,KAAKuY,QAEnDa,EAAe,CAACA,GAGlB,OAAOA,GAGA,YAAAE,uCAAR,SAA+CC,GAE9C,IAAMC,EAAc1a,KAAKkU,oBAAoBuG,EAAME,eACnD3a,KAAKqW,KAAK,CACTvC,QAAS4G,EACT/U,MAAO8U,EACPjE,OAAQiE,KAIF,YAAAf,gBAAR,SACCL,EACA1T,EACA6Q,GAEQ,IAAAzF,EAAO/Q,KAAI,GAGnB,GAAKwW,EAAL,CAUA,GAAI7Q,IAAWA,IAAU6Q,IAAY,IAAAjL,SAAQ5F,IAAWA,EAAsCsE,QAAQuM,IAAW,GAAK,CACrH,GAA0B,IAAtBA,EAAOL,WACV,MAAM,IAAI1F,MAAM,oMAEb4I,EAGH7C,EAAOoE,kBAAiB,IAGxB5a,KAAKwa,uCAAuChE,GAE5CA,EAAOoE,kBAAiB,SAGrBvB,GAMC7C,EAAOqE,yCACV7a,KAAKwa,uCAAuChE,GAL7CA,EAAOoE,kBAAiB,GAYlB,IAAAlF,EAAkBc,EAAM,MAAjBb,EAAWa,EAAM,OAChCzF,EAAG+J,SAAS,EAAG,EAAGpF,EAAOC,OAxCzB,CACC5E,EAAGgK,gBAAgBhK,EAAGiK,YAAa,MAE7B,IAAE9B,EAAoBlZ,KAAd,OAAEmZ,EAAYnZ,KAAL,QACvB+Q,EAAG+J,SAAS,EAAG,EAAG5B,EAAQC,KAuCpB,YAAA8B,oBAAR,SAA4BnH,EAAuB3F,EAAcjO,EAAcyY,GACtE,IAAA5H,EAAO/Q,KAAI,GAEbwO,EAAWuC,EAAGmK,kBAAkBpH,EAAS3F,GAC/C,GAAIK,EAAW,EACd,MAAM,IAAIiC,MAAM,2CAAoCtC,EAAI,yBAAiBwK,EAAW,OAGrF5H,EAAGoK,oBAAoB3M,EAAUtO,EAAM6Q,EAAGsC,OAAO,EAAO,EAAG,GAE3DtC,EAAGqK,wBAAwB5M,IAGpB,YAAA6M,sBAAR,SAA8BvH,EAAuB6E,GACpD3Y,KAAKib,oBAAoBnH,EAAS,sBAAuB,EAAG6E,IAGrD,YAAA2C,mBAAR,SAA2BxH,EAAuB6E,GACjD3Y,KAAKib,oBAAoBnH,EAAS,mBAAoB,EAAG6E,IAGlD,YAAA4C,gBAAR,SAAwBzH,EAAuB6E,GAC9C3Y,KAAKib,oBAAoBnH,EAAS,gBAAiB,EAAG6E,IAIvD,YAAAtC,KAAA,SACCjH,GAOQ,IAAA2B,EAAO/Q,KAAI,GACX8T,EAA2B1E,EAAM,QAAxBzJ,EAAkByJ,EAAM,MAAjBoH,EAAWpH,EAAM,OAEnCoM,EAAY1H,EAAQ2H,gBAG1Bzb,KAAKoZ,WAAWoC,GAAW,EAAM7V,EAAO6Q,GAGxC1C,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAG,GAAI,EAAAnI,OACjES,EAAQ4H,kBAAkBF,EAAW,yBAA0B,CAAC,EAAG,GAAI,EAAAnI,OACvEtC,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKsU,2BACpCtU,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAG9CnO,KAAK8Z,cAAc1K,EAAO2K,kBAC1BhJ,EAAG4K,WAAW5K,EAAG6K,eAAgB,EAAG,GACpC7K,EAAGiB,QAAQjB,EAAGkJ,QAIf,YAAA4B,aAAA,SACCzM,GAQQ,IAAA2B,EAAO/Q,KAAI,GACX8T,EAA2B1E,EAAM,QAAxBzJ,EAAkByJ,EAAM,MAAjBoH,EAAWpH,EAAM,OACnCsG,EAAQc,EAASA,EAAOd,MAAQ1V,KAAKkZ,OACrCvD,EAASa,EAASA,EAAOb,OAAS3V,KAAKmZ,QAEvCqC,EAAY1H,EAAQ2H,gBAG1Bzb,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAIzC,IAAMsF,EAAQ,CAAE,EAAIpG,EAAO,EAAIC,GAQ/B,GAPA7B,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAIM,EAAM,GAAI,EAAIA,EAAM,IAAK,EAAAzI,OACvFS,EAAQ4H,kBAAkBF,EAAW,yBAA0BM,EAAO,EAAAzI,OACtEtC,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAK0U,+BACpC1U,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAG9CnO,KAAK8Z,cAAc1K,EAAO2K,kBACtB3K,EAAO2M,WACV,OAAO3M,EAAO2M,YACb,IAAK,OACJhL,EAAG4K,WAAW5K,EAAGiL,MAAO,EAAG,GAC3B,MACD,IAAK,QACJjL,EAAG4K,WAAW5K,EAAGiL,MAAO,EAAG,GAC3B,MACD,IAAK,MACJjL,EAAG4K,WAAW5K,EAAGiL,MAAO,EAAG,GAC3B,MACD,IAAK,SACJjL,EAAG4K,WAAW5K,EAAGiL,MAAO,EAAG,GAC3B,MACD,QACC,MAAM,IAAIvL,MAAM,sCAA+BrB,EAAO2M,WAAU,WAGlEhL,EAAG4K,WAAW5K,EAAGkL,UAAW,EAAG,GAEhClL,EAAGiB,QAAQjB,EAAGkJ,QAIf,YAAAiC,gBAAA,SACC9M,GAOQ,IAAA2B,EAAO/Q,KAAI,GACX8T,EAA2B1E,EAAM,QAAxBzJ,EAAkByJ,EAAM,MAAjBoH,EAAWpH,EAAM,OACnCsG,EAAQc,EAASA,EAAOd,MAAQ1V,KAAKkZ,OACrCvD,EAASa,EAASA,EAAOb,OAAS3V,KAAKmZ,QAEvCqC,EAAY1H,EAAQ2H,gBAG1Bzb,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAGzC,IAAMsF,EAAQ,CAAE,EAAIpG,EAAO,EAAIC,GAC/B7B,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAI,EAAIM,EAAM,GAAI,EAAI,EAAIA,EAAM,IAAK,EAAAzI,OAC/FS,EAAQ4H,kBAAkBF,EAAW,yBAA0BM,EAAO,EAAAzI,OACtEtC,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKsU,yBACpCtU,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAG9CnO,KAAK8Z,cAAc1K,EAAO2K,kBAC1BhJ,EAAG4K,WAAW5K,EAAG6K,eAAgB,EAAG,GACpC7K,EAAGiB,QAAQjB,EAAGkJ,QAIf,YAAAkC,WAAA,SACC/M,GAUM,MAA0BpP,KAAxB+Q,EAAE,KAAEmI,EAAM,SAAEC,EAAO,UACnBrF,EAA6C1E,EAAM,QAA1CgN,EAAoChN,EAAM,SAAhCiN,EAA0BjN,EAAM,OAAxBzJ,EAAkByJ,EAAM,MAAjBoH,EAAWpH,EAAM,OAErDoM,EAAY1H,EAAQ2H,gBAG1Bzb,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAGzC1C,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAU,EAATa,EAAanD,EAAiB,EAATmD,EAAalD,GAAU,EAAA9F,OACtGS,EAAQ4H,kBAAkBF,EAAW,yBAA0B,CAAC,EAAIY,EAAS,GAAKlD,EAAS,EAAG,EAAIkD,EAAS,GAAKjD,EAAU,GAAI,EAAA9F,OAC9H,IAAMyB,EAAc1F,EAAO0F,YAAc1F,EAAO0F,YAAc,EAAAwH,4BAC9D,GAAIxH,EAAc,EACjB,MAAM,IAAIrE,MAAM,6EAAsEqE,EAAW,MAElG/D,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAK6U,0BAA0BC,IAC9D9U,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAG9CnO,KAAK8Z,cAAc1K,EAAO2K,kBAC1BhJ,EAAG4K,WAAW5K,EAAGwL,aAAc,EAAGzH,EAAc,GAChD/D,EAAGiB,QAAQjB,EAAGkJ,QAIf,YAAAuC,YAAA,SACCpN,GAYQ,IAAA2B,EAAO/Q,KAAI,GACX8T,EAA4D1E,EAAM,QAAzDqN,EAAmDrN,EAAM,UAA9CsN,EAAwCtN,EAAM,UAAnCuN,EAA6BvN,EAAM,UAAxBzJ,EAAkByJ,EAAM,MAAjBoH,EAAWpH,EAAM,OACpEsG,EAAQc,EAASA,EAAOd,MAAQ1V,KAAKkZ,OACrCvD,EAASa,EAASA,EAAOb,OAAS3V,KAAKmZ,QAEvCqC,EAAY1H,EAAQ8I,gBAG1B5c,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAGzC1C,EAAQ4H,kBAAkBF,EAAW,2BAA4BmB,EAAY,EAAG,EAAAtJ,OAChFS,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAI9F,EAAO,EAAIC,GAAS,EAAAtC,OAClF,IAAMwJ,EAAQJ,EAAU,GAAKC,EAAU,GACjCI,EAAQL,EAAU,GAAKC,EAAU,GACjCK,EAAQxa,KAAKya,MAAMF,EAAOD,GAChC/I,EAAQ4H,kBAAkBF,EAAW,sBAAuBuB,EAAO,EAAA1J,OACnE,IAAM4J,GAAWR,EAAU,GAAKC,EAAU,IAAM,EAC1CQ,GAAWT,EAAU,GAAKC,EAAU,IAAM,EAChD5I,EAAQ4H,kBAAkBF,EAAW,yBAA0B,CAAC,EAAIyB,EAAUjd,KAAKkZ,OAAS,EAAG,EAAIgE,EAAUld,KAAKmZ,QAAU,GAAI,EAAA9F,OAChI,IAAM7S,EAAS+B,KAAK4a,KAAKN,EAAQA,EAAQC,EAAQA,GAE3ChI,EAAc1F,EAAOgO,eAAyC,EAAxBhO,EAAOgO,eAAqB,EAAAd,4BACxE,GAAIlN,EAAOiO,QAAS,CACnB,GAAIvI,EAAc,GAAKA,EAAc,GAAM,EAC1C,MAAM,IAAIrE,MAAM,8EAAuEqE,EAAW,MAGnGhB,EAAQ4H,kBAAkBF,EAAW,oBAAqBhb,EAASmc,EAAYpa,KAAK2S,IAAI3S,KAAK0S,GAAKH,GAAc,EAAAzB,OAChHtC,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAK6U,0BAA0BC,SAG9DhB,EAAQ4H,kBAAkBF,EAAW,oBAAqBhb,EAASmc,EAAW,EAAAtJ,OAE9EtC,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKsU,2BAGrCtU,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAG9CnO,KAAK8Z,cAAc1K,EAAO2K,kBACtB3K,EAAOiO,QACVtM,EAAG4K,WAAW5K,EAAGwL,aAAc,EAAGzH,EAAc,GAEhD/D,EAAG4K,WAAW5K,EAAG6K,eAAgB,EAAG,GAErC7K,EAAGiB,QAAQjB,EAAGkJ,QAGf,YAAAqD,aAAA,SACClO,GA+BA,IAnBQ,IAAA0E,EAA2B1E,EAAM,QAAxBzJ,EAAkByJ,EAAM,MAAjBoH,EAAWpH,EAAM,OACnCmO,EAAWnO,EAAOoO,UAClBC,IAAcrO,EAAOqO,UAErB,EAA0Bzd,KAAxB+Q,EAAE,KAAEmI,EAAM,SAAEC,EAAO,UAGrBuE,EAAgBtO,EAAOuN,UAAY,EACnCgB,EAAeF,EAA8B,EAAlBF,EAAS/c,OAAa,EAA4B,GAAvB+c,EAAS/c,OAAS,GACxEgd,EAAY,IAAIzgB,aAAa,EAAI4gB,GACjCC,EAAMxO,EAAOyO,WAAa,IAAI9gB,aAAa,EAAI4gB,QAAgB/e,EAC/Dkf,EAAU1O,EAAO2O,eAAiB,IAAIhhB,aAAa,EAAI4gB,QAAgB/e,EAGvEof,EAAK,CAAC,EAAG,GACTC,EAAK,CAAC,EAAG,GACTC,EAAK,CAAC,EAAG,GACTC,EAAK,CAAC,EAAG,GACTC,EAAK,CAAC,EAAG,GACNhhB,EAAI,EAAGA,EAAImgB,EAAS/c,OAAQpD,IACpC,GAAKqgB,GAAargB,IAAMmgB,EAAS/c,OAAS,EAA1C,CAEA,IAAM6d,EAAKd,EAASngB,GACdkhB,EAAKf,GAAUngB,EAAI,GAAKmgB,EAAS/c,QACvCwd,EAAG,GAAKM,EAAG,GAAKD,EAAG,GACnBL,EAAG,GAAKM,EAAG,GAAKD,EAAG,GACnB,IAAME,EAAUhc,KAAK4a,KAAKa,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IACrDE,EAAG,GAAKF,EAAG,GAAKO,EAChBL,EAAG,IAAOF,EAAG,GAAKO,EAElB,IAAMhe,EAAY,EAAJnD,EAAQ,EAEjBqgB,GAAmB,IAANrgB,IAEjBogB,EAAU,GAAKa,EAAG,GAAKH,EAAG,GAAKR,EAC/BF,EAAU,GAAKa,EAAG,GAAKH,EAAG,GAAKR,EAC/BF,EAAU,GAAKa,EAAG,GAAKH,EAAG,GAAKR,EAC/BF,EAAU,GAAKa,EAAG,GAAKH,EAAG,GAAKR,EAC3BE,IACHA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,GAENE,IACHA,EAAQ,GAAKI,EAAG,GAChBJ,EAAQ,GAAKI,EAAG,GAChBJ,EAAQ,GAAKI,EAAG,GAChBJ,EAAQ,GAAKI,EAAG,KAIlB,IAAMM,GAAKphB,EAAI,IAAMmgB,EAAS/c,OAAS,GAoBvC,GAjBAgd,EAAU,EAAIjd,GAAS+d,EAAG,GAAKJ,EAAG,GAAKR,EACvCF,EAAU,EAAIjd,EAAQ,GAAK+d,EAAG,GAAKJ,EAAG,GAAKR,EAC3CF,EAAU,EAAIjd,EAAQ,GAAK+d,EAAG,GAAKJ,EAAG,GAAKR,EAC3CF,EAAU,EAAIjd,EAAQ,GAAK+d,EAAG,GAAKJ,EAAG,GAAKR,EACvCE,IACHA,EAAI,EAAIrd,GAASie,EACjBZ,EAAI,EAAIrd,EAAQ,GAAK,EACrBqd,EAAI,EAAIrd,EAAQ,GAAKie,EACrBZ,EAAI,EAAIrd,EAAQ,GAAK,GAElBud,IACHA,EAAQ,EAAIvd,GAAS2d,EAAG,GACxBJ,EAAQ,EAAIvd,EAAQ,GAAK2d,EAAG,GAC5BJ,EAAQ,EAAIvd,EAAQ,GAAK2d,EAAG,GAC5BJ,EAAQ,EAAIvd,EAAQ,GAAK2d,EAAG,IAGxB9gB,EAAImgB,EAAS/c,OAAS,GAAMid,EAAW,CAE3C,IAAMgB,EAAKlB,GAAUngB,EAAI,GAAKmgB,EAAS/c,QACjCke,EAAKnB,GAAUngB,EAAI,GAAKmgB,EAAS/c,QACvCyd,EAAG,GAAKS,EAAG,GAAKD,EAAG,GACnBR,EAAG,GAAKS,EAAG,GAAKD,EAAG,GACnB,IAAME,EAAUpc,KAAK4a,KAAKc,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IACrDE,EAAG,GAAKF,EAAG,GAAKU,EAChBR,EAAG,IAAOF,EAAG,GAAKU,EAGlBnB,GAAgBjd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,GAA6Cie,EAAG,GAAKN,EAAG,GAAKT,EACvEF,GAAgBjd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAKie,EAAG,GAAKN,EAAG,GAAKT,EAC3EF,GAAgBjd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAKie,EAAG,GAAKN,EAAG,GAAKT,EAC3EF,GAAgBjd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAKie,EAAG,GAAKN,EAAG,GAAKT,EACvEE,IACHA,GAAUrd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,GAA6Cge,EACjDZ,GAAUrd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAK,EACrDod,GAAUrd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAKge,EACrDZ,GAAUrd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAK,GAElDsd,IACHA,GAAcvd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,GAA6C2d,EAAG,GACxDL,GAAcvd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAK2d,EAAG,GAC5DL,GAAcvd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAK2d,EAAG,GAC5DL,GAAcvd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAK2d,EAAG,IAI7D,IAAMS,EAAQV,EAAG,GAAKC,EAAG,GAAKD,EAAG,GAAKC,EAAG,GACzC,GAAI5b,KAAKsc,IAAID,GAAS,KAAM,SAC5BR,EAAG,GAAKF,EAAG,GAAKC,EAAG,GACnBC,EAAG,GAAKF,EAAG,GAAKC,EAAG,GACnB,IAAMW,EAAUvc,KAAK4a,KAAKiB,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IACrDA,EAAG,IAAMU,EACTV,EAAG,IAAMU,EAET,IAAM/B,EAAQxa,KAAKwc,KAAKb,EAAG,GAAKC,EAAG,GAAKD,EAAG,GAAKC,EAAG,IAC7CxX,EAAS+W,EAAgBnb,KAAKyS,IAAI+H,EAAQ,GAC5C6B,EAAQ,GACXpB,EAAU,EAAIjd,GAAS+d,EAAG,GAAKF,EAAG,GAAKzX,EACvC6W,EAAU,EAAIjd,EAAQ,GAAK+d,EAAG,GAAKF,EAAG,GAAKzX,EAC3C6W,GAAgBjd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,GAA6Cgd,EAAU,EAAIjd,GACrEid,GAAgBjd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAKgd,EAAU,EAAIjd,EAAQ,KAEjFid,EAAU,EAAIjd,EAAQ,GAAK+d,EAAG,GAAKF,EAAG,GAAKzX,EAC3C6W,EAAU,EAAIjd,EAAQ,GAAK+d,EAAG,GAAKF,EAAG,GAAKzX,EAC3C6W,GAAgBjd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAKgd,EAAU,EAAIjd,EAAQ,GACjFid,GAAgBjd,EAAQ,IAAM,EAAIgd,EAAS/c,QAAjC,EAA4C,GAAKgd,EAAU,EAAIjd,EAAQ,KAIhFkd,IAEHD,EAA4B,EAAlBD,EAAS/c,QAAcgd,EAAU,GAC3CA,EAA4B,EAAlBD,EAAS/c,OAAa,GAAKgd,EAAU,GAC/CA,EAA4B,EAAlBD,EAAS/c,OAAa,GAAKgd,EAAU,GAC/CA,EAA4B,EAAlBD,EAAS/c,OAAa,GAAKgd,EAAU,GAC3CI,IACHA,EAAsB,EAAlBL,EAAS/c,QAAcod,EAAI,GAC/BA,EAAsB,EAAlBL,EAAS/c,OAAa,GAAKod,EAAI,GACnCA,EAAsB,EAAlBL,EAAS/c,OAAa,GAAKod,EAAI,GACnCA,EAAsB,EAAlBL,EAAS/c,OAAa,GAAKod,EAAI,IAEhCE,IACHA,EAA0B,EAAlBP,EAAS/c,QAAcsd,EAAQ,GACvCA,EAA0B,EAAlBP,EAAS/c,OAAa,GAAKsd,EAAQ,GAC3CA,EAA0B,EAAlBP,EAAS/c,OAAa,GAAKsd,EAAQ,GAC3CA,EAA0B,EAAlBP,EAAS/c,OAAa,GAAKsd,EAAQ,KAI7C,IAAMtC,EAAaoC,EACjBE,EAAUhK,EAAQkL,4BAA8BlL,EAAQmL,sBACxDnB,EAAUhK,EAAQoL,0BAA4BpL,EAAQ2H,gBAIxDzb,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAGzC1C,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAItC,EAAQ,EAAIC,GAAU,EAAA9F,OACpFS,EAAQ4H,kBAAkBF,EAAW,yBAA0B,EAAE,GAAI,GAAI,EAAAnI,OAEzEtC,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkB+I,IACtDxd,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAC1CyP,IAEH7M,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkBmJ,IACtD5d,KAAKub,gBAAgBC,EAAW1H,EAAQ3F,OAErC2P,IAEH/M,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkBqJ,IACtD9d,KAAKib,oBAAoBO,EAAW,oBAAqB,EAAG1H,EAAQ3F,OAIrEnO,KAAK8Z,cAAc1K,EAAO2K,kBAC1BhJ,EAAG4K,WAAW5K,EAAG6K,eAAgB,EAAG+B,GACpC5M,EAAGiB,QAAQjB,EAAGkJ,QAGf,YAAAkF,kBAAA,SACC/P,GAYQ,IAAA0E,EAAoD1E,EAAM,QAAjDzJ,EAA2CyJ,EAAM,MAA1CoH,EAAoCpH,EAAM,OAAlCoO,EAA4BpO,EAAM,UAAvBwO,EAAiBxO,EAAM,IAAlB0O,EAAY1O,EAAM,QAC5D,EAA0BpP,KAAxB+Q,EAAE,KAAEmI,EAAM,SAAEC,EAAO,UAErBqC,EAAaoC,EACjBE,EAAUhK,EAAQkL,4BAA8BlL,EAAQmL,sBACxDnB,EAAUhK,EAAQoL,0BAA4BpL,EAAQ2H,gBAIxDzb,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAGzC1C,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAItC,EAAQ,EAAIC,GAAU,EAAA9F,OACpFS,EAAQ4H,kBAAkBF,EAAW,yBAA0B,EAAE,GAAI,GAAI,EAAAnI,OAEzEtC,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkB+I,IACtDxd,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAC1CyP,IAEH7M,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkBmJ,IACtD5d,KAAKub,gBAAgBC,EAAW1H,EAAQ3F,OAErC2P,IAEH/M,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkBqJ,IACtD9d,KAAKib,oBAAoBO,EAAW,oBAAqB,EAAG1H,EAAQ3F,OAGrE,IAAMiR,EAAQhQ,EAAOgQ,MAAQhQ,EAAOgQ,MAAQ5B,EAAUhd,OAAS,EAG/DR,KAAK8Z,cAAc1K,EAAO2K,kBAC1BhJ,EAAG4K,WAAW5K,EAAG6K,eAAgB,EAAGwD,GACpCrO,EAAGiB,QAAQjB,EAAGkJ,QAGf,YAAAoF,UAAA,SAAUjQ,GAYH,MAA0BpP,KAAxB+Q,EAAE,KAAEmI,EAAM,SAAEC,EAAO,UACnBmG,EAAkDlQ,EAAM,QAA/CwO,EAAyCxO,EAAM,IAA1C0O,EAAoC1O,EAAM,QAAjCzJ,EAA2ByJ,EAAM,MAA1BoH,EAAoBpH,EAAM,OAAlB0E,EAAY1E,EAAM,QAGhE,GAAIA,EAAOqO,WAAa6B,EACvB,MAAM,IAAI7O,MAAM,+EAGjB,IAAM+K,EAAaoC,EACjBE,EAAUhK,EAAQkL,4BAA8BlL,EAAQmL,sBACxDnB,EAAUhK,EAAQoL,0BAA4BpL,EAAQ2H,gBAIxDzb,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAEzC,IAAM4I,EAAQhQ,EAAOgQ,MAAQhQ,EAAOgQ,MAASE,EAAUA,EAAQ9e,OAAU4O,EAAOoO,UAAUhd,OAAS,EAKnG,GAFAsT,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAItC,EAAQ,EAAIC,GAAU,EAAA9F,OACpFS,EAAQ4H,kBAAkBF,EAAW,yBAA0B,EAAE,GAAI,GAAI,EAAAnI,OACrEiM,EAAS,CAGZ,IADA,IAAM9B,EAAY,IAAIzgB,aAAa,EAAIqiB,GAC9BhiB,EAAI,EAAGA,EAAIgiB,EAAOhiB,IAAK,CAC/B,IAAMmD,EAAQ+e,EAAQliB,GACtBogB,EAAU,EAAIpgB,GAAKgS,EAAOoO,UAAU,EAAIjd,GACxCid,EAAU,EAAIpgB,EAAI,GAAKgS,EAAOoO,UAAU,EAAIjd,EAAQ,GAErDwQ,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkB+I,SAEtDzM,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkBrF,EAAOoO,YAE9Dxd,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAC1CyP,IAEH7M,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkBmJ,IACtD5d,KAAKub,gBAAgBC,EAAW1H,EAAQ3F,OAErC2P,IAEH/M,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKyU,kBAAkBqJ,IACtD9d,KAAKib,oBAAoBO,EAAW,oBAAqB,EAAG1H,EAAQ3F,OAIrEnO,KAAK8Z,cAAc1K,EAAO2K,kBACtB3K,EAAOkQ,QACVvO,EAAG4K,WAAW5K,EAAGiL,MAAO,EAAGoD,GAEvBhQ,EAAOqO,UACV1M,EAAG4K,WAAW5K,EAAGkL,UAAW,EAAGmD,GAE/BrO,EAAG4K,WAAW5K,EAAGwO,WAAY,EAAGH,GAGlCrO,EAAGiB,QAAQjB,EAAGkJ,QAGf,YAAAuF,kBAAA,SACCpQ,GAaM,MAA4CpP,KAA1C+Q,EAAE,KAAE0O,EAAgB,mBAAEvG,EAAM,SAAEC,EAAO,UACrCqE,EAAsBpO,EAAM,UAAjBoH,EAAWpH,EAAM,OAGpC,GAAgC,IAA5BoO,EAAUzH,eAAmD,IAA5ByH,EAAUzH,cAC9C,MAAM,IAAItF,MAAM,mIAA4H+M,EAAUrP,KAAI,kBAAUqP,EAAUzH,cAAa,iBAEpL,IAAAvV,EAAWgd,EAAS,OACtB4B,EAAQhQ,EAAOgQ,OAAS5e,EAC9B,GAAI4e,EAAQ5e,EACX,MAAM,IAAIiQ,MAAM,wBAAiB2O,EAAK,4CAAoC5e,EAAM,MAGjF,IAAIsT,EAAU1E,EAAO0E,QACrB,QAAgBlV,IAAZkV,EAAuB,CAC1BA,EAAU9T,KAAK6T,wBAAwB,EAAAR,OACvC,IAAMqM,EAAQtQ,EAAOsQ,OAAS,CAAC,EAAG,EAAG,GACrC5L,EAAQ6L,WAAW,UAAW,EAAF,KAAMD,GAAO,GAAF,CAAE,IAAI,KAAArM,OAE9C,IAAMmI,EAAY1H,EAAQ8L,oBAGpBja,EAAQ3F,KAAKqa,kBAAkBmD,EAAWpO,EAAOzJ,OAGvD3F,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAGzC1C,EAAQ4H,kBAAkBF,EAAW,uBAAwB7V,EAAMsE,QAAQuT,GAAY,EAAA/J,KACvFK,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAItC,EAAQ,EAAIC,GAAU,EAAA9F,OAEpFS,EAAQ4H,kBAAkBF,EAAW,sCAAmE,IAA5BgC,EAAUzH,cAAqB,EAAA8J,MAE3G,IAAMC,EAAY1Q,EAAO0Q,WAAa,EACtChM,EAAQ4H,kBAAkBF,EAAW,uBAAwBsE,EAAW,EAAAzM,OACxE,IAAM0M,EAA0B,CAACvC,EAAU9H,MAAO8H,EAAU7H,QAI5D,GAHA7B,EAAQ4H,kBAAkBF,EAAW,iCAAkCuE,EAAyB,EAAA1M,OAChGS,EAAQ4H,kBAAkBF,EAAW,qBAAsBpM,EAAO4Q,MAAO,EAAAH,MACzE/L,EAAQ4H,kBAAkBF,EAAW,qBAAsBpM,EAAO6Q,MAAO,EAAAJ,WAC1CjhB,IAA3BoB,KAAKkgB,mBAAoCT,GAAoBA,EAAiBjf,OAAS4e,EAAQ,CAElG,IAAME,GAAU,IAAAa,0BAAyB3f,GACzCR,KAAKyf,iBAAmBH,EACxBtf,KAAKkgB,kBAAoBlgB,KAAKyU,kBAAkB6K,GAEjDvO,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKkgB,mBACpClgB,KAAKsb,mBAAmBE,EAAW1H,EAAQ3F,MAG3CnO,KAAK8Z,cAAc1K,EAAO2K,kBAC1BhJ,EAAG4K,WAAW5K,EAAGqP,OAAQ,EAAGhB,GAC5BrO,EAAGiB,QAAQjB,EAAGkJ,QAGf,YAAAoG,iBAAA,SACCjR,GAcM,MAA0BpP,KAAxB+Q,EAAE,KAAEmI,EAAM,SAAEC,EAAO,UACnBqE,EAAsBpO,EAAM,UAAjBoH,EAAWpH,EAAM,OAGpC,GAAgC,IAA5BoO,EAAUzH,eAAmD,IAA5ByH,EAAUzH,cAC9C,MAAM,IAAItF,MAAM,kIAA2H+M,EAAUrP,KAAI,kBAAUqP,EAAUzH,cAAa,iBAG3L,GAAI3G,EAAOqO,WAAarO,EAAOkQ,QAC9B,MAAM,IAAI7O,MAAM,sFAGjB,IAAIqD,EAAU1E,EAAO0E,QACrB,QAAgBlV,IAAZkV,EAAuB,CAC1BA,EAAU1E,EAAO4Q,OAAS5Q,EAAO6Q,MAAQjgB,KAAKmU,8BAAgCnU,KAAK6T,wBAAwB,EAAAR,OAC3G,IAAMqM,EAAQtQ,EAAOsQ,OAAS,CAAC,EAAG,EAAG,GACrC5L,EAAQ6L,WAAW,UAAW,EAAF,KAAMD,GAAO,GAAF,CAAE,IAAI,KAAArM,OAE9C,IAAMmI,EAAY1H,EAAQwM,mBAGpB3a,EAAQ3F,KAAKqa,kBAAkBmD,EAAWpO,EAAOzJ,OAGvD3F,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAGzC,IAAM8I,EAAUlQ,EAAOkQ,QAAUlQ,EAAOkQ,SAAU,IAAAa,0BAAyB/Q,EAAOgQ,OAAS5B,EAAUhd,QAC/F4e,EAAQhQ,EAAOgQ,MAAQhQ,EAAOgQ,MAAQE,EAAQ9e,OAGpDsT,EAAQ4H,kBAAkBF,EAAW,uBAAwB7V,EAAMsE,QAAQuT,GAAY,EAAA/J,KACvFK,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAItC,EAAQ,EAAIC,GAAU,EAAA9F,OAEpFS,EAAQ4H,kBAAkBF,EAAW,sCAAmE,IAA5BgC,EAAUzH,cAAqB,EAAA8J,MAC3G,IAAME,EAA0B,CAACvC,EAAU9H,MAAO8H,EAAU7H,QAI5D,GAHA7B,EAAQ4H,kBAAkBF,EAAW,iCAAkCuE,EAAyB,EAAA1M,OAChGS,EAAQ4H,kBAAkBF,EAAW,qBAAsBpM,EAAO4Q,MAAO,EAAAH,MACzE/L,EAAQ4H,kBAAkBF,EAAW,qBAAsBpM,EAAO6Q,MAAO,EAAAJ,WACnCjhB,IAAlCoB,KAAKugB,yBAAwC,CAEhD,IAAIC,OAAU,EACd,GAAIlB,EAAQ/F,cAAgBxc,aAAc,CAEzCyjB,EAAa,IAAIzjB,aAAauiB,EAAQ9e,QACtC,IAAK,IAAIpD,EAAI,EAAGA,EAAIgiB,EAAOhiB,IAC1BojB,EAAWpjB,GAAKkiB,EAAQliB,GAEzBoP,QAAQC,KAAK,2CAAoC6S,EAAQ/F,YAAW,mLAEpEiH,EAAalB,EAEdtf,KAAKugB,yBAA2BvgB,KAAKyU,kBAAkB+L,QAEvDzP,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKugB,0BAEpCxP,EAAGsE,WAAWtE,EAAGsB,aAAciN,EAASvO,EAAGuE,aAE5CtV,KAAKsb,mBAAmBE,EAAW1H,EAAQ3F,MAG3CnO,KAAK8Z,cAAc1K,EAAO2K,kBACtB3K,EAAOkQ,QACVvO,EAAG4K,WAAW5K,EAAGiL,MAAO,EAAGoD,GAEvBhQ,EAAOqO,UACV1M,EAAG4K,WAAW5K,EAAGkL,UAAW,EAAGmD,GAE/BrO,EAAG4K,WAAW5K,EAAGwO,WAAY,EAAGH,GAGlCrO,EAAGiB,QAAQjB,EAAGkJ,QAGf,YAAAwG,uBAAA,SACCrR,GAWM,MAAkDpP,KAAhD+Q,EAAE,KAAE2P,EAAsB,yBAAExH,EAAM,SAAEC,EAAO,UAC3C/Y,EAAiBgP,EAAM,KAAjBoH,EAAWpH,EAAM,OAG/B,GAA2B,IAAvBhP,EAAK2V,cACR,MAAM,IAAItF,MAAM,8GAAuGrQ,EAAK+N,KAAI,kBAAU/N,EAAK2V,cAAa,iBAQ7J,IAAIjC,EAAU1E,EAAO0E,QACrB,QAAgBlV,IAAZkV,EAAuB,CAC1BA,EAAU9T,KAAK6T,wBAAwB,EAAAR,OACvC,IAAMqM,EAAQtQ,EAAOsQ,OAAS,CAAC,EAAG,EAAG,GACrC5L,EAAQ6L,WAAW,UAAW,EAAF,KAAMD,GAAO,GAAF,CAAE,IAAI,KAAArM,OAE9C,IAAMmI,EAAY1H,EAAQ6M,yBAGpBhb,EAAQ3F,KAAKqa,kBAAkBja,EAAMgP,EAAOzJ,OAGlD3F,KAAKoZ,WAAWoC,GAAW,EAAO7V,EAAO6Q,GAGzC1C,EAAQ4H,kBAAkBF,EAAW,qBAAsB7V,EAAMsE,QAAQ7J,GAAO,EAAAqT,KAEhF,IAAMmN,EAAcxR,EAAOwR,aAAe,EAC1C9M,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAACoF,EAAc1H,EAAQ0H,EAAczH,GAAU,EAAA9F,OACxG,IAAMwN,EAAgBzR,EAAOyR,eAAiB,GACxCC,EAAmB,CAACve,KAAKwe,MAAM7H,EAAS2H,GAAgBte,KAAKwe,MAAM5H,EAAU0H,IACnF/M,EAAQ4H,kBAAkBF,EAAW,wBAAyBsF,EAAkB,EAAAzN,OAChF,IAAM7S,EAAS,EAAIsgB,EAAiB,GAAKA,EAAiB,GAC1D,QAAqCliB,IAAjCoB,KAAKghB,yBAA0CN,GAA0BA,EAAuBlgB,OAASA,EAAS,CAErH,IAAM8e,GAAU,IAAAa,0BAAyB3f,GACzCR,KAAK0gB,uBAAyBpB,EAC9Btf,KAAKghB,wBAA0BhhB,KAAKyU,kBAAkB6K,GAEvDvO,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKghB,yBACpChhB,KAAKsb,mBAAmBE,EAAW1H,EAAQ3F,MAG3CnO,KAAK8Z,cAAc1K,EAAO2K,kBAC1BhJ,EAAG4K,WAAW5K,EAAGiL,MAAO,EAAGxb,GAC3BuQ,EAAGiB,QAAQjB,EAAGkJ,QAGf,YAAAgH,mBAAA,SACC7R,GASQ,IAAA2B,EAAO/Q,KAAI,GACXI,EAAiBgP,EAAM,KAAjBoH,EAAWpH,EAAM,OAEzB0E,EAAU9T,KAAKqU,+BAA+BjU,EAAKjB,MACnDugB,EAAQtQ,EAAOsQ,OAAS,CAAC,EAAG,EAAG,GACrC5L,EAAQ6L,WAAW,UAAWD,EAAO,EAAArM,OACrC,IAAM6N,EAAQ9R,EAAO8R,OAAS,EAC9BpN,EAAQ6L,WAAW,UAAWuB,EAAO,EAAA7N,OACrCS,EAAQ6L,WAAW,2BAA4Bvf,EAAK2V,cAAe,EAAAtC,KAEnE,IAAM+H,EAAY1H,EAAQ2H,gBAGpB9V,EAAQ3F,KAAKqa,kBAAkBja,EAAMgP,EAAOzJ,OAElD3F,KAAKoZ,WAAWoC,GAAW,EAAM7V,EAAO6Q,GAGxC1C,EAAQ4H,kBAAkBF,EAAW,kBAAmB7V,EAAMsE,QAAQ7J,GAAO,EAAAqT,KAC7EK,EAAQ4H,kBAAkBF,EAAW,mBAAoB,CAAC,EAAG,GAAI,EAAAnI,OACjES,EAAQ4H,kBAAkBF,EAAW,yBAA0B,CAAC,EAAG,GAAI,EAAAnI,OACvEtC,EAAGqB,WAAWrB,EAAGsB,aAAcrS,KAAKsU,2BACpCtU,KAAKqb,sBAAsBG,EAAW1H,EAAQ3F,MAG9CnO,KAAK8Z,cAAc1K,EAAO2K,kBAC1BhJ,EAAG4K,WAAW5K,EAAG6K,eAAgB,EAAG,GACpC7K,EAAGiB,QAAQjB,EAAGkJ,QAGf,YAAAkH,gBAAA,WACC,IAAKnhB,KAAKohB,UACT,MAAM,IAAI3Q,MAAM,0HAET,IAAAM,EAAO/Q,KAAI,GAEb8a,EAAW9a,KAAKohB,UAAUC,YAAY,IAAIC,EAAMC,SACtDxQ,EAAG+J,SAASA,EAASpY,EAAGoY,EAASnY,EAAGmY,EAASpF,MAAOoF,EAASnF,QAE7D3V,KAAKohB,UAAUI,gBAAgB,MAE/BxhB,KAAKohB,UAAUK,cAUhB,YAAAC,QAAA,SAAQtS,QAAA,IAAAA,MAAA,IAMC,IAAA0B,EAAW9Q,KAAI,OACjB2hB,EAAWvS,EAAOuS,UAAY,SAC9Bnb,EAAW4I,EAAO5I,UAAYoH,OACpCkD,EAAO8Q,QAAO,SAAClZ,GACTA,EAID0G,EAAOzG,KACV,IAAAF,eAAcC,EAAM0G,EAAOzG,KAAKkZ,MAAK,SAACnZ,GACrClC,EAASkC,EAAM,UAAGiZ,EAAQ,YAG3Bnb,EAASkC,EAAM,UAAGiZ,EAAQ,SAR1BnV,QAAQC,KAAK,4CAAqC0B,KAAI,8BAUrD,cAGJ,YAAA2T,KAAA,WACK,IAAEC,EAAgC/hB,KAAnB,cAAEgiB,EAAiBhiB,KAAL,aAC3BiiB,EAAcC,YAAYC,MAEhC,GADAniB,KAAK+hB,cAAgBE,GAChBF,EACJ,MAAO,CAAEK,IAAK,EAAGC,aAAc,GAEhC,IAAMC,EAAa,KAAQL,EAAcF,GACpCC,IAAcA,EAAeM,GAElC,IACMF,EAAOpkB,OAAOukB,YADL,GAC0BP,GAAgB,EAD1C,IACwDM,GAAYE,QAAQ,IAG3F,OAFAxiB,KAAKgiB,aAAeI,EACpBpiB,KAAKsQ,WAAa,EACX,CACN8R,IAAG,EACHK,SAAUziB,KAAKsQ,YAIjB,YAAAoS,QAAA,W,MACO,EAIF1iB,KAHH+Q,EAAE,KAAEV,EAAc,iBAClBV,EAAc,iBACdH,EAAa,gBAAEC,EAAiB,oBAAEC,EAAwB,2BAGvDW,GAAgB7D,QAAQiF,IAAI,6BAKhCtT,OAAOoI,OAAOoJ,GAAgBa,SAAQ,SAAAoI,GACjCA,EAAaC,SAChB9H,EAAG4R,aAAa/J,EAAaC,eACtBD,EAAaC,WAKtB1a,OAAOoI,OAAOiJ,GAAegB,SAAQ,SAAAsD,GAE/BA,EAAuB4O,SAAU5O,EAAuB4O,aAE9DvkB,OAAOmI,KAAKkJ,GAAegB,SAAQ,SAAAzQ,UAE3ByP,EAAczP,MAEtB5B,OAAOoI,OAAOkJ,GAAmBe,SAAQ,SAAAsD,GAEnCA,EAAuB4O,SAAU5O,EAAuB4O,aAE9DvkB,OAAOmI,KAAKmJ,GAAmBe,SAAQ,SAAAzQ,UAE/B0P,EAAkB1P,MAE1B5B,OAAOoI,OAAOmJ,GAA0Bc,SAAQ,SAAAsD,GAE1CA,EAAuB4O,SAAU5O,EAAuB4O,aAE9DvkB,OAAOmI,KAAKoJ,GAA0Bc,SAAQ,SAAAzQ,UAEtC2P,EAAyB3P,MAEJ,QAA7B,EAAAC,KAAKoU,gCAAwB,SAAEsO,iBACxB1iB,KAAKoU,gCAGLpU,KAAKohB,iBAELphB,KAAK+Q,UAEL/Q,KAAK8Q,QAGd,EA5pDA,GAAa,EAAAiC,e,8FCzEb,aAEA,SACA,SAEA,SAUA,SAsBA,SAGA,SAWA,aAkIC,WACCD,EACA1D,GAlGO,KAAAwT,YAAiC,EAIjC,KAAAC,aAAe,EAEN,KAAAC,SAA6B,GA2GrC,IAAA3U,GAAUiB,GAAU,IAAG,KAC/B,IAAK0D,EACJ,MAAM,IAAIrC,MAAM,kCAA2BtC,EAAI,qEAEhD,IAAKiB,EACJ,MAAM,IAAIqB,MAAM,2EAEjB,KAAK,IAAAsS,UAAS3T,GACb,MAAM,IAAIqB,MAAM,mGAA4FuS,KAAKC,UAAU7T,GAAO,MAGnI,IAAMmB,EAAY,CAAC,OAAQ,OAAQ,gBAAiB,aAAc,SAAU,QAAS,QAAS,WAAY,aAAc,aAAc,SAEhIjK,EAAOnI,OAAOmI,KAAK8I,GACzB9I,EAAKkK,SAAQ,SAAAzQ,GACZ,GAAIwQ,EAAUtG,QAAQlK,GAAO,EAC5B,MAAM,IAAI0Q,MAAM,8BAAuB1Q,EAAG,6DAAqDqP,EAAOjB,KAAI,8BAAsB6U,KAAKC,UAAU1S,GAAU,SAJtI,CAAC,OAAQ,OAAQ,gBAAiB,cAQ1CC,SAAQ,SAAAzQ,GACpB,GAAIuG,EAAK2D,QAAQlK,GAAO,EACvB,MAAM,IAAI0Q,MAAM,+BAAwB1Q,EAAG,qEAA6DoO,EAAI,UAItG,IAAAsH,EAAoCrG,EAAM,WAA9BjQ,EAAwBiQ,EAAM,KAAxB2G,EAAkB3G,EAAM,cAC1C2B,EAAO+B,EAAQ,GAOvB,GAJA9S,KAAKkjB,UAAYpQ,EACjB9S,KAAKmO,KAAOA,IAGP,IAAAgV,mBAAkBpN,IAAkBA,EAAgB,EACxD,MAAM,IAAItF,MAAM,iCAA0BuS,KAAKC,UAAUlN,GAAc,0BAAkB5H,EAAI,sCAE9FnO,KAAK+V,cAAgBA,EAGrB,IAAM7T,IAAakN,EAAOlN,SAC1BlC,KAAKkC,SAAWA,EAGV,OAA4B,IAAAkhB,kBAAiB3N,EAAYtH,EAAM2E,EAASzC,gBAAtE7P,EAAM,SAAEkV,EAAK,QAAEC,EAAM,SAE7B3V,KAAKqjB,QAAU7iB,EACfR,KAAKkZ,OAASxD,EACd1V,KAAKmZ,QAAUxD,EAIf,IAAM2N,EAAgB9iB,EAAS,EAAAqW,QAAY1X,IAAS,EAAAkU,OAASlU,GAAQ,EAAAiU,WAAc,EAAAmQ,OAAS,EAAA1M,QACtFb,OAA2BpX,IAAlBwQ,EAAO4G,OAAuB5G,EAAO4G,OAASsN,EAC7D,KAAK,IAAAxM,eAAcd,GAClB,MAAM,IAAIvF,MAAM,0BAAmBuS,KAAKC,UAAUjN,GAAO,0BAAkB7H,EAAI,6BAAqB6U,KAAKC,UAAU,EAAAlM,cAAa,MAGjI,GAAIf,IAAW,EAAAuN,QAAYpkB,IAAS,EAAAkU,OAASlU,GAAQ,EAAAiU,WACpD,MAAM,IAAI3C,MAAM,yGAAkGtC,EAAI,wBAAgBhP,EAAI,MAE3Ia,KAAKgW,OAASA,EAGd,IAAMC,OAAyBrX,IAAjBwQ,EAAO6G,MAAsB7G,EAAO6G,MAAQ,EAAAe,cAC1D,KAAK,IAAAC,aAAYhB,GAChB,MAAM,IAAIxF,MAAM,yBAAkBuS,KAAKC,UAAUhN,GAAM,0BAAkB9H,EAAI,6BAAqB6U,KAAKC,UAAU,EAAA/L,YAAW,MAE7HlX,KAAKiW,MAAQA,EACb,IAAMC,OAAyBtX,IAAjBwQ,EAAO8G,MAAsB9G,EAAO8G,MAAQ,EAAAc,cAC1D,KAAK,IAAAC,aAAYf,GAChB,MAAM,IAAIzF,MAAM,yBAAkBuS,KAAKC,UAAU/M,GAAM,0BAAkB/H,EAAI,6BAAqB6U,KAAKC,UAAU,EAAA/L,YAAW,MAK7H,GAHAlX,KAAKkW,MAAQA,IAGR,IAAAsN,iBAAgBrkB,GACpB,MAAM,IAAIsR,MAAM,wBAAiBuS,KAAKC,UAAU9jB,GAAK,0BAAkBgP,EAAI,6BAAqB6U,KAAKC,UAAU,EAAAQ,gBAAe,MAE/HzjB,KAAKb,KAAOA,EACZ,IAAMukB,GAAe,IAAAC,yBAAwB,CAC5C7Q,SAAQ,EACR3T,KAAI,EACJ+C,SAAQ,EACRiM,KAAI,IAELnO,KAAK2a,cAAgB+I,EAEf,OAKF,IAAAE,wBAAuB,CAC1B9Q,SAAQ,EACR3E,KAAI,EACJ4H,cAAa,EACb7T,SAAQ,EACRwhB,aAAY,IATZG,EAAQ,WACRC,EAAgB,mBAChBC,EAAM,SACNC,EAAa,gBAQdhkB,KAAKikB,kBAAoBH,EACzB9jB,KAAKkkB,UAAYL,EACjB7jB,KAAKmkB,QAAUJ,EACf/jB,KAAKokB,eAAiBJ,EAItB,IAAMK,GAAiB,IAAAC,2BAA0B,CAAExR,SAAQ,EAAEkD,OAAM,EAAE0N,aAAY,EAAEvV,KAAI,IACvFnO,KAAKukB,gBAAkBF,EACvBrkB,KAAKwkB,UAAYzT,EAAGsT,GACpBrkB,KAAKykB,gBAAiB,IAAAC,yBAAwB,CAAE5R,SAAQ,EAAE6R,KAAM1O,EAAOoO,eAAc,EAAEX,aAAY,EAAEvV,KAAI,IACzGnO,KAAK4kB,SAAW7T,EAAG/Q,KAAKykB,gBACxBzkB,KAAK6kB,gBAAiB,IAAAH,yBAAwB,CAAE5R,SAAQ,EAAE6R,KAAMzO,EAAOmO,eAAc,EAAEX,aAAY,EAAEvV,KAAI,IACzGnO,KAAK8kB,SAAW/T,EAAG/Q,KAAK6kB,gBAIxB,IAAM1O,OAAmCvX,IAAtBwQ,EAAO+G,WAA2B/G,EAAO+G,WAAa,EACzE,KAAK,IAAAgN,mBAAkBhN,GACtB,MAAM,IAAI1F,MAAM,8BAAuBuS,KAAKC,UAAU9M,GAAW,0BAAkBhI,EAAI,iCAExFnO,KAAKmW,WAAaA,OAGQvX,IAAtBwQ,EAAOgH,aACVpW,KAAKoW,WAAahH,EAAOgH,YAG1BpW,KAAK+kB,aAAa3V,EAAOtO,OAooB3B,OA9nBE,sBAAI,oBAAK,C,IAAT,WACA,OAAOd,KAAKkZ,Q,gCAMb,sBAAI,qBAAM,C,IAAV,WACC,OAAOlZ,KAAKmZ,S,gCAMb,sBAAI,qBAAM,C,IAAV,WACC,IAAKnZ,KAAKqjB,QACT,MAAM,IAAI5S,MAAM,+CAAwCzQ,KAAKmO,KAAI,OAElE,OAAOnO,KAAKqjB,S,gCAOb,YAAA2B,KAAA,WACC,YAAwBpmB,IAAjBoB,KAAKqjB,SAOb,YAAAxI,sCAAA,WACC,OAAO7a,KAAKilB,mBAAqBjlB,KAAKilB,kBAAkBjlB,KAAKuW,cAmEtD,YAAAwO,aAAR,SACCjkB,GAqBA,IAnBM,MAaFd,KAZHmO,EAAI,OACJgI,EAAU,aACV+M,EAAS,YACTe,EAAiB,oBACjBC,EAAS,YACTC,EAAO,UACPK,EAAS,YACTI,EAAQ,WACRE,EAAQ,WACR5iB,EAAQ,WACRwT,EAAK,QACLC,EAAM,SAEC5E,EAAuBmS,EAAS,GAA5BxS,EAAmBwS,EAAS,eAElCgC,EAAiBpkB,GAAQ,IAAAqkB,uBAAsBrkB,EAAOd,WAAQpB,EAG3DxB,EAAI,EAAGA,EAAI+Y,EAAY/Y,IAAK,CACpC,IAAMoa,EAAUzG,EAAG0G,gBACnB,IAAKD,EAEJ,YADA9G,EAAe,+CAAwCvC,EAAI,cAAM4C,EAAGqU,WAAU,MAG/ErU,EAAG2G,YAAY3G,EAAG4G,WAAYH,GAI9BzG,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGsH,eAAgBuM,GACnD7T,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGuH,eAAgBwM,GACnD/T,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGwH,mBAAoBiM,GACvDzT,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGyH,mBAAoBgM,GAEvDzT,EAAGiH,WAAWjH,EAAG4G,WAAY,EAAGsM,EAAmBvO,EAAOC,EAAQ,EAAGuO,EAAWC,EAASe,GAAkC,MAE3H,IAAMtoB,EAAyB,CAC9B4a,QAAO,GAGR,GAAItV,EAAU,CAEb,IAAMmjB,EAActU,EAAGuU,oBACvB,IAAKD,EAEJ,YADA3U,EAAe,mDAA4CvC,EAAI,cAAM4C,EAAGqU,WAAU,MAGnFrU,EAAGgK,gBAAgBhK,EAAGiK,YAAaqK,GAEnCtU,EAAGwU,qBAAqBxU,EAAGiK,YAAajK,EAAGyU,kBAAmBzU,EAAG4G,WAAYH,EAAS,GAEtF,IAAM,EAASzG,EAAG0U,uBAAuB1U,EAAGiK,aACzC,IAAWjK,EAAG2U,sBAChBhV,EAAe,uDAAgDvC,EAAI,cAAM,EAAM,MAIhFvR,EAAOyoB,YAAcA,EAItBrlB,KAAK8iB,SAAS5hB,KAAKtE,GAGpBmU,EAAG2G,YAAY3G,EAAG4G,WAAY,MAC9B5G,EAAGgK,gBAAgBhK,EAAGiK,YAAa,OAMpC,sBAAI,0BAAW,C,IAAf,WACC,OAAOhb,KAAK6iB,c,gCAMb,YAAA8C,qBAAA,WAEC3lB,KAAK6iB,cAAgB7iB,KAAKuW,YAAc,GAAKvW,KAAKmW,YAMnD,sBAAI,2BAAY,C,IAAhB,WACC,OAAOnW,KAAKsW,gBAAgBtW,KAAKuW,c,gCAMlC,sBAAI,wBAAS,C,IAAb,WACC,GAAwB,IAApBvW,KAAKmW,WACR,MAAM,IAAI1F,MAAM,+CAAwCzQ,KAAKmO,KAAI,4BAElE,OAAOnO,KAAKsW,iBAAiBtW,KAAKuW,YAAc,EAAIvW,KAAKmW,YAAcnW,KAAKmW,a,gCAM7E,YAAAG,gBAAA,SAAgB/V,GACT,MAA8CP,KAA5CmW,EAAU,aAAE8O,EAAiB,oBAAEnC,EAAQ,WAa/C,OAZIviB,EAAQ,GAAKA,GAAS4V,IACzB5V,GAAS4V,IAEN5V,EAAQ,GAAKA,GAAS4V,KAEzB3J,QAAQC,KAAK,qCAA8BlM,EAAK,0BAAkBP,KAAKmO,KAAI,sCAA8BgI,EAAa,EAAI,IAAM,GAAE,6BAC9H5V,EAAQ,EACXA,GAAS4V,EAAa5T,KAAKkI,KAAKlI,KAAKsc,IAAIte,GAAS4V,GAElD5V,GAAgB4V,GAGd8O,GAAqBA,EAAkB1kB,GAAe0kB,EAAkB1kB,GACrEuiB,EAASviB,GAAOiX,SAMhB,YAAAoO,iBAAR,WACS,IAAA7U,EAAO/Q,KAAKkjB,UAAS,GACrBmC,EAAgBrlB,KAAK8iB,SAAS9iB,KAAKuW,aAAY,YACvD,IAAK8O,EACJ,MAAM,IAAI5U,MAAM,oBAAazQ,KAAKmO,KAAI,uBAEvC4C,EAAGgK,gBAAgBhK,EAAGiK,YAAaqK,IAOpC,YAAAzK,iBAAA,SACC+K,GAEIA,GACH3lB,KAAK2lB,uBAEN3lB,KAAK4lB,mBAGD5lB,KAAKilB,oBACRjlB,KAAKilB,kBAAkBjlB,KAAKuW,kBAAe3X,IAI7C,YAAAinB,aAAA,SAAa/kB,EAAiCglB,QAAA,IAAAA,OAAA,GAO7C,IANM,MAA+F9lB,KAA7FkjB,EAAS,YAAEe,EAAiB,oBAAEC,EAAS,YAAEC,EAAO,UAAEhO,EAAU,aAAET,EAAK,QAAEC,EAAM,SAAEY,EAAW,cACxFxF,EAAOmS,EAAS,GAClBgC,GAAiB,IAAAC,uBAAsBrkB,EAAOd,MAG9C+lB,EAAWD,EAAoB3P,EAAaI,EAAc,EACvDnZ,EAFU0oB,EAAoB,EAAIvP,EAElBnZ,EAAI2oB,EAAU3oB,IAAK,CAC3C,IAAMoa,EAAUxX,KAAKsW,gBAAgBlZ,GACrC2T,EAAG2G,YAAY3G,EAAG4G,WAAYH,GAC9BzG,EAAGiH,WAAWjH,EAAG4G,WAAY,EAAGsM,EAAmBvO,EAAOC,EAAQ,EAAGuO,EAAWC,EAASe,GAG1FnU,EAAG2G,YAAY3G,EAAG4G,WAAY,OAG/B,YAAArF,OAAA,SACCmD,EACA3U,GAEM,IAAEqN,EAAoBnO,KAAhB,KACJqQ,EADoBrQ,KAAL,UACa,eAChCqQ,GAAgB7D,QAAQiF,IAAI,6BAAsBtD,EAAI,gBAAQ6U,KAAKC,UAAUxN,GAAW,MACtF,OAA4B,IAAA2N,kBAAiB3N,EAAYtH,EAAMkC,GAA7D7P,EAAM,SAAEkV,EAAK,QAAEC,EAAM,SAC7B3V,KAAKqjB,QAAU7iB,EACfR,KAAKkZ,OAASxD,EACd1V,KAAKmZ,QAAUxD,EACf3V,KAAKgmB,kBACLhmB,KAAK+kB,aAAajkB,IAMnB,sBAAI,yBAAU,C,IAYd,WACC,OAAOd,KAAK4iB,a,IAbb,SAAexM,GACR,IAAEL,EAAwB/V,KAAX,cAAEb,EAASa,KAAL,KAC3B,KAAK,IAAAimB,mBAAkB7P,EAAYL,EAAe5W,GACjD,MAAM,IAAIsR,MAAM,8BAAuBuS,KAAKC,UAAU7M,GAAW,0BAAkBpW,KAAKmO,KAAI,uBAAehP,EAAI,wBAAgBA,EAAI,sBAAc4W,EAAa,MAG/J/V,KAAK4iB,aAAc,IAAArX,SAAQ6K,GAAeA,EAAwBlP,QAAUkP,G,gCAc7E,YAAA3V,MAAA,SAAMqlB,QAAA,IAAAA,OAAA,GACC,MAAiE9lB,KAA/DmO,EAAI,OAAE+U,EAAS,YAAE9M,EAAU,aAAED,EAAU,aAAEI,EAAW,cAAEpX,EAAI,OACvC+jB,EAAS,gBAChB1W,QAAQiF,IAAI,6BAAsBtD,EAAI,OAE1D,IAAMtP,EAAkB,GACxB,IAAI,IAAAqnB,UAAS9P,GACZvX,EAAMqC,KAAKkV,EAAsBA,EAAsBA,EAAsBA,OACvE,CACNvX,EAAMqC,KAAI,MAAVrC,EAAcuX,GACd,IAAK,IAAInI,EAAIpP,EAAM2B,OAAQyN,EAAI,EAAGA,IACjCpP,EAAMqC,KAAK,GAIb,IAAMilB,EAAaL,EAAoB,EAAIvP,EACrCwP,EAAWD,EAAoB3P,EAAaI,EAAc,EAChE,GAAIvW,KAAKkC,SAAU,CAClB,IAAM4R,EAAUoP,EAAUrP,wBAAwB1U,GAClD2U,EAAQ6L,WAAW,UAAW9gB,GAC9B,IAAK,IAAIzB,EAAI+oB,EAAY/oB,EAAI2oB,EAAU3oB,IAEtC8lB,EAAU7M,KAAK,CACdvC,QAAO,EACP0C,OAAQxW,WAGJ,CAEA,MAGFA,KAFH0V,EAAK,QAAEC,EAAM,SAAEyO,EAAc,iBAAEzJ,EAAa,gBAC5CsJ,EAAiB,oBAAEC,EAAS,YAAEC,EAAO,UAE9BpT,EAAOmS,EAAS,GAClBkD,EAAapmB,KAAKqjB,QAAUrjB,KAAKqjB,QAAU3N,EAAQC,EACnD7U,GAAQ,IAAAulB,kBAAiB1L,EAAejF,EAAQC,EAASyO,GACzDkC,EAAc3L,IAAkB,EAAAvH,WAAa,IAAIjQ,SAASrC,EAAMlE,QAAU,KAChF,IAASqR,EAAI,EAAGA,EAAImY,EAAYnY,IAC/B,IAAK,IAAI1F,EAAI,EAAGA,EAAI6b,EAAgB7b,IAAK,CACxC,IAAMhI,EAAQ0N,EAAImW,EAAiB7b,EAC/BoS,IAAkB,EAAAvH,YAErB,IAAAtL,YAAWwe,EAAc,EAAI/lB,EAAO1B,EAAM0J,IAAI,GAE9CzH,EAAMP,GAAS1B,EAAM0J,GAIxB,IAASnL,EAAI+oB,EAAY/oB,EAAI2oB,EAAU3oB,IAAK,CAC3C,IAAMoa,EAAUxX,KAAKsW,gBAAgBlZ,GACrC2T,EAAG2G,YAAY3G,EAAG4G,WAAYH,GAC9BzG,EAAGiH,WAAWjH,EAAG4G,WAAY,EAAGsM,EAAmBvO,EAAOC,EAAQ,EAAGuO,EAAWC,EAASrjB,GAG1FiQ,EAAG2G,YAAY3G,EAAG4G,WAAY,QAShC,YAAA/B,UAAA,WACO,MAAoD5V,KAAlD0V,EAAK,QAAEC,EAAM,SAAEuN,EAAS,YAAEnN,EAAa,gBAAE5W,EAAI,OAC7C4R,EAAOmS,EAAS,GAGxBljB,KAAK4lB,mBAED,IACArf,EADA,EAAwDvG,KAAtDokB,EAAc,iBAAED,EAAO,UAAED,EAAS,YAAEvJ,EAAa,gBAEvD,OAAQA,GACP,KAAK,EAAAvH,gBACaxU,IAAbmS,EAAGsC,OAEN+Q,EAAiB,EACjBF,EAAYnT,EAAGoG,KACfgN,EAAUpT,EAAGsC,MACb9M,EAAS,IAAIxJ,aAAa2Y,EAAQC,EAASyO,IAE3C7d,EAAS,IAAIb,YAAYgQ,EAAQC,EAASyO,GAI3C,MACD,KAAK,EAAA/Q,MAGJ+Q,EAAiB,EACjBF,EAAYnT,EAAGoG,KACf5Q,EAAS,IAAIxJ,aAAa2Y,EAAQC,EAASyO,GAC3C,MACD,KAAK,EAAA9Q,cAiBL,KAAK,EAAAC,eAEJ6Q,EAAiB,EACjBF,EAAanT,EAA8BwV,aAC3CpC,EAAUpT,EAAGyC,aACbjN,EAAS,IAAItJ,YAAYyY,EAAQC,EAASyO,GAG1C,MACD,KAAK,EAAA5Q,aAEJ4Q,EAAiB,EACjBF,EAAanT,EAA8BwV,aAC3ChgB,EAAS,IAAItJ,YAAYyY,EAAQC,EAASyO,GAG1C,MACD,KAAK,EAAAzQ,KASL,KAAK,EAAAC,MAEJwQ,EAAiB,EACjBF,EAAanT,EAA8BwV,aAC3CpC,EAAUpT,EAAG0C,IACblN,EAAS,IAAI8B,WAAWqN,EAAQC,EAASyO,GAGzC,MACD,KAAK,EAAA3Q,IAEJ2Q,EAAiB,EACjBF,EAAanT,EAA8BwV,aAC3ChgB,EAAS,IAAI8B,WAAWqN,EAAQC,EAASyO,GAGzC,MACD,QACC,MAAM,IAAI3T,MAAM,mCAA4BkK,EAAa,sBAG3D,IAAI,IAAA6L,aAAYzV,GAAK,CAEpBA,EAAG0V,WAAW,EAAG,EAAG/Q,EAAOC,EAAQuO,EAAWC,EAAS5d,GACvD,IAAMmgB,GAAiB1mB,KAAKqjB,QAAUrjB,KAAKqjB,QAAU3N,EAAQC,GAAUI,EAKjE7S,EAF0ByX,IAAkB,EAAAvH,YAAc7M,EAAOgT,cAAgB7T,YAEhD,IAAIvC,SAAUoD,EAAuB3J,aAAUgC,EAGlF4X,EAAwBmE,IAAkBxb,EAAOoH,GAAS,IAAA8f,kBAAiBlnB,EAAMunB,GAAe,GAGpG,GAAIxjB,GAAQsT,IAAWjQ,GAAUwP,IAAkBqO,EAClD,IAAK,IAAIhnB,EAAI,EAAG,EAASsY,EAAQC,EAAQvY,EAAI,EAAQA,IAAK,CACzD,IAAMupB,EAASvpB,EAAIgnB,EACbwC,EAASxpB,EAAI2Y,EACnB,GAAI6Q,GAAUF,EAAe,MAC7B,IAAK,IAAIzY,EAAI,EAAGA,EAAI8H,EAAe9H,IAEjCuI,EAAOoQ,EAAS3Y,GADb/K,GACkB,IAAAyE,YAAWzE,EAAM,GAAKyjB,EAAS1Y,IAAI,GAEnC1H,EAAOogB,EAAS1Y,GASzC,OAHIuI,EAAOhW,SAAWkmB,IACrBlQ,EAASA,EAAOtP,MAAM,EAAGwf,IAEnBlQ,EAEP,MAAM,IAAI/F,MAAM,yDAAkDM,EAAG0U,uBAAuB1U,EAAGiK,aAAY,OAa7G,YAAA0G,QAAA,SAAQtS,QAAA,IAAAA,MAAA,IAMP,IAAM7I,EAASvG,KAAK4V,YACd,EAA+C5V,KAA7C0V,EAAK,QAAEC,EAAM,SAAExW,EAAI,OAAEgP,EAAI,OAAE4H,EAAa,gBAC1CvP,EAAW4I,EAAO5I,UAAY,EAAAoH,OAC9B+T,EAAWvS,EAAOuS,UAAYxT,EAC9B0Y,EAAazX,EAAOyX,aACvB1nB,IAAS,EAAAkU,OAASlU,IAAS,EAAAiU,WAAc,IAAM,GAE5CtC,EAASxD,SAASY,cAAc,UACtC4C,EAAO4E,MAAQA,EACZ5E,EAAO6E,OAASA,EAKnB,IAJA,IAAM3E,EAAUF,EAAOK,WAAW,MAC5B2V,EAAY9V,EAAQ+V,aAAa,EAAG,EAAGrR,EAAOC,GAC9C/Y,EAASkqB,EAAU1mB,KAEhBuC,EAAI,EAAGA,EAAIgT,EAAQhT,IAC3B,IAAK,IAAID,EAAI,EAAGA,EAAIgT,EAAOhT,IAAK,CAG/B,IAFA,IAAMnC,EAAQoC,EAAI+S,EAAQhT,EACpBskB,GAAgBrR,EAAS,EAAIhT,GAAK+S,EAAQhT,EACvCtF,EAAI,EAAGA,EAAI2Y,EAAe3Y,IAClCR,EAAO,EAAIoqB,EAAe5pB,GAAKmJ,EAAOwP,EAAgBxV,EAAQnD,GAAKypB,EAE9C,IAAlB9Q,IAEHnZ,EAAO,EAAIoqB,EAAe,GAAKpqB,EAAO,EAAIoqB,GAC1CpqB,EAAO,EAAIoqB,EAAe,GAAKpqB,EAAO,EAAIoqB,IAEvCjR,EAAgB,IACnBnZ,EAAO,EAAIoqB,EAAe,GAAK,KAIlChW,EAAQiW,aAAaH,EAAW,EAAG,GAEnChW,EAAO8Q,QAAO,SAAClZ,GACTA,EAID0G,EAAOzG,KACV,IAAAF,eAAcC,EAAM0G,EAAOzG,KAAKkZ,MAAK,SAACnZ,GACrClC,EAASkC,EAAM,UAAGiZ,EAAQ,YAG3Bnb,EAASkC,EAAM,UAAGiZ,EAAQ,SAR1BnV,QAAQC,KAAK,4CAAqC0B,EAAI,8BAUrD,cAOJ,YAAA+Y,qBAAA,SAAqB1P,GACd,MAAgDxX,KAA9CkjB,EAAS,YAAE/M,EAAU,aAAEM,EAAY,eAAEtI,EAAI,OACzCiT,EAAc8B,EAAS,UAC/B,IAAK9B,EACJ,MAAM,IAAI3Q,MAAM,+CAIjB,GAAI0F,EAAa,EAChB,MAAM,IAAI1F,MAAM,oBAAatC,EAAI,oJAElC,IAAMgZ,EAA0B/F,EAAUgG,WAAWxmB,IAAI4W,GACzD2P,EAAwBE,eAAiB5Q,EACzC0Q,EAAwBG,aAAc,GAO/B,YAAAtB,gBAAR,WACO,IAAE9C,EAAwBljB,KAAf,UAAE8iB,EAAa9iB,KAAL,SACnB+Q,EAAOmS,EAAS,GACxBJ,EAAStS,SAAQ,SAAA5T,GACR,IAAAyoB,EAAyBzoB,EAAM,YAAlB4a,EAAY5a,EAAM,QACvCmU,EAAGwW,cAAc/P,GACb6N,GACHtU,EAAGyW,kBAAkBnC,UAGfzoB,EAAO4a,eACP5a,EAAOyoB,eAEfvC,EAAStiB,OAAS,SAIXR,KAAKilB,mBAQb,YAAApP,MAAA,SAAM1H,GAEL,OAAOnO,KAAKkjB,UAAU3N,eAAevV,KAAMmO,IAM5C,YAAAuU,QAAA,WACO,IAAEvU,EAAoBnO,KAAhB,KAAEkjB,EAAcljB,KAAL,UACf+Q,EAAuBmS,EAAS,GAIxC,GAJ+BA,EAAS,gBAEpB1W,QAAQiF,IAAI,iCAA0BtD,EAAI,QAEzD4C,EAAI,MAAM,IAAIN,MAAM,iFAEzBzQ,KAAKgmB,yBAEEhmB,KAAK8iB,gBAEL9iB,KAAKkjB,WAEd,EAv5BA,GAAa,EAAApN,Y,wVCnDb,aACA,SAIA,SAiCA,SAUA,SACA,SACA,SAGM2R,EAAU,CACfC,wBAAyB,GACzBC,kBAAmB,IAOpB,SAAgBtB,EACflnB,EACAqB,EACAonB,GAEA,YAFA,IAAAA,OAAA,GAEQzoB,GACP,KAAK,EAAAiU,WACJ,OAAIwU,EAA2B,IAAI7qB,aAAayD,GACzC,IAAIkF,YAAYlF,GACxB,KAAK,EAAA6S,MACJ,OAAO,IAAItW,aAAayD,GACzB,KAAK,EAAA8S,cACJ,OAAO,IAAIrR,WAAWzB,GACvB,KAAK,EAAAmT,KACJ,OAAO,IAAIkU,UAAUrnB,GACtB,KAAK,EAAA+S,eACJ,OAAO,IAAI7N,YAAYlF,GACxB,KAAK,EAAAoT,MACJ,OAAO,IAAIkU,WAAWtnB,GACvB,KAAK,EAAAgT,aACJ,OAAO,IAAIvW,YAAYuD,GACxB,KAAK,EAAAiT,IACJ,OAAO,IAAIpL,WAAW7H,GACvB,QACC,MAAM,IAAIiQ,MAAM,6BAAsBtR,EAAI,QAwH7C,SAAgB4oB,EACfjV,EACA3T,GAEQ,IAAA4R,EAAoB+B,EAAQ,GAEpC,OAF4BA,EAAQ,cAEhB,EAAAnB,SAAS,IAAAH,UAAST,MAS/B5R,IAAS,EAAAmU,eAAiBnU,IAAS,EAAAwU,MAAQxU,IAAS,EAAAyU,OAASzU,IAAS,EAAAsU,KAAOtU,IAAS,EAAAoU,gBAAkBpU,IAAS,EAAAqU,cAOzH,SAAgBoQ,EACfxU,GAQQ,IAGJ2U,EACHF,EACAC,EACAE,EANOlR,EAA0D1D,EAAM,SAAtDjB,EAAgDiB,EAAM,KAAhD2G,EAA0C3G,EAAM,cAAjCsU,EAA2BtU,EAAM,aAAnBlN,EAAakN,EAAM,SAChE2B,EAAoB+B,EAAQ,GAAxBpB,EAAgBoB,EAAQ,YAOpC,IAAI,IAAAtB,UAAST,GAAK,CAUjB,GATAiT,EAAgBjO,EAMM,IAAlBA,GAAuB7T,IAC1B8hB,EAAgB,GAEbN,IAAiB,EAAArQ,OAASqQ,IAAiB,EAAAtQ,WAC9C,OAAQ4Q,GACP,KAAK,EACJH,EAAY9S,EAA8BiX,IAC1C,MACD,KAAK,EACJnE,EAAY9S,EAA8BkX,GAC1C,MACD,KAAK,EACJpE,EAAW9S,EAAGmX,IACd,MACD,KAAK,EACJrE,EAAW9S,EAAGoG,KACd,MACD,QACC,MAAM,IAAI1G,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,YA4BnF,OAAQ6V,GACP,KAAK,EACJH,EAAY9S,EAA8BoX,YAC1C,MACD,KAAK,EACJtE,EAAY9S,EAA8BqX,WAC1C,MACD,KAAK,EACJvE,EAAY9S,EAA8BsX,YAC1C,MACD,KAAK,EACJxE,EAAY9S,EAA8BwV,aAC1C,MACD,QACC,MAAM,IAAI9V,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAGpF,OAAQuV,GACP,KAAK,EAAAtQ,WAEJ,OADA2Q,EAAUhT,EAA8BqC,WAChC4Q,GACP,KAAK,EACJF,EAAoB/S,EAA8BuX,KAClD,MACD,KAAK,EACJxE,EAAoB/S,EAA8BwX,MAClD,MACD,KAAK,EACJzE,EAAoB/S,EAA8ByX,OAClD,MACD,KAAK,EACJ1E,EAAoB/S,EAA8B0X,QAClD,MACD,QACC,MAAM,IAAIhY,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAEnF,MACD,KAAK,EAAAkF,MAEJ,OADA0Q,EAAUhT,EAA8BsC,MAChC2Q,GACP,KAAK,EACJF,EAAoB/S,EAA8B2X,KAClD,MACD,KAAK,EACJ5E,EAAoB/S,EAA8B4X,MAClD,MACD,KAAK,EACJ7E,EAAoB/S,EAA8B6X,OAClD,MACD,KAAK,EACJ9E,EAAoB/S,EAA8B8X,QAClD,MACD,QACC,MAAM,IAAIpY,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAEnF,MACD,KAAK,EAAAmF,cAEJ,GADAyQ,EAAShT,EAAGuC,cACR5B,IAAgB,EAAAE,OAAS8R,IAAiB,EAAApQ,cAC7CwQ,EAAmBD,OAEnB,OAAQG,GACP,KAAK,EACJF,EAAoB/S,EAA8B+X,KAClD,MACD,KAAK,EACJhF,EAAoB/S,EAA8BgY,MAClD,MACD,KAAK,EACJjF,EAAoB/S,EAA8BiY,OAClD,MACD,KAAK,EACJlF,EAAoB/S,EAA8BkY,QAClD,MACD,QACC,MAAM,IAAIxY,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAGpF,MACD,KAAK,EAAAwF,KAEJ,OADAoQ,EAAShT,EAAG4C,KACJqQ,GACP,KAAK,EACJF,EAAoB/S,EAA8BmY,IAClD,MACD,KAAK,EACJpF,EAAoB/S,EAA8BoY,KAClD,MACD,KAAK,EACJrF,EAAoB/S,EAA8BqY,MAClD,MACD,KAAK,EACJtF,EAAoB/S,EAA8BsY,OAClD,MACD,QACC,MAAM,IAAI5Y,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAEnF,MACD,KAAK,EAAAyF,MAEJ,OADAmQ,EAAShT,EAAG6C,MACJoQ,GACP,KAAK,EACJF,EAAoB/S,EAA8BuY,KAClD,MACD,KAAK,EACJxF,EAAoB/S,EAA8BwY,MAClD,MACD,KAAK,EACJzF,EAAoB/S,EAA8ByY,OAClD,MACD,KAAK,EACJ1F,EAAoB/S,EAA8B0Y,QAClD,MACD,QACC,MAAM,IAAIhZ,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAEnF,MACD,KAAK,EAAAoF,eAEJ,OADAwQ,EAAShT,EAAGwC,eACJyQ,GACP,KAAK,EACJF,EAAoB/S,EAA8B2Y,MAClD,MACD,KAAK,EACJ5F,EAAoB/S,EAA8B4Y,OAClD,MACD,KAAK,EACJ7F,EAAoB/S,EAA8B6Y,QAClD,MACD,KAAK,EACJ9F,EAAoB/S,EAA8B8Y,SAClD,MACD,QACC,MAAM,IAAIpZ,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAEnF,MACD,KAAK,EAAAsF,IAEJ,OADAsQ,EAAShT,EAAG0C,IACJuQ,GACP,KAAK,EACJF,EAAoB/S,EAA8B+Y,KAClD,MACD,KAAK,EACJhG,EAAoB/S,EAA8BgZ,MAClD,MACD,KAAK,EACJjG,EAAoB/S,EAA8BiZ,OAClD,MACD,KAAK,EACJlG,EAAoB/S,EAA8BkZ,QAClD,MACD,QACC,MAAM,IAAIxZ,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAEnF,MACD,KAAK,EAAAqF,aAEJ,OADAuQ,EAAShT,EAAGyC,aACJwQ,GACP,KAAK,EACJF,EAAoB/S,EAA8BmZ,MAClD,MACD,KAAK,EACJpG,EAAoB/S,EAA8BoZ,OAClD,MACD,KAAK,EACJrG,EAAoB/S,EAA8BqZ,QAClD,MACD,KAAK,EACJtG,EAAoB/S,EAA8BsZ,SAClD,MACD,QACC,MAAM,IAAI5Z,MAAM,qCAA8BuT,EAAa,0BAAkB7V,EAAI,OAEnF,MACD,QACC,MAAM,IAAIsC,MAAM,6BAAsBiT,EAAY,2BAAmBvV,EAAI,YAErE,CAQN,OANA6V,EAAgBjO,EACZ7T,IAEH8hB,EAAgB,GAGTA,GACP,KAAK,EACL,KAAK,EACL,KAAK,EACJH,EAAW9S,EAAGmX,IACdpE,EAAmB/S,EAAGmX,IACtBlE,EAAgB,EAChB,MACD,KAAK,EACJH,EAAW9S,EAAGoG,KACd2M,EAAmB/S,EAAGoG,KACtB6M,EAAgB,EAChB,MACD,QACC,MAAM,IAAIvT,MAAM,qCAA8BsF,EAAa,0BAAkB5H,EAAI,OAEnF,OAAQuV,GACP,KAAK,EAAArQ,MACJ0Q,EAAShT,EAAGsC,MACZ,MACD,KAAK,EAAAD,WACJ2Q,EAAUhT,EAA8BqC,aAAc,IAAAkX,cAAaxX,EAAU,EAAAyX,wBAAwBC,eACrG,MACD,KAAK,EAAAlX,cACJyQ,EAAShT,EAAGuC,cACZ,MAED,QACC,MAAM,IAAI7C,MAAM,6BAAsBiT,EAAY,wCAAgCvV,EAAI,QAKzF,QAAevP,IAAXmlB,QAAqCnlB,IAAbilB,QAA+CjlB,IAArBklB,EAAgC,CACrF,IAAM2G,EAAgB,GAItB,WAHe7rB,IAAXmlB,GAAsB0G,EAAcvpB,KAAK,eAC5BtC,IAAbilB,GAAwB4G,EAAcvpB,KAAK,iBACtBtC,IAArBklB,GAAgC2G,EAAcvpB,KAAK,oBACjD,IAAIuP,MAAM,wBAAiBiT,EAAY,+BAAuB3N,EAAa,qCAA6B0U,EAAcjqB,OAAS,EAAI,IAAM,GAAE,YAAIiqB,EAAcpjB,KAAK,MAAK,0BAAkB8G,EAAI,OAEpM,QAAsBvP,IAAlBolB,GAA+BjO,EAAgB,GAAKA,EAAgB,GAAKiO,EAAgBjO,EAC5F,MAAM,IAAItF,MAAM,+BAAwBuT,EAAa,+BAAuBjO,EAAa,0BAAkB5H,EAAI,OAGhH,MAAO,CACN0V,SAAQ,EACRC,iBAAgB,EAChBC,OAAM,EACNC,cAAa,GAQf,SAAgB0G,EACf5X,EACA4Q,GAEQ,IAAA3S,EAAoB+B,EAAQ,GAAxBpB,EAAgBoB,EAAQ,YAG9B/S,EAAM,WAAG,IAAAyR,UAAST,GAAG,YAAI2S,EAAY,YAAIhS,IAAgB,EAAAC,MAAQ,IAAM,KAC7E,QAA6C/S,IAAzC6oB,EAAQC,wBAAwB3nB,GACnC,OAAO0nB,EAAQC,wBAAwB3nB,GAGxC,IAAMyX,EAAUzG,EAAG0G,gBACnB,IAAKD,EAEJ,OADAiQ,EAAQC,wBAAwB3nB,IAAO,EAChC0nB,EAAQC,wBAAwB3nB,GAExCgR,EAAG2G,YAAY3G,EAAG4G,WAAYH,GAG9B,IAAMmN,EAAO5T,EAAG,EAAAiG,eACVhB,EAASjF,EAAG,EAAA8F,SAKlB9F,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGsH,eAAgBsM,GACnD5T,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGuH,eAAgBqM,GACnD5T,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGwH,mBAAoBvC,GACvDjF,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGyH,mBAAoBxC,GAEjD,MAAyC4N,EAAuB,CACrE9Q,SAAQ,EACR3E,KAAM,4BACN4H,cAAe,EACf7T,UAAU,EACVwhB,aAAY,IALLI,EAAgB,mBAAED,EAAQ,WAAEE,EAAM,SAO1ChT,EAAGiH,WAAWjH,EAAG4G,WAAY,EAAGmM,EAdlB,GACC,GAakD,EAAGD,EAAUE,EAAQ,MAGtF,IAAMsB,EAActU,EAAGuU,oBACvB,IAAKD,EAIJ,OAFAtU,EAAGwW,cAAc/P,GACjBiQ,EAAQC,wBAAwB3nB,IAAO,EAChC0nB,EAAQC,wBAAwB3nB,GAExCgR,EAAGgK,gBAAgBhK,EAAGiK,YAAaqK,GAEnCtU,EAAGwU,qBAAqBxU,EAAGiK,YAAajK,EAAGyU,kBAAmBzU,EAAG4G,WAAYH,EAAS,GAEtF,IAAMmT,EAAc5Z,EAAG0U,uBAAuB1U,EAAGiK,eAAiBjK,EAAG2U,qBAOrE,OAJA3U,EAAGwW,cAAc/P,GACjBzG,EAAGyW,kBAAkBnC,GAErBoC,EAAQC,wBAAwB3nB,GAAO4qB,EAChClD,EAAQC,wBAAwB3nB,GAUxC,SAAgB6qB,EACf9X,EACA4Q,EACA1N,EACA2O,G,MAEQ5T,EAAoB+B,EAAQ,GAAxBpB,EAAgBoB,EAAQ,YAG9B/S,EAAM,WAAG,IAAAyR,UAAST,GAAG,YAAI2S,EAAY,YAAI1N,EAAM,YAAI2O,EAAI,YAAIjT,IAAgB,EAAAC,MAAQ,IAAM,KAC/F,QAAuC/S,IAAnC6oB,EAAQE,kBAAkB5nB,GAC7B,OAAO0nB,EAAQE,kBAAkB5nB,GAGlC,IAAMyX,EAAUzG,EAAG0G,gBACnB,IAAKD,EAEJ,OADAiQ,EAAQE,kBAAkB5nB,IAAO,EAC1B0nB,EAAQE,kBAAkB5nB,GAElCgR,EAAG2G,YAAY3G,EAAG4G,WAAYH,GAE9B,IAAMqT,EAAS9Z,EAAG4T,GACZmG,EAAW/Z,EAAGiF,GAKpBjF,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGsH,eAAgBwS,GACnD9Z,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGuH,eAAgBuS,GACnD9Z,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGwH,mBAAoBuS,GACvD/Z,EAAGqH,cAAcrH,EAAG4G,WAAY5G,EAAGyH,mBAAoBsS,GAYvD,IAVM,MAAwDlH,EAAuB,CACpF9Q,SAAQ,EACR3E,KAAM,2BACN4H,cATqB,EAUrB2N,aAAY,EACZxhB,UAAU,IALH4hB,EAAgB,mBAAED,EAAQ,WAAEE,EAAM,SAAEC,EAAa,gBAQnDzd,EAAS,CAAC,EAAG,KAAM,KAAM,KAAM,KAAO,KAAM,GAAI,KAAM,IACxDwkB,EAAc1E,EAAiB3C,EAAcnd,EAAO/F,OAASwjB,GAAe,GACvE5mB,EAAI,EAAGA,EAAImJ,EAAO/F,OAAQpD,IAClC2tB,EAAY3tB,EAAI4mB,GAAiBzd,EAAOnJ,GACxCmJ,EAAOnJ,GAAK2tB,EAAY3tB,EAAI4mB,GAE7B,GAAIN,IAAiB,EAAAtQ,WAAY,CAEhC,IAAM4X,EAAgB,IAAItlB,YAAYqlB,EAAYvqB,QAC5C8lB,EAAe,IAAInjB,SAAS6nB,EAAcpuB,QAChD,IAASQ,EAAI,EAAGA,EAAI2tB,EAAYvqB,OAAQpD,KACvC,IAAA0K,YAAWwe,EAAa,EAAIlpB,EAAG2tB,EAAY3tB,IAAI,GAEhD2tB,EAAcC,EAEfja,EAAGiH,WAAWjH,EAAG4G,WAAY,EAAGmM,EA/BlB,EACC,EA8BkD,EAAGD,EAAUE,EAAQgH,GAItF,IAAMvU,EAAS,IAAI,EAAAV,SAAShD,EAAU,CACrC3E,KAAM,kCACNhP,KAAMukB,EACN3N,cApCqB,EAqCrBN,WAAY,CAvCC,EACC,GAuCdQ,MAAO,EAAAe,cACPd,MAAO,EAAAc,cACPhB,OAAQ,EAAAa,QACR3U,UAAU,IAGLyE,EAASqP,IAAW,EAAAuN,OAAS,GAAM,EAEnCzP,EAAU,IAAI,EAAAC,WAAWjB,EAAU,CACxC3E,KAAM,2BACN6F,eAAgB,wdAkBhBC,SAAU,CACT,CACC9F,KAAM,WACNtP,MAAO,CAAC8H,EAvEG,EAuEaA,EAtEZ,GAuEZxH,KAAM,EAAAkU,QAGRvD,SAAO,KACN,GAAC,IAAAmb,mBAAkBvH,GAAgB,cAAgB,IAAAwH,WAAUxH,GAAgB,YAAa,eAAiB,I,KAI7G5Q,EAASR,OAhFK,EACC,GAgFfQ,EAASuD,KAAK,CACbvC,QAAO,EACPnO,MAAO6R,EACPhB,OAAM,IAGP,IAAM2U,EAAW3U,EAAOZ,YACpBwV,GAAY,EACVC,GAAM,IAAAH,WAAUxH,GAAgB,EAAKA,IAAiB,EAAAtQ,WAAa,IAAO,KAChF,SAASkY,EAAUjlB,EAAaklB,GAC/B,OAAI5G,IAAS,EAAA3N,cAAsBzU,KAAKgpB,IAAI,EAAGhpB,KAAKipB,IAAID,EAAM,EAAGllB,KACzDA,EAAMklB,GAAOA,EAEtB,IAAK,IAAI7oB,EAAI,EAAGA,EA9FF,EA8FaA,IAC1B,IAAK,IAAIC,EAAI,EAAGA,EA9FF,EA8FcA,IAAK,CAChC,IAAI8oB,OAAQ,EACZ,GAAIzV,IAAW,EAAAuN,OACdkI,GAAYllB,EAlGD,EAkGQ5D,EAAYD,GAC9B6D,EAnGU,EAmGH5D,EAAY2oB,EAAU5oB,EAAI,EAnGvB,IAoGV6D,EApGU,EAoGH+kB,EAAU3oB,EAAI,EAnGV,GAmG+BD,GAC1C6D,EArGU,EAqGH+kB,EAAU3oB,EAAI,EApGV,GAoG+B2oB,EAAU5oB,EAAI,EArG9C,KAqG4D,MACjE,CACN,IAAMgpB,EAAKJ,EAAU5oB,EAAIiE,EAvGd,GAyGX8kB,EAAWllB,EAzGA,EAwGA+kB,EAAU3oB,EAAIgE,EAvGb,GAwGmB+kB,GAE1BtuB,EA3GM,EA2GFuF,EAAYD,EACtB,GAAIH,KAAKsc,KAAK4M,EAAWN,EAAS/tB,IAAMquB,GAAYJ,EAAK,CACxDD,GAAY,EACZ,OAWH,OALAtX,EAAQ4O,UACRlM,EAAOkM,UACP3R,EAAGwW,cAAc/P,GAEjBiQ,EAAQE,kBAAkB5nB,GAAOqrB,EAC1B3D,EAAQE,kBAAkB5nB,GA2GlC,SAAgB4rB,EAAoBxsB,GAEnC,IAAIqsB,GAAOI,IACPL,EAAMK,IACV,OAAOzsB,GAEN,KAAK,EAAAmU,cACJkY,EAAM,EAAAK,kBACNN,EAAM,EAAAO,kBACN,MACD,KAAK,EAAAnY,KACJ6X,EAAM,EAAAO,SACNR,EAAM,EAAAS,SACN,MACD,KAAK,EAAAzY,eACJiY,EAAM,EAAAS,mBACNV,EAAM,EAAAW,mBACN,MACD,KAAK,EAAAtY,MACJ4X,EAAM,EAAAW,UACNZ,EAAM,EAAAa,UACN,MACD,KAAK,EAAA5Y,aACJgY,EAAM,EAAAa,iBACNd,EAAM,EAAAe,iBACN,MACD,KAAK,EAAA7Y,IACJ+X,EAAM,EAAAe,QACNhB,EAAM,EAAAiB,QAGR,MAAO,CACNhB,IAAG,EAAED,IAAG,GA9zBV,qBAmCA,4BACCrrB,EACAiO,EACAkC,GAEA,IAAI,IAAA6V,UAAShmB,GAAiB,CAC7B,KAAK,IAAAijB,mBAAkBjjB,GACtB,MAAM,IAAIuQ,MAAM,0BAAmBuS,KAAKC,UAAU/iB,GAAK,0BAAkBiO,EAAI,iCAM9E,IAJA,IAAM,EAASjO,EAEXusB,EAAM,EACNC,EAAY,EACTA,EAAY,GAClBD,IACAC,GAAa,EAEd,IAAM,EAAQnqB,KAAKoqB,IAAI,EAAGpqB,KAAKwe,MAAM0L,EAAM,GAAKA,EAAM,GAChD,EAASlqB,KAAKoqB,IAAI,EAAGpqB,KAAKwe,MAAM0L,EAAI,IAE1C,OADIpc,GAAgB7D,QAAQiF,IAAI,iBAAU,EAAK,aAAK,EAAM,oCAA4BvR,EAAI,yBAAiBiO,EAAI,OACxG,CAAEuH,MAAK,EAAEC,OAAM,EAAEnV,OAAM,GAE/B,IAAMkV,EAASxV,EAA0B,GACzC,KAAK,IAAAijB,mBAAkBzN,GACtB,MAAM,IAAIjF,MAAM,yBAAkBuS,KAAKC,UAAUvN,GAAM,0BAAkBvH,EAAI,iCAE9E,IAAMwH,EAAUzV,EAA0B,GAC1C,KAAK,IAAAijB,mBAAkBxN,GACtB,MAAM,IAAIlF,MAAM,0BAAmBuS,KAAKC,UAAUtN,GAAO,0BAAkBxH,EAAI,iCAEhF,MAAO,CAAEuH,MAAK,EAAEC,OAAM,IAOvB,mCACCvG,GAQQ,IAAA0D,EAAiD1D,EAAM,SAA7CuV,EAAuCvV,EAAM,KAAvCiV,EAAiCjV,EAAM,eAAvBsU,EAAiBtU,EAAM,aAG/D,OAAIuV,IAAS,EAAA3N,eAKT4T,EAAe9X,EAAU4Q,EAAcW,EAAgBM,GAJnDA,EAQD,EAAA3N,eAeR,qCACC5H,GAOQ,IAAA0D,EAAiC1D,EAAM,SAA7BsU,EAAuBtU,EAAM,aAAfjB,EAASiB,EAAM,KACzC4G,EAAW5G,EAAM,OACvB,OAAI4G,IAAW,EAAAa,UAKX6M,IAAiB,EAAAtQ,eACF,IAAAkX,cAAaxX,EAAU,EAAA8Z,+BAA+B,KACpE,IAAAtC,cAAaxX,EAAU,EAAA+Z,0BAA0B,KAClCjC,EAAe9X,EAAU4Q,EAAc,EAAAH,OAAQ,EAAAvM,iBACjExK,QAAQC,KAAK,uDAAgD0B,EAAI,OACjE6H,EAAS,EAAAa,UAEL6M,IAAiB,EAAArQ,SACJ,IAAAiX,cAAaxX,EAAU,EAAA+Z,0BAA0B,IAChDjC,EAAe9X,EAAU4Q,EAAc,EAAAH,OAAQ,EAAAvM,iBACjExK,QAAQC,KAAK,uDAAgD0B,EAAI,OACjE6H,EAAS,EAAAa,WAdHb,GAwBT,6BAsBA,2BAuTA,8BAqEA,mBAyJA,mCACC5G,GAOQ,IAAA0D,EAA6B1D,EAAM,SAAzBlN,EAAmBkN,EAAM,SAAfjB,EAASiB,EAAM,KACnC2B,EAAuB+B,EAAQ,GAA3BpC,EAAmBoC,EAAQ,eAC/B3T,EAASiQ,EAAM,KACnBsU,EAAevkB,EAkBnB,GAhBgB4oB,EAAyBjV,EAAU3T,KAE9CukB,IAAiB,EAAApQ,eAAiBoQ,IAAiB,EAAA/P,KAEtD+P,EAAe,EAAAtQ,YAKf5G,QAAQC,KAAK,uBAAgBiX,EAAY,iEAAyDvV,EAAI,+LAEtGuV,EAAe,EAAArQ,SAKZ,IAAA7B,UAAST,IA+BP,GAAI7O,EAAU,CAEpB,GAAIwhB,IAAiB,EAAArQ,MAEpB,IADkB,IAAAiX,cAAaxX,EAAU,EAAAga,wBAAwB,GAMlDpC,EAA0B5X,EAAU4Q,KAEjDlX,QAAQC,KAAK,oGAA6F0B,EAAI,OAC9GuV,EAAe,EAAAtQ,iBAPhB5G,QAAQC,KAAK,6EAAsE0B,EAAI,OACvFuV,EAAe,EAAAtQ,WAUjB,GAAIsQ,IAAiB,EAAAtQ,YAGC,IAAAkX,cAAaxX,EAAU,EAAAia,6BAA6B,KAIxE,IAAAzC,cAAaxX,EAAU,EAAAga,wBAGVpC,EAA0B5X,EAAU4Q,IAEjDhT,EAAe,wEA3DC,CAClB,GAAIgT,IAAiB,EAAArQ,MAGpB,IADkB,IAAAiX,cAAaxX,EAAU,EAAAka,mBAAmB,IAQrD,GAAI9qB,EAAU,CACNwoB,EAA0B5X,EAAU4Q,KAEjDlX,QAAQC,KAAK,oGAA6F0B,EAAI,OAC9GuV,EAAe,EAAAtQ,kBAVhB5G,QAAQC,KAAK,6EAAsE0B,EAAI,OACvFuV,EAAe,EAAAtQ,WAcjB,GAAIsQ,IAAiB,EAAAtQ,WAIpB,IAFA,IAAAkX,cAAaxX,EAAU,EAAAyX,wBAEnBroB,EACWwoB,EAA0B5X,EAAU4Q,IAEjDhT,EAAe,mEAoCnB,OAAOgT,GAOR,wBAwCA,iCAAsC5iB,EAAiC2Y,GAC9D,IAAA1D,EAAuC0D,EAAK,cAA7B/D,EAAwB+D,EAAK,MAAtB9D,EAAiB8D,EAAK,OAAdtL,EAASsL,EAAK,KAC9CuK,EAAgBvK,EAAM2K,eACtBV,EAAejK,EAAMkB,cACrBna,EAASiZ,EAAMuL,OAASvL,EAAMjZ,OAAS,KAG7C,GAAIM,EAAMN,SAAWkV,EAAQC,EAASI,KAChCvV,GAAWA,GAAWM,EAAMN,SAAWA,EAASuV,GACpD,MAAM,IAAItF,MAAM,+BAAwB3P,EAAMN,OAAM,0BAAkB2N,EAAI,gBAAQ3N,EAAS,iBAAUA,EAAM,SAAU,GAAE,wBAAgBkV,EAAK,aAAKC,EAAM,gCAAwBI,EAAa,MAM9L,IAAIkX,GAAiB,EACrB,OAAOnsB,EAAMyY,aACZ,KAAKvY,MACJisB,GAAiB,EACjB,MACD,KAAKlwB,aACJkwB,EAAiBvJ,IAAiB,EAAArQ,MAClC,MACD,KAAKpR,WACJgrB,EAAiBvJ,IAAiB,EAAApQ,cAClC,MACD,KAAKuU,UACJoF,EAAiBvJ,IAAiB,EAAA/P,KAClC,MACD,KAAKjO,YASHunB,EAAiBvJ,IAAiB,EAAAnQ,eAEnC,MACD,KAAKuU,WACJmF,EAAiBvJ,IAAiB,EAAA9P,MAClC,MACD,KAAK3W,YACJgwB,EAAiBvJ,IAAiB,EAAAlQ,aAClC,MACD,KAAKnL,WACJ4kB,EAAiBvJ,IAAiB,EAAAjQ,IAClC,MACD,QACC,MAAM,IAAIhD,MAAM,8BAAuB3P,EAAMyY,YAAYpL,KAAI,0BAAkBA,EAAI,iCAAyB,EAAA+e,gBAAgB9rB,KAAI,SAAAmY,GAAe,OAAAA,EAAYpL,QAAM9G,KAAK,MAAK,OAIvK,MAAeskB,EAAoBjI,GAAjC8H,EAAG,MAAED,EAAG,MAIV4B,EAAczX,EAAQC,EAASqO,EAC/BoJ,EAAetsB,EAAMN,SAAW2sB,EAElCjI,EAAiBpkB,EACrB,GAAImsB,GAAkBG,EAAc,CACnClI,EAAiBmB,EAAiB3C,EAAcyJ,GAIhD,IADA,IAAMjqB,EAAQwgB,IAAiB,EAAAtQ,YAAc6Z,EAAkB,IAAI9pB,SAAS+hB,EAAetoB,QAAU,KAC5FQ,EAAI,EAAGiwB,EAAOvsB,EAAMN,OAASuV,EAAe3Y,EAAIiwB,EAAMjwB,IAC9D,IAAK,IAAI6Q,EAAI,EAAGA,EAAI8H,EAAe9H,IAAK,CACvC,IAAMqf,EAAYxsB,EAAM1D,EAAI2Y,EAAgB9H,GACxCpP,EAAQyuB,EACRC,GAAU,EACV1uB,EAAQ2sB,GACX3sB,EAAQ2sB,EACR+B,GAAU,GACA1uB,EAAQ0sB,IAClB1sB,EAAQ0sB,EACRgC,GAAU,GAEPA,GACH/gB,QAAQC,KAAK,sCAA+B6gB,EAAS,eAAOzuB,EAAK,0BAAkBsP,EAAI,gCAAwBuV,EAAY,MAE5H,IAAMnjB,EAAQnD,EAAI4mB,EAAgB/V,EAC9B/K,GACH,IAAA4E,YAAW5E,EAAM,EAAI3C,EAAO1B,GAAO,GAEnCqmB,EAAe3kB,GAAS1B,GAM5B,OAAOqmB,I,gGCh+BR,aASA,SAkCA,SAOA,aAiCC,WACCpS,EACA1D,GApBgB,KAAAoe,SAA4B,GAE5B,KAAAC,UAAyC,GAKzC,KAAAC,UAA8D,GAuBtE,IAAAvf,GAAUiB,GAAU,IAAG,KAC/B,IAAK0D,EACJ,MAAM,IAAIrC,MAAM,oCAA6BtC,EAAI,uEAElD,IAAKiB,EACJ,MAAM,IAAIqB,MAAM,+EAEjB,KAAK,IAAAsS,UAAS3T,GACb,MAAM,IAAIqB,MAAM,uGAAgGuS,KAAKC,UAAU7T,GAAO,MAGvI,IAAMmB,EAAY,CAAC,OAAQ,iBAAkB,WAAY,WAEnDjK,EAAOnI,OAAOmI,KAAK8I,GACzB9I,EAAKkK,SAAQ,SAAAzQ,GACZ,GAAIwQ,EAAUtG,QAAQlK,GAAO,EAC5B,MAAM,IAAI0Q,MAAM,8BAAuB1Q,EAAG,+DAAuDoO,EAAI,8BAAsB6U,KAAKC,UAAU1S,GAAU,SAJjI,CAAC,OAAQ,kBAQjBC,SAAQ,SAAAzQ,GACpB,GAAIuG,EAAK2D,QAAQlK,GAAO,EACvB,MAAM,IAAI0Q,MAAM,+BAAwB1Q,EAAG,uEAA+DoO,EAAI,UAIxG,IAAA6F,EAAsC5E,EAAM,eAA5B6E,EAAsB7E,EAAM,SAAlBU,EAAYV,EAAM,QAGpDpP,KAAKkjB,UAAYpQ,EACjB9S,KAAKmO,KAAOA,EAGZ,IAAMwf,GAAuB,IAAA/W,UAAS5C,GACrCA,EACCA,EAA4B3M,KAAK,MAOnC,GANArH,KAAK4tB,uBAAwB,IAAAC,0BAC5BF,EAAsB7a,EAASpB,YAAavD,GAE7CnO,KAAK8tB,SAAShe,GAGVmE,EACH,IAAK,IAAI7W,EAAI,EAAGA,EAAI6W,EAASzT,OAAQpD,IAAK,CACnC,MAAwB6W,EAAS7W,GAA/B,EAAI,OAAEyB,EAAK,QAAEM,EAAI,OACzBa,KAAK2f,WAAW,EAAM9gB,EAAOM,IAiZjC,OAvYS,YAAA2uB,SAAR,SAAiBhe,GACV,MAAwE9P,KAAtEkjB,EAAS,YAAE/U,EAAI,OAAEyf,EAAqB,wBAAEG,EAAe,kBAAEP,EAAQ,WAExEzc,EAMGmS,EAAS,GALZxS,EAKGwS,EAAS,eAJZ7S,EAIG6S,EAAS,eAHZxR,EAGGwR,EAAS,YAFZnR,EAEGmR,EAAS,eADZrR,EACGqR,EAAS,aAIT8K,GAAoB,EACxB,GAAIle,EAEH,IADA,IAAMxJ,EAAOnI,OAAOmI,KAAKwJ,GAChB1S,EAAI,EAAGA,EAAIkJ,EAAK9F,OAAQpD,IAAK,CACrC,IAAM2C,EAAMuG,EAAKlJ,GACbowB,EAASztB,KAAS+P,EAAQ/P,KAC7BiuB,GAAoB,EACpBR,EAASztB,GAAO+P,EAAQ/P,IAK3B,IAAIguB,GAAoBC,EAAxB,CAKI3d,GAAgB7D,QAAQiF,IAAI,oDAA6CtD,EAAI,2BAAmB6U,KAAKC,UAAUuK,KACnH,IAAM3U,GAAS,IAAAG,eACdjI,EACAW,EACAG,EACAE,EACA6b,EACA7c,EAAGkd,gBACH9f,EACAuC,EACA8c,GAEI3U,EAIL7Y,KAAK+tB,gBAAkBlV,EAHtBnI,EAAe,4DAAqDvC,EAAI,SAYlE,YAAA+f,oBAAR,SAA4B/f,GAE3B,GAAInO,KAAK0tB,UAAUvf,GAAO,OAAOnO,KAAK0tB,UAAUvf,GAG1C,MAAuDnO,KAArDkjB,EAAS,YAAEuK,EAAS,YAAEM,EAAe,kBAAEL,EAAS,YAChD3c,EAAuBmS,EAAS,GAA5BxS,EAAmBwS,EAAS,eAElCtK,EAAesK,EAAUxK,yBAAyBvK,EAAMnO,KAAKmO,MACnE,QAAqBvP,IAAjBga,EAAJ,CAKA,IAAM9E,GAAU,IAAAqa,eAAcpd,EAAI6H,EAAcmV,EAAiB/tB,KAAKmO,KAAMuC,GAC5E,QAAgB9R,IAAZkV,EAAJ,CAOA,IADA,IAAMsa,EAAejwB,OAAOmI,KAAKmnB,GACxBrwB,EAAI,EAAGA,EAAIgxB,EAAa5tB,OAAQpD,IAAK,CAC7C,IAAMixB,EAAcD,EAAahxB,GAC3BkxB,EAAUb,EAAUY,GAClBxvB,EAAgByvB,EAAO,MAAhBnvB,EAASmvB,EAAO,KAC/BtuB,KAAKuuB,mBAAmBza,EAAS3F,EAAMkgB,EAAaxvB,EAAOM,GAI5D,OADAuuB,EAAUvf,GAAQ2F,EACXA,EAdNpD,EAAe,kCAA2BvC,EAAI,6BAAqBnO,KAAKmO,KAAI,YAN5EuC,EAAe,wCAAiCvC,EAAI,6BAAqBnO,KAAKmO,KAAI,QAyBpF,sBAAI,8BAAe,C,IAAnB,WACC,OAAOnO,KAAKkuB,oBAAoB,EAAAte,uB,gCAKjC,sBAAI,oCAAqB,C,IAAzB,WACC,OAAO5P,KAAKkuB,oBAAoB,EAAAre,4B,gCAKjC,sBAAI,wCAAyB,C,IAA7B,WACC,OAAO7P,KAAKkuB,oBAAoB,EAAAne,gC,gCAKjC,sBAAI,0CAA2B,C,IAA/B,WACC,OAAO/P,KAAKkuB,oBAAoB,EAAAle,mC,gCAKjC,sBAAI,8BAAe,C,IAAnB,WACC,OAAOhQ,KAAKkuB,oBAAoB,EAAAje,uB,gCAKjC,sBAAI,kCAAmB,C,IAAvB,WACC,OAAOjQ,KAAKkuB,oBAAoB,EAAAhe,4B,gCAKjC,sBAAI,uCAAwB,C,IAA5B,WACC,OAAOlQ,KAAKkuB,oBAAoB,EAAA/d,kC,gCAKjC,sBAAI,iCAAkB,C,IAAtB,WACC,OAAOnQ,KAAKkuB,oBAAoB,EAAA9d,2B,gCAOzB,YAAAme,mBAAR,SACCza,EACA6E,EACA0V,EACAxvB,EACAM,G,MAEQ+jB,EAAyBljB,KAAhB,UAAEytB,EAAcztB,KAAL,UACpB+Q,EAAoCmS,EAAS,GAAzCxS,EAAgCwS,EAAS,eAAzBxR,EAAgBwR,EAAS,YAErDnS,EAAG4I,WAAW7F,GAEd,IAAM0a,EAAU9c,IAAgB,EAAAC,MAE5BnD,EAAiC,QAAtB,EAAAif,EAAUY,UAAY,eAAE7f,SAASmK,GAEhD,QAAiB/Z,IAAb4P,EAAwB,CAC3B,IAAMigB,EAAY1d,EAAG2d,mBAAmB5a,EAASua,GACjD,IAAKI,EAEJ,YADA/d,EAAe,kCAA2B2d,EAAW,0BAAkBruB,KAAKmO,KAAI,iKAAyJhP,EAAI,yBAAiB4R,EAAGqU,WAAU,MAG5Q5W,EAAWigB,EAEPhB,EAAUY,KACbZ,EAAUY,GAAa7f,SAASmK,GAAenK,GAKhD,IAAM8f,EAAUvd,EAAG4d,WAAW7a,EAAStF,GACnCogB,GAAU,EAwBd,GAvBIzvB,IAAS,EAAA0vB,iBAAmB1vB,IAAS,EAAA2vB,iBAAmB3vB,IAAS,EAAA4vB,iBAAmB5vB,IAAS,EAAA6vB,iBAC3F,IAAAC,WAAUX,IAAYA,EAAQ/U,cAAgBvY,QAClD4tB,GAAU,GAGRzvB,IAAS,EAAA+vB,kBAAoB/vB,IAAS,EAAAgwB,kBAAoBhwB,IAAS,EAAAiwB,kBAAoBjwB,IAAS,EAAAkwB,kBAC9F,IAAAnJ,UAASoI,IAAYA,EAAQ/U,cAAgBxc,eACjD6xB,GAAU,GAEDzvB,IAAS,EAAAmwB,gBAAkBnwB,IAAS,EAAAowB,gBAAkBpwB,IAAS,EAAAqwB,gBAAkBrwB,IAAS,EAAAswB,gBAC/F,IAAAC,WAAUpB,IAAYA,EAAQ/U,cAAgBlR,aAClDumB,GAAU,GAEDzvB,IAAS,EAAAwwB,iBAAmBxwB,IAAS,EAAAywB,iBAAmBzwB,IAAS,EAAA0wB,iBAAmB1wB,IAAS,EAAA2wB,kBAClGtB,GAKO,IAAAuB,sBAAqBzB,IAAYA,EAAQ/U,cAAgBtc,cACpE2xB,GAAU,IAJL,IAAAmB,sBAAqBzB,IAAYA,EAAQ/U,cAAgBlR,aAC7DumB,GAAU,IAMTA,EAEH,YADAle,EAAe,2BAAoB2d,EAAW,0BAAkBruB,KAAKmO,KAAI,kEAA0DhP,EAAI,6DAAqDmvB,EAAQ/U,YAAYpL,KAAI,MAOtN,OAAQhP,GAIP,KAAK,EAAA0vB,gBACJ9d,EAAGif,UAAUxhB,EAAU3P,EAAQ,EAAI,GACnC,MACD,KAAK,EAAAiwB,gBACJ/d,EAAGkf,UAAUzhB,EAAW3P,EAAmB,GAAK,EAAI,EAAIA,EAAmB,GAAK,EAAI,GACpF,MACD,KAAK,EAAAkwB,gBACJhe,EAAGmf,UAAU1hB,EAAW3P,EAAmB,GAAK,EAAI,EAAIA,EAAmB,GAAK,EAAI,EAAIA,EAAmB,GAAK,EAAI,GACpH,MACD,KAAK,EAAAmwB,gBACJje,EAAGof,UAAU3hB,EAAW3P,EAAmB,GAAK,EAAI,EAAIA,EAAmB,GAAK,EAAI,EAAIA,EAAmB,GAAK,EAAI,EAAIA,EAAmB,GAAK,EAAI,GACpJ,MACD,KAAK,EAAAqwB,iBACJne,EAAGqf,UAAU5hB,EAAU3P,GACvB,MACD,KAAK,EAAAswB,iBACJpe,EAAGsf,WAAW7hB,EAAU3P,GACxB,MACD,KAAK,EAAAuwB,iBACJre,EAAGuf,WAAW9hB,EAAU3P,GACxB,MACD,KAAK,EAAAwwB,iBACJte,EAAGwf,WAAW/hB,EAAU3P,GACxB,MACD,KAAK,EAAAywB,eACJve,EAAGif,UAAUxhB,EAAU3P,GACvB,MACD,KAAK,EAAA0wB,eACJxe,EAAGyf,WAAWhiB,EAAU3P,GACxB,MACD,KAAK,EAAA2wB,eACJze,EAAG0f,WAAWjiB,EAAU3P,GACxB,MACD,KAAK,EAAA4wB,eACJ1e,EAAG2f,WAAWliB,EAAU3P,GACxB,MAED,KAAK,EAAA8wB,gBACAnB,EAAUzd,EAA8B4f,WAAWniB,EAAU3P,GAC5DkS,EAAGif,UAAUxhB,EAAU3P,GAC5B,MACD,KAAK,EAAA+wB,gBACApB,EAAUzd,EAA8B6f,YAAYpiB,EAAU3P,GAC7DkS,EAAGyf,WAAWhiB,EAAU3P,GAC7B,MACD,KAAK,EAAAgxB,gBACArB,EAAUzd,EAA8B8f,YAAYriB,EAAU3P,GAC7DkS,EAAG0f,WAAWjiB,EAAU3P,GAC7B,MACD,KAAK,EAAAixB,gBACAtB,EAAUzd,EAA8B+f,YAAYtiB,EAAU3P,GAC7DkS,EAAG2f,WAAWliB,EAAU3P,GAC7B,MACD,QACC,MAAM,IAAI4R,MAAM,+BAAwBtR,EAAI,4BAAoBa,KAAKmO,KAAI,SAU5E,YAAAwR,WAAA,SACCxR,EACAtP,EACAM,G,MAEM,EAAsCa,KAApC0tB,EAAS,YAAED,EAAS,YACpBpd,EAD+B,YACH,eAGpC,IAAI,IAAA9E,SAAQ1M,IACKA,EAAmB2B,OACtB,EAAG,MAAM,IAAIiQ,MAAM,kCAA4B5R,EAAmBwI,KAAK,MAAK,mCAA2BrH,KAAKmO,KAAI,+EAG9H,IAAI4iB,EAA6B,QAAf,EAAAtD,EAAUtf,UAAK,eAAEhP,KACnC,GAAIA,EAAM,CACT,IAAMukB,GAAe,IAAAsN,6BAA4BnyB,EAAOM,EAAMgP,EAAMnO,KAAKmO,MACzE,QAAoBvP,IAAhBmyB,EAA2BA,EAAcrN,OAI5C,GAAIqN,IAAgBrN,EACnB,MAAM,IAAIjT,MAAM,mBAAYtC,EAAI,6BAAqBnO,KAAKmO,KAAI,qCAA6B4iB,EAAW,oBAAYrN,EAAY,MAIjI,QAAoB9kB,IAAhBmyB,EACH,MAAM,IAAItgB,MAAM,oCAA6BtC,EAAI,mGAGlD,GAAKsf,EAAUtf,GAGR,CAEN,IAAI,IAAA5C,SAAQ1M,GAAQ,CAEnB,IADA,IAAIoyB,GAAY,EACP7zB,EAAI,EAAGA,EAAKyB,EAAmB2B,OAAQpD,IAC/C,GAAIqwB,EAAUtf,GAAMtP,QAAUA,EAAO,CACpCoyB,GAAY,EACZ,MAGF,IAAKA,EAAW,YACV,GAAIxD,EAAUtf,GAAMtP,QAAUA,EACpC,OAGD4uB,EAAUtf,GAAMtP,MAAQA,OAhBxB4uB,EAAUtf,GAAQ,CAAEhP,KAAM4xB,EAAaviB,SAAU,GAAI3P,MAAK,GAmBvDwR,GAAgB7D,QAAQiF,IAAI,2BAAoBtD,EAAI,0BAAkBnO,KAAKmO,KAAI,sBAAc6U,KAAKC,UAAUpkB,GAAM,sBAAckyB,EAAW,MAG/I,IAAMzqB,EAAOnI,OAAOmI,KAAKonB,GACzB,IAAStwB,EAAI,EAAGA,EAAIkJ,EAAK9F,OAAQpD,IAAK,CACrC,IAAMub,EAAcrS,EAAKlJ,GACzB4C,KAAKuuB,mBAAmBb,EAAU/U,GAAeA,EAAaxK,EAAMtP,EAAOkyB,KAQ7E,YAAArV,kBAAA,SACC5H,EACAua,EACAxvB,EACAM,GAJD,WAMC,IAAK2U,EACJ,MAAM,IAAIrD,MAAM,uEAEjB,IAAMkI,EAAcxa,OAAOmI,KAAKtG,KAAK0tB,WAAWwD,MAAK,SAAAnxB,GAAO,SAAK2tB,UAAU3tB,KAAkC+T,KAC7G,IAAK6E,EACJ,MAAM,IAAIlI,MAAM,kFAA2EzQ,KAAKmO,KAAI,OAErG,IAAMuV,GAAe,IAAAsN,6BAA4BnyB,EAAOM,EAAMkvB,EAAaruB,KAAKmO,MAChFnO,KAAKuuB,mBAAmBza,EAAS6E,EAAa0V,EAAaxvB,EAAO6kB,IAMnE,YAAAhB,QAAA,sBACO,EAA4C1iB,KAA1CkjB,EAAS,YAAE6K,EAAe,kBAAEL,EAAS,YACrC3c,EAAuBmS,EAAS,GAGxC,GAH+BA,EAAS,gBAEpB1W,QAAQiF,IAAI,mCAA4BzR,KAAKmO,KAAI,QAChE4C,EAAI,MAAM,IAAIN,MAAM,mFAGzBtS,OAAOoI,OAAOmnB,GAAWld,SAAQ,SAAAsD,GAC5BA,GAAS/C,EAAGogB,cAAcrd,MAE/B3V,OAAOmI,KAAKonB,GAAWld,SAAQ,SAAAzQ,UACvB,EAAK2tB,UAAU3tB,MAIvBgR,EAAG4R,aAAaoL,UAET/tB,KAAK+tB,uBAKL/tB,KAAKkjB,iBAELljB,KAAKmO,YAELnO,KAAK4tB,6BAEL5tB,KAAKwtB,gBAELxtB,KAAKytB,iBAELztB,KAAK0tB,WAEd,EA3eA,GAAa,EAAA3Z,c,2FC9Cb,iBAKC,WAAarR,EAAOC,EAAOyuB,EAAOC,QAArB,IAAA3uB,MAAA,QAAO,IAAAC,MAAA,QAAO,IAAAyuB,MAAA,QAAO,IAAAC,MAAA,GACjCrxB,KAAK0C,EAAIA,EACT1C,KAAK2C,EAAIA,EACT3C,KAAKoxB,EAAIA,EACTpxB,KAAKqxB,EAAIA,EAeX,OAbC,sBAAI,oBAAK,C,IAAT,WACC,OAAOrxB,KAAKoxB,G,gCAEb,sBAAI,qBAAM,C,IAAV,WACC,OAAOpxB,KAAKqxB,G,gCAEb,YAAAC,KAAA,SAAKC,GAKJ,OAJAvxB,KAAK0C,EAAI6uB,EAAE7uB,EACX1C,KAAK2C,EAAI4uB,EAAE5uB,EACX3C,KAAKoxB,EAAIG,EAAEH,EACXpxB,KAAKqxB,EAAIE,EAAEF,EACJrxB,MAET,EAxBA,GAAa,EAAAuhB,W,kUCLb,aA+EA,SAAgBiQ,EAAe3yB,EAAYM,GAC1C,OAAQA,GACP,KAAK,EAAAiU,WACL,KAAK,EAAAC,MACJ,OAAO6S,EAASrnB,GACjB,KAAK,EAAA8U,KAEJ,QAAI9U,GAAS,SAETA,EAAQ,MACL6wB,EAAU7wB,IAClB,KAAK,EAAA+U,MAEJ,QAAI/U,GAAS,WAETA,EAAQ,QACL6wB,EAAU7wB,IAClB,KAAK,EAAA4U,IAEJ,QAAI5U,GAAS,gBAETA,EAAQ,aACL6wB,EAAU7wB,IAClB,KAAK,EAAAyU,cAEJ,QAAIzU,EAAQ,MACLkxB,EAAqBlxB,GAC7B,KAAK,EAAA0U,eAEJ,QAAI1U,EAAQ,QACLkxB,EAAqBlxB,GAC7B,KAAK,EAAA2U,aAEJ,QAAI3U,EAAQ,aACLkxB,EAAqBlxB,GAC7B,QACC,MAAM,IAAI4R,MAAM,uBAAgBtR,KAQnC,SAAgB+mB,EAASrnB,GACxB,OAAQb,OAAOsE,MAAMzD,IAA2B,iBAAVA,GAAsBb,OAAOC,SAASY,GAO7E,SAAgB6wB,EAAU7wB,GACzB,OAAOqnB,EAASrnB,IAAWA,EAAQ,GAAM,EAe1C,SAAgBkxB,EAAqBlxB,GACpC,OAAO6wB,EAAU7wB,IAAWA,GAAS,EAetC,SAAgB0M,EAAQ1M,GACvB,OAAOmC,MAAMuK,QAAQ1M,GA/ItB,2BAAgCM,GAC/B,OAAO,EAAAskB,eAAexZ,QAAQ9K,IAAS,GAOxC,yBAA8BA,GAC7B,OAAO,EAAA4X,aAAa9M,QAAQ9K,IAAS,GAOtC,uBAA4BA,GAC3B,OAAO,EAAA+X,WAAWjN,QAAQ9K,IAAS,GAKpC,gCAAqCA,GACpC,OAAO,EAAAkY,oBAAoBpN,QAAQ9K,IAAS,GAG7C,8BAAmCA,GAClC,OAAO,EAAAoY,kBAAkBtN,QAAQ9K,IAAS,GAO3C,6BAAkCiX,EAA+BL,EAAuB5W,GACvF,GAAIoM,EAAQ6K,GAAa,CAExB,GAAKA,EAAwB5V,SAAWuV,EACvC,OAAO,EAER,IAAK,IAAI3Y,EAAI,EAAGA,EAAKgZ,EAAwB5V,OAAQpD,IACpD,IAAKo0B,EAAgBpb,EAAwBhZ,GAAI+B,GAChD,OAAO,OAIT,IAAKqyB,EAAepb,EAAYjX,GAC/B,OAAO,EAGT,OAAO,GAQR,mBA4CA,aAQA,cAQA,6BAAkCN,GACjC,OAAO6wB,EAAU7wB,IAAUA,EAAQ,GAOpC,yBAQA,oBAAyBA,GACxB,MAAwB,iBAAVA,GAOf,YAQA,oBAAyBA,GACxB,MAAwB,iBAAVA,IAAuB0M,EAAQ1M,IAAoB,OAAVA,GAOxD,qBAA0BA,GACzB,MAAwB,kBAAVA,I,oxCChLF,EAAAuU,WAAa,aAIb,EAAAC,MAAQ,QAIR,EAAAC,cAAgB,gBAIhB,EAAAK,KAAO,OAIP,EAAAJ,eAAiB,iBAIjB,EAAAK,MAAQ,QAIR,EAAAJ,aAAe,eAIf,EAAAC,IAAM,MAIN,EAAAoM,KAAO,OAIP,EAAAnM,KAAO,OAMP,EAAAmD,QAAU,UAIV,EAAA0M,OAAS,SAMT,EAAAvM,cAAgB,gBAIhB,EAAAya,OAAS,SAWT,EAAAvE,gBAAkB,CAACnwB,aAAckF,WAAY4lB,UAAWniB,YAAaoiB,WAAY7qB,YAAaoL,WAAYrH,OAQ1G,EAAAyiB,eAAiB,CAAC,EAAArQ,WAAY,EAAAC,MAAO,EAAAC,cAAe,EAAAK,KAAM,EAAAJ,eAAgB,EAAAK,MAAO,EAAAJ,aAAc,EAAAC,KAY/F,EAAAsD,aAAe,CAAC,EAAAF,QAAS,EAAA0M,QAWzB,EAAArM,WAAa,CAAC,EAAAF,cAAe,EAAAya,QAQ7B,EAAAvJ,IAAM,MAIN,EAAA/Q,KAAO,OAQP,EAAAE,oBAAsB,CAAC,EAAA6Q,IAAK,EAAA/Q,MAQ5B,EAAAI,kBAAoB,CAAC,EAAAjE,eAMrB,EAAA3B,MAAQ,SAIR,EAAAC,MAAQ,MAUR,EAAAP,OAAS,SAIT,EAAAC,OAAS,QAIT,EAAAC,mBAAqB,qBAMrB,EAAAmgB,gBAAkB,OAIlB,EAAAC,mBAAqB,UAIrB,EAAA7f,iBAAmB,QAUnB,EAAAod,iBAAmB,mBAInB,EAAAC,iBAAmB,mBAInB,EAAAC,iBAAmB,mBAInB,EAAAC,iBAAmB,mBAInB,EAAAC,eAAiB,iBAIjB,EAAAC,eAAiB,iBAIjB,EAAAC,eAAiB,iBAIjB,EAAAC,eAAiB,iBAIjB,EAAAE,gBAAkB,kBAIlB,EAAAC,gBAAkB,kBAIlB,EAAAC,gBAAkB,kBAIlB,EAAAC,gBAAkB,kBAIjB,EAAAjB,gBAAkB,kBAIjB,EAAAC,gBAAkB,kBAInB,EAAAC,gBAAkB,kBAIjB,EAAAC,gBAAkB,kBAoDpB,EAAApf,qBAAuB,UAIvB,EAAAC,0BAA4B,eAI5B,EAAAE,8BAAgC,mBAIhC,EAAAC,iCAAmC,sBAInC,EAAAC,qBAAuB,UAIvB,EAAAC,0BAA4B,eAI5B,EAAAE,yBAA2B,cAI3B,EAAAD,gCAAkC,qBAkClC,EAAAU,uBAAyB,SAACF,GAAsB,MAAM,IAAIF,MAAME,IAMhE,EAAA2L,4BAA8B,GAM9B,EAAAuP,kBAAoB,EAIpB,EAAAC,kBAAoB,WAAK,GAAI,EAI7B,EAAAC,UAAa,WAAK,GAIlB,EAAAC,SAAW,WAAK,GAAI,EAIpB,EAAAC,mBAAqB,EAIrB,EAAAC,mBAAqB,WAAK,IAAK,EAI/B,EAAAC,WAAc,WAAK,IAInB,EAAAC,UAAY,WAAK,IAAK,EAItB,EAAAC,iBAAmB,EAInB,EAAAC,iBAAmB,WAAK,IAAK,EAI7B,EAAAC,SAAY,WAAK,IAIjB,EAAAC,QAAU,WAAK,IAAK,EAKpB,EAAAoF,oBAAsB,KAItB,EAAAC,mBAAqB,KAIrB,EAAAC,eAAiB,SAIjB,EAAAC,cAAgB,U,qRCxahB,EAAA/E,kBAAoB,oBAKpB,EAAAzC,uBAAyB,yBAGzB,EAAAsC,yBAA2B,2BAC3B,EAAAD,8BAAgC,gCAGhC,EAAAoF,oBAAsB,sBAMtB,EAAAlF,uBAAyB,yBAGzB,EAAAC,4BAA8B,8BAE3C,wBACCja,EACAmf,EACAC,GAGA,QAHA,IAAAA,OAAA,QAG4CtzB,IAAxCkU,EAASvD,YAAY0iB,GAA8B,OAAOnf,EAASvD,YAAY0iB,GAE3E,IACJE,EADIphB,EAAoD+B,EAAQ,GAAxDpC,EAAgDoC,EAAQ,eAAxCvD,EAAgCuD,EAAQ,YAARA,EAAQ,eAEpE,IACCqf,EAAYphB,EAAGuZ,aAAa2H,GAC3B,MAAO50B,IAaT,OAZI80B,GAEH5iB,EAAY0iB,GAAiBE,EACzBrf,EAASzC,gBAAgB7D,QAAQiF,IAAI,4BAAqBwgB,EAAa,QAE3E1iB,EAAY0iB,IAAiB,EACzBnf,EAASzC,gBAAgB7D,QAAQiF,IAAI,sBAAeygB,EAAW,YAAc,GAAE,sBAAcD,EAAa,OAG1GE,GAAcD,GAClBxhB,EAAe,mEAA4DuhB,EAAa,MAElFE,I,28BCrDR,aACA,SA2CC,2EA3CQ,EAAApf,eACT,aA2CC,wEA3CQ,EAAA+C,YACT,aA2CC,0EA3CQ,EAAA/B,cACT,aACA,SACA,SACA,SAMMqe,EAAW,EAAH,OACbC,YAAa/Q,EAAM+Q,YACnBpH,kBAAmB3J,EAAM2J,kBACzBqH,gBAAiBhR,EAAMgR,gBACvBpH,UAAW5J,EAAM4J,UACjBqH,iBAAkBjR,EAAMiR,iBACxBvZ,cAAesI,EAAMtI,cACrBmV,cAAe7M,EAAM6M,cACrB3H,YAAalF,EAAMkF,YACnBzN,uBAAwBuI,EAAMvI,uBAC9B8U,yBAA0BvM,EAAMuM,yBAChC1V,WAAYmJ,EAAMnJ,WAClBgI,yBAA0BmB,EAAMnB,yBAChC6Q,4BAA6B1P,EAAM0P,6BAChCwB,GACAC,GACAC,GACAC,GAuBH,EAAAP,WAnBD,YAEC,IAAA5gB,EAMG8P,EAAK,SALRsR,EAKGtR,EAAK,kBAJRuR,EAIGvR,EAAK,+BAHRwR,EAGGxR,EAAK,iCAFRyR,EAEGzR,EAAK,gCADR0R,EACG1R,EAAK,kCAKR,EAAA9P,WACA,EAAAohB,oBACA,EAAAC,iCACA,EAAAC,mCACA,EAAAC,kCACA,EAAAC,qC,qWCpDD,aAQA,SAASC,EAAaC,GACrB,OAAOA,EAAOtzB,QAAQ,sBAAuB,QAQ9C,SAAgBuzB,EAAiBC,EAAsBC,EAAsBl0B,GAI5E,IAAMm0B,EAAa,IAAI3zB,OAAO,aAAMszB,EAAaI,GAAa,sBAAsB,MAC9EE,EAAwBH,EAAaI,MAAMF,GACjD,GAAIC,EAEH,IAAK,IAAIn2B,EAAI,EAAGA,EAAIm2B,EAAsB/yB,OAAQpD,IAAK,CACtD,IAAMq2B,EAAkB,IAAI9zB,OAAO,aAAMszB,EAAaI,GAAa,wBAAwB,KACrFx0B,EAAQ00B,EAAsBn2B,GAAGo2B,MAAMC,GAC7C,GAAI50B,GAASA,EAAM,GAAI,CACtB,IAAM60B,EAAe,IAAI/zB,OAAO,aAAMszB,EAAaI,GAAa,oBAAYJ,EAAap0B,EAAM,IAAG,SAAS,KAC3Gu0B,EAAeA,EAAaxzB,QAAQ8zB,EAAc,UAAGL,EAAY,cAAMl0B,EAAI,YAAIN,EAAM,GAAE,YAEvF2N,QAAQC,KAAK,+CAAwC8mB,EAAsBn2B,GAAE,WAI/EoP,QAAQC,KAAK,kDAA2C4mB,EAAY,MAErE,OAAOD,EAgBR,SAASO,EAAoBP,EAAsBQ,EAAqBz0B,GAGvE,IAAMm0B,EAAa,IAAI3zB,OAAO,UAAGi0B,EAAW,iBAAiB,KACvDC,EAAyBT,EAAaI,MAAMF,GAClD,GAAIO,EAAwB,CAE3B,IAAMH,EAAe,IAAI/zB,OAAO,UAAGi0B,EAAW,OAAO,KACrDR,EAAeA,EAAaxzB,QAAQ8zB,EAAc,kBAAWv0B,IAE7D,IAAK,IAAI/B,EAAI,EAAGA,EAAIy2B,EAAuBrzB,OAAQpD,IAAK,CACvD,IAAM02B,EAAqB,IAAIn0B,OAAO,UAAGi0B,EAAW,oBAC9CG,EAAWF,EAAuBz2B,GAAGo2B,MAAMM,GAC7CC,GAAYA,EAAS,GACxBX,EAAeD,EAAiBC,EAAcW,EAAS,GAAI50B,GAE3DqN,QAAQC,KAAK,uDAAgDonB,EAAuBz2B,GAAE,OAIzF,OAAOg2B,EAQR,SAAgBY,EAAmBZ,GAOlC,OAJAA,EAAeO,EAAoBP,EAAc,wBAAyB,SAC1EA,EAAeO,EAAoBP,EAAc,0BAA2B,QAC5EA,EAAeO,EAAoBP,EAAc,0BAA2B,QAC5EA,EAAeO,EAAoBP,EAAc,0BAA2B,QAgC7E,SAASa,EAAqBb,GAC7B,QAASA,EAAaI,MAAM,qBAgB7B,SAAgBU,EAAmBd,EAAsBjlB,GAGxD,IAAMhP,EAAOi0B,EAAaI,MAAM,uFAChC,IAAKr0B,IAASA,EAAK,GAClB,MAAM,IAAIsR,MAAM,qEAA8DtC,EAAI,OAEnF,OAAOhP,EAAK,GA/Hb,qBA4BA,yBAA8Bi0B,GAC7B,OAAOA,EAAaxzB,QAAQ,UAAW,cAoCxC,uBAgBA,0BAA+BwzB,GAG9B,OADAA,EAAeY,EADfZ,EAAeA,EAAaxzB,QAAQ,uBAAwB,aAW7D,2BAAgCwzB,GAG/B,OADAA,EAAeY,EADfZ,EAAeA,EAAaxzB,QAAQ,sBAAuB,aA0B5D,uBAcA,4BAAiCwzB,EAAsBjlB,GACtD,GAAI8lB,EAAqBb,GAAe,CACvC,IAAMj0B,EAAO+0B,EAAmBd,EAAcjlB,GAE9CilB,EAAeA,EAAaxzB,QAAQ,6DAA8D,IAElG,IADA,IAAIu0B,GAAkB,IACT,CAIZ,IAAM3d,EAAS4c,EAAaI,MAAM,kCAClC,IAAIhd,IAAUA,EAAO,GAoBd,CACN,IAAK2d,EAAiB,MAAM,IAAI1jB,MAAM,+DAAwDtC,EAAI,OAClG,MArBAgmB,GAAkB,EAClB,IAAIC,EAAS,GACb,OAAQj1B,GACP,IAAK,QACL,IAAK,MACJi1B,EAAS,YACT,MACD,IAAK,OACL,IAAK,QACL,IAAK,QACJA,EAAS,SACT,MACD,IAAK,OACL,IAAK,QACL,IAAK,QACJA,EAAS,MAGXhB,EAAeA,EAAaxzB,QAAQ,6BAA8B,8BAAuB4W,EAAO,IAAE,OAAG4d,EAAM,QAO9G,OAAOhB,GAOP,2CAAgDA,EAAsB1hB,EAA0BvD,GAChG,IAAMkmB,EApEP,SAA6BjB,GAC5B,QAASA,EAAaI,MAAM,oBAmEPc,CAAoBlB,GACnCmB,EAAgBN,EAAqBb,GAC3C,GAAI1hB,IAAgB,EAAAC,MAAO,CAE1B,GAAI0iB,EACH,MAAM,IAAI5jB,MAAM,8EAAuEtC,EAAI,qGAG5F,IAAKomB,EACJ,MAAM,IAAI9jB,MAAM,yHAAkHtC,EAAI,YAIvI,IAAKkmB,IAAiBE,EACrB,MAAM,IAAI9jB,MAAM,yHAAkHtC,EAAI,OAGxI,OAAO,GAQR,wBAA6BilB,GAC5B,OAAOA,EAAaxzB,QAAQ,eAAgB,eAO7C,0BAA+BwzB,GAC9B,OAAOA,EAAaxzB,QAAQ,sBAAuB,cAOpD,qBAA0BwzB,GASzB,OADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAeA,EAAaxzB,QAAQ,YAAa,QACrBA,QAAQ,aAAc,UACtBA,QAAQ,aAAc,UACtBA,QAAQ,aAAc,UACtBA,QAAQ,YAAa,SACrBA,QAAQ,aAAc,WACtBA,QAAQ,aAAc,WACtBA,QAAQ,aAAc,WAQnD,0BAA+BwzB,GAC9B,OAAOA,EAAaxzB,QAAQ,YAAa,YAQ1C,wBAA6BwzB,GAC5B,IAAMoB,EAAapB,EAAa5yB,OAKhC,OAJA4yB,EAAeA,EAAaxzB,QAAQ,yCAA0C,KAC7DY,SAAWg0B,GAC3BhoB,QAAQC,KAAK,yFAEP2mB,GAOR,0BAA+BA,GAC9B,IAAMoB,EAAapB,EAAa5yB,OAKhC,OAJA4yB,EAAeA,EAAaxzB,QAAQ,gEAAiE,KACpFY,SAAWg0B,GAC3BhoB,QAAQC,KAAK,0FAEP2mB,GAOR,yBAA8BA,GAI7B,OADAA,GAFAA,EAAeA,EAAaxzB,QAAQ,eAAgB,KAExBA,QAAQ,gBAAiB,M,ufCnStD,aAQA,SA2CA,SAcM60B,EAAkB,EAAQ,KAM1BhN,EAAU,CACfiN,oBAAgB91B,EAChB+1B,yBAAqB/1B,EACrBg2B,2BAAuBh2B,EACvBi2B,4BAAwBj2B,EACxBk2B,8BAA0Bl2B,GAe1B,SAAgBqsB,EAAkB9rB,GAClC,OAAOA,IAAS,EAAAmU,eAAiBnU,IAAS,EAAAoU,gBAAkBpU,IAAS,EAAAqU,aAOrE,SAAgB8e,EAAgBnzB,GAChC,OAAOA,IAAS,EAAAwU,MAAQxU,IAAS,EAAAyU,OAASzU,IAAS,EAAAsU,IAgBpD,SAASshB,EAAgB9hB,GACxB,GAAIA,IAAc,EAAAnB,iBAAkB,OAAO,EAC3C,GAAImB,IAAc,EAAA0e,mBAAoB,OAAO,EAC7C,GAAI1e,IAAc,EAAAye,gBAAiB,OAAO,EAC1C,MAAM,IAAIjhB,MAAM,0CAAmCuS,KAAKC,UAAUhQ,GAAU,MAO7E,SAAS+hB,EAAuBllB,GAG/B,IAFA,IAAImlB,EAAgB,GACd3uB,EAAOnI,OAAOmI,KAAKwJ,GAChB1S,EAAI,EAAGA,EAAIkJ,EAAK9F,OAAQpD,IAAK,CACrC,IAAM2C,EAAMuG,EAAKlJ,GAEjB,KAAK,IAAAwZ,UAAS7W,MAAS,IAAA6W,UAAS9G,EAAQ/P,IACvC,MAAM,IAAI0Q,MAAM,4HAAqH1Q,EAAG,qBAAa+P,EAAQ/P,GAAI,qBAAaA,EAAG,MAElLk1B,GAAiB,kBAAWl1B,EAAG,YAAI+P,EAAQ/P,GAAI,MAEhD,OAAOk1B,EAQR,SAAgB1C,EACf7gB,EACAG,EACAE,EACAjC,GAEA,IAAMolB,EAAgBxjB,IAAgB,EAAAC,MAAQ,mBAAY,EAAAA,MAAK,MAAO,GAChEsjB,EAAgBnlB,EAAUklB,EAAuBllB,GAAW,GAC5DqlB,EAAyBH,EAAuB,CACrDI,oBAAqB,UAAGL,EAAgBljB,IACxCwjB,sBAAuB,UAAGN,EAAgBhjB,MAE3C,MAAO,UAAGmjB,GAAa,OAAGD,GAAa,OAAGE,GAAsB,OAAGV,GASpE,SAAgBzb,EACfjI,EACAW,EACAG,EACAE,EACAqhB,EACAkC,EACA3c,EACA/H,EACAd,GAGA,IAAM+I,EAAS9H,EAAGwkB,aAAaD,GAC/B,IAAKzc,EAEJ,OADAjI,EAAc,6BACP,KAIR,IAAM4kB,EAAejD,EACpB7gB,EACAG,EACAE,EACAjC,GASD,OAPAiB,EAAGqiB,aAAava,EAAQ,UAAG2c,GAAY,OAAGpC,IAG1CriB,EAAGiI,cAAcH,GAGD9H,EAAG0kB,mBAAmB5c,EAAQ9H,EAAG2kB,gBAO1C7c,GAJNrM,QAAQiF,IAAI,iBAAkB2hB,GAC9BxiB,EAAc,4BAAqB0kB,IAAevkB,EAAGkd,gBAAkB,WAAa,SAAQ,gCAAwBtV,EAAW,cAAM5H,EAAG4kB,iBAAiB9c,GAAO,MACzJ,MAUT,SAAgBsV,EACfpd,EACA6H,EACA5E,EACA7F,EACAyC,GAGA,IAAMkD,EAAU/C,EAAG6kB,gBACnB,GAAK9hB,EAAL,CAUA,GALA/C,EAAG8kB,aAAa/hB,EAAS8E,GACzB7H,EAAG8kB,aAAa/hB,EAASE,GACzBjD,EAAG+kB,YAAYhiB,GAEC/C,EAAGglB,oBAAoBjiB,EAAS/C,EAAGilB,aAMnD,OAAOliB,EAHNlD,EAAc,sBAAezC,EAAI,6BAAqB4C,EAAGklB,kBAAkBniB,UAX3ElD,EAAc,oDAA6CzC,EAAI,sCAuBjE,SAAgBqD,EAAST,GAExB,MAA0C,oBAA3BmlB,wBAA0CnlB,aAAcmlB,wBAAqE,oBAAlCC,+BAAiDplB,aAAcolB,8BAiC1K,SAASC,EAAiBC,EAAkBC,GAC3C,IAAMvlB,EAAKzD,SAASY,cAAc,UAAUiD,WAAW,EAAAG,QACvD,IAAKP,EACJ,MAAM,IAAIN,MAAM,iCAEjB,IACC,IAAM8lB,EAAKvd,EACVjI,EACA,EAAAa,MACA,EAAAE,iBACA,EAAAA,iBACAukB,EACAtlB,EAAGkI,cACH,oBACA,EAAApI,wBAEK2lB,EAAKxd,EACVjI,EACA,EAAAa,MACA,EAAAE,iBACA,EAAAA,iBACAwkB,EACAvlB,EAAGkd,gBACH,oBACA,EAAApd,wBAEKiD,EAAUqa,EAAcpd,EAAIwlB,EAAIC,EAAI,oBAAqB,EAAA3lB,wBAE/DE,EAAGogB,cAAcrd,GACjB/C,EAAG4R,aAAa4T,GAChBxlB,EAAG4R,aAAa6T,GAEf,SACD,OAAO,EAER,OAAO,EAOR,SAAgB3D,IACf,QAAoCj0B,IAAhC6oB,EAAQkN,oBAAmC,CAC9C,IAAM8B,EAAgBL,EACrB,kFACA,2CAED3O,EAAQkN,oBAAsB8B,EAE/B,OAAOhP,EAAQkN,oBAOhB,SAAgB7B,IACf,QAAsCl0B,IAAlC6oB,EAAQmN,sBAAqC,CAChD,IAAM8B,EAAkBN,EACvB,sDACA,uEAED3O,EAAQmN,sBAAwB8B,EAEjC,OAAOjP,EAAQmN,sBAQhB,SAAS+B,EACRxoB,EACA4C,EACAylB,EACAD,EACAK,GAEA,IAAM9iB,EAAUqa,EAAcpd,EAAIwlB,EAAIC,EAAIroB,EAAM,EAAA0C,wBAChD,IAAKiD,EACJ,MAAM,IAAIrD,MAAM,gCAEjB,IAAMomB,EAAmB9lB,EAAGmK,kBAAkBpH,EAAS,YAMjDlX,EAASmU,EAAGqE,eAClBrE,EAAGqB,WAAWrB,EAAGsB,aAAczV,GAC/BmU,EAAGsE,WAAWtE,EAAGsB,aAAc,EAAGtB,EAAGuE,aACrCvE,EAAGqK,wBAAwByb,GAC3B9lB,EAAGoK,oBACF0b,EACA,EACA9lB,EAAGuC,eACH,EACA,EACA,GAGDvC,EAAG+J,SAAS,EAAG,EAAG,EAAG,GACrB/J,EAAG4I,WAAW7F,GAEd8iB,EAAY9iB,GAEZ/C,EAAG4K,WACF5K,EAAGqP,OACH,EACA,GAGD,IAAMrI,EAAQ,IAAI9V,WAAW,GAU7B,OATA8O,EAAG0V,WAAW,EAAG,EAAG,EAAG,EAAG1V,EAAGoG,KAAMpG,EAAGuC,cAAeyE,GAGrDhH,EAAGogB,cAAcrd,GACjB/C,EAAG4R,aAAa4T,GAChBxlB,EAAG4R,aAAa6T,GAChBzlB,EAAG+lB,aAAal6B,GAGTmb,EAiKR,SAASgf,EAAiB3D,GAOzB,OALAA,GAAe,IAAA4D,cAAa5D,GAE5BA,GAAe,IAAA6D,gBAAe7D,GAE9BA,GAAe,IAAA8D,eAAc9D,GAS9B,SAAS+D,EAAqB/D,GAQ7B,OALAA,GAAe,IAAAgE,gBAAehE,GAE9BA,GAAe,IAAAiE,WAAUjE,GAEzBA,GAAe,IAAAkE,cAAalE,GAzf7B,uBAA4Bj0B,GAC3B,OAAOA,IAAS,EAAAkU,OAASlU,IAAS,EAAAiU,YAOlC,sBAQA,oBAQA,qBAA0BjU,GAC1B,OAAO8rB,EAAkB9rB,IAASmzB,EAAgBnzB,IAsCnD,qBAqBA,kBA8CA,kBAiCA,aASA,+BACC,QAA+BP,IAA3B6oB,EAAQiN,eAA8B,CACzC,IAAM3jB,EAAKzD,SAASY,cAAc,UAAUiD,WAAW,EAAAE,QAEvDoW,EAAQiN,eAAiBljB,EAAST,GAEnC,OAAO0W,EAAQiN,gBAOhB,uBAA4B3jB,GAC3B,OAAOA,EAAG0U,uBAAuB1U,EAAGiK,cAAgBjK,EAAG2U,sBAsDxD,mCAeA,qCA2EA,6CACC,QAAuC9mB,IAAnC6oB,EAAQoN,uBAAsC,CAQjD,IACM,EADSvnB,SAASY,cAAc,UACpBiD,WAAW,SAC7B,IAAK,EACJ,MAAM,IAAIV,MAAM,iCAGjB,IAAM8lB,EAAKvd,EAAc,EAAI,EAAApH,MAAO,EAAA+f,mBAAoB,EAAAA,mBAAoB,6QASzE,EAAG1Y,cAAe,6BAA8B,EAAApI,wBACnD,IAAK0lB,EACJ,MAAM,IAAI9lB,MAAM,iCAGjB,IAAM+lB,EAAKxd,EAAc,EAAI,EAAApH,MAAO,EAAA+f,mBAAoB,EAAAA,mBAAoB,+FAKzE,EAAG1D,gBAAiB,6BAA8B,EAAApd,wBACrD,IAAK2lB,EACJ,MAAM,IAAI/lB,MAAM,mCAMjB,IAAM5R,EAAQ,WAAK,IAAK,EAClB,EAAQ0D,KAAK4a,KAAKte,GAClB4sB,EAAkE,KAArD,EAAQlpB,KAAK4a,KAAK,EAAQ,EAAQ,GAAM,GAAM,IAAa,EAExEpF,EAAQ4e,EACb,6BACA,EACAH,EACAD,GACA,SAACziB,GACA,IAAMyjB,EAAY,EAAG7I,mBAAmB5a,EAAS,KACjD,EAAG0jB,UAAUD,EAAW,EAAO,EAAO,MAIlCE,EAAmBl1B,KAAKsc,IAAI9G,EAAM,GAAK0T,GAAY,GACzDhE,EAAQoN,uBAAyB4C,EAAmB,EAAA9F,mBAAqB,EAAA7f,iBAE1E,OAAO2V,EAAQoN,wBAQhB,+CACC,QAAyCj2B,IAArC6oB,EAAQqN,yBAAwC,CAOnD,IACM,EADSxnB,SAASY,cAAc,UACpBiD,WAAW,SAC7B,IAAK,EACJ,MAAM,IAAIV,MAAM,iCAGjB,IAAM8lB,EAAKvd,EAAc,EAAI,EAAApH,MAAO,EAAA+f,mBAAoB,EAAAA,mBAAmB,6JAMxE,EAAG1Y,cAAe,+BAAgC,EAAApI,wBACrD,IAAK0lB,EACJ,MAAM,IAAI9lB,MAAM,iCAGjB,IAAM+lB,EAAKxd,EAAc,EAAI,EAAApH,MAAO,EAAA+f,mBAAoB,EAAAA,mBAAoB,iHAKzE,EAAG1D,gBAAiB,+BAAgC,EAAApd,wBACvD,IAAK2lB,EACJ,MAAM,IAAI/lB,MAAM,mCAMjB,IAAM5R,EAAQ,WAAK,IAAK,EAClB,EAAQ0D,KAAK4a,KAAKte,GAClB4sB,EAAkE,KAArD,EAAQlpB,KAAK4a,KAAK,EAAQ,EAAQ,GAAM,GAAM,IAAa,EAExEpF,EAAQ4e,EACb,+BACA,EACAH,EACAD,GACA,SAACziB,GACA,IAAMyjB,EAAY,EAAG7I,mBAAmB5a,EAAS,KACjD,EAAG0jB,UAAUD,EAAW,EAAO,EAAO,MAIlCE,EAAmBl1B,KAAKsc,IAAI9G,EAAM,GAAK0T,GAAY,GACzDhE,EAAQqN,yBAA4B2C,EAAmB,EAAA9F,mBAAqB,EAAA7f,iBAE7E,OAAO2V,EAAQqN,0BAOhB,sBAA2Bj2B,GAE1B,OAAOA,EAAQ,GAA8B,IAAxBA,EAASA,EAAQ,IAOvC,oCAAyC2B,GAExC,IADA,IAAMM,EAAQ,IAAI/D,aAAayD,GACtBpD,EAAI,EAAGA,EAAIoD,EAAQpD,IAC3B0D,EAAM1D,GAAKA,EAEZ,OAAO0D,GAmER,kCAAuCsyB,EAAsB1hB,GAQ5D,OAPA0hB,EAAe2D,EAAiB3D,GAE3BP,MACJrmB,QAAQC,KAAK,kEAEb2mB,GAAe,IAAAsE,gBAAetE,IAE3B1hB,IAAgB,EAAAC,MACZyhB,EArCT,SAAoCA,GAMnC,OALAA,EAAe+D,EAAqB/D,GAEpCA,GAAe,IAAAuE,eAAcvE,IAEd,IAAAwE,gBAAexE,GAkCvByE,CAA2BzE,IAUnC,oCAAyCA,EAAsB1hB,EAA0BvD,GASxF,OARAilB,EAAe2D,EAAiB3D,IAChC,IAAA0E,iCAAgC1E,EAAc1hB,EAAavD,GAEtD2kB,MACJtmB,QAAQC,KAAK,oEAEb2mB,GAAe,IAAAsE,gBAAetE,IAE3B1hB,IAAgB,EAAAC,MACZyhB,EA7CT,SAAsCA,EAAsBjlB,GAM3D,OALAilB,EAAe+D,EAAqB/D,GAEpCA,GAAe,IAAA2E,iBAAgB3E,IAEhB,IAAA4E,kBAAiB5E,EAAcjlB,GA0CvC8pB,CAA6B7E,EAAcjlB,IAOnD,uCACCtP,EACAM,EACAkvB,EACA1V,GAEA,GAAIxZ,IAAS,EAAAkU,MAAO,CAEnB,IAAI,IAAA9H,SAAQ1M,IACX,IAAK,IAAIzB,EAAI,EAAGA,EAAKyB,EAAmB2B,OAAQpD,IAC/C,KAAK,IAAA8oB,UAAUrnB,EAAmBzB,IACjC,MAAM,IAAIqT,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,qDAIhH,KAAK,IAAAuN,UAASrnB,GACb,MAAM,IAAI4R,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,gDAGhH,KAAK,IAAApN,SAAQ1M,IAAyC,IAA9BA,EAAmB2B,OAC1C,OAAO,EAAA0uB,iBAER,GAAmC,IAA9BrwB,EAAmB2B,OACvB,OAAO,EAAA2uB,iBAER,GAAmC,IAA9BtwB,EAAmB2B,OACvB,OAAO,EAAA4uB,iBAER,GAAmC,IAA9BvwB,EAAmB2B,OACvB,OAAO,EAAA6uB,iBAER,MAAM,IAAI5e,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,gDACxG,GAAIxZ,IAAS,EAAAsU,IAAK,CAExB,IAAI,IAAAlI,SAAQ1M,IACX,IAASzB,EAAI,EAAGA,EAAKyB,EAAmB2B,OAAQpD,IAC/C,KAAK,IAAAsyB,WAAW7wB,EAAmBzB,IAClC,MAAM,IAAIqT,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,iDAIhH,KAAK,IAAA+W,WAAU7wB,GACd,MAAM,IAAI4R,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,4CAGhH,KAAK,IAAApN,SAAQ1M,IAAyC,IAA9BA,EAAmB2B,OAC1C,OAAO,EAAA8uB,eAER,GAAmC,IAA9BzwB,EAAmB2B,OACvB,OAAO,EAAA+uB,eAER,GAAmC,IAA9B1wB,EAAmB2B,OACvB,OAAO,EAAAgvB,eAER,GAAmC,IAA9B3wB,EAAmB2B,OACvB,OAAO,EAAAivB,eAER,MAAM,IAAIhf,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,4CACxG,GAAIxZ,IAAS,EAAAuU,KAAM,CAEzB,IAAI,IAAAnI,SAAQ1M,IACX,IAASzB,EAAI,EAAGA,EAAKyB,EAAmB2B,OAAQpD,IAC/C,KAAK,IAAA2yB,sBAAsBlxB,EAAmBzB,IAC7C,MAAM,IAAIqT,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,mDAIhH,KAAK,IAAAoX,sBAAqBlxB,GACzB,MAAM,IAAI4R,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,8CAGhH,KAAK,IAAApN,SAAQ1M,IAAyC,IAA9BA,EAAmB2B,OAC1C,OAAO,EAAAmvB,gBAER,GAAmC,IAA9B9wB,EAAmB2B,OACvB,OAAO,EAAAovB,gBAER,GAAmC,IAA9B/wB,EAAmB2B,OACvB,OAAO,EAAAqvB,gBAER,GAAmC,IAA9BhxB,EAAmB2B,OACvB,OAAO,EAAAsvB,gBAER,MAAM,IAAIrf,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,8CACxG,GAAIxZ,IAAS,EAAA0gB,KAAM,CAEzB,IAAI,IAAAtU,SAAQ1M,IACX,IAASzB,EAAI,EAAGA,EAAKyB,EAAoB2B,OAAQpD,IAChD,KAAK,IAAA6xB,WAAWpwB,EAAoBzB,IACnC,MAAM,IAAIqT,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,mDAIhH,KAAK,IAAAsW,WAAUpwB,GACd,MAAM,IAAI4R,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,8CAGhH,KAAK,IAAApN,SAAQ1M,IAAyC,IAA9BA,EAAmB2B,OAC1C,OAAO,EAAAquB,gBAER,GAAmC,IAA9BhwB,EAAmB2B,OACvB,OAAO,EAAAsuB,gBAER,GAAmC,IAA9BjwB,EAAmB2B,OACvB,OAAO,EAAAuuB,gBAER,GAAmC,IAA9BlwB,EAAmB2B,OACvB,OAAO,EAAAwuB,gBAER,MAAM,IAAIve,MAAM,wBAAiBuS,KAAKC,UAAUpkB,GAAM,yBAAiBwvB,EAAW,yBAAiB1V,EAAW,yBAE9G,MAAM,IAAIlI,MAAM,wBAAiBtR,EAAI,0BAAkBkvB,EAAW,yBAAiB1V,EAAW,uBAAe,EAAAtF,MAAK,eAAO,EAAAI,IAAG,eAAO,EAAAoM,KAAI,Q,QCxwBzIrjB,EAAOD,QAAU,q/B,QCAjBC,EAAOD,QAAU,yY,QCAjBC,EAAOD,QAAU,6V,QCAjBC,EAAOD,QAAU,6Y,QCAjBC,EAAOD,QAAU,+N,QCAjBC,EAAOD,QAAU,0nB,QCAjBC,EAAOD,QAAU,wmC,QCAjBC,EAAOD,QAAU,miC,QCAjBC,EAAOD,QAAU,0mB,QCAjBC,EAAOD,QAAU,iuBCCb27B,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBx5B,IAAjBy5B,EACH,OAAOA,EAAa97B,QAGrB,IAAIC,EAAS07B,EAAyBE,GAAY,CAGjD77B,QAAS,IAOV,OAHA+7B,EAAoBF,GAAUr5B,KAAKvC,EAAOD,QAASC,EAAQA,EAAOD,QAAS47B,GAGpE37B,EAAOD,Q,OCpBf47B,EAAoBzrB,EAAI,CAACnQ,EAASg8B,KACjC,IAAI,IAAIx4B,KAAOw4B,EACXJ,EAAoBK,EAAED,EAAYx4B,KAASo4B,EAAoBK,EAAEj8B,EAASwD,IAC5E5B,OAAOiH,eAAe7I,EAASwD,EAAK,CAAE04B,YAAY,EAAM73B,IAAK23B,EAAWx4B,MCJ3Eo4B,EAAoBrrB,EAAI,WACvB,GAA0B,iBAAf4rB,WAAyB,OAAOA,WAC3C,IACC,OAAO14B,MAAQ,IAAI3B,SAAS,cAAb,GACd,MAAOhB,GACR,GAAsB,iBAAXoQ,OAAqB,OAAOA,QALjB,GCAxB0qB,EAAoBK,EAAI,CAACv0B,EAAK00B,IAAUx6B,OAAOI,UAAUC,eAAeO,KAAKkF,EAAK00B,GCClFR,EAAoBS,EAAKr8B,IACH,oBAAXwJ,QAA0BA,OAAOwB,aAC1CpJ,OAAOiH,eAAe7I,EAASwJ,OAAOwB,YAAa,CAAE1I,MAAO,WAE7DV,OAAOiH,eAAe7I,EAAS,aAAc,CAAEsC,OAAO,KCF7Bs5B,EAAoB,M","file":"gpu-io.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GPUIO\"] = factory();\n\telse\n\t\troot[\"GPUIO\"] = factory();\n})(self, function() {\nreturn ","// algorithm: ftp://ftp.fox-toolkit.org/pub/fasthalffloatconversion.pdf\n\nconst buffer = new ArrayBuffer(4);\nconst floatView = new Float32Array(buffer);\nconst uint32View = new Uint32Array(buffer);\n\n\nconst baseTable = new Uint32Array(512);\nconst shiftTable = new Uint32Array(512);\n\nfor(let i = 0; i < 256; ++i) {\n    const e = i - 127;\n\n    // very small number (0, -0)\n    if (e < -27) {\n        baseTable[i | 0x000] = 0x0000;\n        baseTable[i | 0x100] = 0x8000;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // small number (denorm)\n    } else if (e < -14) {\n        baseTable[i | 0x000] =  0x0400 >> (-e - 14);\n        baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n        shiftTable[i | 0x000] = -e - 1;\n        shiftTable[i | 0x100] = -e - 1;\n\n    // normal number\n    } else if (e <= 15) {\n        baseTable[i | 0x000] =  (e + 15) << 10;\n        baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n\n    // large number (Infinity, -Infinity)\n    } else if (e < 128) {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // stay (NaN, Infinity, -Infinity)\n    } else {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n    }\n}\n\n/**\n * round a number to a half float number bits.\n * @param {number} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n    floatView[0] = num;\n\n    const f = uint32View[0];\n    const e = (f >> 23) & 0x1ff;\n    return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\n\nconst mantissaTable = new Uint32Array(2048);\nconst exponentTable = new Uint32Array(64);\nconst offsetTable = new Uint32Array(64);\n\nmantissaTable[0] = 0;\nfor(let i = 1; i < 1024; ++i) {\n    let m = i << 13;    // zero pad mantissa bits\n    let e = 0;          // zero exponent\n\n    // normalized\n    while((m & 0x00800000) === 0) {\n        e -= 0x00800000;    // decrement exponent\n        m <<= 1;\n    }\n\n    m &= ~0x00800000;   // clear leading 1 bit\n    e += 0x38800000;    // adjust bias\n\n    mantissaTable[i] = m | e;\n}\nfor(let i = 1024; i < 2048; ++i) {\n    mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nexponentTable[0] = 0;\nfor(let i = 1; i < 31; ++i) {\n    exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor(let i = 33; i < 63; ++i) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\noffsetTable[0] = 0;\nfor(let i = 1; i < 64; ++i) {\n    if (i === 32) {\n        offsetTable[i] = 0;\n    } else {\n        offsetTable[i] = 1024;\n    }\n}\n\n/**\n * convert a half float number bits to a number.\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n    const m = float16bits >> 10;\n    uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n    return floatView[0];\n}\n","import { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns the nearest half precision float representation of a number.\n * @param {number} num\n * @returns {number}\n */\nexport default function hfround(num) {\n    num = Number(num);\n\n    // for optimization\n    if (!Number.isFinite(num) || num === 0) {\n        return num;\n    }\n\n    const x16 = roundToFloat16Bits(num);\n    return convertToNumber(x16);\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","/**\n * JavaScriptCore <= 12 bug\n * @see https://bugs.webkit.org/show_bug.cgi?id=171606\n */\nexport const isTypedArrayIndexedPropertyWritable = Object.getOwnPropertyDescriptor(new Uint8Array(1), 0).writable;\n","/**\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToInteger(target) {\n    let number = typeof target !== \"number\" ? Number(target) : target;\n    if (Number.isNaN(number)) {\n        number = 0;\n    }\n    return Math.trunc(number);\n}\n\n/**\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompareFunction(x, y) {\n    const [isNaN_x, isNaN_y] = [Number.isNaN(x), Number.isNaN(y)];\n\n    if (isNaN_x && isNaN_y) {\n        return 0;\n    }\n\n    if (isNaN_x) {\n        return 1;\n    }\n\n    if (isNaN_y) {\n        return -1;\n    }\n\n    if (x < y) {\n        return -1;\n    }\n\n    if (x > y) {\n        return 1;\n    }\n\n    if (x === 0 && y === 0) {\n        const [isPlusZero_x, isPlusZero_y] = [Object.is(x, 0), Object.is(y, 0)];\n\n        if (!isPlusZero_x && isPlusZero_y) {\n            return -1;\n        }\n\n        if (isPlusZero_x && !isPlusZero_y) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n","import { ToInteger } from \"./spec\";\n\nexport { default as isArrayBuffer } from \"lodash-es/isArrayBuffer\";\n\n/**\n * @param {unknown} view\n * @returns {boolean}\n */\nexport function isDataView(view) {\n    return view instanceof DataView;\n}\n\n/**\n * @param {unknown} key\n * @returns {boolean}\n */\nexport function isStringNumberKey(key) {\n    return typeof key === \"string\" && key === ToInteger(key) + \"\";\n}\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/**\n * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n */\nfunction baseIsArrayBuffer(value) {\n  return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n}\n\nexport default baseIsArrayBuffer;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\n\n/**\n * Checks if `value` is classified as an `ArrayBuffer` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n * @example\n *\n * _.isArrayBuffer(new ArrayBuffer(2));\n * // => true\n *\n * _.isArrayBuffer(new Array(2));\n * // => false\n */\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\nexport default isArrayBuffer;\n","import memoize from \"lodash-es/memoize\";\nimport { isTypedArrayIndexedPropertyWritable } from \"./bug\";\nimport { isArrayBuffer, isStringNumberKey } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\nimport { createPrivateStorage } from \"./private\";\nimport { ToInteger, defaultCompareFunction } from \"./spec\";\n\nconst _ = createPrivateStorage();\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isFloat16Array(target) {\n    return target instanceof Float16Array;\n}\n\n/**\n * @param {unknown} target\n * @throws {TypeError}\n */\nfunction assertFloat16Array(target) {\n    if (!isFloat16Array(target)) {\n        throw new TypeError(\"This is not a Float16Array\");\n    }\n}\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isDefaultFloat16ArrayMethods(target) {\n    return typeof target === \"function\" && defaultFloat16ArrayMethods.has(target);\n}\n\n/**\n * @param {Float16Array} float16bits\n * @return {number[]}\n */\nfunction copyToArray(float16bits) {\n    const length = float16bits.length;\n\n    const array = new Array(length);\n    for(let i = 0; i < length; ++i) {\n        array[i] = convertToNumber(float16bits[i]);\n    }\n\n    return array;\n}\n\n/** @type {ProxyHandler<Function>} */\nconst applyHandler = {\n    apply(func, thisArg, args) {\n        // peel off proxy\n        if (isFloat16Array(thisArg) && isDefaultFloat16ArrayMethods(func)) {\n            return Reflect.apply(func, _(thisArg).target ,args);\n        }\n\n        return Reflect.apply(func, thisArg, args);\n    },\n};\n\n/** @type {ProxyHandler<Float16Array>} */\nconst handler = {\n    get(target, key) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.has(target, key) ? convertToNumber(Reflect.get(target, key)) : undefined;\n        } else {\n            const ret = wrapper !== null && Reflect.has(wrapper, key) ? Reflect.get(wrapper, key) : Reflect.get(target, key);\n\n            if (typeof ret !== \"function\") {\n                return ret;\n            }\n\n            // TypedArray methods can't be called by Proxy Object\n            let proxy = _(ret).proxy;\n\n            if (proxy === undefined) {\n                proxy = _(ret).proxy = new Proxy(ret, applyHandler);\n            }\n\n            return proxy;\n        }\n    },\n\n    set(target, key, value) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.set(target, key, roundToFloat16Bits(value));\n        } else {\n            // frozen object can't change prototype property\n            if (wrapper !== null && (!Reflect.has(target, key) || Object.isFrozen(wrapper))) {\n                return Reflect.set(wrapper, key, value);\n            } else {\n                return Reflect.set(target, key, value);\n            }\n        }\n    },\n};\n\nif (!isTypedArrayIndexedPropertyWritable) {\n    handler.getPrototypeOf = (wrapper) => { return Reflect.getPrototypeOf(_(wrapper).target); };\n    handler.setPrototypeOf = (wrapper, prototype) => { return Reflect.setPrototypeOf(_(wrapper).target, prototype); };\n\n    handler.defineProperty = (wrapper, key, descriptor) => {\n        const target = _(wrapper).target;\n        return !Reflect.has(target, key) || Object.isFrozen(wrapper) ? Reflect.defineProperty(wrapper, key, descriptor) : Reflect.defineProperty(target, key, descriptor);\n    };\n    handler.deleteProperty = (wrapper, key) => {\n        const target = _(wrapper).target;\n        return Reflect.has(wrapper, key) ? Reflect.deleteProperty(wrapper, key) : Reflect.deleteProperty(target, key);\n    };\n\n    handler.has = (wrapper, key) => { return Reflect.has(wrapper, key) || Reflect.has(_(wrapper).target, key); };\n\n    handler.isExtensible = (wrapper) => { return Reflect.isExtensible(wrapper); };\n    handler.preventExtensions = (wrapper) => { return Reflect.preventExtensions(wrapper); };\n\n    handler.getOwnPropertyDescriptor = (wrapper, key) => { return Reflect.getOwnPropertyDescriptor(wrapper, key); };\n    handler.ownKeys = (wrapper) => { return Reflect.ownKeys(wrapper); };\n}\n\nexport default class Float16Array extends Uint16Array {\n\n    constructor(input, byteOffset, length) {\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            super(_(input).target);\n\n        // 22.2.1.3, 22.2.1.4 TypedArray, Array, ArrayLike, Iterable\n        } else if (input !== null && typeof input === \"object\" && !isArrayBuffer(input)) {\n            // if input is not ArrayLike and Iterable, get Array\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n\n            const length = arrayLike.length;\n            super(length);\n\n            for(let i = 0; i < length; ++i) {\n                // super (Uint16Array)\n                this[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n\n        // 22.2.1.2, 22.2.1.5 primitive, ArrayBuffer\n        } else {\n            switch(arguments.length) {\n                case 0:\n                    super();\n                    break;\n\n                case 1:\n                    super(input);\n                    break;\n\n                case 2:\n                    super(input, byteOffset);\n                    break;\n\n                case 3:\n                    super(input, byteOffset, length);\n                    break;\n\n                default:\n                    // @ts-ignore\n                    super(...arguments);\n            }\n        }\n\n        let proxy;\n\n        if (isTypedArrayIndexedPropertyWritable) {\n            proxy = new Proxy(this, handler);\n        } else {\n            const wrapper = Object.create(null);\n            _(wrapper).target = this;\n            proxy = new Proxy(wrapper, handler);\n        }\n\n        // proxy private storage\n        _(proxy).target = this;\n\n        // this private storage\n        _(this).proxy = proxy;\n\n        return proxy;\n    }\n\n    // static methods\n    static from(src, ...opts) {\n        if (opts.length === 0) {\n            return new Float16Array(Uint16Array.from(src, roundToFloat16Bits).buffer);\n        }\n\n        const mapFunc = opts[0];\n        const thisArg = opts[1];\n\n        return new Float16Array(Uint16Array.from(src, function (val, ...args) {\n            return roundToFloat16Bits(mapFunc.call(this, val, ...args));\n        }, thisArg).buffer);\n    }\n\n    static of(...args) {\n        return new Float16Array(args);\n    }\n\n    // iterate methods\n    * [Symbol.iterator]() {\n        for(const val of super[Symbol.iterator]()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    keys() {\n        return super.keys();\n    }\n\n    * values() {\n        for(const val of super.values()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    /** @type {() => IterableIterator<[number, number]>} */\n    * entries() {\n        for(const [i, val] of super.entries()) {\n            yield [i, convertToNumber(val)];\n        }\n    }\n\n    // functional methods\n    // @ts-ignore\n    map(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            array.push(callback.call(thisArg, val, i, _(this).proxy));\n        }\n\n        return new Float16Array(array);\n    }\n\n    // @ts-ignore\n    filter(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            if (callback.call(thisArg, val, i, _(this).proxy)) {\n                array.push(val);\n            }\n        }\n\n        return new Float16Array(array);\n    }\n\n    reduce(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        if (opts.length === 0) {\n            val = convertToNumber(this[0]);\n            start = 1;\n        } else {\n            val = opts[0];\n            start = 0;\n        }\n\n        for(let i = start, l = this.length; i < l; ++i) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    reduceRight(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        const length = this.length;\n        if (opts.length === 0) {\n            val = convertToNumber(this[length - 1]);\n            start = length - 1;\n        } else {\n            val = opts[0];\n            start = length;\n        }\n\n        for(let i = start; i--;) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    forEach(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy);\n        }\n    }\n\n    find(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return value;\n            }\n        }\n    }\n\n    findIndex(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    every(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (!callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    some(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // change element methods\n    set(input, ...opts) {\n        assertFloat16Array(this);\n\n        const offset = opts[0];\n\n        let float16bits;\n\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            float16bits = _(input).target;\n\n        // input others\n        } else {\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n            const length = arrayLike.length;\n\n            float16bits = new Uint16Array(length);\n            for(let i = 0, l = arrayLike.length; i < l; ++i) {\n                float16bits[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n        }\n\n        super.set(float16bits, offset);\n    }\n\n    reverse() {\n        assertFloat16Array(this);\n\n        super.reverse();\n\n        return _(this).proxy;\n    }\n\n    fill(value, ...opts) {\n        assertFloat16Array(this);\n\n        super.fill(roundToFloat16Bits(value), ...opts);\n\n        return _(this).proxy;\n    }\n\n    copyWithin(target, start, ...opts) {\n        assertFloat16Array(this);\n\n        super.copyWithin(target, start, ...opts);\n\n        return _(this).proxy;\n    }\n\n    sort(...opts) {\n        assertFloat16Array(this);\n\n        let compareFunction = opts[0];\n\n        if (compareFunction === undefined) {\n            compareFunction = defaultCompareFunction;\n        }\n\n        const _convertToNumber = memoize(convertToNumber);\n\n        super.sort((x, y) => { return compareFunction(_convertToNumber(x), _convertToNumber(y)); });\n\n        return _(this).proxy;\n    }\n\n    // copy element methods\n    // @ts-ignore\n    slice(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.slice(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.slice(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer);\n    }\n\n    // @ts-ignore\n    subarray(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.subarray(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.subarray(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer, float16bits.byteOffset, float16bits.length);\n    }\n\n    // contains methods\n    indexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        for(let i = from, l = length; i < l; ++i) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    lastIndexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        from = from === 0 ? length : from + 1;\n\n        if (from >= 0) {\n            from = from < length ? from : length;\n        } else {\n            from += length;\n        }\n\n        for(let i = from; i--;) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    includes(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        const isNaN = Number.isNaN(element);\n        for(let i = from, l = length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n\n            if (isNaN && Number.isNaN(value)) {\n                return true;\n            }\n\n            if (value === element) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // string methods\n    join(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        return array.join(...opts);\n    }\n\n    toLocaleString(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        // @ts-ignore\n        return array.toLocaleString(...opts);\n    }\n\n    // @ts-ignore\n    get [Symbol.toStringTag]() {\n        if (isFloat16Array(this)) {\n            return \"Float16Array\";\n        }\n    }\n}\n\nconst Float16Array$prototype = Float16Array.prototype;\n\nconst defaultFloat16ArrayMethods = new WeakSet();\nfor(const key of Reflect.ownKeys(Float16Array$prototype)) {\n    const val = Float16Array$prototype[key];\n    if (typeof val === \"function\") {\n        defaultFloat16ArrayMethods.add(val);\n    }\n}\n","/**\n * @returns {(self:object) => object}\n */\nexport function createPrivateStorage() {\n\tconst wm = new WeakMap();\n\treturn (self) => {\n\t\tlet obj = wm.get(self);\n\t\tif (obj) {\n\t\t\treturn obj;\n\t\t} else {\n\t\t\tobj = Object.create(null);\n\t\t\twm.set(self, obj);\n\t\t\treturn obj;\n\t\t}\n\t};\n}\n","import { isDataView } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to getFloat16 function must be a DataView\");\n    }\n\n    return convertToNumber( dataView.getUint16(byteOffset, ...opts) );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to setFloat16 function must be a DataView\");\n    }\n\n    dataView.setUint16(byteOffset, roundToFloat16Bits(value), ...opts);\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeDpiBlob = changeDpiBlob;\nexports.changeDpiDataUrl = changeDpiDataUrl;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createPngDataTable() {\n  /* Table of CRCs of all 8-bit messages. */\n  var crcTable = new Int32Array(256);\n  for (var n = 0; n < 256; n++) {\n    var c = n;\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xedb88320 ^ c >>> 1 : c >>> 1;\n    }\n    crcTable[n] = c;\n  }\n  return crcTable;\n}\n\nfunction calcCrc(buf) {\n  var c = -1;\n  if (!pngDataTable) pngDataTable = createPngDataTable();\n  for (var n = 0; n < buf.length; n++) {\n    c = pngDataTable[(c ^ buf[n]) & 0xFF] ^ c >>> 8;\n  }\n  return c ^ -1;\n}\n\nvar pngDataTable = void 0;\n\nvar PNG = 'image/png';\nvar JPEG = 'image/jpeg';\n\n// those are 3 possible signature of the physBlock in base64.\n// the pHYs signature block is preceed by the 4 bytes of lenght. The length of\n// the block is always 9 bytes. So a phys block has always this signature:\n// 0 0 0 9 p H Y s.\n// However the data64 encoding aligns we will always find one of those 3 strings.\n// this allow us to find this particular occurence of the pHYs block without\n// converting from b64 back to string\nvar b64PhysSignature1 = 'AAlwSFlz';\nvar b64PhysSignature2 = 'AAAJcEhZ';\nvar b64PhysSignature3 = 'AAAACXBI';\n\nvar _P = 'p'.charCodeAt(0);\nvar _H = 'H'.charCodeAt(0);\nvar _Y = 'Y'.charCodeAt(0);\nvar _S = 's'.charCodeAt(0);\n\nfunction changeDpiBlob(blob, dpi) {\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var headerChunk = blob.slice(0, 33);\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      var dataArray = new Uint8Array(fileReader.result);\n      var tail = blob.slice(33);\n      var changedArray = changeDpiOnArray(dataArray, dpi, blob.type);\n      resolve(new Blob([changedArray, tail], { type: blob.type }));\n    };\n    fileReader.readAsArrayBuffer(headerChunk);\n  });\n}\n\nfunction changeDpiDataUrl(base64Image, dpi) {\n  var dataSplitted = base64Image.split(',');\n  var format = dataSplitted[0];\n  var body = dataSplitted[1];\n  var type = void 0;\n  var headerLength = void 0;\n  var overwritepHYs = false;\n  if (format.indexOf(PNG) !== -1) {\n    type = PNG;\n    var b64Index = detectPhysChunkFromDataUrl(body);\n    // 28 bytes in dataUrl are 21bytes, length of phys chunk with everything inside.\n    if (b64Index >= 0) {\n      headerLength = Math.ceil((b64Index + 28) / 3) * 4;\n      overwritepHYs = true;\n    } else {\n      headerLength = 33 / 3 * 4;\n    }\n  }\n  if (format.indexOf(JPEG) !== -1) {\n    type = JPEG;\n    headerLength = 18 / 3 * 4;\n  }\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var stringHeader = body.substring(0, headerLength);\n  var restOfData = body.substring(headerLength);\n  var headerBytes = atob(stringHeader);\n  var dataArray = new Uint8Array(headerBytes.length);\n  for (var i = 0; i < dataArray.length; i++) {\n    dataArray[i] = headerBytes.charCodeAt(i);\n  }\n  var finalArray = changeDpiOnArray(dataArray, dpi, type, overwritepHYs);\n  var base64Header = btoa(String.fromCharCode.apply(String, _toConsumableArray(finalArray)));\n  return [format, ',', base64Header, restOfData].join('');\n}\n\nfunction detectPhysChunkFromDataUrl(data) {\n  var b64index = data.indexOf(b64PhysSignature1);\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature2);\n  }\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature3);\n  }\n  // if b64index === -1 chunk is not found\n  return b64index;\n}\n\nfunction searchStartOfPhys(data) {\n  var length = data.length - 1;\n  // we check from the end since we cut the string in proximity of the header\n  // the header is within 21 bytes from the end.\n  for (var i = length; i >= 4; i--) {\n    if (data[i - 4] === 9 && data[i - 3] === _P && data[i - 2] === _H && data[i - 1] === _Y && data[i] === _S) {\n      return i - 3;\n    }\n  }\n}\n\nfunction changeDpiOnArray(dataArray, dpi, format, overwritepHYs) {\n  if (format === JPEG) {\n    dataArray[13] = 1; // 1 pixel per inch or 2 pixel per cm\n    dataArray[14] = dpi >> 8; // dpiX high byte\n    dataArray[15] = dpi & 0xff; // dpiX low byte\n    dataArray[16] = dpi >> 8; // dpiY high byte\n    dataArray[17] = dpi & 0xff; // dpiY low byte\n    return dataArray;\n  }\n  if (format === PNG) {\n    var physChunk = new Uint8Array(13);\n    // chunk header pHYs\n    // 9 bytes of data\n    // 4 bytes of crc\n    // this multiplication is because the standard is dpi per meter.\n    dpi *= 39.3701;\n    physChunk[0] = _P;\n    physChunk[1] = _H;\n    physChunk[2] = _Y;\n    physChunk[3] = _S;\n    physChunk[4] = dpi >>> 24; // dpiX highest byte\n    physChunk[5] = dpi >>> 16; // dpiX veryhigh byte\n    physChunk[6] = dpi >>> 8; // dpiX high byte\n    physChunk[7] = dpi & 0xff; // dpiX low byte\n    physChunk[8] = physChunk[4]; // dpiY highest byte\n    physChunk[9] = physChunk[5]; // dpiY veryhigh byte\n    physChunk[10] = physChunk[6]; // dpiY high byte\n    physChunk[11] = physChunk[7]; // dpiY low byte\n    physChunk[12] = 1; // dot per meter....\n\n    var crc = calcCrc(physChunk);\n\n    var crcChunk = new Uint8Array(4);\n    crcChunk[0] = crc >>> 24;\n    crcChunk[1] = crc >>> 16;\n    crcChunk[2] = crc >>> 8;\n    crcChunk[3] = crc & 0xff;\n\n    if (overwritepHYs) {\n      var startingIndex = searchStartOfPhys(dataArray);\n      dataArray.set(physChunk, startingIndex);\n      dataArray.set(crcChunk, startingIndex + 13);\n      return dataArray;\n    } else {\n      // i need to give back an array of data that is divisible by 3 so that\n      // dataurl encoding gives me integers, for luck this chunk is 17 + 4 = 21\n      // if it was we could add a text chunk contaning some info, untill desired\n      // length is met.\n\n      // chunk structur 4 bytes for length is 9\n      var chunkLength = new Uint8Array(4);\n      chunkLength[0] = 0;\n      chunkLength[1] = 0;\n      chunkLength[2] = 0;\n      chunkLength[3] = 9;\n\n      var finalHeader = new Uint8Array(54);\n      finalHeader.set(dataArray, 0);\n      finalHeader.set(chunkLength, 33);\n      finalHeader.set(physChunk, 37);\n      finalHeader.set(crcChunk, 50);\n      return finalHeader;\n    }\n  }\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { GPULayer } from './GPULayer';\nimport {\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tFLOAT,\n\tHALF_FLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tGLSLVersion,\n\tGLSL1,\n\tGLSL3,\n\tWEBGL2,\n\tWEBGL1,\n\tEXPERIMENTAL_WEBGL,\n\tCLAMP_TO_EDGE,\n\tTextureFormat,\n\tNEAREST,\n\tRGBA,\n\tTextureType,\n\tPROGRAM_NAME_INTERNAL,\n\tCompileTimeVars,\n\tDEFAULT_PROGRAM_NAME,\n\tDEFAULT_W_UV_PROGRAM_NAME,\n\tDEFAULT_W_NORMAL_PROGRAM_NAME,\n\tDEFAULT_W_UV_NORMAL_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tLAYER_POINTS_PROGRAM_NAME,\n\tLAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tLAYER_LINES_PROGRAM_NAME,\n\tErrorCallback,\n\tDEFAULT_CIRCLE_NUM_SEGMENTS,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tUINT,\n\tGLSLPrecision,\n\tPRECISION_HIGH_P,\n\tDEFAULT_ERROR_CALLBACK,\n\tBOOL,\n} from './constants';\nimport { GPUProgram } from './GPUProgram';\n// Just importing the types here.\n// Only @types/three is installed as dev dependency.\nimport {\n\tWebGLRenderer,\n\tVector4,\n} from 'three';\nimport * as utils from './Vector4';\nimport {\n\tisWebGL2,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n\tpreprocessVertexShader,\n\tcompileShader,\n} from './utils';\nimport {\n\tisArray,\n\tisString,\n\tisValidFilter,\n\tisValidTextureType,\n\tisValidTextureFormat,\n\tisValidWrap,\n} from './checks';\nconst defaultVertexShaderSource = require('./glsl/vert/DefaultVertShader.glsl');\n\nexport class GPUComposer {\n\treadonly canvas: HTMLCanvasElement;\n\treadonly gl!: WebGLRenderingContext | WebGL2RenderingContext;\n\treadonly glslVersion!: GLSLVersion;\n\treadonly intPrecision!: GLSLPrecision;\n\treadonly floatPrecision!: GLSLPrecision;\n\t// These width and height are the current canvas at full res.\n\tprivate _width!: number;\n\tprivate _height!: number;\n\n\tprivate _errorThrown = false;\n\t/**\n\t * @private\n\t */\n\treadonly _errorCallback: ErrorCallback;\n\n\t// Save threejs renderer if passed in.\n\t/**\n\t * @private\n\t */\n\treadonly _renderer?: WebGLRenderer;\n\tprivate readonly _maxNumTextures!: number;\n\t\n\t// Precomputed buffers (inited as needed).\n\tprivate _quadPositionsBuffer?: WebGLBuffer;\n\tprivate _boundaryPositionsBuffer?: WebGLBuffer;\n\t// Store multiple circle positions buffers for various num segments, use numSegments as key.\n\tprivate _circlePositionsBuffer: { [key: number]: WebGLBuffer } = {};\n\n\tprivate _pointIndexArray?: Float32Array;\n\tprivate _pointIndexBuffer?: WebGLBuffer;\n\tprivate _vectorFieldIndexArray?: Float32Array;\n\tprivate _vectorFieldIndexBuffer?: WebGLBuffer;\n\tprivate _indexedLinesIndexBuffer?: WebGLBuffer;\n\n\t// Keep track of all GL extensions that have been loaded.\n\t/**\n\t * @private\n\t */\n\treadonly _extensions: { [key: string]: any } = {};\n\n\t// Programs for copying data (these are needed for rendering partial screen geometries).\n\tprivate readonly _copyPrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/CopyFragShader.glsl'),\n\t};\n\n\t// Other util programs.\n\tprivate readonly _setValuePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/SetValueFragShader.glsl'),\n\t};\n\tprivate _wrappedLineColorProgram?: GPUProgram; // We only need a FLOAT version of this.\n\tprivate readonly _vectorMagnitudePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/VectorMagnitudeFragShader.glsl'),\n\t};\n\n\t/**\n\t * Vertex shaders are shared across all GPUProgram instances.\n\t * @private\n\t */\n\treadonly _vertexShaders: {[key in PROGRAM_NAME_INTERNAL]: {\n\t\tsrc: string,\n\t\tshader?: WebGLProgram,\n\t\tdefines?: CompileTimeVars,\n\t}} = {\n\t\t[DEFAULT_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t},\n\t\t[DEFAULT_W_UV_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'GPUIO_UV_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[DEFAULT_W_NORMAL_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'GPUIO_NORMAL_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[DEFAULT_W_UV_NORMAL_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'GPUIO_UV_ATTRIBUTE': '1',\n\t\t\t\t'GPUIO_NORMAL_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[SEGMENT_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/SegmentVertShader.glsl'),\n\t\t},\n\t\t[LAYER_POINTS_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerPointsVertShader.glsl'),\n\t\t},\n\t\t[LAYER_VECTOR_FIELD_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerVectorFieldVertShader.glsl'),\n\t\t},\n\t\t[LAYER_LINES_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerLinesVertShader.glsl'),\n\t\t},\n\t};\n\n\tverboseLogging = false;\n\n\tprivate _lastTickTime?: number;\n\tprivate _lastTickFPS?: number\n\tprivate _numTicks = 0;\n\n\tconstructor(\n\t\tparams: {\n\t\t\tcanvas: HTMLCanvasElement,\n\t\t\tcontext?: WebGLRenderingContext | WebGL2RenderingContext,\n\t\t\tcontextID?: typeof WEBGL2 | typeof WEBGL1 | typeof EXPERIMENTAL_WEBGL | string,\n\t\t\tcontextOptions?: {\n\t\t\t\tantialias?: boolean,\n\t\t\t\t[key: string]: any,\n\t\t\t},\n\t\t\tglslVersion?: GLSLVersion,\n\t\t\tintPrecision?: GLSLPrecision,\n\t\t\tfloatPrecision?: GLSLPrecision,\n\t\t\tverboseLogging?: boolean,\n\t\t\t// Optionally pass in an error callback in case we want to handle errors related to webgl support.\n\t\t\t// e.g. throw up a modal telling user this will not work on their device.\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['canvas', 'context', 'contextID', 'contextOptions', 'glslVersion', 'verboseLogging', 'errorCallback'];\n\t\tconst requiredKeys = ['canvas'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to new GPUComposer(params).  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to new GPUComposer(params).`);\n\t\t\t}\n\t\t});\n\n\t\tif (params.verboseLogging !== undefined) this.verboseLogging = params.verboseLogging;\n\n\t\t// Save callback in case we run into an error.\n\t\tconst self = this;\n\t\tthis._errorCallback = (message: string) => {\n\t\t\tif (self._errorThrown) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself._errorThrown = true;\n\t\t\tparams.errorCallback ? params.errorCallback(message) : DEFAULT_ERROR_CALLBACK(message);\n\t\t}\n\n\t\tconst { canvas } = params;\n\t\tthis.canvas = canvas;\n\t\tlet gl = params.context;\n\n\t\t// Init GL.\n\t\tif (!gl) {\n\t\t\t// Init a gl context if not passed in.\n\t\t\tif (params.contextID) {\n\t\t\t\tconst _gl = canvas.getContext(params.contextID, params.contextOptions) as WebGLRenderingContext | null;\n\t\t\t\tif (!_gl) {\n\t\t\t\t\tconsole.warn(`Unable to initialize WebGL context with contextID: ${params.contextID}.`);\n\t\t\t\t} else {\n\t\t\t\t\tgl = _gl;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gl) {\n\t\t\t\tconst _gl = canvas.getContext(WEBGL2, params.contextOptions)  as WebGL2RenderingContext | null\n\t\t\t\t\t|| canvas.getContext(WEBGL1, params.contextOptions)  as WebGLRenderingContext | null\n\t\t\t\t\t|| canvas.getContext(EXPERIMENTAL_WEBGL, params.contextOptions)  as WebGLRenderingContext | null;\n\t\t\t\tif (_gl) {\n\t\t\t\t\tgl = _gl;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gl) {\n\t\t\t\tthis._errorCallback('Unable to initialize WebGL context.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (isWebGL2(gl)) {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 2.0 context.');\n\t\t} else {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 1.0 context.');\n\t\t}\n\t\tthis.gl = gl;\n\n\t\t// Save glsl version, default to 3 if using webgl2 context.\n\t\tlet glslVersion = params.glslVersion || (isWebGL2(gl) ? GLSL3 : GLSL1);\n\t\tif (!isWebGL2(gl) && glslVersion === GLSL3) {\n\t\t\tconsole.warn('GLSL3.x is incompatible with WebGL1.0 contexts, falling back to GLSL1.');\n\t\t\tglslVersion = GLSL1; // Fall back to GLSL1 in these cases.\n\t\t}\n\t\t// TODO: check that this is valid.\n\t\tthis.glslVersion = glslVersion;\n\n\t\t// Set default int/float precision.\n\t\tthis.intPrecision = params.intPrecision || PRECISION_HIGH_P;\n\t\tthis.floatPrecision = params.floatPrecision || PRECISION_HIGH_P;\n\n\t\t// GL setup.\n\t\t// Disable depth testing globally.\n\t\tgl.disable(gl.DEPTH_TEST);\n\t\t// Set unpack alignment to 1 so we can have textures of arbitrary dimensions.\n\t\t// https://stackoverflow.com/questions/51582282/error-when-creating-textures-in-webgl-with-the-rgb-format\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\t\t// TODO: look into more of these: https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n\t\t// // Some implementations of HTMLCanvasElement's or OffscreenCanvas's CanvasRenderingContext2D store color values\n\t\t// // internally in premultiplied form. If such a canvas is uploaded to a WebGL texture with the\n\t\t// // UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter set to false, the color channels will have to be un-multiplied\n\t\t// // by the alpha channel, which is a lossy operation. The WebGL implementation therefore can not guarantee that colors\n\t\t// // with alpha < 1.0 will be preserved losslessly when first drawn to a canvas via CanvasRenderingContext2D and then\n\t\t// // uploaded to a WebGL texture when the UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter is set to false.\n\t\t// gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n\t\t// Unbind active buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\t// Canvas setup.\n\t\tthis.resize(canvas.clientWidth, canvas.clientHeight);\n\n\t\t// Log number of textures available.\n\t\tthis._maxNumTextures = this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tif (this.verboseLogging) console.log(`${this._maxNumTextures} textures max.`);\n\t}\n\n\tstatic initWithThreeRenderer(\n\t\trenderer: WebGLRenderer,\n\t\tparams?: {\n\t\t\tverboseLogging?: boolean,\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\tconst composer = new GPUComposer(\n\t\t\t{\n\t\t\t\tfloatPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\tintPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\t...params,\n\t\t\t\tcanvas: renderer.domElement,\n\t\t\t\tcontext: renderer.getContext(),\n\t\t\t\tglslVersion: renderer.capabilities.isWebGL2 ? GLSL3 : GLSL1,\n\t\t\t},\n\t\t);\n\t\t// Attach renderer.\n\t\t// @ts-ignore\n\t\tcomposer.renderer = renderer;\n\t\treturn composer;\n\t}\n\n\tisWebGL2() {\n\t\treturn isWebGL2(this.gl);\n\t}\n\n\tprivate _glslKeyForType(type: GPULayerType) {\n\t\tswitch (type) {\n\t\t\tcase HALF_FLOAT:\n\t\t\tcase FLOAT:\n\t\t\t\treturn FLOAT;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\tif (this.glslVersion === GLSL1) return INT;\n\t\t\t\treturn UINT;\n\t\t\tcase BYTE:\n\t\t\tcase SHORT:\n\t\t\tcase INT:\n\t\t\t\treturn INT;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid type: ${type} passed to GPUComposer.copyProgramForType.`);\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t_setValueProgramForType(type: GPULayerType) {\n\t\tconst { _setValuePrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_setValuePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `setValue-${key}`,\n\t\t\t\tfragmentShader: _setValuePrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_value',\n\t\t\t\t\t\tvalue: [0, 0, 0, 0],\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_setValuePrograms[key] = program;\n\t\t}\n\t\treturn _setValuePrograms[key]!;\n\t}\n\n\tprivate _copyProgramForType(type: GPULayerType) {\n\t\tconst { _copyPrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_copyPrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `copy-${key}`,\n\t\t\t\tfragmentShader: _copyPrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_state',\n\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\ttype: INT,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_copyPrograms[key] = program;\n\t\t}\n\t\treturn _copyPrograms[key]!;\n\t}\n\n\tprivate _getWrappedLineColorProgram() {\n\t\tif (this._wrappedLineColorProgram === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: 'wrappedLineColor',\n\t\t\t\tfragmentShader: require('./glsl/frag/WrappedLineColorFragShader.glsl'),\n\t\t\t});\n\t\t\tthis._wrappedLineColorProgram = program;\n\t\t}\n\t\treturn this._wrappedLineColorProgram;\n\t}\n\n\tprivate _vectorMagnitudeProgramForType(type: GPULayerType) {\n\t\tconst { _vectorMagnitudePrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_vectorMagnitudePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `vectorMagnitude-${key}`,\n\t\t\t\tfragmentShader: _vectorMagnitudePrograms.src,\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_vectorMagnitudePrograms[key] = program;\n\t\t}\n\t\treturn _vectorMagnitudePrograms[key]!;\n\t}\n\n\tprivate _getQuadPositionsBuffer() {\n\t\tif (this._quadPositionsBuffer === undefined) {\n\t\t\tconst fsQuadPositions = new Float32Array([ -1, -1, 1, -1, -1, 1, 1, 1 ]);\n\t\t\tthis._quadPositionsBuffer = this._initVertexBuffer(fsQuadPositions)!;\n\t\t}\n\t\treturn this._quadPositionsBuffer!;\n\t}\n\n\tprivate _getBoundaryPositionsBuffer() {\n\t\tif (this._boundaryPositionsBuffer === undefined) {\n\t\t\tconst boundaryPositions = new Float32Array([ -1, -1, 1, -1, 1, 1, -1, 1, -1, -1 ]);\n\t\t\tthis._boundaryPositionsBuffer = this._initVertexBuffer(boundaryPositions)!;\n\t\t}\n\t\treturn this._boundaryPositionsBuffer!;\n\t}\n\n\tprivate _getCirclePositionsBuffer(numSegments: number) {\n\t\tconst { _circlePositionsBuffer } = this;\n\t\tif (_circlePositionsBuffer[numSegments] == undefined) {\n\t\t\tconst unitCirclePoints = [0, 0];\n\t\t\tfor (let i = 0; i <= numSegments; i++) { // TODO: should this be just less than?\n\t\t\t\tunitCirclePoints.push(\n\t\t\t\t\tMath.cos(2 * Math.PI * i / numSegments),\n\t\t\t\t\tMath.sin(2 * Math.PI * i / numSegments),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst circlePositions = new Float32Array(unitCirclePoints);\n\t\t\tconst buffer = this._initVertexBuffer(circlePositions)!;\n\t\t\t_circlePositionsBuffer[numSegments] = buffer;\n\t\t}\n\t\treturn _circlePositionsBuffer[numSegments];\n\t}\n\n\tprivate _initVertexBuffer(\n\t\tdata: Float32Array,\n\t) {\n\t\tconst { _errorCallback, gl } = this;\n\t\tconst buffer = gl.createBuffer();\n\t\tif (!buffer) {\n\t\t\t_errorCallback('Unable to allocate gl buffer.');\n\t\t\treturn;\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t// Add buffer data.\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\t\treturn buffer;\n\t}\n\n\t/**\n\t * Used internally, see GPULayer.clone() for public API.\n\t * @private\n\t */\n\t_cloneGPULayer(gpuLayer: GPULayer, name?: string) {\n\t\tlet dimensions: number | [number, number] = 0;\n\t\ttry {\n\t\t\tdimensions = gpuLayer.length;\n\t\t} catch {\n\t\t\tdimensions = [gpuLayer.width, gpuLayer.height];\n\t\t}\n\n\t\t// If read only, get state by reading to GPU.\n\t\tconst array = gpuLayer.writable ? undefined : gpuLayer.getValues();\n\n\t\tconst clone = new GPULayer(this, {\n\t\t\tname: name || `${gpuLayer.name}-clone`,\n\t\t\tdimensions,\n\t\t\ttype: gpuLayer.type,\n\t\t\tnumComponents: gpuLayer.numComponents,\n\t\t\tfilter: gpuLayer.filter,\n\t\t\twrapS: gpuLayer.wrapS,\n\t\t\twrapT: gpuLayer.wrapT,\n\t\t\twritable: gpuLayer.writable,\n\t\t\tnumBuffers: gpuLayer.numBuffers,\n\t\t\tclearValue: gpuLayer.clearValue,\n\t\t\tarray,\n\t\t});\n\n\t\t// TODO: check this.\n\t\t// If writable, copy current state with a draw call.\n\t\tif (gpuLayer.writable) {\n\t\t\tfor (let i = 0; i < gpuLayer.numBuffers - 1; i++) {\n\t\t\t\tthis.step({\n\t\t\t\t\tprogram: this._copyProgramForType(gpuLayer.type),\n\t\t\t\t\tinput: gpuLayer.getStateAtIndex((gpuLayer.bufferIndex + i + 1) % gpuLayer.numBuffers),\n\t\t\t\t\toutput: clone,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.step({\n\t\t\t\tprogram: this._copyProgramForType(gpuLayer.type),\n\t\t\t\tinput: gpuLayer.currentState,\n\t\t\t\toutput: clone,\n\t\t\t});\n\t\t}\n\n\t\t// TODO: Increment clone's buffer index until it is identical to the original layer.\n\n\n\t\treturn clone;\n\t}\n\n\tinitTexture(\n\t\tparams: {\n\t\t\tname: string,\n\t\t\turl: string,\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\tformat?: TextureFormat,\n\t\t\ttype?: TextureType,\n\t\t\tonLoad?: (texture: WebGLTexture) => void,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['name', 'url', 'filter', 'wrapS', 'wrapT', 'format', 'type', 'onLoad'];\n\t\tObject.keys(params).forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to GPUComposer.initTexture with name \"${params.name}\".  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\tconst { url, name } = params;\n\t\tif (!isString(url)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have url of type string, got ${url} of type ${typeof url}.`)\n\t\t}\n\t\tif (!isString(name)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have name of type string, got ${name} of type ${typeof name}.`)\n\t\t}\n\n\t\t// Get filter type, default to nearest.\n\t\tconst filter = params.filter !== undefined ? params.filter : NEAREST;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${filter} for GPULayer \"${name}\", must be ${validFilters.join(', ')}.`);\n\t\t}\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${wrapS} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${wrapT} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\n\t\t// Get image format type, default to rgba.\n\t\tconst format = params.format !== undefined ? params.format : RGBA;\n\t\tif (!isValidTextureFormat(format)) {\n\t\t\tthrow new Error(`Invalid format: ${format} for GPULayer \"${name}\", must be ${validTextureFormats.join(', ')}.`);\n\t\t}\n\n\t\t// Get image data type, default to unsigned byte.\n\t\tconst type = params.type !== undefined ? params.type : UNSIGNED_BYTE;\n\t\tif (!isValidTextureType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${type} for GPULayer \"${name}\", must be ${validTextureTypes.join(', ')}.`);\n\t\t}\n\n\t\tconst { gl, _errorCallback } = this;\n\t\tconst texture = gl.createTexture();\n\t\tif (texture === null) {\n\t\t\tthrow new Error(`Unable to init glTexture.`);\n\t\t}\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t// Because images have to be downloaded over the internet\n\t\t// they might take a moment until they are ready.\n\t\t// Until then put a single pixel in the texture so we can\n\t\t// use it immediately. When the image has finished downloading\n\t\t// we'll update the texture with the contents of the image.\n\t\tconst level = 0;\n\t\tconst internalFormat = gl.RGBA;\n\t\tconst width = 1;\n\t\tconst height = 1;\n\t\tconst border = 0;\n\t\tconst srcFormat = gl[format];\n\t\tconst srcType = gl[type];\n\t\tconst pixel = new Uint8Array([0, 0, 0, 0]);\n\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\twidth, height, border, srcFormat, srcType, pixel);\n\n\t\tconst image = new Image();\n\t\timage.onload = () => {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\t\tsrcFormat, srcType, image);\n\n\t\t\t// WebGL1 has different requirements for power of 2 images\n\t\t\t// vs non power of 2 images so check if the image is a\n\t\t\t// power of 2 in both dimensions.\n\t\t\tif (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n\t\t\t\t// // Yes, it's a power of 2. Generate mips.\n\t\t\t\t// gl.generateMipmap(gl.TEXTURE_2D);\n\t\t\t} else {\n\t\t\t\t// TODO: finish implementing this.\n\t\t\t\tconsole.warn(`Texture ${name} dimensions [${image.width}, ${image.height}] are not power of 2.`);\n\t\t\t\t// // No, it's not a power of 2. Turn off mips and set\n\t\t\t\t// // wrapping to clamp to edge\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t}\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[filter]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[filter]);\n\n\t\t\t// Callback when texture has loaded.\n\t\t\tif (params.onLoad) params.onLoad(texture);\n\t\t};\n\t\timage.onerror = (e) => {\n\t\t\t_errorCallback(`Error loading image ${name}: ${e}`);\n\t\t}\n\t\timage.src = url;\n\n\t\treturn texture;\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t_getVertexShaderWithName(name: PROGRAM_NAME_INTERNAL, programName: string) {\n\t\tconst {\n\t\t\t_errorCallback,\n\t\t\t_vertexShaders,\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t} = this;\n\t\tconst vertexShader = _vertexShaders[name];\n\t\tif (vertexShader.shader === undefined) {\n\t\t\t// Init a vertex shader (this only happens once for each possible vertex shader across all GPUPrograms).\n\t\t\tif (vertexShader.src === '') {\n\t\t\t\tthrow new Error(`Error compiling GPUProgram \"${programName}\": no source for vertex shader with name \"${name}\".`);\n\t\t\t}\n\t\t\tconst preprocessedSrc = preprocessVertexShader(vertexShader.src, glslVersion);\n\t\t\tconst shader = compileShader(\n\t\t\t\tgl,\n\t\t\t\tglslVersion,\n\t\t\t\tintPrecision,\n\t\t\t\tfloatPrecision,\n\t\t\t\tpreprocessedSrc,\n\t\t\t\tgl.VERTEX_SHADER,\n\t\t\t\tprogramName,\n\t\t\t\t_errorCallback,\n\t\t\t\tvertexShader.defines,\n\t\t\t);\n\t\t\tif (!shader) {\n\t\t\t\t_errorCallback(`Unable to compile \"${name}\" vertex shader for GPUProgram \"${programName}\".`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Save the results so this does not have to be repeated.\n\t\t\tvertexShader.shader = shader;\n\t\t}\n\t\treturn vertexShader.shader;\n\t}\n\n\tresize(width: number, height: number) {\n\t\tconst { canvas } = this;\n\t\t// Set correct canvas pixel size.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/By_example/Canvas_size_and_WebGL\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\t// Save dimensions.\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t};\n\n\tprivate _drawSetup(\n\t\tprogram: WebGLProgram,\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer,\n\t) {\n\t\tconst { gl } = this;\n\t\t// Check if we are in an error state.\n\t\tif (!program) {\n\t\t\treturn;\n\t\t}\n\n\t\t// CAUTION: the order of these next few lines is important.\n\n\t\t// Get a shallow copy of current textures.\n\t\t// This line must come before this.setOutput() as it depends on current internal state.\n\t\tconst inputTextures: WebGLTexture[] = [];\n\t\tif (input) {\n\t\t\tif (input.constructor === WebGLTexture) {\n\t\t\t\tinputTextures.push(input as WebGLTexture);\n\t\t\t} else if (input.constructor === GPULayer) {\n\t\t\t\tinputTextures.push((input as GPULayer).currentState);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < (input as (GPULayer | WebGLTexture)[]).length; i++) {\n\t\t\t\t\tconst layer = (input as (GPULayer | WebGLTexture)[])[i];\n\t\t\t\t\tinputTextures.push((layer as GPULayer).currentState ? (layer as GPULayer).currentState : layer as WebGLTexture)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set output framebuffer.\n\t\t// This may modify WebGL internal state.\n\t\tthis._setOutputLayer(fullscreenRender, input, output);\n\n\t\t// Set current program.\n\t\tgl.useProgram(program);\n\n\t\t// Set input textures.\n\t\tfor (let i = 0; i < inputTextures.length; i++) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTextures[i]);\n\t\t}\n\t}\n\n\tprivate _setBlendMode(shouldBlendAlpha?: boolean) {\n\t\tconst { gl } = this;\n\t\tif (shouldBlendAlpha) {\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t}\n\t}\n\n\tprivate _addLayerToInputs(\n\t\tlayer: GPULayer,\n\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t) {\n\t\t// Add layer to end of input if needed.\n\t\tlet _inputLayers = input;\n\t\tif (isArray(_inputLayers)) {\n\t\t\tconst index = (_inputLayers as (GPULayer | WebGLTexture)[]).indexOf(layer);\n\t\t\tif (index < 0) {\n\t\t\t\t(_inputLayers as (GPULayer | WebGLTexture)[]).push(layer);\n\t\t\t} \n\t\t} else {\n\t\t\tif (_inputLayers !== layer) {\n\t\t\t\tconst previous = _inputLayers;\n\t\t\t\t_inputLayers = [];\n\t\t\t\tif (previous) (_inputLayers as (GPULayer | WebGLTexture)[]).push(previous);\n\t\t\t\t(_inputLayers as (GPULayer | WebGLTexture)[]).push(layer);\n\t\t\t} else {\n\t\t\t\t_inputLayers = [_inputLayers];\n\t\t\t}\n\t\t}\n\t\treturn _inputLayers as (GPULayer | WebGLTexture)[];\n\t}\n\n\tprivate _passThroughLayerDataFromInputToOutput(state: GPULayer) {\n\t\t// TODO: figure out the fastest way to copy a texture.\n\t\tconst copyProgram = this._copyProgramForType(state._internalType);\n\t\tthis.step({\n\t\t\tprogram: copyProgram,\n\t\t\tinput: state,\n\t\t\toutput: state,\n\t\t});\n\t}\n\n\tprivate _setOutputLayer(\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t) {\n\t\tconst { gl } = this;\n\n\t\t// Render to screen.\n\t\tif (!output) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t// Resize viewport.\n\t\t\tconst { _width, _height } = this;\n\t\t\tgl.viewport(0, 0, _width, _height);\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if output is same as one of input layers.\n\t\t// TODO: do a better job of checking if input is a texture of same GPULayer as output.\n\t\tif (input && ((input === output) || (isArray(input) && (input as (GPULayer | WebGLTexture)[]).indexOf(output) > -1))) {\n\t\t\tif (output.numBuffers === 1) {\n\t\t\t\tthrow new Error('Cannot use same buffer for input and output of a program. Try increasing the number of buffers in your output layer to at least 2 so you can render to nextState using currentState as an input.');\n\t\t\t}\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render and increment buffer so we are rendering to a different target\n\t\t\t\t// than the input texture.\n\t\t\t\toutput._prepareForWrite(true);\n\t\t\t} else {\n\t\t\t\t// Pass input texture through to output.\n\t\t\t\tthis._passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t// Render to output without incrementing buffer.\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t}\n\t\t} else {\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render to current buffer.\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t} else {\n\t\t\t\t// If we are doing a sneaky thing with a swapped texture and are\n\t\t\t\t// only rendering part of the screen, we may need to add a copy operation.\n\t\t\t\tif (output._usingTextureOverrideForCurrentBuffer()) {\n\t\t\t\t\tthis._passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t}\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resize viewport.\n\t\tconst { width, height } = output;\n\t\tgl.viewport(0, 0, width, height);\n\t};\n\n\tprivate _setVertexAttribute(program: WebGLProgram, name: string, size: number, programName: string) {\n\t\tconst { gl } = this;\n\t\t// Point attribute to the currently bound VBO.\n\t\tconst location = gl.getAttribLocation(program, name);\n\t\tif (location < 0) {\n\t\t\tthrow new Error(`Unable to find vertex attribute \"${name}\" in program \"${programName}\".`);\n\t\t}\n\t\t// TODO: only float is supported for vertex attributes.\n\t\tgl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\n\t\t// Enable the attribute.\n\t\tgl.enableVertexAttribArray(location);\n\t}\n\n\tprivate _setPositionAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_internal_position', 2, programName);\n\t}\n\n\tprivate _setIndexAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_internal_index', 1, programName);\n\t}\n\n\tprivate _setUVAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_internal_uv', 2, programName);\n\t}\n\n\t// Step for entire fullscreen quad.\n\tstep(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a strip of px along the boundary.\n\tstepBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tsingleEdge?: 'LEFT' | 'RIGHT' | 'TOP' | 'BOTTOM';\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\t// Frame needs to be offset and scaled so that all four sides are in viewport.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 - onePx[0], 1 - onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getBoundaryPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.singleEdge) {\n\t\t\tswitch(params.singleEdge) {\n\t\t\t\tcase 'LEFT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 3, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RIGHT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 1, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TOP':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 2, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BOTTOM':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 0, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unknown boundary edge type: ${params.singleEdge}.`);\n\t\t\t}\n\t\t} else {\n\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program for all but a strip of px along the boundary.\n\tstepNonBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 - 2 * onePx[0], 1 - 2 * onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a circular spot.\n\tstepCircle(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition: [number, number], // Position is in units of pixels.\n\t\t\tradius: number, // Radius is in units of pixels.\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tnumSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _width, _height } = this;\n\t\tconst { program, position, radius, input, output } = params;\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [radius * 2 / _width, radius * 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [2 * position[0] / _width - 1, 2 * position[1] / _height - 1], FLOAT);\n\t\tconst numSegments = params.numSegments ? params.numSegments : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (numSegments < 3) {\n\t\t\tthrow new Error(`numSegments for GPUComposer.stepCircle must be greater than 2, got ${numSegments}.`);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getCirclePositionsBuffer(numSegments));\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\t\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a thickened line segment (rounded end caps available).\n\tstepSegment(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition1: [number, number], // Position is in units of pixels.\n\t\t\tposition2: [number, number], // Position is in units of pixels.\n\t\t\tthickness: number, // Thickness is in units of pixels.\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tendCaps?: boolean,\n\t\t\tnumCapSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, position1, position2, thickness, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\tconst glProgram = program._segmentProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_halfThickness', thickness / 2, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tconst diffX = position1[0] - position2[0];\n\t\tconst diffY = position1[1] - position2[1];\n\t\tconst angle = Math.atan2(diffY, diffX);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_rotation', angle, FLOAT);\n\t\tconst centerX = (position1[0] + position2[0]) / 2;\n\t\tconst centerY = (position1[1] + position2[1]) / 2;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [2 * centerX / this._width - 1, 2 * centerY / this._height - 1], FLOAT);\n\t\tconst length = Math.sqrt(diffX * diffX + diffY * diffY);\n\t\t\n\t\tconst numSegments = params.numCapSegments ? params.numCapSegments * 2 : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (params.endCaps) {\n\t\t\tif (numSegments < 6 || numSegments % 6 !== 0) {\n\t\t\t\tthrow new Error(`numSegments for GPUComposer.stepSegment must be divisible by 6, got ${numSegments}.`);\n\t\t\t}\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_internal_length', length - thickness * Math.sin(Math.PI / numSegments), FLOAT);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getCirclePositionsBuffer(numSegments));\n\t\t} else {\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_internal_length', length - thickness, FLOAT);\n\t\t\t// Use a rectangle in case of no caps.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\t}\n\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.endCaps) {\n\t\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\n\t\t} else {\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepPolyline(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: [number, number][],\n\t\t\tthickness: number, // Thickness of line is in units of pixels.\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcloseLoop?: boolean,\n\t\t\tincludeUVs?: boolean,\n\t\t\tincludeNormals?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { program, input, output } = params;\n\t\tconst vertices = params.positions;\n\t\tconst closeLoop = !!params.closeLoop;\n\t\t\n\t\tconst { gl, _width, _height } = this\n\n\t\t// Offset vertices.\n\t\tconst halfThickness = params.thickness / 2;\n\t\tconst numPositions = closeLoop ? vertices.length * 4 + 2 : (vertices.length - 1) * 4;\n\t\tconst positions = new Float32Array(2 * numPositions);\n\t\tconst uvs = params.includeUVs ? new Float32Array(2 * numPositions) : undefined;\n\t\tconst normals = params.includeNormals ? new Float32Array(2 * numPositions) : undefined;\n\n\t\t// tmp arrays.\n\t\tconst s1 = [0, 0];\n\t\tconst s2 = [0, 0];\n\t\tconst n1 = [0, 0];\n\t\tconst n2 = [0, 0];\n\t\tconst n3 = [0, 0];\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tif (!closeLoop && i === vertices.length - 1) continue;\n\t\t\t// Vertices on this segment.\n\t\t\tconst v1 = vertices[i];\n\t\t\tconst v2 = vertices[(i + 1) % vertices.length];\n\t\t\ts1[0] = v2[0] - v1[0];\n\t\t\ts1[1] = v2[1] - v1[1];\n\t\t\tconst length1 = Math.sqrt(s1[0] * s1[0] + s1[1] * s1[1]);\n\t\t\tn1[0] = s1[1] / length1;\n\t\t\tn1[1] = - s1[0] / length1;\n\n\t\t\tconst index = i * 4 + 2;\n\n\t\t\tif (!closeLoop && i === 0) {\n\t\t\t\t// Add starting points to positions array.\n\t\t\t\tpositions[0] = v1[0] + n1[0] * halfThickness;\n\t\t\t\tpositions[1] = v1[1] + n1[1] * halfThickness;\n\t\t\t\tpositions[2] = v1[0] - n1[0] * halfThickness;\n\t\t\t\tpositions[3] = v1[1] - n1[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[0] = 0;\n\t\t\t\t\tuvs[1] = 1;\n\t\t\t\t\tuvs[2] = 0;\n\t\t\t\t\tuvs[3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[0] = n1[0];\n\t\t\t\t\tnormals[1] = n1[1];\n\t\t\t\t\tnormals[2] = n1[0];\n\t\t\t\t\tnormals[3] = n1[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst u = (i + 1) / (vertices.length - 1);\n\n\t\t\t// Offset from v2.\n\t\t\tpositions[2 * index] = v2[0] + n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 1] = v2[1] + n1[1] * halfThickness;\n\t\t\tpositions[2 * index + 2] = v2[0] - n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 3] = v2[1] - n1[1] * halfThickness;\n\t\t\tif (uvs) {\n\t\t\t\tuvs[2 * index] = u;\n\t\t\t\tuvs[2 * index + 1] = 1;\n\t\t\t\tuvs[2 * index + 2] = u;\n\t\t\t\tuvs[2 * index + 3] = 0;\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[2 * index] = n1[0];\n\t\t\t\tnormals[2 * index + 1] = n1[1];\n\t\t\t\tnormals[2 * index + 2] = n1[0];\n\t\t\t\tnormals[2 * index + 3] = n1[1];\n\t\t\t}\n\n\t\t\tif ((i < vertices.length - 2) || closeLoop) {\n\t\t\t\t// Vertices on next segment.\n\t\t\t\tconst v3 = vertices[(i + 1) % vertices.length];\n\t\t\t\tconst v4 = vertices[(i + 2) % vertices.length];\n\t\t\t\ts2[0] = v4[0] - v3[0];\n\t\t\t\ts2[1] = v4[1] - v3[1];\n\t\t\t\tconst length2 = Math.sqrt(s2[0] * s2[0] + s2[1] * s2[1]);\n\t\t\t\tn2[0] = s2[1] / length2;\n\t\t\t\tn2[1] = - s2[0] / length2;\n\n\t\t\t\t// Offset from v3\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = v3[0] + n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = v3[1] + n2[1] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = v3[0] - n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = v3[1] - n2[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length))] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 1] = 1;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 2] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length))] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 1] = n2[1];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 2] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 3] = n2[1];\n\t\t\t\t}\n\n\t\t\t\t// Check the angle between adjacent segments.\n\t\t\t\tconst cross = n1[0] * n2[1] - n1[1] * n2[0];\n\t\t\t\tif (Math.abs(cross) < 1e-6) continue;\n\t\t\t\tn3[0] = n1[0] + n2[0];\n\t\t\t\tn3[1] = n1[1] + n2[1];\n\t\t\t\tconst length3 = Math.sqrt(n3[0] * n3[0] + n3[1] * n3[1]);\n\t\t\t\tn3[0] /= length3;\n\t\t\t\tn3[1] /= length3;\n\t\t\t\t// Make adjustments to positions.\n\t\t\t\tconst angle = Math.acos(n1[0] * n2[0] + n1[1] * n2[1]);\n\t\t\t\tconst offset = halfThickness / Math.cos(angle / 2);\n\t\t\t\tif (cross < 0) {\n\t\t\t\t\tpositions[2 * index] = v2[0] + n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 1] = v2[1] + n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = positions[2 * index];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = positions[2 * index + 1];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[2 * index + 2] = v2[0] - n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 3] = v2[1] - n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = positions[2 * index + 2];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = positions[2 * index + 3];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (closeLoop) {\n\t\t\t// Duplicate starting points to end of positions array.\n\t\t\tpositions[vertices.length * 8] = positions[0];\n\t\t\tpositions[vertices.length * 8 + 1] = positions[1];\n\t\t\tpositions[vertices.length * 8 + 2] = positions[2];\n\t\t\tpositions[vertices.length * 8 + 3] = positions[3];\n\t\t\tif (uvs) {\n\t\t\t\tuvs[vertices.length * 8] = uvs[0];\n\t\t\t\tuvs[vertices.length * 8 + 1] = uvs[1];\n\t\t\t\tuvs[vertices.length * 8 + 2] = uvs[2];\n\t\t\t\tuvs[vertices.length * 8 + 3] = uvs[3];\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[vertices.length * 8] = normals[0];\n\t\t\t\tnormals[vertices.length * 8 + 1] = normals[1];\n\t\t\t\tnormals[vertices.length * 8 + 2] = normals[2];\n\t\t\t\tnormals[vertices.length * 8 + 3] = normals[3];\n\t\t\t}\n\t\t}\n\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, numPositions);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepTriangleStrip(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: Float32Array,\n\t\t\tnormals?: Float32Array,\n\t\t\tuvs?: Float32Array,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcount?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\n\t\tconst { program, input, output, positions, uvs, normals } = params;\n\t\tconst { gl, _width, _height } = this;\n\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\tconst count = params.count ? params.count : positions.length / 2;\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepLines(params: {\n\t\tprogram: GPUProgram,\n\t\tpositions: Float32Array,\n\t\tindices?: Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\tnormals?: Float32Array,\n\t\tuvs?: Float32Array,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\tcount?: number,\n\t\tcloseLoop?: boolean,\n\t\tshouldBlendAlpha?: boolean,\n\t}) {\n\t\tconst { gl, _width, _height } = this;\n\t\tconst { indices, uvs, normals, input, output, program } = params;\n\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && indices) {\n\t\t\tthrow new Error(`GPUComposer.stepLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\t\t\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\tconst count = params.count ? params.count : (indices ? indices.length : (params.positions.length / 2));\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\tif (indices) {\n\t\t\t// Reorder positions array to match indices.\n\t\t\tconst positions = new Float32Array(2 * count);\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst index = indices[i];\n\t\t\t\tpositions[2 * i] = params.positions[2 * index];\n\t\t\t\tpositions[2 * i + 1] = params.positions[2 * index + 1];\n\t\t\t}\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(params.positions)!);\n\t\t}\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsPoints(\n\t\tparams: {\n\t\t\tpositions: GPULayer, // Positions in units of pixels.\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tpointSize?: number,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _pointIndexArray, _width, _height } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Check that numPoints is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsPoints() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\tconst { length } = positions;\n\t\tconst count = params.count || length;\n\t\tif (count > length) {\n\t\t\tthrow new Error(`Invalid count ${count} for position GPULayer of length ${length}.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);\n\t\t\tconst color = params.color || [1, 0, 0]; // Default of red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerPointsProgram!;\n\n\t\t// Add positions to end of input if needed.\n\t\tconst input = this._addLayerToInputs(positions, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positions', input.indexOf(positions), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 / _width, 1 / _height], FLOAT);\n\t\t// Tell whether we are using an absolute position (2 components), or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionWithAccumulation', positions.numComponents === 4, BOOL);\n\t\t// Set default pointSize.\n\t\tconst pointSize = params.pointSize || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_pointSize', pointSize, FLOAT);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapX', !!params.wrapX, BOOL);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapY', !!params.wrapY, BOOL);\n\t\tif (this._pointIndexBuffer === undefined || (_pointIndexArray && _pointIndexArray.length < count)) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\tthis._pointIndexArray = indices;\n\t\t\tthis._pointIndexBuffer = this._initVertexBuffer(indices);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._pointIndexBuffer!);\n\t\tthis._setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.POINTS, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsLines(\n\t\tparams: {\n\t\t\tpositions: GPULayer,\n\t\t\tindices?: Float32Array | Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tcloseLoop?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _width, _height } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Check that positions is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && params.indices) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = params.wrapX || params.wrapY ? this._getWrappedLineColorProgram() : this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerLinesProgram!;\n\n\t\t// Add positionLayer to end of input if needed.\n\t\tconst input = this._addLayerToInputs(positions, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// TODO: cache indexArray if no indices passed in.\n\t\tconst indices = params.indices ? params.indices : initSequentialFloatArray(params.count || positions.length);\n\t\tconst count = params.count ? params.count : indices.length;\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positions', input.indexOf(positions), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 / _width, 1 / _height], FLOAT);\n\t\t// Tell whether we are using an absolute position (2 components), or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionWithAccumulation', positions.numComponents === 4, BOOL);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapX', !!params.wrapX, BOOL);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapY', !!params.wrapY, BOOL);\n\t\tif (this._indexedLinesIndexBuffer === undefined) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tlet floatArray: Float32Array;\n\t\t\tif (indices.constructor !== Float32Array) {\n\t\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\t\tfloatArray = new Float32Array(indices.length);\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\tfloatArray[i] = indices[i];\n\t\t\t\t}\n\t\t\t\tconsole.warn(`Converting indices array of type ${indices.constructor} to Float32Array in GPUComposer.drawIndexedLines for WebGL compatibility, you may want to use a Float32Array to store this information so the conversion is not required.`);\n\t\t\t} else {\n\t\t\t\tfloatArray = indices as Float32Array;\n\t\t\t}\n\t\t\tthis._indexedLinesIndexBuffer = this._initVertexBuffer(floatArray);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._indexedLinesIndexBuffer!);\n\t\t\t// Copy buffer data.\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\t\t}\n\t\tthis._setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsVectorField(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tvectorSpacing?: number,\n\t\t\tvectorScale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _vectorFieldIndexArray, _width, _height } = this;\n\t\tconst { data, output } = params;\n\n\t\t// Check that field is valid.\n\t\tif (data.numComponents !== 2) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsVectorField() must be passed a fieldLayer with 2 components, got fieldLayer \"${data.name}\" with ${data.numComponents} components.`)\n\t\t}\n\t\t// Check aspect ratio.\n\t\t// const dimensions = [vectorLayer.width, vectorLayer.height];\n\t\t// if (Math.abs(dimensions[0] / dimensions[1] - width / height) > 0.01) {\n\t\t// \tthrow new Error(`Invalid aspect ratio ${(dimensions[0] / dimensions[1]).toFixed(3)} vector GPULayer with dimensions [${dimensions[0]}, ${dimensions[1]}], expected ${(width / height).toFixed(3)}.`);\n\t\t// }\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerVectorFieldProgram!;\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this._addLayerToInputs(data, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_vectors', input.indexOf(data), INT);\n\t\t// Set default scale.\n\t\tconst vectorScale = params.vectorScale || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [vectorScale / _width, vectorScale / _height], FLOAT);\n\t\tconst vectorSpacing = params.vectorSpacing || 10;\n\t\tconst spacedDimensions = [Math.floor(_width / vectorSpacing), Math.floor(_height / vectorSpacing)] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_dimensions', spacedDimensions, FLOAT);\n\t\tconst length = 2 * spacedDimensions[0] * spacedDimensions[1];\n\t\tif (this._vectorFieldIndexBuffer === undefined || (_vectorFieldIndexArray && _vectorFieldIndexArray.length < length)) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\tthis._vectorFieldIndexArray = indices;\n\t\t\tthis._vectorFieldIndexBuffer = this._initVertexBuffer(indices);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._vectorFieldIndexBuffer!);\n\t\tthis._setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.LINES, 0, length);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerMagnitude(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tscale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { data, output } = params;\n\n\t\tconst program = this._vectorMagnitudeProgramForType(data.type);\n\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\tprogram.setUniform('u_color', color, FLOAT);\n\t\tconst scale = params.scale || 1;\n\t\tprogram.setUniform('u_scale', scale, FLOAT);\n\t\tprogram.setUniform('u_internal_numDimensions', data.numComponents, INT);\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this._addLayerToInputs(data, params.input);\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_data', input.indexOf(data), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tresetThreeState() {\n\t\tif (!this._renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer, use GPUComposer.initWithThreeRenderer() to initialize GPUComposer instead.');\n\t\t}\n\t\tconst { gl } = this;\n\t\t// Reset viewport.\n\t\tconst viewport = this._renderer.getViewport(new utils.Vector4() as Vector4);\n\t\tgl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n\t\t// Unbind framebuffer (render to screen).\n\t\tthis._renderer.setRenderTarget(null);\n\t\t// Reset texture bindings.\n\t\tthis._renderer.resetState();\n\t}\n\n\t/**\n\t * Save the current state of the canvas to png.\n\t * @param params - PNG parameters.\n\t * @param params.filename - PNG filename (no extension).\n\t * @param params.dpi - PNG dpi (defaults to 72dpi).\n\t * @param params.callback - Optional callback when Blob is ready, default behavior saves the PNG using FileSaver.js. \n\t*/\n\tsavePNG(params: {\n\t\tfilename?: string,\n\t\tdpi?: number,\n\t\tmultiplier?: number,\n\t\tcallback?: (blob: Blob, filename: string) => void,\n\t} = {}) {\n\t\tconst { canvas } = this;\n\t\tconst filename = params.filename || 'output';\n\t\tconst callback = params.callback || saveAs; // Default to saving the image with FileSaver.\n\t\tcanvas.toBlob((blob) => {\n\t\t\tif (!blob) {\n\t\t\t\tconsole.warn(`Problem saving PNG from GPULayer \"${name}\", unable to init blob.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (params.dpi) {\n\t\t\t\tchangeDpiBlob(blob, params.dpi).then((blob: Blob) =>{\n\t\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t}\n\t\t}, 'image/png');\n\t}\n\n\ttick() {\n\t\tlet { _lastTickTime, _lastTickFPS } = this;\n\t\tconst currentTime = performance.now();\n\t\tthis._lastTickTime = currentTime;\n\t\tif (!_lastTickTime) {\n\t\t\treturn { fps: 0, milliseconds: 0 };\n\t\t}\n\t\tconst currentFPS = 1000 / (currentTime - _lastTickTime);\n\t\tif (!_lastTickFPS) _lastTickFPS = currentFPS;\n\t\t// Use a low pass filter to smooth out fps reading.\n\t\tconst factor = 0.9;\n\t\tconst fps =  Number.parseFloat((factor * _lastTickFPS + (1 - factor) * currentFPS).toFixed(1));\n\t\tthis._lastTickFPS = fps;\n\t\tthis._numTicks += 1;\n\t\treturn {\n\t\t\tfps,\n\t\t\tnumTicks: this._numTicks,\n\t\t}\n\t}\n\t\n\tdispose() {\n\t\tconst {\n\t\t\tgl, verboseLogging,\n\t\t\t_vertexShaders,\n\t\t\t_copyPrograms, _setValuePrograms, _vectorMagnitudePrograms,\n\t\t} = this;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUComposer.`);\n\n\t\t// TODO: delete buffers.\n\n\t\t// Delete vertex shaders.\n\t\tObject.values(_vertexShaders).forEach(vertexShader => {\n\t\t\tif (vertexShader.shader) {\n\t\t\t\tgl.deleteShader(vertexShader.shader);\n\t\t\t\tdelete vertexShader.shader;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Delete fragment shaders.\n\t\tObject.values(_copyPrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_copyPrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _copyPrograms[key];\n\t\t});\n\t\tObject.values(_setValuePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_setValuePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _setValuePrograms[key];\n\t\t});\n\t\tObject.values(_vectorMagnitudePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_vectorMagnitudePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _vectorMagnitudePrograms[key];\n\t\t});\n\t\tthis._wrappedLineColorProgram?.dispose();\n\t\tdelete this._wrappedLineColorProgram;\n\n\t\t// @ts-ignore\n\t\tdelete this._renderer;\n\t\t// @ts-ignore\n\t\tdelete this.gl;\n\t\t// @ts-ignore;\n\t\tdelete this.canvas;\n\t\t// GL context will be garbage collected by webgl.\n\t}\n}","import { setFloat16, getFloat16 } from '@petamoriken/float16';\n// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { saveAs } from 'file-saver';\nimport { GPUComposer } from './GPUComposer';\nimport {\n\tisArray,\n\tisNumber,\n\tisObject,\n\tisPositiveInteger,\n\tisValidClearValue,\n\tisValidDataType,\n\tisValidFilter,\n\tisValidWrap,\n} from './checks';\nimport {\n\tHALF_FLOAT,\n\tFLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tNEAREST,\n\tLINEAR,\n\tCLAMP_TO_EDGE,\n\tGPULayerArray,\n\tGPULayerFilter,\n\tGPULayerNumComponents,\n\tGPULayerType,\n\tGPULayerWrap,\n\tGPULayerBuffer,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidDataTypes,\n } from './constants';\nimport {\n\treadyToRead,\n} from './utils';\nimport {\n\tcalcGPULayerSize,\n\tgetGLTextureParameters,\n\tgetGPULayerInternalFilter,\n\tgetGPULayerInternalType,\n\tgetGPULayerInternalWrap,\n\tinitArrayForType,\n\tvalidateGPULayerArray,\n} from './GPULayerHelpers';\nimport { Texture } from 'three';\n\nexport class GPULayer {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly _composer: GPUComposer;\n\n\t/**\n\t * Name of GPULayer, used for error logging.\n\t */\n\treadonly name: string;\n\t/**\n\t * Data type represented by GPULayer.\n\t */\n\treadonly type: GPULayerType; // Input type passed in during setup.\n\t/**\n\t * Number of RGBA elements represented by each pixel in the GPULayer (1-4).\n\t */\n\treadonly numComponents: GPULayerNumComponents;\n\t/**\n\t * Interpolation filter for GPULayer, defaults to LINEAR for 2D FLOAT/HALF_FLOAT GPULayers, otherwise defaults to NEAREST.\n\t */\n\treadonly filter: GPULayerFilter;\n\t/**\n\t * Horizontal wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t */\n\treadonly wrapS: GPULayerWrap;\n\t/**\n\t * Vertical wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t */\n\treadonly wrapT: GPULayerWrap;\n\t/**\n\t * Sets GPULayer as readonly or readwrite, defaults to false.\n\t */\n\treadonly writable: boolean;\n\t// Value to set when clear() is called, defaults to zero.\n\t// Access with GPULayer.clearValue.\n\tprivate _clearValue: number | number[] = 0;\n\n\t// Each GPULayer may contain a number of buffers to store different instances of the state.\n\t// e.g [currentState, previousState]\n\tprivate _bufferIndex = 0;\n\treadonly numBuffers;\n\tprivate readonly _buffers: GPULayerBuffer[] = [];\n\n\t// Texture sizes.\n\tprivate _length?: number; // This is only used for 1D data layers, access with GPULayer.length.\n\tprivate _width: number; // Access with GPULayer.width.\n\tprivate _height: number; // Access with GPULayer.height.\n\n\t// GPULayer settings.\n\t// Due to variable browser support of WebGL features, \"internal\" variables may be different\n\t// from the parameter originally passed in.  These variables are set so that they match the original\n\t// parameter as best as possible, but fragment shader polyfills may be required.\n\t// All \"gl\" variables are used to initialize internal WebGLTexture.\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\t/**\n\t * @private\n\t */\n\treadonly _glInternalFormat: number;\n\t/**\n\t * @private\n\t */\n\treadonly _glFormat: number;\n\n\t// GPULayer.internalType corresponds to GPULayer.glType, may be different from GPULayer.type.\n\t/**\n\t * @private\n\t */\n\treadonly _internalType: GPULayerType;\n\t/**\n\t * @private\n\t */\n\treadonly _glType: number;\n\n\t// Internally, GPULayer.glNumChannels may represent a larger number of channels than GPULayer.numComponents.\n\t// For example, writable RGB textures are not supported in WebGL2, must use RGBA instead.\n\t/**\n\t * @private\n\t */\n\treadonly _glNumChannels: number;\n\n\t// GPULayer.internalFilter corresponds to GPULayer.glFilter, may be different from GPULayer.filter.\n\t/**\n\t * @private\n\t */\n\treadonly _internalFilter: GPULayerFilter;\n\t/**\n\t * @private\n\t */\n\treadonly _glFilter: number;\n\n\t// GPULayer.internalWrapS corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapS.\n\t/**\n\t * @private\n\t */\n\treadonly _internalWrapS: GPULayerWrap;\n\t/**\n\t * @private\n\t */\n\treadonly _glWrapS: number;\n\n\t// GPULayer.internalWrapT corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapT.\n\t/**\n\t * @private\n\t */\n\treadonly _internalWrapT: GPULayerWrap;\n\t/**\n\t * @private\n\t */\n\treadonly _glWrapT: number;\n\t\n\t// Optimizations so that \"copying\" can happen without draw calls.\n\t// TODO: take a second look at this.\n\tprivate _textureOverrides?: (WebGLTexture | undefined)[];\n\n\t/**\n\t * Create a GPULayer.\n\t * @param composer - The current GPUComposer instance.\n\t * @param params  - GPULayer parameters.\n\t * @param params.name - Name of GPULayer, used for error logging.\n \t * @param params.type - Data type represented by GPULayer.\n\t * @param params.numComponents - Number of RGBA elements represented by each pixel in the GPULayer (1-4).\n\t * @param params.dimensions - Dimensions of 1D or 2D GPULayer.\n\t * @param params.filter - Interpolation filter for GPULayer, defaults to LINEAR for 2D FLOAT/HALF_FLOAT GPULayers, otherwise defaults to NEAREST.\n\t * @param params.wrapS - Horizontal wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t * @param params.wrapT - Vertical wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t * @param params.writable - Sets GPULayer as readonly or readwrite, defaults to false.\n\t * @param params.numBuffers - How may buffers to allocate, defaults to 1.  If you intend to use the current state of this GPULayer as an input to generate a new state, you will need at least 2 buffers.\n\t * @param params.clearValue - Value to write to GPULayer when GPULayer.clear() is called.\n\t * @param params.array - Array to initialize GPULayer.\n\t */\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\ttype: GPULayerType,\n\t\t\tnumComponents: GPULayerNumComponents,\n\t\t\tdimensions: number | [number, number],\n\t\t\tarray?: GPULayerArray | number[],\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\twritable?: boolean,\n\t\t\tnumBuffers?: number,\n\t\t\tclearValue?: number | number[],\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPULayer \"${name}\": must pass GPUComposer instance to GPULayer(composer, params).`);\n\t\t}\n\t\tif (!params) {\n\t\t\tthrow new Error('Error initing GPULayer: must pass params to GPULayer(composer, params).');\n\t\t}\n\t\tif (!isObject(params)) {\n\t\t\tthrow new Error(`Error initing GPULayer: must pass valid params object to GPULayer(composer, params), got ${JSON.stringify(params)}.`);\n\t\t}\n\t\t// Check params keys.\n\t\tconst validKeys = ['name', 'type', 'numComponents', 'dimensions', 'filter', 'wrapS', 'wrapT', 'writable', 'numBuffers', 'clearValue', 'array'];\n\t\tconst requiredKeys = ['name', 'type', 'numComponents', 'dimensions'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPULayer(composer, params) with name \"${params.name}\".  Valid keys are ${JSON.stringify(validKeys)}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPULayer(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { dimensions, type, numComponents } = params;\n\t\tconst { gl } = composer;\n\n\t\t// Save params.\n\t\tthis._composer = composer;\n\t\tthis.name = name;\n\n\t\t// numComponents must be between 1 and 4.\n\t\tif (!isPositiveInteger(numComponents) || numComponents > 4) {\n\t\t\tthrow new Error(`Invalid numComponents: ${JSON.stringify(numComponents)} for GPULayer \"${name}\", must be number in range [1-4].`);\n\t\t}\n\t\tthis.numComponents = numComponents;\n\n\t\t// Writable defaults to false.\n\t\tconst writable = !!params.writable;\n\t\tthis.writable = writable;\n\n\t\t// Set dimensions, may be 1D or 2D.\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, composer.verboseLogging);\n\t\t// We already type checked length, width, and height in calcGPULayerSize.\n\t\tthis._length = length;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\t// Set filtering - if we are processing a 1D array, default to NEAREST filtering.\n\t\t// Else default to LINEAR (interpolation) filtering for float types and NEAREST for integer types.\n\t\tconst defaultFilter = length ? NEAREST : ((type === FLOAT || type == HALF_FLOAT) ? LINEAR : NEAREST);\n\t\tconst filter = params.filter !== undefined ? params.filter : defaultFilter;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${JSON.stringify(filter)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validFilters)}.`);\n\t\t}\n\t\t// Don't allow LINEAR filtering on integer types, it is not supported.\n\t\tif (filter === LINEAR && !(type === FLOAT || type == HALF_FLOAT)) {\n\t\t\tthrow new Error(`LINEAR filtering is not supported on integer types, please use NEAREST filtering for GPULayer \"${name}\" with type: ${type}.`);\n\t\t}\n\t\tthis.filter = filter;\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${JSON.stringify(wrapS)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validWraps)}.`);\n\t\t}\n\t\tthis.wrapS = wrapS;\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${JSON.stringify(wrapT)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validWraps)}.`);\n\t\t}\n\t\tthis.wrapT = wrapT;\n\n\t\t// Set data type.\n\t\tif (!isValidDataType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${JSON.stringify(type)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validDataTypes)}.`);\n\t\t}\n\t\tthis.type = type;\n\t\tconst internalType = getGPULayerInternalType({\n\t\t\tcomposer,\n\t\t\ttype,\n\t\t\twritable,\n\t\t\tname,\n\t\t});\n\t\tthis._internalType = internalType;\n\t\t// Set gl texture parameters.\n\t\tconst {\n\t\t\tglFormat,\n\t\t\tglInternalFormat,\n\t\t\tglType,\n\t\t\tglNumChannels,\n\t\t} = getGLTextureParameters({\n\t\t\tcomposer,\n\t\t\tname,\n\t\t\tnumComponents,\n\t\t\twritable,\n\t\t\tinternalType,\n\t\t});\n\t\tthis._glInternalFormat = glInternalFormat;\n\t\tthis._glFormat = glFormat;\n\t\tthis._glType = glType;\n\t\tthis._glNumChannels = glNumChannels;\n\n\t\t// Set internal filtering/wrap types.\n\t\t// Make sure that we set filter BEFORE setting wrap.\n\t\tconst internalFilter = getGPULayerInternalFilter({ composer, filter, internalType, name });\n\t\tthis._internalFilter = internalFilter;\n\t\tthis._glFilter = gl[internalFilter];\n\t\tthis._internalWrapS = getGPULayerInternalWrap({ composer, wrap: wrapS, internalFilter, internalType, name });\n\t\tthis._glWrapS = gl[this._internalWrapS];\n\t\tthis._internalWrapT = getGPULayerInternalWrap({ composer, wrap: wrapT, internalFilter, internalType, name });\n\t\tthis._glWrapT = gl[this._internalWrapT];\n\t\t\n\n\t\t// Num buffers is the number of states to store for this data.\n\t\tconst numBuffers = params.numBuffers !== undefined ? params.numBuffers : 1;\n\t\tif (!isPositiveInteger(numBuffers)) {\n\t\t\tthrow new Error(`Invalid numBuffers: ${JSON.stringify(numBuffers)} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tthis.numBuffers = numBuffers;\n\n\t\t// Wait until after type has been set to set clearValue.\n\t\tif (params.clearValue !== undefined) {\n\t\t\tthis.clearValue = params.clearValue; // Setter can only be called after this.numComponents has been set.\n\t\t}\n\n\t\tthis._initBuffers(params.array);\n\t}\n\n\t/**\n\t * The width of the GPULayer array.\n\t */\n\t get width() {\n\t\treturn this._width;\n\t}\n\n\t/**\n\t * The height of the GPULayer array.\n\t */\n\tget height() {\n\t\treturn this._height;\n\t}\n\n\t/**\n\t * The length of the GPULayer array (only available to 1D GPULayers).\n\t */\n\tget length() {\n\t\tif (!this._length) {\n\t\t\tthrow new Error(`Cannot access length on 2D GPULayer \"${this.name}\".`);\n\t\t}\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * Returns whether the GPULayer was inited as a 1D array (rather than 2D).\n\t * @returns - true if GPULayer is 1D, else false.\n\t */\n\tis1D() {\n\t\treturn this._length !== undefined;\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t_usingTextureOverrideForCurrentBuffer() {\n\t\treturn this._textureOverrides && this._textureOverrides[this.bufferIndex];\n\t}\n\n\t// saveCurrentStateToGPULayer(layer: GPULayer) {\n\t// \t// A method for saving a copy of the current state without a draw call.\n\t// \t// Draw calls are expensive, this optimization helps.\n\t// \tif (this.numBuffers < 2) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" with less than 2 buffers.`);\n\t// \t}\n\t// \tif (!this.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on read-only GPULayer \"${this.name}\".`);\n\t// \t}\n\t// \tif (layer.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" using writable GPULayer \"${layer.name}\".`)\n\t// \t}\n\t// \t// Check that texture params are the same.\n\t// \tif (layer.glWrapS !== this.glWrapS || layer.glWrapT !== this.glWrapT ||\n\t// \t\tlayer.wrapS !== this.wrapS || layer.wrapT !== this.wrapT ||\n\t// \t\tlayer.width !== this.width || layer.height !== this.height ||\n\t// \t\tlayer.glFilter !== this.glFilter || layer.filter !== this.filter ||\n\t// \t\tlayer.glNumChannels !== this.glNumChannels || layer.numComponents !== this.numComponents ||\n\t// \t\tlayer.glType !== this.glType || layer.type !== this.type ||\n\t// \t\tlayer.glFormat !== this.glFormat || layer.glInternalFormat !== this.glInternalFormat) {\n\t// \t\t\tthrow new Error(`Incompatible texture params between GPULayers \"${layer.name}\" and \"${this.name}\".`);\n\t// \t}\n\n\t// \t// If we have not already inited overrides array, do so now.\n\t// \tif (!this.textureOverrides) {\n\t// \t\tthis.textureOverrides = [];\n\t// \t\tfor (let i = 0; i < this.numBuffers; i++) {\n\t// \t\t\tthis.textureOverrides.push(undefined);\n\t// \t\t}\n\t// \t}\n\n\t// \t// Check if we already have an override in place.\n\t// \tif (this.textureOverrides[this.bufferIndex]) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\", this GPULayer has not written new state since last call to GPULayer.saveCurrentStateToGPULayer.`);\n\t// \t}\n\t// \tconst { currentState } = this;\n\t// \tthis.textureOverrides[this.bufferIndex] = currentState;\n\t// \t// Swap textures.\n\t// \tthis.buffers[this.bufferIndex].texture = layer.currentState;\n\t// \tlayer._setCurrentStateTexture(currentState);\n\n\t// \t// Bind swapped texture to framebuffer.\n\t// \tconst { gl } = this.composer;\n\t// \tconst { framebuffer, texture } = this.buffers[this.bufferIndex];\n\t// \tif (!framebuffer) throw new Error(`No framebuffer for writable GPULayer \"${this.name}\".`);\n\t// \tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// \t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t// \tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t// \t// Unbind.\n\t// \tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t// }\n\n\t// // This is used internally.\n\t// _setCurrentStateTexture(texture: WebGLTexture) {\n\t// \tif (this.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer._setCurrentStateTexture on writable texture \"${this.name}\".`);\n\t// \t}\n\t// \tthis.buffers[this.bufferIndex].texture = texture;\n\t// }\n\n\t/**\n\t * Init GLTexture/GLFramebuffer pairs for reading/writing GPULayer data.\n\t * @private\n\t */\n\tprivate _initBuffers(\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst {\n\t\t\tname,\n\t\t\tnumBuffers,\n\t\t\t_composer,\n\t\t\t_glInternalFormat,\n\t\t\t_glFormat,\n\t\t\t_glType,\n\t\t\t_glFilter,\n\t\t\t_glWrapS,\n\t\t\t_glWrapT,\n\t\t\twritable,\n\t\t\twidth,\n\t\t\theight,\n\t\t} = this;\n\t\tconst { gl, _errorCallback } = _composer;\n\n\t\tconst validatedArray = array ? validateGPULayerArray(array, this) : undefined;\n\n\t\t// Init a texture for each buffer.\n\t\tfor (let i = 0; i < numBuffers; i++) {\n\t\t\tconst texture = gl.createTexture();\n\t\t\tif (!texture) {\n\t\t\t\t_errorCallback(`Could not init texture for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\t\t// TODO: are there other params to look into:\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, _glWrapS);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, _glWrapT);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, _glFilter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, _glFilter);\n\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, validatedArray ? validatedArray : null);\n\t\t\t\n\t\t\tconst buffer: GPULayerBuffer = {\n\t\t\t\ttexture,\n\t\t\t};\n\n\t\t\tif (writable) {\n\t\t\t\t// Init a framebuffer for this texture so we can write to it.\n\t\t\t\tconst framebuffer = gl.createFramebuffer();\n\t\t\t\tif (!framebuffer) {\n\t\t\t\t\t_errorCallback(`Could not init framebuffer for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\t\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\t\tif(status !== gl.FRAMEBUFFER_COMPLETE){\n\t\t\t\t\t_errorCallback(`Invalid status for framebuffer for GPULayer \"${name}\": ${status}.`);\n\t\t\t\t}\n\n\t\t\t\t// Add framebuffer.\n\t\t\t\tbuffer.framebuffer = framebuffer;\n\t\t\t}\n\t\t\t\n\t\t\t// Save this buffer to the list.\n\t\t\tthis._buffers.push(buffer);\n\t\t}\n\t\t// Unbind.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\t\n\t/**\n\t * Get buffer index of the current state.\n\t */\n\tget bufferIndex() {\n\t\treturn this._bufferIndex;\n\t}\n\n\t/**\n\t * Increment buffer index by 1.\n\t */\n\tincrementBufferIndex() {\n\t\t// Increment bufferIndex.\n\t\tthis._bufferIndex = (this.bufferIndex + 1) % this.numBuffers;\n\t}\n\n\t/**\n\t * Get the current state as a GLTexture.\n\t */\n\tget currentState() {\n\t\treturn this.getStateAtIndex(this.bufferIndex);\n\t}\n\n\t/**\n\t * Get the previous state as a GLTexture (only available for GPULayers with numBuffers > 1).\n\t */\n\tget lastState() {\n\t\tif (this.numBuffers === 1) {\n\t\t\tthrow new Error(`Cannot access lastState on GPULayer \"${this.name}\" with only one buffer.`);\n\t\t}\n\t\treturn this.getStateAtIndex((this.bufferIndex - 1 + this.numBuffers) % this.numBuffers);\n\t}\n\n\t/**\n\t * Get the state at a specified index as a GLTexture.\n\t */\n\tgetStateAtIndex(index: number) {\n\t\tconst { numBuffers, _textureOverrides, _buffers } = this;\n\t\tif (index < 0 && index > -numBuffers) {\n\t\t\tindex += numBuffers; // Slightly negative numbers are ok.\n\t\t}\n\t\tif (index < 0 || index >= numBuffers) {\n\t\t\t// We will allow this number to overflow with warning - likely user error.\n\t\t\tconsole.warn(`Out of range buffer index: ${index} for GPULayer \"${this.name}\" with $.numBuffers} buffer${numBuffers > 1 ? 's' : ''}.  Was this intentional?`);\n\t\t\tif (index < 0) {\n\t\t\t\tindex += numBuffers * Math.ceil(Math.abs(index) / numBuffers);\n\t\t\t} else {\n\t\t\t\tindex = index % numBuffers;\n\t\t\t}\n\t\t}\n\t\tif (_textureOverrides && _textureOverrides[index]) return _textureOverrides[index]!;\n\t\treturn _buffers[index].texture;\n\t}\n\n\t/**\n\t * Binds this GPULayer's current framebuffer as the draw target.\n\t */\n\tprivate _bindFramebuffer() {\n\t\tconst { gl } = this._composer;\n\t\tconst { framebuffer } = this._buffers[this.bufferIndex];\n\t\tif (!framebuffer) {\n\t\t\tthrow new Error(`GPULayer \"${this.name}\" is not writable.`);\n\t\t}\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t}\n\n\t/**\n\t * Increments the buffer index (if needed) and binds next framebuffer as draw target.\n\t * @private\n\t */\n\t_prepareForWrite(\n\t\tincrementBufferIndex: boolean,\n\t) {\n\t\tif (incrementBufferIndex) {\n\t\t\tthis.incrementBufferIndex();\n\t\t}\n\t\tthis._bindFramebuffer();\n\n\t\t// We are going to do a data write, if we have overrides enabled, we can remove them.\n\t\tif (this._textureOverrides) {\n\t\t\tthis._textureOverrides[this.bufferIndex] = undefined;\n\t\t}\n\t}\n\n\tsetFromArray(array: GPULayerArray | number[], applyToAllBuffers = false) {\n\t\tconst { _composer, _glInternalFormat, _glFormat, _glType, numBuffers, width, height, bufferIndex } = this;\n\t\tconst { gl } = _composer;\n\t\tconst validatedArray = validateGPULayerArray(array, this);\n\t\t// TODO: check that this is working.\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tconst texture = this.getStateAtIndex(i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, validatedArray);\n\t\t}\n\t\t// Unbind texture.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tresize(\n\t\tdimensions: number | [number, number],\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst { name, _composer } = this;\n\t\tconst { verboseLogging } = _composer;\n\t\tif (verboseLogging) console.log(`Resizing GPULayer \"${name}\" to ${JSON.stringify(dimensions)}.`);\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, verboseLogging);\n\t\tthis._length = length;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._destroyBuffers();\n\t\tthis._initBuffers(array);\n\t}\n\n\t/**\n\t * Set the clearValue of the GPULayer, which is applied during GPULayer.clear().\n\t */\n\tset clearValue(clearValue: number | number[]) {\n\t\tconst { numComponents, type } = this;\n\t\tif (!isValidClearValue(clearValue, numComponents, type)) {\n\t\t\tthrow new Error(`Invalid clearValue: ${JSON.stringify(clearValue)} for GPULayer \"${this.name}\", expected ${type} or array of ${type} of length ${numComponents}.`);\n\t\t}\n\t\t// Make deep copy if needed.\n\t\tthis._clearValue = isArray(clearValue) ? (clearValue as number[]).slice() : clearValue;\n\t}\n\n\t/**\n\t * Get the clearValue of the GPULayer.\n\t */\n\tget clearValue() {\n\t\treturn this._clearValue;\n\t}\n\n\t/**\n\t * Clear all data in GPULayer to GPULayer.clearValue.\n\t * @param applyToAllBuffers - Flag to apply to all buffers of GPULayer, or just the current output buffer.\n\t */\n\tclear(applyToAllBuffers = false) {\n\t\tconst { name, _composer, clearValue, numBuffers, bufferIndex, type } = this;\n\t\tconst { verboseLogging } = _composer;\n\t\tif (verboseLogging) console.log(`Clearing GPULayer \"${name}\".`);\n\n\t\tconst value: number[] = [];\n\t\tif (isNumber(clearValue)) {\n\t\t\tvalue.push(clearValue as number, clearValue as number, clearValue as number, clearValue as number);\n\t\t} else {\n\t\t\tvalue.push(...clearValue as number[]);\n\t\t\tfor (let j = value.length; j < 4; j++) {\n\t\t\t\tvalue.push(0);\n\t\t\t}\n\t\t}\n\t\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tif (this.writable) {\n\t\t\tconst program = _composer._setValueProgramForType(type);\n\t\t\tprogram.setUniform('u_value', value as [number, number, number, number]);\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t// Write clear value to buffers.\n\t\t\t\t_composer.step({\n\t\t\t\t\tprogram,\n\t\t\t\t\toutput: this,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// Init a typed array containing clearValue and pass to buffers.\n\t\t\tconst {\n\t\t\t\twidth, height, _glNumChannels, _internalType,\n\t\t\t\t_glInternalFormat, _glFormat, _glType,\n\t\t\t} = this;\n\t\t\tconst { gl } = _composer;\n\t\t\tconst fillLength = this._length ? this._length : width * height;\n\t\t\tconst array = initArrayForType(_internalType, width * height * _glNumChannels);\n\t\t\tconst float16View = _internalType === HALF_FLOAT ? new DataView(array.buffer) : null;\n\t\t\tfor (let j = 0; j < fillLength; j++) {\n\t\t\t\tfor (let k = 0; k < _glNumChannels; k++) {\n\t\t\t\t\tconst index = j * _glNumChannels + k;\n\t\t\t\t\tif (_internalType === HALF_FLOAT) {\n\t\t\t\t\t\t// Float16 needs to be handled separately.\n\t\t\t\t\t\tsetFloat16(float16View!, 2 * index, value[k], true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray[index] = value[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst texture = this.getStateAtIndex(i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, array);\n\t\t\t}\n\t\t\t// Unbind texture.\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t}\n\t}\n\n\t// TODO: this does not work on non-writable GPULayers, change this?\n\t/**\n\t * Returns the current values of the GPULayer as a TypedArray.\n\t * @returns - A TypedArray containing current state of GPULayer.\n\t */\n\tgetValues() {\n\t\tconst { width, height, _composer, numComponents, type } = this;\n\t\tconst { gl } = _composer;\n\n\t\t// In case GPULayer was not the last output written to.\n\t\tthis._bindFramebuffer();\n\n\t\tlet { _glNumChannels, _glType, _glFormat, _internalType } = this;\n\t\tlet values;\n\t\tswitch (_internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tif (gl.FLOAT !== undefined) {\n\t\t\t\t\t// Firefox requires that RGBA/FLOAT is used for readPixels of float16 types.\n\t\t\t\t\t_glNumChannels = 4;\n\t\t\t\t\t_glFormat = gl.RGBA;\n\t\t\t\t\t_glType = gl.FLOAT;\n\t\t\t\t\tvalues = new Float32Array(width * height * _glNumChannels);\n\t\t\t\t} else {\n\t\t\t\t\tvalues = new Uint16Array(width * height * _glNumChannels);\n\t\t\t\t}\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak\n\t\t\tcase FLOAT:\n\t\t\t\t// Chrome and Firefox require that RGBA/FLOAT is used for readPixels of float32 types.\n\t\t\t\t// https://github.com/KhronosGroup/WebGL/issues/2747\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = gl.RGBA;\n\t\t\t\tvalues = new Float32Array(width * height * _glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\t// We never hit glslVersion === GLSL1 anymore, see GPULayerHelpers.shouldCastIntTypeAsFloat for more info.\n\t\t\t\t// if (glslVersion === GLSL1) {\n\t\t\t\t// \t// Firefox requires that RGBA/UNSIGNED_BYTE is used for readPixels of unsigned byte types.\n\t\t\t\t// \t_glNumChannels = 4;\n\t\t\t\t// \t_glFormat = gl.RGBA;\n\t\t\t\t// \tvalues = new Uint8Array(width * height * _glNumChannels);\n\t\t\t\t// \tbreak;\n\t\t\t\t// }\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported internalType ${_internalType} for getValues().`);\n\t\t}\n\n\t\tif (readyToRead(gl)) {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\n\t\t\tgl.readPixels(0, 0, width, height, _glFormat, _glType, values);\n\t\t\tconst OUTPUT_LENGTH = (this._length ? this._length : width * height) * numComponents;\n\n\t\t\t// Convert uint16 to float32 if needed.\n\t\t\tconst handleFloat16Conversion = _internalType === HALF_FLOAT && values.constructor === Uint16Array;\n\t\t\t// @ts-ignore\n\t\t\tconst view = handleFloat16Conversion ? new DataView((values as Uint16Array).buffer) : undefined;\n\n\t\t\t// We may use a different internal type than the assigned type of the GPULayer.\n\t\t\tlet output: GPULayerArray = _internalType === type ? values : initArrayForType(type, OUTPUT_LENGTH, true);\n\n\t\t\t// In some cases glNumChannels may be > numComponents.\n\t\t\tif (view || output !== values || numComponents !== _glNumChannels) {\n\t\t\t\tfor (let i = 0, length = width * height; i < length; i++) {\n\t\t\t\t\tconst index1 = i * _glNumChannels;\n\t\t\t\t\tconst index2 = i * numComponents;\n\t\t\t\t\tif (index2 >= OUTPUT_LENGTH) break;\n\t\t\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\t\t\tif (view) {\n\t\t\t\t\t\t\toutput[index2 + j] = getFloat16(view, 2 * (index1 + j), true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toutput[index2 + j] = values[index1 + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (output.length !== OUTPUT_LENGTH) {\n\t\t\t\toutput = output.slice(0, OUTPUT_LENGTH);\n\t\t\t}\n\t\t\treturn output;\n\t\t} else {\n\t\t\tthrow new Error(`Unable to read values from Buffer with status: ${gl.checkFramebufferStatus(gl.FRAMEBUFFER)}.`);\n\t\t}\n\t}\n\n\t// TODO: this does not work on non-writable GPULayers, change this?\n\t/**\n\t * Save the current state of this GPULayer to png.\n\t * @param params - PNG parameters.\n\t * @param params.filename - PNG filename (no extension, defaults to the name of the GPULayer).\n\t * @param params.dpi - PNG dpi (defaults to 72dpi).\n\t * @param params.multiplier - Multiplier to apply to data before saving PNG (defaults to 255 for FLOAT and HALF_FLOAT types, else 1).\n\t * @param params.callback - Optional callback when Blob is ready, default behavior saves the PNG using FileSaver.js. \n\t*/\n\tsavePNG(params: {\n\t\tfilename?: string,\n\t\tdpi?: number,\n\t\tmultiplier?: number,\n\t\tcallback?: (blob: Blob, filename: string) => void,\n\t} = {}) {\n\t\tconst values = this.getValues();\n\t\tconst { width, height, type, name, numComponents } = this;\n\t\tconst callback = params.callback || saveAs; // Default to saving the image with FileSaver.\n\t\tconst filename = params.filename || name; // Default to the name of this layer.\n\t\tconst multiplier = params.multiplier ||\n\t\t\t((type === FLOAT || type === HALF_FLOAT) ? 255 : 1);\n\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n    \tcanvas.height = height;\n\t\tconst context = canvas.getContext('2d')!;\n\t\tconst imageData = context.getImageData(0, 0, width, height);\n\t\tconst buffer = imageData.data;\n\t\t// Have to flip the y axis since PNGs are written top to bottom.\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tconst index = y * width + x;\n\t\t\t\tconst indexFlipped = (height - 1 - y) * width + x;\n\t\t\t\tfor (let i = 0; i < numComponents; i++) {\n\t\t\t\t\tbuffer[4 * indexFlipped + i] = values[numComponents * index + i] * multiplier;\n\t\t\t\t}\n\t\t\t\tif (numComponents === 1) {\n\t\t\t\t\t// Make monochrome.\n\t\t\t\t\tbuffer[4 * indexFlipped + 1] = buffer[4 * indexFlipped];\n\t\t\t\t\tbuffer[4 * indexFlipped + 2] = buffer[4 * indexFlipped];\n\t\t\t\t}\n\t\t\t\tif (numComponents < 4) {\n\t\t\t\t\tbuffer[4 * indexFlipped + 3] = 255; // Set alpha channel to 255.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcontext.putImageData(imageData, 0, 0);\n\n\t\tcanvas.toBlob((blob) => {\n\t\t\tif (!blob) {\n\t\t\t\tconsole.warn(`Problem saving PNG from GPULayer \"${name}\", unable to init blob.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (params.dpi) {\n\t\t\t\tchangeDpiBlob(blob, params.dpi).then((blob: Blob) =>{\n\t\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t}\n\t\t}, 'image/png');\n\t}\n\n\t/**\n\t * Attach the output buffer of this GPULayer to a Threejs Texture object.\n\t * @param {Texture} texture - Threejs texture object.\n\t */\n\tattachToThreeTexture(texture: Texture) {\n\t\tconst { _composer, numBuffers, currentState, name } = this;\n\t\tconst { _renderer } = _composer;\n\t\tif (!_renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer.');\n\t\t}\n\t\t// Link webgl texture to threejs object.\n\t\t// This is not officially supported.\n\t\tif (numBuffers > 1) {\n\t\t\tthrow new Error(`GPULayer \"${name}\" contains multiple WebGL textures (one for each buffer) that are flip-flopped during compute cycles, please choose a GPULayer with one buffer.`);\n\t\t}\n\t\tconst offsetTextureProperties = _renderer.properties.get(texture);\n\t\toffsetTextureProperties.__webglTexture = currentState;\n\t\toffsetTextureProperties.__webglInit = true;\n\t}\n\n\t/**\n\t * Delete this GPULayer's framebuffers and textures.\n\t * @private\n\t */\n\tprivate _destroyBuffers() {\n\t\tconst { _composer, _buffers } = this;\n\t\tconst { gl } = _composer;\n\t\t_buffers.forEach(buffer => {\n\t\t\tconst { framebuffer, texture } = buffer;\n\t\t\tgl.deleteTexture(texture);\n\t\t\tif (framebuffer) {\n\t\t\t\tgl.deleteFramebuffer(framebuffer);\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tdelete buffer.texture;\n\t\t\tdelete buffer.framebuffer;\n\t\t});\n\t\t_buffers.length = 0;\n\n\t\t// These are technically owned by another GPULayer,\n\t\t// so we are not responsible for deleting them from gl context.\n\t\tdelete this._textureOverrides;\n\t}\n\n\t/**\n\t * Create a deep copy of GPULayer with current state copied over.\n\t * @param name - Name of new GPULayer as string.\n\t * @returns - Deep copy of GPULayer.\n\t */\n\tclone(name?: string) {\n\t\t// Make a deep copy.\n\t\treturn this._composer._cloneGPULayer(this, name);\n\t}\n\n\t/**\n\t * Deallocate GPULayer instance and associated WebGL properties.\n\t */\n\tdispose() {\n\t\tconst { name, _composer } = this;\n\t\tconst { gl, verboseLogging } = _composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPULayer \"${name}\".`);\n\n\t\tif (!gl) throw new Error(`Must call dispose() on all GPULayers before calling dispose() on GPUComposer.`);\n\t\n\t\tthis._destroyBuffers();\n\t\t// @ts-ignore\n\t\tdelete this._buffers;\n\t\t// @ts-ignore\n\t\tdelete this._composer;\n\t}\n}","import { setFloat16 } from '@petamoriken/float16';\nimport {\n\tisNumber,\n\tisPositiveInteger,\n} from './checks';\nimport {\n\tBYTE,\n\tCLAMP_TO_EDGE,\n\tFLOAT,\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tHALF_FLOAT,\n\tINT,\n\tNEAREST,\n\tSHORT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_INT,\n\tUNSIGNED_SHORT,\n\tGLSL3,\n\tGPULayerNumComponents,\n\tGLSL1,\n\tGPULayerArray,\n\tvalidArrayTypes,\n\tMIN_UNSIGNED_BYTE,\n\tMAX_UNSIGNED_BYTE,\n\tMIN_BYTE,\n\tMAX_BYTE,\n\tMIN_UNSIGNED_SHORT,\n\tMAX_UNSIGNED_SHORT,\n\tMIN_SHORT,\n\tMAX_SHORT,\n\tMIN_UNSIGNED_INT,\n\tMAX_UNSIGNED_INT,\n\tMIN_INT,\n\tMAX_INT,\n\tLINEAR,\n} from './constants';\nimport {\n\tEXT_COLOR_BUFFER_FLOAT,\n\tEXT_COLOR_BUFFER_HALF_FLOAT,\n\tgetExtension,\n\tOES_TEXTURE_FLOAT,\n\tOES_TEXTURE_FLOAT_LINEAR,\n\tOES_TEXTURE_HALF_FLOAT,\n\tOES_TEXTURE_HAlF_FLOAT_LINEAR,\n} from './extensions';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport { GPUProgram } from './GPUProgram';\nimport { isIntType, isUnsignedIntType, isWebGL2 } from './utils';\n\n// Memoize results.\nconst results = {\n\tframebufferWriteSupport: {} as { [key: string]: boolean },\n\tfilterWrapSupport: {} as { [key: string]: boolean },\n}\n\n/**\n * Init empty typed array for type, optionally use Float32Array for HALF_FLOAT.\n * @private\n */\nexport function initArrayForType(\n\ttype: GPULayerType,\n\tlength: number,\n\thalfFloatsAsFloats = false,\n) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\t\tif (halfFloatsAsFloats) return new Float32Array(length);\n\t\t\treturn new Uint16Array(length);\n\t\tcase FLOAT:\n\t\t\treturn new Float32Array(length);\n\t\tcase UNSIGNED_BYTE:\n\t\t\treturn new Uint8Array(length);\n\t\tcase BYTE:\n\t\t\treturn new Int8Array(length);\n\t\tcase UNSIGNED_SHORT:\n\t\t\treturn new Uint16Array(length);\n\t\tcase SHORT:\n\t\t\treturn new Int16Array(length);\n\t\tcase UNSIGNED_INT:\n\t\t\treturn new Uint32Array(length);\n\t\tcase INT:\n\t\t\treturn new Int32Array(length);\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported type: \"${type}\".`);\n\t}\n}\n\n/**\n * Calc 2D size [width, height] for GPU layer given a 1D or 2D size parameter.\n * If 1D size supplied, nearest power of 2 width/height is generated.\n * Also checks that size elements are valid.\n * @private\n */\n// TODO: should we relax adherence to power of 2?\nexport function calcGPULayerSize(\n\tsize: number | [number, number],\n\tname: string,\n\tverboseLogging: boolean,\n) {\n\tif (isNumber(size as number)) {\n\t\tif (!isPositiveInteger(size)) {\n\t\t\tthrow new Error(`Invalid length: ${JSON.stringify(size)} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tconst length = size as number;\n\t\t// Calc power of two width and height for length.\n\t\tlet exp = 1;\n\t\tlet remainder = length;\n\t\twhile (remainder > 2) {\n\t\t\texp++;\n\t\t\tremainder /= 2;\n\t\t}\n\t\tconst width = Math.pow(2, Math.floor(exp / 2) + exp % 2);\n\t\tconst height = Math.pow(2, Math.floor(exp/2));\n\t\tif (verboseLogging) console.log(`Using [${width}, ${height}] for 1D array of length ${size} in GPULayer \"${name}\".`);\n\t\treturn { width, height, length };\n\t}\n\tconst width = (size as [number, number])[0];\n\tif (!isPositiveInteger(width)) {\n\t\tthrow new Error(`Invalid width: ${JSON.stringify(width)} for GPULayer \"${name}\", must be positive integer.`);\n\t}\n\tconst height = (size as [number, number])[1];\n\tif (!isPositiveInteger(height)) {\n\t\tthrow new Error(`Invalid height: ${JSON.stringify(height)} for GPULayer \"${name}\", must be positive integer.`);\n\t}\n\treturn { width, height };\n}\n\n/**\n * Get the GL wrap type to use internally in GPULayer, based on browser support.\n * @private\n */\nexport function getGPULayerInternalWrap(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\twrap: GPULayerWrap,\n\t\tinternalFilter: GPULayerFilter,\n\t\tinternalType: GPULayerType,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, wrap, internalFilter, internalType } = params;\n\n\t// CLAMP_TO_EDGE is always supported.\n\tif (wrap === CLAMP_TO_EDGE) {\n\t\treturn wrap;\n\t}\n\n\t// Test if wrap/filter combo is actually supported by running some numbers through.\n\tif (testFilterWrap(composer, internalType, internalFilter, wrap)) {\n\t\treturn wrap;\n\t}\n\t// If not, convert to CLAMP_TO_EDGE and polyfill in fragment shader.\n\treturn CLAMP_TO_EDGE;\n\t// REPEAT and MIRROR_REPEAT wrap not supported for non-power of 2 textures in safari.\n\t// I've tested this and it seems that some power of 2 textures will work (512 x 512),\n\t// but not others (1024x1024), so let's just change all WebGL 1.0 to CLAMP.\n\t// Without this, we currently get an error at drawArrays():\n\t// \"WebGL: drawArrays: texture bound to texture unit 0 is not renderable.\n\t// It maybe non-power-of-2 and have incompatible texture filtering or is not\n\t// 'texture complete', or it is a float/half-float type with linear filtering and\n\t// without the relevant float/half-float linear extension enabled.\"\n}\n\n/**\n * Get the GL filter type to use internally in GPULayer, based on browser support.\n * @private\n */\nexport function getGPULayerInternalFilter(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tfilter: GPULayerFilter,\n\t\tinternalType: GPULayerType,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, internalType, name } = params;\n\tlet { filter } = params;\n\tif (filter === NEAREST) {\n\t\t// NEAREST filtering is always supported.\n\t\treturn filter;\n\t}\n\n\tif (internalType === HALF_FLOAT) {\n\t\tconst extension = getExtension(composer, OES_TEXTURE_HAlF_FLOAT_LINEAR, true)\n\t\t\t|| getExtension(composer, OES_TEXTURE_FLOAT_LINEAR, true);\n\t\tif (!extension || !testFilterWrap(composer, internalType, LINEAR, CLAMP_TO_EDGE)) {\n\t\t\tconsole.warn(`Falling back to NEAREST filter for GPULayer \"${name}\".`);\n\t\t\tfilter = NEAREST; // Polyfill in fragment shader.\n\t\t}\n\t} if (internalType === FLOAT) {\n\t\tconst extension = getExtension(composer, OES_TEXTURE_FLOAT_LINEAR, true);\n\t\tif (!extension || !testFilterWrap(composer, internalType, LINEAR, CLAMP_TO_EDGE)) {\n\t\t\tconsole.warn(`Falling back to NEAREST filter for GPULayer \"${name}\".`);\n\t\t\tfilter = NEAREST; // Polyfill in fragment shader.\n\t\t}\n\t}\n\treturn filter;\n}\n\n/**\n * Returns whether to cast int type as floats, as needed by browser.\n * @private\n */\nexport function shouldCastIntTypeAsFloat(\n\tcomposer: GPUComposer,\n\ttype: GPULayerType,\n) {\n\tconst { gl, glslVersion } = composer;\n\t// All types are supported by WebGL2 + glsl3.\n\tif (glslVersion === GLSL3 && isWebGL2(gl)) return false;\n\t// Int textures (other than UNSIGNED_BYTE) are not supported by WebGL1.0 or glsl1.x.\n\t// https://stackoverflow.com/questions/55803017/how-to-select-webgl-glsl-sampler-type-from-texture-format-properties\n\t// Use HALF_FLOAT/FLOAT instead.\n\t// Some large values of INT and UNSIGNED_INT are not supported unfortunately.\n\t// See tests for more information.\n\t// Update: Even UNSIGNED_BYTE should be cast as float in GLSL1.  I noticed some strange behavior in test:\n\t// setUniform>'should cast/handle uint uniforms for UNSIGNED_BYTE GPULayers' in tests/mocha/GPUProgram and \n\t// getValues>'should return correct values for UNSIGNED_BYTE GPULayer' in tests/mocha/GPULayer\n\treturn type === UNSIGNED_BYTE || type === BYTE || type === SHORT || type === INT || type === UNSIGNED_SHORT || type === UNSIGNED_INT;\n}\n\n/**\n * Returns GLTexture parameters for GPULayer, based on browser support.\n * @private\n */\nexport function getGLTextureParameters(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tname: string,\n\t\tnumComponents: GPULayerNumComponents,\n\t\tinternalType: GPULayerType,\n\t\twritable: boolean,\n\t}\n) {\n\tconst { composer, name, numComponents, internalType, writable } = params;\n\tconst { gl, glslVersion } = composer;\n\t// https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\n\tlet glType: number | undefined,\n\t\tglFormat: number | undefined,\n\t\tglInternalFormat: number | undefined,\n\t\tglNumChannels: number | undefined;\n\n\tif (isWebGL2(gl)) {\n\t\tglNumChannels = numComponents;\n\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t\t// The sized internal format RGBxxx are not color-renderable for some reason.\n\t\t// If numComponents == 3 for a writable texture, use RGBA instead.\n\t\t// Page 5 of https://www.khronos.org/files/webgl20-reference-guide.pdf\n\t\tif (numComponents === 3 && writable) {\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\tif (internalType === FLOAT || internalType === HALF_FLOAT) {\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = gl.RGB;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t// The following lines of code are not hit now that we have cast UNSIGNED_BYTE types to HALF_FLOAT.\n\t\t// See comments in shouldCastIntTypeAsFloat for more information.\n\t\t// } else if (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t// \t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\t// \tif (writable) {\n\t\t// \t\t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGBA.\n\t\t// \t\tglNumChannels = 4;\n\t\t// \t}\n\t\t// \t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGB/RGBA.\n\t\t// \tswitch (glNumChannels) {\n\t\t// \t\tcase 1:\n\t\t// \t\tcase 2:\n\t\t// \t\tcase 3:\n\t\t// \t\t\tglFormat = gl.RGB;\n\t\t// \t\t\tglNumChannels = 3;\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase 4:\n\t\t// \t\t\tglFormat = gl.RGBA;\n\t\t// \t\t\tglNumChannels = 4;\n\t\t// \t\t\tbreak;\n\t\t// \t\tdefault:\n\t\t// \t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t// \t}\n\t\t} else {\n\t\t\t// This case will only be hit by GLSL 3.\n\t\t\t// Int textures are not supported in GLSL1.\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGB_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tif (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t\t\t\tglInternalFormat = glFormat;\n\t\t\t\t} else {\n\t\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\tglType = gl.BYTE;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\tglType = gl.SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\tglType = gl.UNSIGNED_SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\tglType = gl.INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: \"${internalType}\" for GPULayer \"${name}\".`);\n\t\t}\n\t} else {\n\t\t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\tglNumChannels = numComponents;\n\t\tif (writable) {\n\t\t\t// For writable textures in WebGL 1, use RGBA.\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\t// For read only textures in WebGL 1, use RGB/RGBA.\n\t\tswitch (glNumChannels) {\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\t\tglFormat = gl.RGB;\n\t\t\t\tglInternalFormat = gl.RGB;\n\t\t\t\tglNumChannels = 3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\tglInternalFormat = gl.RGBA;\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase FLOAT:\n\t\t\t\tglType = gl.FLOAT;\n\t\t\t\tbreak;\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT || getExtension(composer, OES_TEXTURE_HALF_FLOAT).HALF_FLOAT_OES as number;\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tbreak;\n\t\t\t// No other types are supported in WebGL1.\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: \"${internalType}\" in WebGL 1.0 for GPULayer \"${name}\".`);\n\t\t}\n\t}\n\n\t// Check for missing params.\n\tif (glType === undefined || glFormat === undefined || glInternalFormat === undefined) {\n\t\tconst missingParams = [];\n\t\tif (glType === undefined) missingParams.push('glType');\n\t\tif (glFormat === undefined) missingParams.push('glFormat');\n\t\tif (glInternalFormat === undefined) missingParams.push('glInternalFormat');\n\t\tthrow new Error(`Invalid type: ${internalType} for numComponents: ${numComponents}, unable to init parameter${missingParams.length > 1 ? 's' : ''} ${missingParams.join(', ')} for GPULayer \"${name}\".`);\n\t}\n\tif (glNumChannels === undefined || numComponents < 1 || numComponents > 4 || glNumChannels < numComponents) {\n\t\tthrow new Error(`Invalid numChannels: ${glNumChannels} for numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t}\n\n\treturn {\n\t\tglFormat,\n\t\tglInternalFormat,\n\t\tglType,\n\t\tglNumChannels,\n\t};\n}\n\n/**\n * Rigorous method for testing FLOAT and HALF_FLOAT texture support by attaching texture to framebuffer.\n * @private\n */\nexport function testFramebufferAttachment(\n\tcomposer: GPUComposer,\n\tinternalType: GPULayerType,\n) {\n\tconst { gl, glslVersion } = composer;\n\n\t// Memoize results for a given set of inputs.\n\tconst key = `${isWebGL2(gl)},${internalType},${glslVersion === GLSL3 ? '3' : '1'}`;\n\tif (results.framebufferWriteSupport[key] !== undefined) {\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\n\tconst texture = gl.createTexture();\n\tif (!texture) {\n\t\tresults.framebufferWriteSupport[key] = false;\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t// Default to most widely supported settings.\n\tconst wrap = gl[CLAMP_TO_EDGE];\n\tconst filter = gl[NEAREST];\n\t// Use non-power of two dimensions to check for more universal support.\n\t// (In case size of GPULayer is changed at a later point).\n\tconst width = 10;\n\tconst height = 10;\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\n\tconst { glInternalFormat, glFormat, glType } = getGLTextureParameters({\n\t\tcomposer,\n\t\tname: 'testFramebufferAttachment',\n\t\tnumComponents: 1,\n\t\twritable: true,\n\t\tinternalType,\n\t});\n\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, null);\n\n\t// Init a framebuffer for this texture so we can write to it.\n\tconst framebuffer = gl.createFramebuffer();\n\tif (!framebuffer) {\n\t\t// Clear out allocated memory.\n\t\tgl.deleteTexture(texture);\n\t\tresults.framebufferWriteSupport[key] = false;\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\tconst validStatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n\n\t// Clear out allocated memory.\n\tgl.deleteTexture(texture);\n\tgl.deleteFramebuffer(framebuffer);\n\n\tresults.framebufferWriteSupport[key] = validStatus;\n\treturn results.framebufferWriteSupport[key];\n}\n\n/**\n * Rigorous method for testing whether a filter/wrap combination is supported\n * by the current browser.  I found that some versions of WebGL2 mobile safari\n * may support the OES_texture_float_linear and EXT_color_buffer_float, but still\n * do not linearly interpolate float textures or wrap only for power-of-two textures.\n * @private\n */\nexport function testFilterWrap(\n\tcomposer: GPUComposer,\n\tinternalType: GPULayerType,\n\tfilter: GPULayerFilter,\n\twrap: GPULayerWrap,\n) {\n\tconst { gl, glslVersion } = composer;\n\n\t// Memoize results for a given set of inputs.\n\tconst key = `${isWebGL2(gl)},${internalType},${filter},${wrap},${glslVersion === GLSL3 ? '3' : '1'}`;\n\tif (results.filterWrapSupport[key] !== undefined) {\n\t\treturn results.filterWrapSupport[key];\n\t}\n\n\tconst texture = gl.createTexture();\n\tif (!texture) {\n\t\tresults.filterWrapSupport[key] = false;\n\t\treturn results.filterWrapSupport[key];\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\tconst glWrap = gl[wrap];\n\tconst glFilter = gl[filter];\n\t// Use non power of two dimensions to check for more universal support.\n\tconst width = 3;\n\tconst height = 3;\n\tconst numComponents = 1;\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, glWrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, glWrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glFilter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glFilter);\n\n\tconst { glInternalFormat, glFormat, glType, glNumChannels } = getGLTextureParameters({\n\t\tcomposer,\n\t\tname: 'testFloatLinearFiltering',\n\t\tnumComponents,\n\t\tinternalType,\n\t\twritable: true,\n\t});\n\t// Init texture with values.\n\tconst values = [3, 56.5, 834, -53.6, 0.003, 96.2, 23, 90.2, 32];\n\tlet valuesTyped = initArrayForType(internalType, values.length * glNumChannels, true);\n\tfor (let i = 0; i < values.length; i++) {\n\t\tvaluesTyped[i * glNumChannels] = values[i];\n\t\tvalues[i] = valuesTyped[i * glNumChannels]; // Cast as int/uint if needed.\n\t}\n\tif (internalType === HALF_FLOAT) {\n\t\t// Cast values as Uint16Array for HALF_FLOAT.\n\t\tconst valuesTyped16 = new Uint16Array(valuesTyped.length);\n\t\tconst float16View =  new DataView(valuesTyped16.buffer);\n\t\tfor (let i = 0; i < valuesTyped.length; i++) {\n\t\t\tsetFloat16(float16View, 2 * i, valuesTyped[i], true);\n\t\t}\n\t\tvaluesTyped = valuesTyped16;\n\t}\n\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, valuesTyped);\n\n\t// Init a GPULayer to write to.\n\t// Must use CLAMP_TO_EDGE/NEAREST on this GPULayer to avoid infinite loop.\n\tconst output = new GPULayer(composer, {\n\t\tname: 'testFloatLinearFiltering-output',\n\t\ttype: internalType,\n\t\tnumComponents,\n\t\tdimensions: [width, height],\n\t\twrapS: CLAMP_TO_EDGE,\n\t\twrapT: CLAMP_TO_EDGE,\n\t\tfilter: NEAREST,\n\t\twritable: true,\n\t});\n\n\tconst offset = filter === LINEAR ? 0.5 : 1;\n\t// Run program to perform linear filter.\n\tconst program = new GPUProgram(composer, {\n\t\tname: 'testFloatLinearFiltering',\n\t\tfragmentShader: `\n\t\t\tin vec2 v_UV;\n\t\t\tuniform vec2 u_offset;\n\t\t\t#ifdef GPUIO_INT\n\t\t\t\tuniform isampler2D u_input;\n\t\t\t\tout int out_fragColor;\n\t\t\t#endif\n\t\t\t#ifdef GPUIO_UINT\n\t\t\t\tuniform usampler2D u_input;\n\t\t\t\tout uint out_fragColor;\n\t\t\t#endif\n\t\t\t#ifdef GPUIO_FLOAT\n\t\t\t\tuniform sampler2D u_input;\n\t\t\t\tout float out_fragColor;\n\t\t\t#endif\n\t\t\tvoid main() {\n\t\t\t\tout_fragColor = texture(u_input, v_UV + u_offset).x;\n\t\t\t}`,\n\t\tuniforms: [\n\t\t\t{\n\t\t\t\tname: 'u_offset',\n\t\t\t\tvalue: [offset / width, offset / height],\n\t\t\t\ttype: FLOAT,\n\t\t\t},\n\t\t],\n\t\tdefines: {\n\t\t\t[isUnsignedIntType(internalType) ? 'GPUIO_UINT' : (isIntType(internalType) ? 'GPUIO_INT': 'GPUIO_FLOAT')]: '1',\n\t\t}\n\t});\n\n\tcomposer.resize(width, height);\n\tcomposer.step({\n\t\tprogram,\n\t\tinput: texture,\n\t\toutput,\n\t});\n\n\tconst filtered = output.getValues();\n\tlet supported = true;\n\tconst tol = isIntType(internalType) ? 0 : (internalType === HALF_FLOAT ? 1e-2 : 1e-4);\n\tfunction wrapValue(val: number, max: number) {\n\t\tif (wrap === CLAMP_TO_EDGE) return Math.max(0, Math.min(max - 1, val));\n\t\treturn (val + max) % max;\n\t}\n\tfor (let x = 0; x < width; x++) {\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\tlet expected;\n\t\t\tif (filter === LINEAR) {\n\t\t\t\texpected = (values[y * width + x] +\n\t\t\t\t\tvalues[y * width + wrapValue(x + 1, width)] +\n\t\t\t\t\tvalues[wrapValue(y + 1, height) * width + x] +\n\t\t\t\t\tvalues[wrapValue(y + 1, height) * width + wrapValue(x + 1, width)]) / 4;\n\t\t\t} else {\n\t\t\t\tconst _x = wrapValue(x + offset, width);\n\t\t\t\tconst _y = wrapValue(y + offset, height);\n\t\t\t\texpected = values[_y * width + _x];\n\t\t\t}\n\t\t\tconst i = y * width + x;\n\t\t\tif (Math.abs((expected - filtered[i]) / expected) > tol) {\n\t\t\t\tsupported = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Clear out allocated memory.\n\tprogram.dispose();\n\toutput.dispose();\n\tgl.deleteTexture(texture);\n\n\tresults.filterWrapSupport[key] = supported;\n\treturn results.filterWrapSupport[key];\n}\n\n/**\n * Get the GL type to use internally in GPULayer, based on browser support.\n * @private\n * Exported here for testing purposes.\n */\nexport function getGPULayerInternalType(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\ttype: GPULayerType,\n\t\twritable: boolean,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, writable, name } = params;\n\tconst { gl, _errorCallback } = composer;\n\tconst { type } = params;\n\tlet internalType = type;\n\t// Check if int types are supported.\n\tconst intCast = shouldCastIntTypeAsFloat(composer, type);\n\tif (intCast) {\n\t\tif (internalType === UNSIGNED_BYTE || internalType === BYTE) {\n\t\t\t// Integers between -2048 and +2048 can be exactly represented by half float.\n\t\t\tinternalType = HALF_FLOAT;\n\t\t} else {\n\t\t\t// Integers between 0 and 16777216 can be exactly represented by float32 (also applies for negative integers between −16777216 and 0)\n\t\t\t// This is sufficient for UNSIGNED_SHORT and SHORT types.\n\t\t\t// Large UNSIGNED_INT and INT cannot be represented by FLOAT type.\n\t\t\tconsole.warn(`Falling back ${internalType} type to FLOAT type for glsl1.x support for GPULayer \"${name}\".\nLarge UNSIGNED_INT or INT with absolute value > 16,777,216 are not supported, on mobile UNSIGNED_INT, INT, UNSIGNED_SHORT, and SHORT with absolute value > 2,048 may not be supported.`);\n\t\t\tinternalType = FLOAT;\n\t\t}\n\t}\n\n\t// Check if float textures supported.\n\tif (!isWebGL2(gl)) {\n\t\tif (internalType === FLOAT) {\n\t\t\t// The OES_texture_float extension implicitly enables WEBGL_color_buffer_float extension (for writing).\n\t\t\tconst extension = getExtension(composer, OES_TEXTURE_FLOAT, true);\n\t\t\tif (!extension) {\n\t\t\t\tconsole.warn(`FLOAT not supported, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t// https://stackoverflow.com/questions/17476632/webgl-extension-support-across-browsers\n\t\t\t// Rendering to a floating-point texture may not be supported, even if the OES_texture_float extension\n\t\t\t// is supported. Typically, this fails on mobile hardware. To check if this is supported, you have to\n\t\t\t// call the WebGL checkFramebufferStatus() function after attempting to attach texture to framebuffer.\n\t\t\t} else if (writable) {\n\t\t\t\tconst valid = testFramebufferAttachment(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\tconsole.warn(`FLOAT not supported for writing operations, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Must support at least half float if using a float type.\n\t\tif (internalType === HALF_FLOAT) {\n\t\t\t// The OES_texture_half_float extension implicitly enables EXT_color_buffer_half_float extension (for writing).\n\t\t\tgetExtension(composer, OES_TEXTURE_HALF_FLOAT);\n\t\t\t// TODO: https://stackoverflow.com/questions/54248633/cannot-create-half-float-oes-texture-from-uint16array-on-ipad\n\t\t\tif (writable) {\n\t\t\t\tconst valid = testFramebufferAttachment(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\t_errorCallback(`This browser does not support rendering to HALF_FLOAT textures.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (writable) {\n\t\t// For writable webGL2 contexts, load EXT_color_buffer_float/EXT_color_buffer_half_float extension.\n\t\tif (internalType === FLOAT) {\n\t\t\tconst extension = getExtension(composer, EXT_COLOR_BUFFER_FLOAT, true);\n\t\t\tif (!extension) {\n\t\t\t\tconsole.warn(`FLOAT not supported, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t} else {\n\t\t\t\t// Test attaching texture to framebuffer to be sure float writing is supported.\n\t\t\t\tconst valid = testFramebufferAttachment(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\tconsole.warn(`FLOAT not supported for writing operations, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (internalType === HALF_FLOAT) {\n\t\t\t// On WebGL 2, EXT_color_buffer_half_float is an alternative to using the EXT_color_buffer_float extension\n\t\t\t// on platforms that support 16-bit floating point render targets but not 32-bit floating point render targets.\n\t\t\tconst halfFloatExt = getExtension(composer, EXT_COLOR_BUFFER_HALF_FLOAT, true);\n\t\t\tif (!halfFloatExt) {\n\t\t\t\t// Some versions of Firefox (e.g. Firefox v104 on Mac) do not support EXT_COLOR_BUFFER_HALF_FLOAT,\n\t\t\t\t// but EXT_COLOR_BUFFER_FLOAT will work instead.\n\t\t\t\tgetExtension(composer, EXT_COLOR_BUFFER_FLOAT);\n\t\t\t}\n\t\t\t// Test attaching texture to framebuffer to be sure half float writing is supported.\n\t\t\tconst valid = testFramebufferAttachment(composer, internalType);\n\t\t\tif (!valid) {\n\t\t\t\t_errorCallback(`This browser does not support rendering to HALF_FLOAT textures.`);\n\t\t\t}\n\t\t}\n\t}\n\treturn internalType;\n}\n\n/**\n * Min and max values for types.\n * @private\n */\nexport function minMaxValuesForType(type: GPULayerType) {\n\t// Get min and max values for int types.\n\tlet min = -Infinity;\n\tlet max = Infinity;\n\tswitch(type) {\n\t\t// TODO: handle float types?\n\t\tcase UNSIGNED_BYTE:\n\t\t\tmin = MIN_UNSIGNED_BYTE;\n\t\t\tmax = MAX_UNSIGNED_BYTE;\n\t\t\tbreak;\n\t\tcase BYTE:\n\t\t\tmin = MIN_BYTE;\n\t\t\tmax = MAX_BYTE;\n\t\t\tbreak;\n\t\tcase UNSIGNED_SHORT:\n\t\t\tmin = MIN_UNSIGNED_SHORT;\n\t\t\tmax = MAX_UNSIGNED_SHORT;\n\t\t\tbreak;\n\t\tcase SHORT:\n\t\t\tmin = MIN_SHORT;\n\t\t\tmax = MAX_SHORT;\n\t\t\tbreak;\n\t\tcase UNSIGNED_INT:\n\t\t\tmin = MIN_UNSIGNED_INT;\n\t\t\tmax = MAX_UNSIGNED_INT;\n\t\t\tbreak;\n\t\tcase INT:\n\t\t\tmin = MIN_INT;\n\t\t\tmax = MAX_INT;\n\t\t\tbreak;\n\t}\n\treturn {\n\t\tmin, max,\n\t};\n}\n\n/**\n * Recasts typed array to match GPULayer.internalType.\n * @private\n */\nexport function validateGPULayerArray(array: GPULayerArray | number[], layer: GPULayer) {\n\tconst { numComponents, width, height, name } = layer;\n\tconst glNumChannels = layer._glNumChannels;\n\tconst internalType = layer._internalType;\n\tconst length = layer.is1D() ? layer.length : null;\n\n\t// Check that data is correct length (user error).\n\tif (array.length !== width * height * numComponents) { // Either the correct length for WebGLTexture size\n\t\tif (!length || (length &&  array.length !== length * numComponents)) { // Of the correct length for 1D array.\n\t\t\tthrow new Error(`Invalid data length: ${array.length} for GPULayer \"${name}\" of ${length ? `length ${length} and ` : ''}dimensions: [${width}, ${height}] and numComponents: ${numComponents}.`);\n\t\t}\n\t}\n\n\t// Get array type to figure out if we need to type cast.\n\t// For webgl1.0 we may need to cast an int type to a FLOAT or HALF_FLOAT.\n\tlet shouldTypeCast = false;\n\tswitch(array.constructor) {\n\t\tcase Array:\n\t\t\tshouldTypeCast = true;\n\t\t\tbreak;\n\t\tcase Float32Array:\n\t\t\tshouldTypeCast = internalType !== FLOAT;\n\t\t\tbreak;\n\t\tcase Uint8Array:\n\t\t\tshouldTypeCast = internalType !== UNSIGNED_BYTE;\n\t\t\tbreak;\n\t\tcase Int8Array:\n\t\t\tshouldTypeCast = internalType !== BYTE;\n\t\t\tbreak;\n\t\tcase Uint16Array:\n\t\t\t// User may have converted to HALF_FLOAT already.\n\t\t\t// We need to add this check in case type is UNSIGNED_SHORT and internal type is HALF_FLOAT.\n\t\t\t// (This can happen for some WebGL1 contexts.)\n\t\t\t// if (type === HALF_FLOAT) {\n\t\t\t// \tshouldTypeCast = internalType !== HALF_FLOAT;\n\t\t\t// \t// In order to complete this, we will also need to handle converting from Uint16Array to some other type.\n\t\t\t// \t// Are there cases where HALF_FLOAT is not supported?\n\t\t\t// } else {\n\t\t\t\tshouldTypeCast = internalType !== UNSIGNED_SHORT\n\t\t\t// }\n\t\t\tbreak;\n\t\tcase Int16Array:\n\t\t\tshouldTypeCast = internalType !== SHORT;\n\t\t\tbreak;\n\t\tcase Uint32Array:\n\t\t\tshouldTypeCast = internalType !== UNSIGNED_INT;\n\t\t\tbreak;\n\t\tcase Int32Array:\n\t\t\tshouldTypeCast = internalType !== INT;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(`Invalid array type: ${array.constructor.name} for GPULayer \"${name}\", please use one of [${validArrayTypes.map(constructor => constructor.name).join(', ')}].`);\n\t}\n\n\t// Get min and max values for internalType.\n\tconst { min, max } = minMaxValuesForType(internalType);\n\n\t// Then check if array needs to be lengthened.\n\t// This could be because glNumChannels !== numComponents or because length !== width * height.\n\tconst arrayLength = width * height * glNumChannels;\n\tconst shouldResize = array.length !== arrayLength;\n\t\t\n\tlet validatedArray = array as GPULayerArray;\n\tif (shouldTypeCast || shouldResize) {\n\t\tvalidatedArray = initArrayForType(internalType, arrayLength);\n\t\t// Fill new data array with old data.\n\t\t// We have to handle the case of Float16 specially by converting data to Uint16Array.\n\t\tconst view = (internalType === HALF_FLOAT && shouldTypeCast) ? new DataView(validatedArray.buffer) : null;\n\t\tfor (let i = 0, _len = array.length / numComponents; i < _len; i++) {\n\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\tconst origValue = array[i * numComponents + j];\n\t\t\t\tlet value = origValue;\n\t\t\t\tlet clipped = false;\n\t\t\t\tif (value < min) {\n\t\t\t\t\tvalue = min;\n\t\t\t\t\tclipped = true;\n\t\t\t\t} else if (value > max) {\n\t\t\t\t\tvalue = max;\n\t\t\t\t\tclipped = true;\n\t\t\t\t}\n\t\t\t\tif (clipped) {\n\t\t\t\t\tconsole.warn(`Clipping out of range value ${origValue} to ${value} for GPULayer \"${name}\" with internal type ${internalType}.`);\n\t\t\t\t}\n\t\t\t\tconst index = i * glNumChannels + j;\n\t\t\t\tif (view) {\n\t\t\t\t\tsetFloat16(view, 2 * index, value, true);\n\t\t\t\t} else {\n\t\t\t\t\tvalidatedArray[index] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn validatedArray;\n}","import { GPUComposer } from './GPUComposer';\nimport {\n\tisArray,\n\tisBoolean,\n\tisInteger,\n\tisNonNegativeInteger,\n\tisNumber,\n\tisObject,\n\tisString,\n} from './checks';\nimport {\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tUniform,\n\tUniformType,\n\tUniformInternalType,\n\tUniformValue,\n\tCompileTimeVars,\n\tPROGRAM_NAME_INTERNAL,\n\tDEFAULT_PROGRAM_NAME,\n\tDEFAULT_W_UV_PROGRAM_NAME,\n\tDEFAULT_W_NORMAL_PROGRAM_NAME,\n\tDEFAULT_W_UV_NORMAL_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tLAYER_POINTS_PROGRAM_NAME,\n\tLAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tLAYER_LINES_PROGRAM_NAME,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n\tUniformParams,\n\tBOOL_1D_UNIFORM,\n\tBOOL_2D_UNIFORM,\n\tBOOL_3D_UNIFORM,\n\tBOOL_4D_UNIFORM,\n\tGLSL3,\n} from './constants';\nimport {\n\tcompileShader,\n\tpreprocessFragmentShader,\n\tinitGLProgram,\n\tuniformInternalTypeForValue,\n} from './utils';\n\nexport class GPUProgram {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly _composer: GPUComposer;\n\n\t/**\n\t * Name of GPUProgram, used for error logging.\n\t */\n\treadonly name: string;\n\n\t// Compiled fragment shader.\n\tprivate _fragmentShader!: WebGLShader;\n\t// Source code for fragment shader.\n\t// Hold onto this in case we need to recompile with different #defines.\n\tprivate readonly _fragmentShaderSource: string;\n\t// #define variables for fragment shader program.\n\tprivate readonly _defines: CompileTimeVars = {};\n\t// Uniform locations, values, and types.\n\tprivate readonly _uniforms: { [ key: string]: Uniform } = {};\n\n\t// Store WebGLProgram's - we need to compile several WebGLPrograms of GPUProgram.fragmentShader + various vertex shaders.\n\t// Each combination of vertex + fragment shader requires a separate WebGLProgram.\n\t// These programs are compiled on the fly as needed.\n\tprivate readonly _programs: {[key in PROGRAM_NAME_INTERNAL]?: WebGLProgram } = {};\n\n\t/**\n     * Create a GPUProgram.\n     * @param composer - The current GPUComposer instance.\n     * @param params - GPUProgram parameters.\n\t * @param params.name - Name of GPUProgram, used for error logging.\n\t * @param params.fragmentShader - Fragment shader source or array of sources to be joined.\n\t * @param params.uniforms - Array of uniforms to initialize with GPUProgram.  More uniforms can be added later with GPUProgram.setUniform().\n\t * @param params.defines - Compile-time #define variables to include with fragment shader.\n     */\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\t// We may want to pass in an array of shader string sources, if split across several files.\n\t\t\tfragmentShader: string | string[],\n\t\t\tuniforms?: UniformParams[],\n\t\t\t// We'll allow some compile-time variables to be passed in as #define to the preprocessor for the fragment shader.\n\t\t\tdefines?: CompileTimeVars,\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPUProgram \"${name}\": must pass GPUComposer instance to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!params) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass params to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!isObject(params)) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass valid params object to GPUProgram(composer, params), got ${JSON.stringify(params)}.`);\n\t\t}\n\t\t// Check params keys.\n\t\tconst validKeys = ['name', 'fragmentShader', 'uniforms', 'defines'];\n\t\tconst requiredKeys = ['name', 'fragmentShader'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPUProgram(composer, params) with name \"${name}\".  Valid keys are ${JSON.stringify(validKeys)}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPUProgram(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { fragmentShader, uniforms, defines } = params;\n\n\t\t// Save arguments.\n\t\tthis._composer = composer;\n\t\tthis.name = name;\n\n\t\t// Compile fragment shader.\n\t\tconst fragmentShaderSource = isString(fragmentShader) ?\n\t\t\tfragmentShader as string :\n\t\t\t(fragmentShader as string[]).join('\\n');\n\t\tthis._fragmentShaderSource = preprocessFragmentShader(\n\t\t\tfragmentShaderSource, composer.glslVersion, name,\n\t\t);\n\t\tthis._compile(defines); // Compiling also saves defines.\n\n\t\t// Set program uniforms.\n\t\tif (uniforms) {\n\t\t\tfor (let i = 0; i < uniforms.length; i++) {\n\t\t\t\tconst { name, value, type } = uniforms[i];\n\t\t\t\tthis.setUniform(name, value, type);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Compile fragment shader for GPUProgram.\n\t * Used internally, called only one.\n\t * @private\n\t */\n\tprivate _compile(defines?: CompileTimeVars) {\n\t\tconst { _composer, name, _fragmentShaderSource, _fragmentShader, _defines } = this;\n\t\tconst {\n\t\t\tgl,\n\t\t\t_errorCallback,\n\t\t\tverboseLogging,\n\t\t\tglslVersion,\n\t\t\tfloatPrecision,\n\t\t\tintPrecision,\n\t\t} = _composer;\n\n\t\t// Update this.defines if needed.\n\t\t// Passed in defines param may only be a partial list.\n\t\tlet definesNeedUpdate = false;\n\t\tif (defines) {\n\t\t\tconst keys = Object.keys(defines);\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tif (_defines[key] !== defines[key]) {\n\t\t\t\t\tdefinesNeedUpdate = true;\n\t\t\t\t\t_defines[key] = defines[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (_fragmentShader && !definesNeedUpdate) {\n\t\t\t// No need to recompile.\n\t\t\treturn;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Compiling fragment shader for GPUProgram \"${name}\" with defines: ${JSON.stringify(_defines)}`);\n\t\tconst shader = compileShader(\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t\t_fragmentShaderSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\tname,\n\t\t\t_errorCallback,\n\t\t\t_defines,\n\t\t);\n\t\tif (!shader) {\n\t\t\t_errorCallback(`Unable to compile fragment shader for GPUProgram \"${name}\".`);\n\t\t\treturn;\n\t\t}\n\t\tthis._fragmentShader = shader;\n\t\t\n\t\t// If we decided to call this multiple times, we will need to attach the shader to all existing programs.\n\t}\n\n\t/**\n\t * Get GLProgram associated with a specific vertex shader.\n\t * @private\n\t */\n\tprivate _getProgramWithName(name: PROGRAM_NAME_INTERNAL) {\n\t\t// Check if we've already compiled program.\n\t\tif (this._programs[name]) return this._programs[name];\n\n\t\t// Otherwise, we need to compile a new program on the fly.\n\t\tconst { _composer, _uniforms, _fragmentShader, _programs } = this;\n\t\tconst { gl, _errorCallback } = _composer;\n\n\t\tconst vertexShader = _composer._getVertexShaderWithName(name, this.name);\n\t\tif (vertexShader === undefined) {\n\t\t\t_errorCallback(`Unable to init vertex shader \"${name}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst program = initGLProgram(gl, vertexShader, _fragmentShader, this.name, _errorCallback);\n\t\tif (program === undefined) {\n\t\t\t_errorCallback(`Unable to init program \"${name}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\t// If we have any uniforms set for this GPUProgram, add those to WebGLProgram we just inited.\n\t\tconst uniformNames = Object.keys(_uniforms);\n\t\tfor (let i = 0; i < uniformNames.length; i++) {\n\t\t\tconst uniformName = uniformNames[i];\n\t\t\tconst uniform = _uniforms[uniformName];\n\t\t\tconst { value, type } = uniform;\n\t\t\tthis._setProgramUniform(program, name, uniformName, value, type);\n\t\t}\n\n\t\t_programs[name] = program;\n\t\treturn program;\n\t}\n\t/**\n\t * @private\n\t */\n\tget _defaultProgram() {\n\t\treturn this._getProgramWithName(DEFAULT_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _defaultProgramWithUV() {\n\t\treturn this._getProgramWithName(DEFAULT_W_UV_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _defaultProgramWithNormal() {\n\t\treturn this._getProgramWithName(DEFAULT_W_NORMAL_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _defaultProgramWithUVNormal() {\n\t\treturn this._getProgramWithName(DEFAULT_W_UV_NORMAL_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _segmentProgram() {\n\t\treturn this._getProgramWithName(SEGMENT_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _layerPointsProgram() {\n\t\treturn this._getProgramWithName(LAYER_POINTS_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _layerVectorFieldProgram() {\n\t\treturn this._getProgramWithName(LAYER_VECTOR_FIELD_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _layerLinesProgram() {\n\t\treturn this._getProgramWithName(LAYER_LINES_PROGRAM_NAME);\n\t}\n\n\t/**\n\t * Set uniform for GLProgram.\n\t * @private\n\t */\n\tprivate _setProgramUniform(\n\t\tprogram: WebGLProgram,\n\t\tprogramName: string,\n\t\tuniformName: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformInternalType,\n\t) {\n\t\tconst { _composer, _uniforms } = this;\n\t\tconst { gl, _errorCallback, glslVersion } = _composer;\n\t\t// Set active program.\n\t\tgl.useProgram(program);\n\n\t\tconst isGLSL3 = glslVersion === GLSL3;\n\n\t\tlet location = _uniforms[uniformName]?.location[programName];\n\t\t// Init a location for WebGLProgram if needed (only do this once).\n\t\tif (location === undefined) {\n\t\t\tconst _location = gl.getUniformLocation(program, uniformName);\n\t\t\tif (!_location) {\n\t\t\t\t_errorCallback(`Could not init uniform \"${uniformName}\" for program \"${this.name}\". Check that uniform is present in shader code, unused uniforms may be removed by compiler. Also check that uniform type in shader code matches type ${type}. Error code: ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocation = _location;\n\t\t\t// Save location for future use.\n\t\t\tif (_uniforms[uniformName]) {\n\t\t\t\t_uniforms[uniformName].location[programName] = location;\n\t\t\t}\n\n\t\t\t// Since this is the first time we are initing the uniform, check that type is correct.\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniform\n\t\t\tconst uniform = gl.getUniform(program, location);\n\t\t\tlet badType = false;\n\t\t\tif (type === BOOL_1D_UNIFORM || type === BOOL_2D_UNIFORM || type === BOOL_3D_UNIFORM || type === BOOL_4D_UNIFORM) {\n\t\t\t\tif (!isBoolean(uniform) && uniform.constructor !== Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else \n\t\t\tif (type === FLOAT_1D_UNIFORM || type === FLOAT_2D_UNIFORM || type === FLOAT_3D_UNIFORM || type === FLOAT_4D_UNIFORM) {\n\t\t\t\tif (!isNumber(uniform) && uniform.constructor !== Float32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else if (type === INT_1D_UNIFORM || type === INT_2D_UNIFORM || type === INT_3D_UNIFORM || type === INT_4D_UNIFORM) {\n\t\t\t\tif (!isInteger(uniform) && uniform.constructor !== Int32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else if (type === UINT_1D_UNIFORM || type === UINT_2D_UNIFORM || type === UINT_3D_UNIFORM || type === UINT_4D_UNIFORM) {\n\t\t\t\tif (!isGLSL3) {\n\t\t\t\t\t// GLSL1 does not have uint type, expect int instead.\n\t\t\t\t\tif (!isNonNegativeInteger(uniform) && uniform.constructor !== Int32Array) {\n\t\t\t\t\t\tbadType = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!isNonNegativeInteger(uniform) && uniform.constructor !== Uint32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (badType) {\n\t\t\t\t_errorCallback(`Invalid uniform \"${uniformName}\" for program \"${this.name}\". Check that uniform type in shader code matches type ${type}, gl.getUniform(program, location) returned type: ${uniform.constructor.name}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Set uniform.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform\n\t\tswitch (type) {\n\t\t\t// We are setting boolean uniforms with uniform[1234]i.\n\t\t\t// This suggest floats work as well, but ints seem more natural:\n\t\t\t// https://github.com/KhronosGroup/WebGL/blob/main/sdk/tests/conformance/uniforms/gl-uniform-bool.html\n\t\t\tcase BOOL_1D_UNIFORM:\n\t\t\t\tgl.uniform1i(location, value ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_2D_UNIFORM:\n\t\t\t\tgl.uniform2i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_3D_UNIFORM:\n\t\t\t\tgl.uniform3i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0, (value as number[])[2] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_4D_UNIFORM:\n\t\t\t\tgl.uniform4i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0, (value as number[])[2] ? 1 : 0, (value as number[])[3] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_1D_UNIFORM:\n\t\t\t\tgl.uniform1f(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_2D_UNIFORM:\n\t\t\t\tgl.uniform2fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_3D_UNIFORM:\n\t\t\t\tgl.uniform3fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_4D_UNIFORM:\n\t\t\t\tgl.uniform4fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_1D_UNIFORM:\n\t\t\t\tgl.uniform1i(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase INT_2D_UNIFORM:\n\t\t\t\tgl.uniform2iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_3D_UNIFORM:\n\t\t\t\tgl.uniform3iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_4D_UNIFORM:\n\t\t\t\tgl.uniform4iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\t// Uint not supported in GLSL1, use int instead.\n\t\t\tcase UINT_1D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform1ui(location, value as number);\n\t\t\t\telse gl.uniform1i(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase UINT_2D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform2uiv(location, value as number[]);\n\t\t\t\telse gl.uniform2iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_3D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform3uiv(location, value as number[]);\n\t\t\t\telse gl.uniform3iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_4D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform4uiv(location, value as number[]);\n\t\t\t\telse gl.uniform4iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown uniform type ${type} for GPUProgram \"${this.name}\".`);\n\t\t}\n\t}\n\n\t/**\n\t * Set fragment shader uniform for GPUProgram.\n\t * @param name - Uniform name as it appears in fragment shader.\n\t * @param value - Uniform value.\n\t * @param type - Uniform type (this only needs to be set once).\n\t */\n\tsetUniform(\n\t\tname: string,\n\t\tvalue: UniformValue,\n\t\ttype?: UniformType,\n\t) {\n\t\tconst { _programs, _uniforms, _composer } = this;\n\t\tconst { verboseLogging } = _composer;\n\n\t\t// Check that length of value is correct.\n\t\tif (isArray(value)) {\n\t\t\tconst length = (value as number[]).length;\n\t\t\tif (length > 4) throw new Error(`Invalid uniform value: [${(value as number[]).join(', ')}] passed to GPUProgram \"${this.name}, uniforms must be of type number[] with length <= 4, number, or boolean.\"`)\n\t\t}\n\n\t\tlet currentType = _uniforms[name]?.type;\n\t\tif (type) {\n\t\t\tconst internalType = uniformInternalTypeForValue(value, type, name, this.name);\n\t\t\tif (currentType === undefined) currentType = internalType;\n\t\t\telse {\n\t\t\t\t// console.warn(`Don't need to pass in type to GPUProgram.setUniform for previously inited uniform \"${uniformName}\"`);\n\t\t\t\t// Check that types match previously set uniform.\n\t\t\t\tif (currentType !== internalType) {\n\t\t\t\t\tthrow new Error(`Uniform \"${name}\" for GPUProgram \"${this.name}\" cannot change from type ${currentType} to type ${internalType}.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (currentType === undefined) {\n\t\t\tthrow new Error(`Unknown type for uniform \"${name}\", please pass in type to GPUProgram.setUniform(name, value, type) when initing a new uniform.`);\n\t\t}\n\n\t\tif (!_uniforms[name]) {\n\t\t\t// Init uniform if needed.\n\t\t\t_uniforms[name] = { type: currentType, location: {}, value };\n\t\t} else {\n\t\t\t// Deep check is value has changed.\n\t\t\tif (isArray(value)) {\n\t\t\t\tlet isChanged = true;\n\t\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\t\tif (_uniforms[name].value !== value) {\n\t\t\t\t\t\tisChanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isChanged) return; // No change.\n\t\t\t} else if (_uniforms[name].value === value) {\n\t\t\t\treturn; // No change.\n\t\t\t}\n\t\t\t// Update value.\n\t\t\t_uniforms[name].value = value;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Setting uniform \"${name}\" for program \"${this.name}\" to value ${JSON.stringify(value)} with type ${currentType}.`)\n\n\t\t// Update any active programs.\n\t\tconst keys = Object.keys(_programs);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst programName = keys[i] as PROGRAM_NAME_INTERNAL;\n\t\t\tthis._setProgramUniform(_programs[programName]!, programName, name, value, currentType);\n\t\t}\n\t};\n\n\t/**\n\t * Set vertex shader uniform for GPUProgram.\n\t * @private\n\t */\n\t_setVertexUniform(\n\t\tprogram: WebGLProgram,\n\t\tuniformName: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformType,\n\t) {\n\t\tif (!program) {\n\t\t\tthrow new Error('Must pass in valid WebGLProgram to setVertexUniform, got undefined.');\n\t\t}\n\t\tconst programName = Object.keys(this._programs).find(key => this._programs[key as PROGRAM_NAME_INTERNAL] === program);\n\t\tif (!programName) {\n\t\t\tthrow new Error(`Could not find valid vertex programName for WebGLProgram in GPUProgram \"${this.name}\".`);\n\t\t}\n\t\tconst internalType = uniformInternalTypeForValue(value, type, uniformName, this.name);\n\t\tthis._setProgramUniform(program, programName, uniformName, value, internalType);\n\t}\n\n\t/**\n\t * Deallocate GPUProgram instance and associated WebGL properties.\n\t */\n\tdispose() {\n\t\tconst { _composer, _fragmentShader, _programs } = this;\n\t\tconst { gl, verboseLogging } = _composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUProgram \"${this.name}\".`);\n\t\tif (!gl) throw new Error(`Must call dispose() on all GPUPrograms before calling dispose() on GPUComposer.`);\n\n\t\t// Unbind all gl data before deleting.\n\t\tObject.values(_programs).forEach(program => {\n\t\t\tif (program) gl.deleteProgram(program);\n\t\t});\n\t\tObject.keys(_programs).forEach(key => {\n\t\t\tdelete this._programs[key as PROGRAM_NAME_INTERNAL];\n\t\t});\n\n\t\t// Delete fragment shader.\n\t\tgl.deleteShader(_fragmentShader);\n\t\t// @ts-ignore\n\t\tdelete this._fragmentShader;\n\t\t// Vertex shaders are owned by GPUComposer and shared across many GPUPrograms.\n\n\t\t// Delete all references.\n\t\t// @ts-ignore\n\t\tdelete this._composer;\n\t\t// @ts-ignore\n\t\tdelete this.name;\n\t\t// @ts-ignore\n\t\tdelete this._fragmentShaderSource;\n\t\t// @ts-ignore\n\t\tdelete this._defines;\n\t\t// @ts-ignore\n\t\tdelete this._uniforms;\n\t\t// @ts-ignore\n\t\tdelete this._programs;\n\t}\n}\n","/**\n * These are the parts of threejs Vector4 that we need.\n * Used internally.\n * @private\n */\nexport class Vector4 {\n\tx: number;\n\ty: number;\n\tz: number;\n\tw: number;\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\tget width() {\n\t\treturn this.z;\n\t}\n\tget height() {\n\t\treturn this.w;\n\t}\n\tcopy(v: Vector4) {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t\treturn this;\n\t}\n}","import {\n\tvalidDataTypes,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tGPULayerType,\n\tHALF_FLOAT,\n\tFLOAT,\n\tBYTE,\n\tSHORT,\n\tINT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_SHORT,\n\tUNSIGNED_INT,\n} from './constants';\n\n/**\n * Checks if type is valid GPULayer data type.\n * @private\n */\nexport function isValidDataType(type: string) {\n\treturn validDataTypes.indexOf(type) > -1;\n}\n\n/**\n * Checks if filter is valid GPULayer filter type.\n * @private\n */\nexport function isValidFilter(type: string) {\n\treturn validFilters.indexOf(type) > -1;\n}\n\n/**\n * Checks if wrap is valid GPULayer wrap type.\n * @private\n */\nexport function isValidWrap(type: string) {\n\treturn validWraps.indexOf(type) > -1;\n}\n\n// For image urls that are passed in and inited as textures.\n// TODO: add docs\nexport function isValidTextureFormat(type: string) {\n\treturn validTextureFormats.indexOf(type) > -1;\n}\n// TODO: add docs\nexport function isValidTextureType(type: string) {\n\treturn validTextureTypes.indexOf(type) > -1;\n}\n\n/**\n * Checks if value is valid GPULayer clear value for numComponents and type.\n * @private\n */\nexport function isValidClearValue(clearValue: number | number[], numComponents: number, type: GPULayerType) {\n\tif (isArray(clearValue)) {\n\t\t// Length of clearValue must match numComponents.\n\t\tif ((clearValue as number[]).length !== numComponents) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < (clearValue as number[]).length; i++) {\n\t\t\tif (!isNumberOfType((clearValue as number[])[i], type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (!isNumberOfType(clearValue, type)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Checks if value is valid number for a given GPULayer type.\n * Checks extrema values.\n * @private\n */\nexport function isNumberOfType(value: any, type: GPULayerType) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\tcase FLOAT:\n\t\t\treturn isNumber(value);\n\t\tcase BYTE:\n\t\t\t// -(2 ** 7)\n\t\t\tif (value < -128) return false;\n\t\t\t// 2 ** 7 - 1\n\t\t\tif (value > 127) return false;\n\t\t\treturn isInteger(value);\n\t\tcase SHORT:\n\t\t\t// -(2 ** 15)\n\t\t\tif (value < -32768) return false;\n\t\t\t// 2 ** 15 - 1\n\t\t\tif (value > 32767) return false;\n\t\t\treturn isInteger(value);\n\t\tcase INT:\n\t\t\t// -(2 ** 31)\n\t\t\tif (value < -2147483648) return false;\n\t\t\t// 2 ** 31 - 1\n\t\t\tif (value > 2147483647) return false;\n\t\t\treturn isInteger(value);\n\t\tcase UNSIGNED_BYTE:\n\t\t\t// 2 ** 8 - 1\n\t\t\tif (value > 255) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_SHORT:\n\t\t\t// 2 ** 16 - 1\n\t\t\tif (value > 65535) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_INT:\n\t\t\t// 2 ** 32 - 1\n\t\t\tif (value > 4294967295) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown type ${type}`);\n\t}\n}\n\n/**\n * Checks if value is finite number.\n * @private\n */\nexport function isNumber(value: any) {\n\treturn !Number.isNaN(value) && typeof value === 'number' && Number.isFinite(value);\n}\n\n/**\n * Checks if value is finite integer.\n * @private\n */\nexport function isInteger(value: any) {\n\treturn isNumber(value) && (value % 1 === 0);\n}\n\n/**\n * Checks if value is finite positive integer (> 0).\n * @private\n */\nexport function isPositiveInteger(value: any) {\n\treturn isInteger(value) && value > 0;\n}\n\n/**\n * Checks if value is finite non-negative integer (>= 0).\n * @private\n */\nexport function isNonNegativeInteger(value: any) {\n\treturn isInteger(value) &&  value >= 0;\n}\n\n/**\n * Checks if value is string.\n * @private\n */\nexport function isString(value: any){\n\treturn typeof value === 'string';\n}\n\n/**\n * Checks if value is array.\n * @private\n */\nexport function isArray(value: any) {\n\treturn Array.isArray(value);\n}\n\n/**\n * Checks if value is Javascript object.\n * @private\n */\nexport function isObject(value: any) {\n\treturn typeof value === 'object' && !isArray(value) && value !== null;\n}\n\n/**\n * Checks if value is boolean.\n * @private\n */\nexport function isBoolean(value: any) {\n\treturn typeof value === 'boolean';\n}","// Data types.\n/**\n * Half float data type.\n */\nexport const HALF_FLOAT = 'HALF_FLOAT';\n/**\n * Float data type.\n */\nexport const FLOAT = 'FLOAT';\n/**\n * Unsigned byte data type.\n */\nexport const UNSIGNED_BYTE = 'UNSIGNED_BYTE';\n/**\n * Byte data type.\n */\nexport const BYTE = 'BYTE';\n/**\n * Unsigned short data type.\n */\nexport const UNSIGNED_SHORT = 'UNSIGNED_SHORT';\n/**\n * Short data type.\n */\nexport const SHORT = 'SHORT';\n/**\n * Unsigned int data type.\n */\nexport const UNSIGNED_INT = 'UNSIGNED_INT';\n/**\n * Int data type.\n */\nexport const INT = 'INT';\n/**\n * Boolean data type (GPUProgram uniforms only).\n */\nexport const BOOL = 'BOOL';\n/**\n * Unsigned int data type (GPUProgram uniforms only).\n */\nexport const UINT = 'UINT';\n\n// Filter types.\n/**\n * Nearest texture filtering.\n */\nexport const NEAREST = 'NEAREST';\n/**\n * Linear texture filtering.\n */\nexport const LINEAR = 'LINEAR';\n\n// Wrap types.\n/**\n * Clamp to edge wrapping (no wrapping).\n */\nexport const CLAMP_TO_EDGE = 'CLAMP_TO_EDGE';\n/**\n * Repeat/periodic wrapping.\n */\nexport const REPEAT = 'REPEAT';\n// export const MIRRORED_REPEAT = 'MIRRORED_REPEAT';\n\n// GPULayer parameter types.\n/**\n * GPULayer array types.\n */\nexport type GPULayerArray =  Float32Array | Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array;\n/**\n * @private\n */\nexport const validArrayTypes = [Float32Array, Uint8Array, Int8Array, Uint16Array, Int16Array, Uint32Array, Int32Array, Array];\n/**\n * GPULayer data types.\n */\nexport type GPULayerType = typeof HALF_FLOAT | typeof FLOAT | typeof UNSIGNED_BYTE | typeof BYTE | typeof UNSIGNED_SHORT | typeof SHORT | typeof UNSIGNED_INT | typeof INT;\n/**\n * @private\n */\nexport const validDataTypes = [HALF_FLOAT, FLOAT, UNSIGNED_BYTE, BYTE, UNSIGNED_SHORT, SHORT, UNSIGNED_INT, INT];\n/**\n * GPULayer numComponents options.\n */\nexport type GPULayerNumComponents = 1 | 2 | 3 | 4;\n/**\n * GPULayer filter/interpolation types.\n */\nexport type GPULayerFilter = typeof LINEAR | typeof NEAREST;\n/**\n * @private\n */\nexport const validFilters = [NEAREST, LINEAR];\n/**\n * @private\n */\n/**\n * GPULayer wrap types.\n */\nexport type GPULayerWrap = typeof REPEAT | typeof CLAMP_TO_EDGE;// | typeof MIRRORED_REPEAT;\n/**\n * @private\n */\nexport const validWraps = [CLAMP_TO_EDGE, REPEAT]; // MIRRORED_REPEAT\n\n\n// TODO: change this?\n// For image urls that are passed in and inited as textures.\n/**\n * @private\n */\nexport const RGB = 'RGB';\n/**\n * @private\n */\nexport const RGBA = 'RGBA';\n/**\n * @private\n */\nexport type TextureFormat = typeof RGB | typeof RGBA;\n/**\n * @private\n */\nexport const validTextureFormats = [RGB, RGBA];\n/**\n * @private\n */\nexport type TextureType = typeof UNSIGNED_BYTE;\n/**\n * @private\n */\nexport const validTextureTypes = [UNSIGNED_BYTE];\n\n// GLSL versions.\n/**\n * GLSL version 300 (WebGL2 only).\n */\nexport const GLSL3 = '300 es';\n/**\n * GLSL version 100 (WebGL1 and WebGL2).\n */\nexport const GLSL1 = '100';\n/**\n * GLSL available versions.\n */\nexport type GLSLVersion = typeof GLSL1 | typeof GLSL3;\n\n// WebGL versions.\n/**\n * WebGL2 context ID.\n */\nexport const WEBGL2 = 'webgl2';\n/**\n * WebGL1 context ID.\n */\nexport const WEBGL1 = 'webgl';\n/**\n * Experimental WebGL context ID.\n */\nexport const EXPERIMENTAL_WEBGL = 'experimental-webgl';\n\n// Precision declarations.\n/**\n * GLSL lowp precision declaration.\n */\nexport const PRECISION_LOW_P = 'lowp';\n/**\n * GLSL mediump precision declaration.\n */\nexport const PRECISION_MEDIUM_P = 'mediump';\n/**\n * GLSL highp precision declaration.\n */\nexport const PRECISION_HIGH_P = 'highp';\n/**\n * GLSL available precision declarations.\n */\nexport type GLSLPrecision = typeof PRECISION_LOW_P | typeof PRECISION_MEDIUM_P | typeof PRECISION_HIGH_P;\n\n// Uniform types.\n/**\n * @private\n */\nexport const FLOAT_1D_UNIFORM = 'FLOAT_1D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_2D_UNIFORM = 'FLOAT_2D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_3D_UNIFORM = 'FLOAT_3D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_4D_UNIFORM = 'FLOAT_4D_UNIFORM';\n/**\n * @private\n */\nexport const INT_1D_UNIFORM = 'INT_1D_UNIFORM';\n/**\n * @private\n */\nexport const INT_2D_UNIFORM = 'INT_2D_UNIFORM';\n/**\n * @private\n */\nexport const INT_3D_UNIFORM = 'INT_3D_UNIFORM';\n/**\n * @private\n */\nexport const INT_4D_UNIFORM = 'INT_4D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_1D_UNIFORM = 'UINT_1D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_2D_UNIFORM = 'UINT_2D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_3D_UNIFORM = 'UINT_3D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_4D_UNIFORM = 'UINT_4D_UNIFORM';\n/**\n * @private\n */\n export const BOOL_1D_UNIFORM = 'BOOL_1D_UNIFORM';\n /**\n * @private\n */\n  export const BOOL_2D_UNIFORM = 'BOOL_2D_UNIFORM';\n  /**\n * @private\n */\n export const BOOL_3D_UNIFORM = 'BOOL_3D_UNIFORM';\n /**\n * @private\n */\n  export const BOOL_4D_UNIFORM = 'BOOL_4D_UNIFORM';\n\n// Uniform types and values.\n/**\n * GPUProgram uniform types.\n */\nexport type UniformType = typeof FLOAT | typeof INT | typeof UINT | typeof BOOL;\n/**\n * @private\n */\nexport type UniformInternalType = \n\ttypeof BOOL_1D_UNIFORM |\n\ttypeof BOOL_2D_UNIFORM |\n\ttypeof BOOL_3D_UNIFORM |\n\ttypeof BOOL_4D_UNIFORM |\n\ttypeof FLOAT_1D_UNIFORM |\n\ttypeof FLOAT_2D_UNIFORM |\n\ttypeof FLOAT_3D_UNIFORM |\n\ttypeof FLOAT_4D_UNIFORM |\n\ttypeof INT_1D_UNIFORM |\n\ttypeof INT_2D_UNIFORM |\n\ttypeof INT_3D_UNIFORM |\n\ttypeof INT_4D_UNIFORM |\n\ttypeof UINT_1D_UNIFORM |\n\ttypeof UINT_2D_UNIFORM |\n\ttypeof UINT_3D_UNIFORM |\n\ttypeof UINT_4D_UNIFORM;\n/**\n * GPUProgram uniform values.\n */\nexport type UniformValue = boolean | boolean[] | number | number[];\n/**\n * GPUProgram uniform parameters.\n */\nexport type UniformParams = {\n\tname: string,\n\tvalue: UniformValue,\n\ttype: UniformType,\n};\n/**\n * @private\n */\nexport type Uniform = { \n\tlocation: { [key: string]: WebGLUniformLocation },\n\ttype: UniformInternalType,\n\tvalue: UniformValue,\n};\n\n// Vertex shader types.\n/**\n * @private\n */\nexport const DEFAULT_PROGRAM_NAME = 'DEFAULT';\n/**\n * @private\n */\nexport const DEFAULT_W_UV_PROGRAM_NAME = 'DEFAULT_W_UV';\n/**\n * @private\n */\nexport const DEFAULT_W_NORMAL_PROGRAM_NAME = 'DEFAULT_W_NORMAL';\n/**\n * @private\n */\nexport const DEFAULT_W_UV_NORMAL_PROGRAM_NAME = 'DEFAULT_W_UV_NORMAL';\n/**\n * @private\n */\nexport const SEGMENT_PROGRAM_NAME = 'SEGMENT';\n/**\n * @private\n */\nexport const LAYER_POINTS_PROGRAM_NAME = 'LAYER_POINTS';\n/**\n * @private\n */\nexport const LAYER_LINES_PROGRAM_NAME = 'LAYER_LINES';\n/**\n * @private\n */\nexport const LAYER_VECTOR_FIELD_PROGRAM_NAME = 'LAYER_VECTOR_FIELD';\n/**\n * @private\n */\nexport type PROGRAM_NAME_INTERNAL =\n\ttypeof DEFAULT_PROGRAM_NAME |\n\ttypeof DEFAULT_W_UV_PROGRAM_NAME |\n\ttypeof DEFAULT_W_NORMAL_PROGRAM_NAME |\n\ttypeof DEFAULT_W_UV_NORMAL_PROGRAM_NAME |\n\ttypeof SEGMENT_PROGRAM_NAME |\n\ttypeof LAYER_POINTS_PROGRAM_NAME |\n\ttypeof LAYER_LINES_PROGRAM_NAME |\n\ttypeof LAYER_VECTOR_FIELD_PROGRAM_NAME;\n\n// Pass in #defines as strings to make it easier to control float vs int.\n/**\n * Object containing compile-time #define variables for GPUProgram fragment shader.\n */\nexport type CompileTimeVars = { [key: string]: string };\n\n// Each buffer in GPULayer contains a WebGLTexture and WebGLFramebuffer.\n/**\n * @private\n */\nexport type GPULayerBuffer = {\n\ttexture: WebGLTexture,\n\tframebuffer?: WebGLFramebuffer,\n}\n\n// Error callback, defaults to throwing an error.\nexport type ErrorCallback = (message: string) => void;\n/**\n * @private\n */\nexport const DEFAULT_ERROR_CALLBACK = (message: string) => { throw new Error(message); };\n\n// For stepCircle() and stepSegment() (with end caps).\n/**\n * @private\n */\nexport const DEFAULT_CIRCLE_NUM_SEGMENTS = 18;// Must be divisible by 6 to work with stepSegment().\n\n// Extrema values.\n/**\n * @private\n */\nexport const MIN_UNSIGNED_BYTE = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_BYTE = 2 ** 8 - 1;\n/**\n * @private\n */\nexport const MIN_BYTE = -(2 ** 7);\n/**\n * @private\n */\nexport const MAX_BYTE = 2 ** 7 - 1;\n/**\n * @private\n */\nexport const MIN_UNSIGNED_SHORT = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_SHORT = 2 ** 16 - 1;\n/**\n * @private\n */\nexport const MIN_SHORT = -(2 ** 15);\n/**\n * @private\n */\nexport const MAX_SHORT = 2 ** 15 - 1;\n/**\n * @private\n */\nexport const MIN_UNSIGNED_INT = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_INT = 2 ** 32 - 1;\n/**\n * @private\n */\nexport const MIN_INT = -(2 ** 31);\n/**\n * @private\n */\nexport const MAX_INT = 2 ** 31 - 1;\n// There are larger HALF_FLOAT and FLOAT ints, but they may be spaced out by > 1.\n/**\n * @private\n */\nexport const MIN_HALF_FLOAT_INT = -2048;\n/**\n * @private\n */\nexport const MAX_HALF_FLOAT_INT = 2048;\n/**\n * @private\n */\nexport const MIN_FLOAT_INT = -16777216;\n/**\n * @private\n */\nexport const MAX_FLOAT_INT = 16777216;","import { GPUComposer } from './GPUComposer';\n\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float\n// Float is provided by default in WebGL2 contexts.\n// This extension implicitly enables the WEBGL_color_buffer_float extension (if supported), which allows rendering to 32-bit floating-point color buffers.\nexport const OES_TEXTURE_FLOAT = 'OES_texture_float';\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_half_float\n// Half float is supported by modern mobile browsers, float not yet supported.\n// Half float is provided by default for Webgl2 contexts.\n// This extension implicitly enables the EXT_color_buffer_half_float extension (if supported), which allows rendering to 16-bit floating point formats.\nexport const OES_TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n// TODO: Seems like linear filtering of floats may be supported in some browsers without these extensions?\n// https://www.khronos.org/registry/OpenGL/extensions/OES/OES_texture_float_linear.txt\nexport const OES_TEXTURE_FLOAT_LINEAR = 'OES_texture_float_linear';\nexport const OES_TEXTURE_HAlF_FLOAT_LINEAR = 'OES_texture_half_float_linear';\n// https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n// Adds gl.UNSIGNED_SHORT, gl.UNSIGNED_INT types to textImage2D in WebGL1.0\nexport const WEBGL_DEPTH_TEXTURE = 'WEBGL_depth_texture';\n// EXT_COLOR_BUFFER_FLOAT adds ability to render to a variety of floating pt textures.\n// This is needed for the WebGL2 contexts that do not support OES_TEXTURE_FLOAT / OES_TEXTURE_HALF_FLOAT extensions.\n// https://developer.mozilla.org/en-US/docs/Web/API/EXT_color_buffer_float\n// https://stackoverflow.com/questions/34262493/framebuffer-incomplete-attachment-for-texture-with-internal-format\n// https://stackoverflow.com/questions/36109347/framebuffer-incomplete-attachment-only-happens-on-android-w-firefox\nexport const EXT_COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n// On WebGL 2, EXT_COLOR_BUFFER_HALF_FLOAT is an alternative to using the EXT_color_buffer_float extension on platforms\n// that support 16-bit floating point render targets but not 32-bit floating point render targets.\nexport const EXT_COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n\nexport function getExtension(\n\tcomposer: GPUComposer,\n\textensionName: string,\n\toptional = false,\n) {\n\t// Check if we've already loaded the extension.\n\tif (composer._extensions[extensionName] !== undefined) return composer._extensions[extensionName];\n\n\tconst { gl, _errorCallback, _extensions, verboseLogging } = composer;\n\tlet extension;\n\ttry {\n\t\textension = gl.getExtension(extensionName);\n\t} catch (e) {}\n\tif (extension) {\n\t\t// Cache this extension.\n\t\t_extensions[extensionName] = extension;\n\t\tif (composer.verboseLogging) console.log(`Loaded extension: ${extensionName}.`);\n\t} else {\n\t\t_extensions[extensionName] = false; // Cache the bad extension lookup.\n\t\tif (composer.verboseLogging) console.log(`Unsupported ${optional ? 'optional ' : ''}extension: ${extensionName}.`);\n\t}\n\t// If the extension is not optional, throw error.\n\tif (!extension && !optional) {\n\t\t_errorCallback(`Required extension unsupported by this device / browser: ${extensionName}.`);\n\t}\n\treturn extension;\n}","import * as utils from './utils';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport { GPUProgram } from './GPUProgram';\nimport * as checks from './checks';\nimport * as GPULayerHelpers from './GPULayerHelpers';\nimport * as regex from './regex';\nimport * as extensions from './extensions';\n\n// These exports are only used for testing.\n/**\n * @private\n */\nconst _testing = {\n\tisFloatType: utils.isFloatType,\n\tisUnsignedIntType: utils.isUnsignedIntType,\n\tisSignedIntType: utils.isSignedIntType,\n\tisIntType: utils.isIntType,\n\tmakeShaderHeader: utils.makeShaderHeader,\n\tcompileShader: utils.compileShader,\n\tinitGLProgram: utils.initGLProgram,\n\treadyToRead: utils.readyToRead,\n\tpreprocessVertexShader: utils.preprocessVertexShader,\n\tpreprocessFragmentShader: utils.preprocessFragmentShader,\n\tisPowerOf2: utils.isPowerOf2,\n\tinitSequentialFloatArray: utils.initSequentialFloatArray,\n\tuniformInternalTypeForValue: utils.uniformInternalTypeForValue,\n\t...extensions,\n\t...regex,\n\t...checks,\n\t...GPULayerHelpers,\n}\n\n// Named exports.\nexport * from './constants';\nconst {\n\tisWebGL2,\n\tisWebGL2Supported,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n} = utils;\nexport {\n\tGPUComposer,\n\tGPULayer,\n\tGPUProgram,\n\tisWebGL2,\n\tisWebGL2Supported,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n\t_testing,\n}","import { GLSLVersion, GLSL3 } from './constants';\n\n/**\n * Helper functions for converting GLSL3 to GLSL1 and checking for valid shader code.\n * Note: there is no positive lookbehind support in some browsers, use capturing parens instead.\n * https://stackoverflow.com/questions/3569104/positive-look-behind-in-javascript-regular-expression/3569116#3569116\n */\n\nfunction escapeRegExp(string: string){\n\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\n/**\n * Typecast variable assignment.\n * This is used in cases when e.g. varyings have to be converted to float in GLSL1.\n * @private\n */\nexport function typecastVariable(shaderSource: string, variableName: string, type: string) {\n\t// \"s\" makes this work for multiline values.\n\t// Do this without lookbehind to support older browsers.\n\t// const regexMatch = new RegExp(`(?<=\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*)\\\\S[^;]*(?=;)`, 'sg');\n\tconst regexMatch = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*\\\\S[^;]*;`, 'sg');\n\tconst assignmentExpressions = shaderSource.match(regexMatch);\n\tif (assignmentExpressions) {\n\t\t// Loop through all places where variable is assigned and typecast.\n\t\tfor (let i = 0; i < assignmentExpressions.length; i++) {\n\t\t\tconst regexValueMatch = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*(\\\\S[^;]*);`, 's');\n\t\t\tconst value = assignmentExpressions[i].match(regexValueMatch);\n\t\t\tif (value && value[1]) {\n\t\t\t\tconst regexReplace = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*${escapeRegExp(value[1])}\\\\s*;`, 's');\n\t\t\t\tshaderSource = shaderSource.replace(regexReplace, `${variableName} = ${type}(${value[1]});`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`Could not find value in expression: \"${assignmentExpressions[i]}\"`);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconsole.warn(`No assignment found for shader variable ${variableName}.`);\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader \"in\" to \"attribute\".\n * @private\n */\nexport function glsl1VertexIn(shaderSource: string) {\n\treturn shaderSource.replace(/\\bin\\b/g, 'attribute');\n}\n\n/**\n * Convert int varyings to float types.\n * Also update any variable assignments so that they are cast to float.\n * @private\n */\nfunction _castVaryingToFloat(shaderSource: string, regexString: string, type: string) {\n\t// Do this without lookbehind to support older browsers.\n\t// const regexMatch = new RegExp(`(?<=${regexString}\\\\s+)\\\\S[^;]*(?=;)`, 'g');\n\tconst regexMatch = new RegExp(`${regexString}\\\\s+\\\\S[^;]*;`, 'g');\n\tconst castToFloatExpressions = shaderSource.match(regexMatch);\n\tif (castToFloatExpressions) {\n\t\t// Replace all with new type.\n\t\tconst regexReplace = new RegExp(`${regexString}\\\\b`, 'g');\n\t\tshaderSource = shaderSource.replace(regexReplace, `varying ${type}`);\n\t\t// Loop through each expression, grab variable name, and cast all assignments.\n\t\tfor (let i = 0; i < castToFloatExpressions.length; i++) {\n\t\t\tconst regexVariableMatch = new RegExp(`${regexString}\\\\s+(\\\\S[^;]*);`);\n\t\t\tconst variable = castToFloatExpressions[i].match(regexVariableMatch);\n\t\t\tif (variable && variable[2]) {\n\t\t\t\tshaderSource = typecastVariable(shaderSource, variable[2], type);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`Could not find variable name in expression: \"${castToFloatExpressions[i]}\"`);\n\t\t\t}\n\t\t}\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Convert int varyings to float types.\n * Only exported for testing.\n * @private\n */\nexport function castVaryingToFloat(shaderSource: string) {\n\t// Need to init all expressions with the same number of capturing groups\n\t// so that this will work in _castVaryingToFloat.\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(u)?int', 'float'); // '\\\\bvarying\\\\s+u?int'\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec2', 'vec2');\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec3', 'vec3');\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec4', 'vec4');\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader \"out\" to \"varying\".\n * Also remove \"flat\" if necessary.\n * Also cast as float if necessary.\n * @private\n */\nexport function glsl1VertexOut(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/(\\bflat\\s+)?\\bout\\b/g, 'varying');\n\tshaderSource = castVaryingToFloat(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert fragment shader \"in\" to \"varying\".\n * Also remove \"flat\" if necessary.\n * Also cast as float if necessary.\n * @private\n */\nexport function glsl1FragmentIn(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/(\\bflat\\s+)?\\bin\\b/g, 'varying');\n\tshaderSource = castVaryingToFloat(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Contains out_fragColor.\n * @private\n */\nfunction containsOutFragColor(shaderSource: string) {\n\treturn !!shaderSource.match(/\\bout_fragColor\\b/);\n}\n\n/**\n * Contains gl_FragColor.\n * @private\n */\nfunction containsGLFragColor(shaderSource: string) {\n\treturn !!shaderSource.match(/\\bgl_FragColor\\b/);\n}\n\n/**\n * Get type (int, float, vec3, etc) of fragment out.\n * Only exported for testing.\n * @private\n */\nexport function getFragmentOutType(shaderSource: string, name: string) {\n\t// Do this without lookbehind to support older browsers.\n\t// const type = shaderSource.match(/(?<=\\bout\\s+((lowp|mediump|highp)\\s+)?)(float|int|((i|u)?vec(2|3|4)))(?=\\s+out_fragColor;)/);\n\tconst type = shaderSource.match(/\\bout\\s+((lowp|mediump|highp)\\s+)?((float|int|((i|u)?vec(2|3|4))))\\s+out_fragColor;/);\n\tif (!type || !type[3]) {\n\t\tthrow new Error(`No type found in out_fragColor declaration for GPUProgram \"${name}\".`);\n\t}\n\treturn type[3] as 'float' | 'int' | 'vec2' | 'vec3' | 'vec4' | 'ivec2' | 'ivec3' | 'ivec4' | 'uvec2' | 'uvec3' | 'uvec4';\n}\n\n/**\n * Convert out_fragColor to gl_FragColor.\n * @private\n */\nexport function glsl1FragmentOut(shaderSource: string, name: string) {\n\tif (containsOutFragColor(shaderSource)) {\n\t\tconst type = getFragmentOutType(shaderSource, name);\n\t\t// Remove out_fragColor declaration.\n\t\tshaderSource = shaderSource.replace(/\\bout\\s+((lowp|mediump|highp)\\s+)?\\w+\\s+out_fragColor\\s*;/g, '');\n\t\tlet assignmentFound = false;\n\t\twhile (true) {\n\t\t\t// Replace each instance of out_fragColor = with gl_FragColor = and cast to vec4.\n\t\t\t// Do this without lookbehind to support older browsers.\n\t\t\t// const output = shaderSource.match(/(?<=\\bout_fragColor\\s*=\\s*)\\S.*(?=;)/s); // /s makes this work for multiline.\n\t\t\tconst output = shaderSource.match(/\\bout_fragColor\\s*=\\s*(\\S.*);/s); // /s makes this work for multiline.\n\t\t\tif (output && output[1]) {\n\t\t\t\tassignmentFound = true;\n\t\t\t\tlet filler = '';\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'float':\n\t\t\t\t\tcase 'int':\n\t\t\t\t\t\tfiller = ', 0, 0, 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vec2':\n\t\t\t\t\tcase 'ivec2':\n\t\t\t\t\tcase 'uvec2':\n\t\t\t\t\t\tfiller = ', 0, 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vec3':\n\t\t\t\t\tcase 'ivec3':\n\t\t\t\t\tcase 'uvec3':\n\t\t\t\t\t\tfiller = ', 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tshaderSource = shaderSource.replace(/\\bout_fragColor\\s*=\\s*.+;/s, `gl_FragColor = vec4(${output[1]}${filler});`);\n\t\t\t} else {\n\t\t\t\tif (!assignmentFound) throw new Error(`No assignment found for out_fragColor in GPUProgram \"${name}\".`);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Check that out_fragColor or gl_FragColor is present in fragment shader source.\n * @private \n */\n export function checkFragmentShaderForFragColor(shaderSource: string, glslVersion: GLSLVersion, name: string) {\n\tconst gl_FragColor = containsGLFragColor(shaderSource);\n\tconst out_fragColor = containsOutFragColor(shaderSource);\n\tif (glslVersion === GLSL3) {\n\t\t// Check that fragment shader source DOES NOT contain gl_FragColor\n\t\tif (gl_FragColor) {\n\t\t\tthrow new Error(`Found \"gl_FragColor\" declaration in fragment shader for GPUProgram \"${name}\": either init GPUComposer with glslVersion = GLSL1 or use GLSL3 syntax in your fragment shader.`);\n\t\t}\n\t\t// Check that fragment shader source DOES contain out_fragColor.\n\t\tif (!out_fragColor) {\n\t\t\tthrow new Error(`Found no \"out_fragColor\" (GLSL3) or \"gl_FragColor\" (GLSL1) declarations or  in fragment shader for GPUProgram \"${name}\".`);\n\t\t}\n\t} else {\n\t\t// Check that fragment shader source DOES contain either gl_FragColor or out_fragColor.\n\t\tif (!gl_FragColor && !out_fragColor) {\n\t\t\tthrow new Error(`Found no \"out_fragColor\" (GLSL3) or \"gl_FragColor\" (GLSL1) declarations or  in fragment shader for GPUProgram \"${name}\".`);\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Convert texture to texture2D.\n * TODO: add polyfills.\n * @private\n */\nexport function glsl1Texture(shaderSource: string) {\n\treturn shaderSource.replace(/\\btexture\\(/g, 'texture2D(');\n}\n\n/**\n * Convert isampler2D and usampler2D to sampler2D.\n * @private\n */\nexport function glsl1Sampler2D(shaderSource: string) {\n\treturn shaderSource.replace(/\\b(i|u)sampler2D\\b/g, 'sampler2D');\n}\n\n/**\n * Unsigned int types are not supported, use int types instead.\n * @private\n */\nexport function glsl1Uint(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/\\buint\\b/g, 'int');\n\tshaderSource = shaderSource.replace(/\\buvec2\\b/g, 'ivec2');\n\tshaderSource = shaderSource.replace(/\\buvec3\\b/g, 'ivec3');\n\tshaderSource = shaderSource.replace(/\\buvec4\\b/g, 'ivec4');\n\tshaderSource = shaderSource.replace(/\\buint\\(/g, 'int(');\n\tshaderSource = shaderSource.replace(/\\buvec2\\(/g, 'ivec2(');\n\tshaderSource = shaderSource.replace(/\\buvec3\\(/g, 'ivec3(');\n\tshaderSource = shaderSource.replace(/\\buvec4\\(/g, 'ivec4(');\n\treturn shaderSource;\n}\n\n/**\n * Replace all highp with mediump.\n * @private\n */\nexport function highpToMediump(shaderSource: string) {\n\treturn shaderSource.replace(/\\bhighp\\b/, 'mediump');\n}\n\n/**\n * Strip out any version numbers.\n * https://github.com/Jam3/glsl-version-regex\n * @private\n */\nexport function stripVersion(shaderSource: string) {\n\tconst origLength = shaderSource.length;\n\tshaderSource = shaderSource.replace(/^\\s*\\#version\\s+([0-9]+(\\s+(es)+)?)\\s*/, '');\n\tif (shaderSource.length !== origLength) {\n\t\tconsole.warn('GPUIO expects shader source that does not contain #version declarations, removing....');\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Strip out any precision declarations.\n * @private\n */\nexport function stripPrecision(shaderSource: string) {\n\tconst origLength = shaderSource.length;\n\tshaderSource = shaderSource.replace(/\\s*precision\\s+((highp)|(mediump)|(lowp))\\s+[a-zA-Z0-9]+\\s*;/g, '');\n\tif (shaderSource.length !== origLength) {\n\t\tconsole.warn('GPUIO expects shader source that does not contain precision declarations, removing....');\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Strip out comments from shader code.\n * @private\n */\nexport function stripComments(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/\\s?\\/\\/.*\\n/g, ''); // Remove single-line comments.\n\t// ? puts this in lazy mode (match shortest strings).\n\tshaderSource = shaderSource.replace(/\\/\\*.*?\\*\\//gs, ''); /* Remove multi-line comments */\n\treturn shaderSource;\n}","import {\n\tisArray,\n\tisBoolean,\n\tisInteger,\n\tisNonNegativeInteger,\n\tisNumber,\n\tisString,\n} from './checks';\nimport {\n\tBOOL,\n\tBOOL_1D_UNIFORM,\n\tBOOL_2D_UNIFORM,\n\tBOOL_3D_UNIFORM,\n\tBOOL_4D_UNIFORM,\n\tBYTE,\n\tCompileTimeVars,\n\tDEFAULT_ERROR_CALLBACK,\n\tErrorCallback,\n\tFLOAT,\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tGLSL1,\n\tGLSL3,\n\tGLSLPrecision,\n\tGLSLVersion,\n\tGPULayerType,\n\tHALF_FLOAT,\n\tINT,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tPRECISION_HIGH_P,\n\tPRECISION_LOW_P,\n\tPRECISION_MEDIUM_P,\n\tSHORT,\n\tUINT,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n\tUniformType,\n\tUniformValue,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_INT,\n\tUNSIGNED_SHORT,\n\tWEBGL1,\n\tWEBGL2,\n} from './constants';\nimport {\n\tcheckFragmentShaderForFragColor,\n\tglsl1FragmentIn,\n\tglsl1FragmentOut,\n\tglsl1Sampler2D,\n\tglsl1Texture,\n\tglsl1Uint,\n\tglsl1VertexIn,\n\tglsl1VertexOut,\n\thighpToMediump,\n\tstripComments,\n\tstripPrecision,\n\tstripVersion,\n} from './regex';\nconst precisionSource = require('./glsl/common/precision.glsl');\n\n/**\n * Memoize results of more complex WebGL tests (that require allocations/deallocations).\n * @private\n */\nconst results = {\n\tsupportsWebGL2: undefined as undefined | boolean,\n\tsupportsHighpVertex: undefined as  undefined | boolean,\n\tsupportsHighpFragment: undefined as undefined | boolean,\n\tmediumpVertexPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n\tmediumpFragmentPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n}\n\n/**\n * Test whether a GPULayer type is a float type.\n * @private\n */\nexport function isFloatType(type: GPULayerType) {\n\treturn type === FLOAT || type === HALF_FLOAT;\n}\n\n/**\n * Test whether a GPULayer type is an unsigned int type.\n * @private\n */\n export function isUnsignedIntType(type: GPULayerType) {\n\treturn type === UNSIGNED_BYTE || type === UNSIGNED_SHORT || type === UNSIGNED_INT;\n}\n\n/**\n * Test whether a GPULayer type is a signed int type.\n * @private\n */\n export function isSignedIntType(type: GPULayerType) {\n\treturn type === BYTE || type === SHORT || type === INT;\n}\n\n/**\n * Test whether a GPULayer type is a int type.\n * @private\n */\n export function isIntType(type: GPULayerType) {\n\treturn isUnsignedIntType(type) || isSignedIntType(type);\n}\n\n/**\n * Enum for precision values.\n * See src/glsl/common/precision.glsl for more info.\n * @private\n */\nfunction intForPrecision(precision: GLSLPrecision) {\n\tif (precision === PRECISION_HIGH_P) return 2;\n\tif (precision === PRECISION_MEDIUM_P) return 1;\n\tif (precision === PRECISION_LOW_P) return 0;\n\tthrow new Error(`Unknown shader precision value: ${JSON.stringify(precision)}.`);\n}\n\n/**\n * Create a string to pass defines into shader.\n * @private\n */\nfunction convertDefinesToString(defines: CompileTimeVars) {\n\tlet definesSource = '';\n\tconst keys = Object.keys(defines);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\t// Check that define is passed in as a string.\n\t\tif (!isString(key) || !isString(defines[key])) {\n\t\t\tthrow new Error(`GPUProgram defines must be passed in as key value pairs that are both strings, got key value pair of type [${typeof key} : ${typeof defines[key]}] for key ${key}.`)\n\t\t}\n\t\tdefinesSource += `#define ${key} ${defines[key]}\\n`;\n\t}\n\treturn definesSource;\n}\n\n/**\n * Create header string for fragment and vertex shaders.\n * Export this for testing purposes.\n * @private\n */\nexport function makeShaderHeader(\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tdefines?: CompileTimeVars,\n) {\n\tconst versionSource = glslVersion === GLSL3 ? `#version ${GLSL3}\\n` : '';\n\tconst definesSource = defines ? convertDefinesToString(defines) : '';\n\tconst precisionDefinesSource = convertDefinesToString({\n\t\tGPUIO_INT_PRECISION: `${intForPrecision(intPrecision)}`,\n\t\tGPUIO_FLOAT_PRECISION: `${intForPrecision(floatPrecision)}`,\n\t});\n\treturn `${versionSource}${definesSource}${precisionDefinesSource}${precisionSource}`;\n}\n\n/**\n * Compile vertex or fragment shaders.\n * Fragment shaders may be compiled on the fly, so keep this efficient.\n * Copied from http://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html\n * @private\n */\nexport function compileShader(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tshaderSource: string,\n\tshaderType: number,\n\tprogramName: string,\n\terrorCallback: ErrorCallback,\n\tdefines?: CompileTimeVars,\n) {\n\t// Create the shader object\n\tconst shader = gl.createShader(shaderType);\n\tif (!shader) {\n\t\terrorCallback('Unable to init gl shader.');\n\t\treturn null;\n\t}\n\n\t// Set the shader source code.\n\tconst shaderHeader = makeShaderHeader(\n\t\tglslVersion,\n\t\tintPrecision,\n\t\tfloatPrecision,\n\t\tdefines,\n\t);\n\tgl.shaderSource(shader, `${shaderHeader}${shaderSource}`);\n\n\t// Compile the shader\n\tgl.compileShader(shader);\n\n\t// Check if it compiled\n\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\tif (!success) {\n\t\t// Something went wrong during compilation - print the error.\n\t\tconsole.log('shader source:', shaderSource);\n\t\terrorCallback(`Could not compile ${shaderType === gl.FRAGMENT_SHADER ? 'fragment' : 'vertex'} shader for program \"${programName}\": ${gl.getShaderInfoLog(shader)}.`);\n\t\treturn null;\n\t}\n\treturn shader;\n}\n\n/**\n * Init a WebGL program from vertex and fragment shaders.\n * GLPrograms may be inited on the fly, so keep this efficient.\n * @private\n */\nexport function initGLProgram(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tvertexShader: WebGLShader,\n\tfragmentShader: WebGLShader,\n\tname: string,\n\terrorCallback: ErrorCallback,\n) {\n\t// Create a program.\n\tconst program = gl.createProgram();\n\tif (!program) {\n\t\terrorCallback(`Unable to init GL program for GPUProgram \"${name}\", gl.createProgram() has failed.`);\n\t\treturn;\n\t}\n\t// Link the program.\n\tgl.attachShader(program, vertexShader);\n\tgl.attachShader(program, fragmentShader);\n\tgl.linkProgram(program);\n\t// Check if it linked.\n\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\tif (!success) {\n\t\t// Something went wrong with the link.\n\t\terrorCallback(`GPUProgram \"${name}\" failed to link: ${gl.getProgramInfoLog(program)}`);\n\t\treturn;\n\t}\n\treturn program;\n}\n\n/**\n * Returns whether a WebGL context is WebGL2.\n * This code is pulled from https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLCapabilities.js\n * @param gl - WebGL context to test.\n * @returns - true if WebGL2 context, else false.\n */\nexport function isWebGL2(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\t// @ts-ignore\n\treturn (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) || (typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext);\n}\n\n/**\n * Returns whether WebGL2 is supported by the current browser.\n * @returns - true if WebGL2 is supported, else false.\n*/\nexport function isWebGL2Supported() {\n\tif (results.supportsWebGL2 === undefined) {\n\t\tconst gl = document.createElement('canvas').getContext(WEBGL2);\n\t\t// GL context and canvas will be garbage collected.\n\t\tresults.supportsWebGL2 = isWebGL2(gl!); // Will return false in case of gl = null.\n\t}\n\treturn results.supportsWebGL2;\n}\n\n/**\n * Checks if the framebuffer is ready to read.\n * @private\n */\nexport function readyToRead(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\treturn gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n};\n\n/**\n * Detects whether highp is supported by this browser.\n * This is supposed to be relatively easy. You call gl.getShaderPrecisionFormat, you pass in the shader type,\n * VERTEX_SHADER or FRAGMENT_SHADER and you pass in one of LOW_FLOAT, MEDIUM_FLOAT, HIGH_FLOAT, LOW_INT, MEDIUM_INT, HIGH_INT,\n * and it returns the precision info.\n * Unfortunately Safari has a bug here which means checking this way will fail on iPhone, at least as of April 2020.\n * https://webglfundamentals.org/webgl/webgl-precision-lowp-mediump-highp.html\n * @private\n */\nfunction isHighpSupported(vsSource: string, fsSource: string) {\n\tconst gl = document.createElement('canvas').getContext(WEBGL1);\n\tif (!gl) {\n\t\tthrow new Error(`Unable to init webgl context.`);\n\t}\n\ttry {\n\t\tconst vs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tvsSource,\n\t\t\tgl.VERTEX_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst fs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tfsSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst program = initGLProgram(gl, vs, fs, 'highpFragmentTest', DEFAULT_ERROR_CALLBACK)!;\n\t\t// Deallocate everything.\n\t\tgl.deleteProgram(program);\n\t\tgl.deleteShader(vs);\n\t\tgl.deleteShader(fs);\n\t\t// GL context and canvas will be garbage collected.\n\t} catch {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/**\n * Detects whether highp precision is supported in vertex shaders in the current browser.\n * @returns - true is highp is supported in vertex shaders, else false.\n */\nexport function isHighpSupportedInVertexShader() {\n\tif (results.supportsHighpVertex === undefined) {\n\t\tconst vertexSupport = isHighpSupported(\n\t\t\t'void main() { highp float test = 0.524; gl_Position = vec4(test, test, 0, 1); }',\n\t\t\t'void main() { gl_FragColor = vec4(0); }',\n\t\t);\n\t\tresults.supportsHighpVertex = vertexSupport;\n\t}\n\treturn results.supportsHighpVertex;\n}\n\n/**\n * Detects whether highp precision is supported in fragment shaders in the current browser.\n * @returns - true is highp is supported in fragment shaders, else false.\n */\nexport function isHighpSupportedInFragmentShader() {\n\tif (results.supportsHighpFragment === undefined) {\n\t\tconst fragmentSupport = isHighpSupported(\n\t\t\t'void main() { gl_Position = vec4(0.5, 0.5, 0, 1); }',\n\t\t\t'void main() { highp float test = 1.35; gl_FragColor = vec4(test); }',\n\t\t);\n\t\tresults.supportsHighpFragment = fragmentSupport;\n\t}\n\treturn results.supportsHighpFragment;\n}\n\n/**\n * Helper function to perform a 1px math calculation in order to determine WebGL capabilities.\n * From https://webglfundamentals.org/\n * @private\n */\nfunction test1PxCalc(\n\tname: string,\n\tgl: WebGL2RenderingContext | WebGLRenderingContext,\n\tfs: WebGLShader,\n\tvs: WebGLShader,\n\taddUniforms: (program: WebGLProgram) => void,\n) {\n\tconst program = initGLProgram(gl, vs, fs, name, DEFAULT_ERROR_CALLBACK);\n\tif (!program) {\n\t\tthrow new Error(`Unable to init WebGLProgram.`);\n\t}\n\tconst positionLocation = gl.getAttribLocation(program, 'position');\n\n\t// create a buffer and setup an attribute\n\t// We wouldn't need this except for a bug in Safari.\n\t// See https://webglfundamentals.org/webgl/lessons/webgl-smallest-programs.html\n\t// and https://bugs.webkit.org/show_bug.cgi?id=197592\n\tconst buffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ARRAY_BUFFER, 1, gl.STATIC_DRAW);\n\tgl.enableVertexAttribArray(positionLocation);\n\tgl.vertexAttribPointer(\n\t\tpositionLocation,\n\t\t1,                // pull 1 value per vertex shader iteration from buffer\n\t\tgl.UNSIGNED_BYTE, // type of data in buffer,\n\t\tfalse,            // don't normalize\n\t\t0,                // bytes to advance per iteration (0 = compute from size and type)\n\t\t0,                // offset into buffer\n\t);\n\n\tgl.viewport(0, 0, 1, 1);\n\tgl.useProgram(program);\n\n\taddUniforms(program);\n\t\n\tgl.drawArrays(\n\t\tgl.POINTS,\n\t\t0, // offset\n\t\t1, // number of vertices to process\n\t);\n\n\tconst pixel = new Uint8Array(4);\n\tgl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n\n\t// Deallocate everything.\n\tgl.deleteProgram(program);\n\tgl.deleteShader(vs);\n\tgl.deleteShader(fs);\n\tgl.deleteBuffer(buffer);\n\t// GL context and canvas will be garbage collected.\n\n\treturn pixel;\n}\n\n/**\n * Returns the actual precision of mediump inside vertex shader.\n * From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n * @returns - Vertex shader mediump precision.\n */\nexport function getVertexShaderMediumpPrecision() {\n\tif (results.mediumpVertexPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\t/** @type {HTMLCanvasElement} */\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tuniform mediump vec3 v;\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t\tv_result = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_FragColor = v_result;\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionVertexTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpVertexPrecision = mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpVertexPrecision;\n}\n\n/**\n * Returns the actual precision of mediump inside fragment shader.\n * From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n * @returns - Fragment shader supported mediump precision.\n */\nexport function getFragmentShaderMediumpPrecision() {\n\tif (results.mediumpFragmentPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P,`\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tuniform mediump vec3 v;\n\tvoid main() {\n\t\tgl_FragColor = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionFragmentTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpFragmentPrecision =  mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpFragmentPrecision;\n}\n\n/**\n * Returns whether a number is a power of 2.\n * @private\n */\nexport function isPowerOf2(value: number) {\n\t// Use bitwise operation to evaluate this.\n\treturn value > 0 && (value & (value - 1)) == 0;\n}\n\n/**\n * Returns a Float32 array with sequential values [0, 1, 2, 3...].\n * @private\n */\nexport function initSequentialFloatArray(length: number) {\n\tconst array = new Float32Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tarray[i] = i;\n\t}\n\treturn array;\n}\n\n/**\n * Strip out any unnecessary elements in shader source, e.g. #version and precision declarations.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction preprocessShader(shaderSource: string) {\n\t// Strip out any version numbers.\n\tshaderSource = stripVersion(shaderSource);\n\t// Strip out any precision declarations.\n\tshaderSource = stripPrecision(shaderSource);\n\t// Strip out comments.\n\tshaderSource = stripComments(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Common code for converting vertex/fragment shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction convertShaderToGLSL1(shaderSource: string) {\n\t// TODO: there are probably more to add here.\n\t// No isampler2D or usampler2D.\n\tshaderSource = glsl1Sampler2D(shaderSource);\n\t// Unsigned int types are not supported, use int types instead.\n\tshaderSource = glsl1Uint(shaderSource);\n\t// Convert texture to texture2D.\n\tshaderSource = glsl1Texture(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction convertVertexShaderToGLSL1(shaderSource: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to attribute.\n\tshaderSource = glsl1VertexIn(shaderSource);\n\t// Convert out to varying.\n\tshaderSource = glsl1VertexOut(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert fragment shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction convertFragmentShaderToGLSL1(shaderSource: string, name: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to varying.\n\tshaderSource = glsl1FragmentIn(shaderSource);\n\t// Convert out_fragColor to gl_FragColor.\n\tshaderSource = glsl1FragmentOut(shaderSource, name);\n\treturn shaderSource;\n}\n\n/**\n * Preprocess vertex shader for glslVersion and browser capabilities.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nexport function preprocessVertexShader(shaderSource: string, glslVersion: GLSLVersion) {\n\tshaderSource = preprocessShader(shaderSource);\n\t// Check if highp supported in vertex shaders.\n\tif (!isHighpSupportedInVertexShader()) {\n\t\tconsole.warn('highp not supported in vertex shader, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = highpToMediump(shaderSource);\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertVertexShaderToGLSL1(shaderSource);\n}\n\n\n\n/**\n * Preprocess fragment shader for glslVersion and browser capabilities.\n * This is called once on initialization of GPUProgram, so doesn't need to be extremely efficient.\n * @private\n */\nexport function preprocessFragmentShader(shaderSource: string, glslVersion: GLSLVersion, name: string) {\n\tshaderSource = preprocessShader(shaderSource);\n\tcheckFragmentShaderForFragColor(shaderSource, glslVersion, name);\n\t// Check if highp supported in fragment shaders.\n\tif (!isHighpSupportedInFragmentShader()) {\n\t\tconsole.warn('highp not supported in fragment shader, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = highpToMediump(shaderSource);\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertFragmentShaderToGLSL1(shaderSource, name);\n}\n\n/**\n * Check uniforms and return internal WebGL type (e.g. [1234][u]?[if])\n * @private\n */\nexport function uniformInternalTypeForValue(\n\tvalue: UniformValue,\n\ttype: UniformType,\n\tuniformName: string,\n\tprogramName: string,\n) {\n\tif (type === FLOAT) {\n\t\t// Check that we are dealing with a number.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNumber((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNumber(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn FLOAT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn FLOAT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn FLOAT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn FLOAT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t} else if (type === INT) {\n\t\t// Check that we are dealing with an int.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn INT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn INT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn INT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn INT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t} else if (type === UINT) {\n\t\t// Check that we are dealing with a uint.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNonNegativeInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNonNegativeInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn UINT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn UINT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn UINT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn UINT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t} else if (type === BOOL) {\n\t\t// Check that we are dealing with a boolean.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as boolean[]).length; i++) {\n\t\t\t\tif (!isBoolean((value as boolean[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected bool or bool[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isBoolean(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected bool or bool[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn BOOL_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn BOOL_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn BOOL_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn BOOL_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected boolean.`);\n\t} else {\n\t\tthrow new Error(`Invalid type \"${type}\" for uniform \"${uniformName}\" in program \"${programName}\", expected ${FLOAT} or ${INT} or ${BOOL}.`);\n\t}\n}","module.exports = \"#if (GPUIO_INT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp int;\\n#if (__VERSION__ == 300)\\nprecision highp isampler2D;precision highp usampler2D;\\n#endif\\n#else\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#endif\\n#if (GPUIO_INT_PRECISION == 1)\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#if (GPUIO_INT_PRECISION == 0)\\nprecision lowp int;\\n#if (__VERSION__ == 300)\\nprecision lowp isampler2D;precision lowp usampler2D;\\n#endif\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;precision highp sampler2D;\\n#else\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 1)\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 0)\\nprecision lowp float;precision lowp sampler2D;\\n#endif\\n\"","module.exports = \"in vec2 v_UV;\\n#ifdef GPUIO_FLOAT\\nuniform sampler2D u_state;\\n#endif\\n#ifdef GPUIO_INT\\nuniform isampler2D u_state;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform usampler2D u_state;\\n#endif\\n#ifdef GPUIO_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=texture(u_state,v_UV);}\"","module.exports = \"#ifdef GPUIO_FLOAT\\nuniform vec4 u_value;\\n#endif\\n#ifdef GPUIO_INT\\nuniform ivec4 u_value;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform uvec4 u_value;\\n#endif\\n#ifdef GPUIO_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=u_value;}\"","module.exports = \"in vec2 v_UV;uniform vec3 u_color;uniform float u_scale;\\n#ifdef GPUIO_FLOAT\\nuniform sampler2D u_internal_data;\\n#endif\\n#ifdef GPUIO_INT\\nuniform isampler2D u_internal_data;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform usampler2D u_internal_data;\\n#endif\\nout vec4 out_fragColor;void main(){uvec4 value=texture(u_internal_data,v_UV);float mag=length(value);out_fragColor=vec4(mag*u_scale*u_color,1);}\"","module.exports = \"in vec2 v_lineWrapping;uniform vec4 u_value;out vec4 out_fragColor;void main(){if((v_lineWrapping.x!=0.&&v_lineWrapping.x!=1.)||(v_lineWrapping.y!=0.&&v_lineWrapping.y!=1.)){discard;return;}out_fragColor=vec4(u_value);}\"","module.exports = \"in vec2 a_internal_position;\\n#ifdef GPUIO_UV_ATTRIBUTE\\nin vec2 a_internal_uv;\\n#endif\\n#ifdef GPUIO_NORMAL_ATTRIBUTE\\nin vec2 a_internal_normal;\\n#endif\\nuniform vec2 u_internal_scale;uniform vec2 u_internal_translation;out vec2 v_UV;out vec2 v_UV_local;\\n#ifdef GPUIO_NORMAL_ATTRIBUTE\\nout vec2 v_normal;\\n#endif\\nvoid main(){\\n#ifdef GPUIO_UV_ATTRIBUTE\\nv_UV_local=a_internal_uv;\\n#else\\nv_UV_local=a_internal_position;\\n#endif\\n#ifdef GPUIO_NORMAL_ATTRIBUTE\\nv_normal=a_internal_normal;\\n#endif\\nvec2 position=u_internal_scale*a_internal_position+u_internal_translation;v_UV=0.5*(position+1.);gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_positions;uniform vec2 u_internal_positionsDimensions;uniform vec2 u_internal_scale;uniform bool u_internal_positionWithAccumulation;uniform bool u_internal_wrapX;uniform bool u_internal_wrapY;out vec2 v_UV;out vec2 v_lineWrapping;out float v_index;void main(){vec2 particleUV=vec2(modI(a_internal_index,u_internal_positionsDimensions.x),floor(floor(a_internal_index+0.5)/u_internal_positionsDimensions.x))/u_internal_positionsDimensions;vec4 positionData=texture(u_internal_positions,particleUV);vec2 positionAbsolute=positionData.rg;if(u_internal_positionWithAccumulation)positionAbsolute+=positionData.ba;v_UV=positionAbsolute*u_internal_scale;v_lineWrapping=vec2(0.);if(u_internal_wrapX){if(v_UV.x<0.){v_UV.x+=1.;v_lineWrapping.x=1.;}else if(v_UV.x>1.){v_UV.x-=1.;v_lineWrapping.x=1.;}}if(u_internal_wrapY){if(v_UV.y<0.){v_UV.y+=1.;v_lineWrapping.y=1.;}else if(v_UV.y>1.){v_UV.y-=1.;v_lineWrapping.y=1.;}}vec2 position=v_UV*2.-1.;v_index=a_internal_index;gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_positions;uniform vec2 u_internal_positionsDimensions;uniform vec2 u_internal_scale;uniform float u_internal_pointSize;uniform bool u_internal_positionWithAccumulation;uniform bool u_internal_wrapX;uniform bool u_internal_wrapY;out vec2 v_UV;flat out int v_index;void main(){vec2 particleUV=vec2(modI(a_internal_index,u_internal_positionsDimensions.x),floor(floor(a_internal_index+0.5)/u_internal_positionsDimensions.x))/u_internal_positionsDimensions;vec4 positionData=texture(u_internal_positions,particleUV);vec2 positionAbsolute=positionData.rg;if(u_internal_positionWithAccumulation)positionAbsolute+=positionData.ba;v_UV=positionAbsolute*u_internal_scale;if(u_internal_wrapX){if(v_UV.x<0.)v_UV.x+=1.;if(v_UV.x>1.)v_UV.x-=1.;}if(u_internal_wrapY){if(v_UV.y<0.)v_UV.y+=1.;if(v_UV.y>1.)v_UV.y-=1.;}vec2 position=v_UV*2.-1.;v_index=int(a_internal_index);gl_PointSize=u_internal_pointSize;gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_vectors;uniform vec2 u_internal_dimensions;uniform vec2 u_internal_scale;out vec2 v_UV;out float v_index;void main(){float index=floor((a_internal_index+0.5)/2.);v_UV=vec2(modI(index,u_internal_dimensions.x),floor(floor(index+0.5)/u_internal_dimensions.x))/u_internal_dimensions;if(modI(a_internal_index,2.)>0.){vec2 vectorData=texture(u_internal_vectors,v_UV).xy;v_UV+=vectorData*u_internal_scale;}vec2 position=v_UV*2.-1.;v_index=a_internal_index;gl_Position=vec4(position,0,1);}\"","module.exports = \"in vec2 a_internal_position;uniform float u_internal_halfThickness;uniform vec2 u_internal_scale;uniform float u_internal_length;uniform float u_internal_rotation;uniform vec2 u_internal_translation;out vec2 v_UV_local;out vec2 v_UV;mat2 rotate2d(float _angle){return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));}void main(){v_UV_local=0.5*(a_internal_position+1.);vec2 position=a_internal_position;position*=u_internal_halfThickness;if(position.x<0.){position.x-=u_internal_length/2.;v_UV_local.x=0.;}else if(position.x>0.){position.x+=u_internal_length/2.;v_UV_local.x=1.;}position=u_internal_scale*(rotate2d(-u_internal_rotation)*position)+u_internal_translation;v_UV=0.5*(position+1.);gl_Position=vec4(position,0,1);}\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"sourceRoot":""}
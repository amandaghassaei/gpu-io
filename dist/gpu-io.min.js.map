{"version":3,"file":"gpu-io.min.js","mappings":"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","sources":["webpack://GPUIO/webpack/universalModuleDefinition","webpack://GPUIO/./node_modules/@petamoriken/float16/src/lib.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/hfround.js","webpack://GPUIO/./node_modules/lodash-es/_freeGlobal.js","webpack://GPUIO/./node_modules/lodash-es/_root.js","webpack://GPUIO/./node_modules/lodash-es/_Symbol.js","webpack://GPUIO/./node_modules/lodash-es/_getRawTag.js","webpack://GPUIO/./node_modules/lodash-es/_objectToString.js","webpack://GPUIO/./node_modules/lodash-es/_baseGetTag.js","webpack://GPUIO/./node_modules/lodash-es/isObject.js","webpack://GPUIO/./node_modules/lodash-es/isFunction.js","webpack://GPUIO/./node_modules/lodash-es/_coreJsData.js","webpack://GPUIO/./node_modules/lodash-es/_isMasked.js","webpack://GPUIO/./node_modules/lodash-es/_toSource.js","webpack://GPUIO/./node_modules/lodash-es/_baseIsNative.js","webpack://GPUIO/./node_modules/lodash-es/_getValue.js","webpack://GPUIO/./node_modules/lodash-es/_getNative.js","webpack://GPUIO/./node_modules/lodash-es/_nativeCreate.js","webpack://GPUIO/./node_modules/lodash-es/_hashClear.js","webpack://GPUIO/./node_modules/lodash-es/_hashDelete.js","webpack://GPUIO/./node_modules/lodash-es/_hashGet.js","webpack://GPUIO/./node_modules/lodash-es/_hashHas.js","webpack://GPUIO/./node_modules/lodash-es/_hashSet.js","webpack://GPUIO/./node_modules/lodash-es/_Hash.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheClear.js","webpack://GPUIO/./node_modules/lodash-es/eq.js","webpack://GPUIO/./node_modules/lodash-es/_assocIndexOf.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheDelete.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheGet.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheHas.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheSet.js","webpack://GPUIO/./node_modules/lodash-es/_ListCache.js","webpack://GPUIO/./node_modules/lodash-es/_Map.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheClear.js","webpack://GPUIO/./node_modules/lodash-es/_isKeyable.js","webpack://GPUIO/./node_modules/lodash-es/_getMapData.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheDelete.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheGet.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheHas.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheSet.js","webpack://GPUIO/./node_modules/lodash-es/_MapCache.js","webpack://GPUIO/./node_modules/lodash-es/memoize.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/bug.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/spec.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/is.js","webpack://GPUIO/./node_modules/lodash-es/isObjectLike.js","webpack://GPUIO/./node_modules/lodash-es/_baseIsArrayBuffer.js","webpack://GPUIO/./node_modules/lodash-es/_baseUnary.js","webpack://GPUIO/./node_modules/lodash-es/_nodeUtil.js","webpack://GPUIO/./node_modules/lodash-es/isArrayBuffer.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/Float16Array.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/private.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/dataView.js","webpack://GPUIO/./node_modules/changedpi/dist/index.js","webpack://GPUIO/./node_modules/file-saver/dist/FileSaver.min.js","webpack://GPUIO/./src/GPUComposer.ts","webpack://GPUIO/./src/GPULayer.ts","webpack://GPUIO/./src/GPULayerHelpers.ts","webpack://GPUIO/./src/GPUProgram.ts","webpack://GPUIO/./src/Vector4.ts","webpack://GPUIO/./src/checks.ts","webpack://GPUIO/./src/constants.ts","webpack://GPUIO/./src/extensions.ts","webpack://GPUIO/./src/index.ts","webpack://GPUIO/./src/polyfills.ts","webpack://GPUIO/./src/regex.ts","webpack://GPUIO/./src/utils.ts","webpack://GPUIO/./src/glsl/common/precision.glsl","webpack://GPUIO/./src/glsl/frag/CopyFragShader.glsl","webpack://GPUIO/./src/glsl/frag/SetValueFragShader.glsl","webpack://GPUIO/./src/glsl/frag/VectorMagnitudeFragShader.glsl","webpack://GPUIO/./src/glsl/frag/WrappedLineColorFragShader.glsl","webpack://GPUIO/./src/glsl/vert/DefaultVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerLinesVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerPointsVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerVectorFieldVertShader.glsl","webpack://GPUIO/./src/glsl/vert/SegmentVertShader.glsl","webpack://GPUIO/webpack/bootstrap","webpack://GPUIO/webpack/runtime/define property getters","webpack://GPUIO/webpack/runtime/global","webpack://GPUIO/webpack/runtime/hasOwnProperty shorthand","webpack://GPUIO/webpack/runtime/make namespace object","webpack://GPUIO/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GPUIO\"] = factory();\n\telse\n\t\troot[\"GPUIO\"] = factory();\n})(self, () => {\nreturn ","// algorithm: ftp://ftp.fox-toolkit.org/pub/fasthalffloatconversion.pdf\n\nconst buffer = new ArrayBuffer(4);\nconst floatView = new Float32Array(buffer);\nconst uint32View = new Uint32Array(buffer);\n\n\nconst baseTable = new Uint32Array(512);\nconst shiftTable = new Uint32Array(512);\n\nfor(let i = 0; i < 256; ++i) {\n    const e = i - 127;\n\n    // very small number (0, -0)\n    if (e < -27) {\n        baseTable[i | 0x000] = 0x0000;\n        baseTable[i | 0x100] = 0x8000;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // small number (denorm)\n    } else if (e < -14) {\n        baseTable[i | 0x000] =  0x0400 >> (-e - 14);\n        baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n        shiftTable[i | 0x000] = -e - 1;\n        shiftTable[i | 0x100] = -e - 1;\n\n    // normal number\n    } else if (e <= 15) {\n        baseTable[i | 0x000] =  (e + 15) << 10;\n        baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n\n    // large number (Infinity, -Infinity)\n    } else if (e < 128) {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // stay (NaN, Infinity, -Infinity)\n    } else {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n    }\n}\n\n/**\n * round a number to a half float number bits.\n * @param {number} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n    floatView[0] = num;\n\n    const f = uint32View[0];\n    const e = (f >> 23) & 0x1ff;\n    return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\n\nconst mantissaTable = new Uint32Array(2048);\nconst exponentTable = new Uint32Array(64);\nconst offsetTable = new Uint32Array(64);\n\nmantissaTable[0] = 0;\nfor(let i = 1; i < 1024; ++i) {\n    let m = i << 13;    // zero pad mantissa bits\n    let e = 0;          // zero exponent\n\n    // normalized\n    while((m & 0x00800000) === 0) {\n        e -= 0x00800000;    // decrement exponent\n        m <<= 1;\n    }\n\n    m &= ~0x00800000;   // clear leading 1 bit\n    e += 0x38800000;    // adjust bias\n\n    mantissaTable[i] = m | e;\n}\nfor(let i = 1024; i < 2048; ++i) {\n    mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nexponentTable[0] = 0;\nfor(let i = 1; i < 31; ++i) {\n    exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor(let i = 33; i < 63; ++i) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\noffsetTable[0] = 0;\nfor(let i = 1; i < 64; ++i) {\n    if (i === 32) {\n        offsetTable[i] = 0;\n    } else {\n        offsetTable[i] = 1024;\n    }\n}\n\n/**\n * convert a half float number bits to a number.\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n    const m = float16bits >> 10;\n    uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n    return floatView[0];\n}\n","import { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns the nearest half precision float representation of a number.\n * @param {number} num\n * @returns {number}\n */\nexport default function hfround(num) {\n    num = Number(num);\n\n    // for optimization\n    if (!Number.isFinite(num) || num === 0) {\n        return num;\n    }\n\n    const x16 = roundToFloat16Bits(num);\n    return convertToNumber(x16);\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","/**\n * JavaScriptCore <= 12 bug\n * @see https://bugs.webkit.org/show_bug.cgi?id=171606\n */\nexport const isTypedArrayIndexedPropertyWritable = Object.getOwnPropertyDescriptor(new Uint8Array(1), 0).writable;\n","/**\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToInteger(target) {\n    let number = typeof target !== \"number\" ? Number(target) : target;\n    if (Number.isNaN(number)) {\n        number = 0;\n    }\n    return Math.trunc(number);\n}\n\n/**\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompareFunction(x, y) {\n    const [isNaN_x, isNaN_y] = [Number.isNaN(x), Number.isNaN(y)];\n\n    if (isNaN_x && isNaN_y) {\n        return 0;\n    }\n\n    if (isNaN_x) {\n        return 1;\n    }\n\n    if (isNaN_y) {\n        return -1;\n    }\n\n    if (x < y) {\n        return -1;\n    }\n\n    if (x > y) {\n        return 1;\n    }\n\n    if (x === 0 && y === 0) {\n        const [isPlusZero_x, isPlusZero_y] = [Object.is(x, 0), Object.is(y, 0)];\n\n        if (!isPlusZero_x && isPlusZero_y) {\n            return -1;\n        }\n\n        if (isPlusZero_x && !isPlusZero_y) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n","import { ToInteger } from \"./spec\";\n\nexport { default as isArrayBuffer } from \"lodash-es/isArrayBuffer\";\n\n/**\n * @param {unknown} view\n * @returns {boolean}\n */\nexport function isDataView(view) {\n    return view instanceof DataView;\n}\n\n/**\n * @param {unknown} key\n * @returns {boolean}\n */\nexport function isStringNumberKey(key) {\n    return typeof key === \"string\" && key === ToInteger(key) + \"\";\n}\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/**\n * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n */\nfunction baseIsArrayBuffer(value) {\n  return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n}\n\nexport default baseIsArrayBuffer;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\n\n/**\n * Checks if `value` is classified as an `ArrayBuffer` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n * @example\n *\n * _.isArrayBuffer(new ArrayBuffer(2));\n * // => true\n *\n * _.isArrayBuffer(new Array(2));\n * // => false\n */\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\nexport default isArrayBuffer;\n","import memoize from \"lodash-es/memoize\";\nimport { isTypedArrayIndexedPropertyWritable } from \"./bug\";\nimport { isArrayBuffer, isStringNumberKey } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\nimport { createPrivateStorage } from \"./private\";\nimport { ToInteger, defaultCompareFunction } from \"./spec\";\n\nconst _ = createPrivateStorage();\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isFloat16Array(target) {\n    return target instanceof Float16Array;\n}\n\n/**\n * @param {unknown} target\n * @throws {TypeError}\n */\nfunction assertFloat16Array(target) {\n    if (!isFloat16Array(target)) {\n        throw new TypeError(\"This is not a Float16Array\");\n    }\n}\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isDefaultFloat16ArrayMethods(target) {\n    return typeof target === \"function\" && defaultFloat16ArrayMethods.has(target);\n}\n\n/**\n * @param {Float16Array} float16bits\n * @return {number[]}\n */\nfunction copyToArray(float16bits) {\n    const length = float16bits.length;\n\n    const array = new Array(length);\n    for(let i = 0; i < length; ++i) {\n        array[i] = convertToNumber(float16bits[i]);\n    }\n\n    return array;\n}\n\n/** @type {ProxyHandler<Function>} */\nconst applyHandler = {\n    apply(func, thisArg, args) {\n        // peel off proxy\n        if (isFloat16Array(thisArg) && isDefaultFloat16ArrayMethods(func)) {\n            return Reflect.apply(func, _(thisArg).target ,args);\n        }\n\n        return Reflect.apply(func, thisArg, args);\n    },\n};\n\n/** @type {ProxyHandler<Float16Array>} */\nconst handler = {\n    get(target, key) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.has(target, key) ? convertToNumber(Reflect.get(target, key)) : undefined;\n        } else {\n            const ret = wrapper !== null && Reflect.has(wrapper, key) ? Reflect.get(wrapper, key) : Reflect.get(target, key);\n\n            if (typeof ret !== \"function\") {\n                return ret;\n            }\n\n            // TypedArray methods can't be called by Proxy Object\n            let proxy = _(ret).proxy;\n\n            if (proxy === undefined) {\n                proxy = _(ret).proxy = new Proxy(ret, applyHandler);\n            }\n\n            return proxy;\n        }\n    },\n\n    set(target, key, value) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.set(target, key, roundToFloat16Bits(value));\n        } else {\n            // frozen object can't change prototype property\n            if (wrapper !== null && (!Reflect.has(target, key) || Object.isFrozen(wrapper))) {\n                return Reflect.set(wrapper, key, value);\n            } else {\n                return Reflect.set(target, key, value);\n            }\n        }\n    },\n};\n\nif (!isTypedArrayIndexedPropertyWritable) {\n    handler.getPrototypeOf = (wrapper) => { return Reflect.getPrototypeOf(_(wrapper).target); };\n    handler.setPrototypeOf = (wrapper, prototype) => { return Reflect.setPrototypeOf(_(wrapper).target, prototype); };\n\n    handler.defineProperty = (wrapper, key, descriptor) => {\n        const target = _(wrapper).target;\n        return !Reflect.has(target, key) || Object.isFrozen(wrapper) ? Reflect.defineProperty(wrapper, key, descriptor) : Reflect.defineProperty(target, key, descriptor);\n    };\n    handler.deleteProperty = (wrapper, key) => {\n        const target = _(wrapper).target;\n        return Reflect.has(wrapper, key) ? Reflect.deleteProperty(wrapper, key) : Reflect.deleteProperty(target, key);\n    };\n\n    handler.has = (wrapper, key) => { return Reflect.has(wrapper, key) || Reflect.has(_(wrapper).target, key); };\n\n    handler.isExtensible = (wrapper) => { return Reflect.isExtensible(wrapper); };\n    handler.preventExtensions = (wrapper) => { return Reflect.preventExtensions(wrapper); };\n\n    handler.getOwnPropertyDescriptor = (wrapper, key) => { return Reflect.getOwnPropertyDescriptor(wrapper, key); };\n    handler.ownKeys = (wrapper) => { return Reflect.ownKeys(wrapper); };\n}\n\nexport default class Float16Array extends Uint16Array {\n\n    constructor(input, byteOffset, length) {\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            super(_(input).target);\n\n        // 22.2.1.3, 22.2.1.4 TypedArray, Array, ArrayLike, Iterable\n        } else if (input !== null && typeof input === \"object\" && !isArrayBuffer(input)) {\n            // if input is not ArrayLike and Iterable, get Array\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n\n            const length = arrayLike.length;\n            super(length);\n\n            for(let i = 0; i < length; ++i) {\n                // super (Uint16Array)\n                this[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n\n        // 22.2.1.2, 22.2.1.5 primitive, ArrayBuffer\n        } else {\n            switch(arguments.length) {\n                case 0:\n                    super();\n                    break;\n\n                case 1:\n                    super(input);\n                    break;\n\n                case 2:\n                    super(input, byteOffset);\n                    break;\n\n                case 3:\n                    super(input, byteOffset, length);\n                    break;\n\n                default:\n                    // @ts-ignore\n                    super(...arguments);\n            }\n        }\n\n        let proxy;\n\n        if (isTypedArrayIndexedPropertyWritable) {\n            proxy = new Proxy(this, handler);\n        } else {\n            const wrapper = Object.create(null);\n            _(wrapper).target = this;\n            proxy = new Proxy(wrapper, handler);\n        }\n\n        // proxy private storage\n        _(proxy).target = this;\n\n        // this private storage\n        _(this).proxy = proxy;\n\n        return proxy;\n    }\n\n    // static methods\n    static from(src, ...opts) {\n        if (opts.length === 0) {\n            return new Float16Array(Uint16Array.from(src, roundToFloat16Bits).buffer);\n        }\n\n        const mapFunc = opts[0];\n        const thisArg = opts[1];\n\n        return new Float16Array(Uint16Array.from(src, function (val, ...args) {\n            return roundToFloat16Bits(mapFunc.call(this, val, ...args));\n        }, thisArg).buffer);\n    }\n\n    static of(...args) {\n        return new Float16Array(args);\n    }\n\n    // iterate methods\n    * [Symbol.iterator]() {\n        for(const val of super[Symbol.iterator]()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    keys() {\n        return super.keys();\n    }\n\n    * values() {\n        for(const val of super.values()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    /** @type {() => IterableIterator<[number, number]>} */\n    * entries() {\n        for(const [i, val] of super.entries()) {\n            yield [i, convertToNumber(val)];\n        }\n    }\n\n    // functional methods\n    // @ts-ignore\n    map(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            array.push(callback.call(thisArg, val, i, _(this).proxy));\n        }\n\n        return new Float16Array(array);\n    }\n\n    // @ts-ignore\n    filter(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            if (callback.call(thisArg, val, i, _(this).proxy)) {\n                array.push(val);\n            }\n        }\n\n        return new Float16Array(array);\n    }\n\n    reduce(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        if (opts.length === 0) {\n            val = convertToNumber(this[0]);\n            start = 1;\n        } else {\n            val = opts[0];\n            start = 0;\n        }\n\n        for(let i = start, l = this.length; i < l; ++i) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    reduceRight(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        const length = this.length;\n        if (opts.length === 0) {\n            val = convertToNumber(this[length - 1]);\n            start = length - 1;\n        } else {\n            val = opts[0];\n            start = length;\n        }\n\n        for(let i = start; i--;) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    forEach(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy);\n        }\n    }\n\n    find(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return value;\n            }\n        }\n    }\n\n    findIndex(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    every(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (!callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    some(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // change element methods\n    set(input, ...opts) {\n        assertFloat16Array(this);\n\n        const offset = opts[0];\n\n        let float16bits;\n\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            float16bits = _(input).target;\n\n        // input others\n        } else {\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n            const length = arrayLike.length;\n\n            float16bits = new Uint16Array(length);\n            for(let i = 0, l = arrayLike.length; i < l; ++i) {\n                float16bits[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n        }\n\n        super.set(float16bits, offset);\n    }\n\n    reverse() {\n        assertFloat16Array(this);\n\n        super.reverse();\n\n        return _(this).proxy;\n    }\n\n    fill(value, ...opts) {\n        assertFloat16Array(this);\n\n        super.fill(roundToFloat16Bits(value), ...opts);\n\n        return _(this).proxy;\n    }\n\n    copyWithin(target, start, ...opts) {\n        assertFloat16Array(this);\n\n        super.copyWithin(target, start, ...opts);\n\n        return _(this).proxy;\n    }\n\n    sort(...opts) {\n        assertFloat16Array(this);\n\n        let compareFunction = opts[0];\n\n        if (compareFunction === undefined) {\n            compareFunction = defaultCompareFunction;\n        }\n\n        const _convertToNumber = memoize(convertToNumber);\n\n        super.sort((x, y) => { return compareFunction(_convertToNumber(x), _convertToNumber(y)); });\n\n        return _(this).proxy;\n    }\n\n    // copy element methods\n    // @ts-ignore\n    slice(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.slice(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.slice(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer);\n    }\n\n    // @ts-ignore\n    subarray(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.subarray(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.subarray(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer, float16bits.byteOffset, float16bits.length);\n    }\n\n    // contains methods\n    indexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        for(let i = from, l = length; i < l; ++i) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    lastIndexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        from = from === 0 ? length : from + 1;\n\n        if (from >= 0) {\n            from = from < length ? from : length;\n        } else {\n            from += length;\n        }\n\n        for(let i = from; i--;) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    includes(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        const isNaN = Number.isNaN(element);\n        for(let i = from, l = length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n\n            if (isNaN && Number.isNaN(value)) {\n                return true;\n            }\n\n            if (value === element) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // string methods\n    join(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        return array.join(...opts);\n    }\n\n    toLocaleString(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        // @ts-ignore\n        return array.toLocaleString(...opts);\n    }\n\n    // @ts-ignore\n    get [Symbol.toStringTag]() {\n        if (isFloat16Array(this)) {\n            return \"Float16Array\";\n        }\n    }\n}\n\nconst Float16Array$prototype = Float16Array.prototype;\n\nconst defaultFloat16ArrayMethods = new WeakSet();\nfor(const key of Reflect.ownKeys(Float16Array$prototype)) {\n    const val = Float16Array$prototype[key];\n    if (typeof val === \"function\") {\n        defaultFloat16ArrayMethods.add(val);\n    }\n}\n","/**\n * @returns {(self:object) => object}\n */\nexport function createPrivateStorage() {\n\tconst wm = new WeakMap();\n\treturn (self) => {\n\t\tlet obj = wm.get(self);\n\t\tif (obj) {\n\t\t\treturn obj;\n\t\t} else {\n\t\t\tobj = Object.create(null);\n\t\t\twm.set(self, obj);\n\t\t\treturn obj;\n\t\t}\n\t};\n}\n","import { isDataView } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to getFloat16 function must be a DataView\");\n    }\n\n    return convertToNumber( dataView.getUint16(byteOffset, ...opts) );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to setFloat16 function must be a DataView\");\n    }\n\n    dataView.setUint16(byteOffset, roundToFloat16Bits(value), ...opts);\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeDpiBlob = changeDpiBlob;\nexports.changeDpiDataUrl = changeDpiDataUrl;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createPngDataTable() {\n  /* Table of CRCs of all 8-bit messages. */\n  var crcTable = new Int32Array(256);\n  for (var n = 0; n < 256; n++) {\n    var c = n;\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xedb88320 ^ c >>> 1 : c >>> 1;\n    }\n    crcTable[n] = c;\n  }\n  return crcTable;\n}\n\nfunction calcCrc(buf) {\n  var c = -1;\n  if (!pngDataTable) pngDataTable = createPngDataTable();\n  for (var n = 0; n < buf.length; n++) {\n    c = pngDataTable[(c ^ buf[n]) & 0xFF] ^ c >>> 8;\n  }\n  return c ^ -1;\n}\n\nvar pngDataTable = void 0;\n\nvar PNG = 'image/png';\nvar JPEG = 'image/jpeg';\n\n// those are 3 possible signature of the physBlock in base64.\n// the pHYs signature block is preceed by the 4 bytes of lenght. The length of\n// the block is always 9 bytes. So a phys block has always this signature:\n// 0 0 0 9 p H Y s.\n// However the data64 encoding aligns we will always find one of those 3 strings.\n// this allow us to find this particular occurence of the pHYs block without\n// converting from b64 back to string\nvar b64PhysSignature1 = 'AAlwSFlz';\nvar b64PhysSignature2 = 'AAAJcEhZ';\nvar b64PhysSignature3 = 'AAAACXBI';\n\nvar _P = 'p'.charCodeAt(0);\nvar _H = 'H'.charCodeAt(0);\nvar _Y = 'Y'.charCodeAt(0);\nvar _S = 's'.charCodeAt(0);\n\nfunction changeDpiBlob(blob, dpi) {\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var headerChunk = blob.slice(0, 33);\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      var dataArray = new Uint8Array(fileReader.result);\n      var tail = blob.slice(33);\n      var changedArray = changeDpiOnArray(dataArray, dpi, blob.type);\n      resolve(new Blob([changedArray, tail], { type: blob.type }));\n    };\n    fileReader.readAsArrayBuffer(headerChunk);\n  });\n}\n\nfunction changeDpiDataUrl(base64Image, dpi) {\n  var dataSplitted = base64Image.split(',');\n  var format = dataSplitted[0];\n  var body = dataSplitted[1];\n  var type = void 0;\n  var headerLength = void 0;\n  var overwritepHYs = false;\n  if (format.indexOf(PNG) !== -1) {\n    type = PNG;\n    var b64Index = detectPhysChunkFromDataUrl(body);\n    // 28 bytes in dataUrl are 21bytes, length of phys chunk with everything inside.\n    if (b64Index >= 0) {\n      headerLength = Math.ceil((b64Index + 28) / 3) * 4;\n      overwritepHYs = true;\n    } else {\n      headerLength = 33 / 3 * 4;\n    }\n  }\n  if (format.indexOf(JPEG) !== -1) {\n    type = JPEG;\n    headerLength = 18 / 3 * 4;\n  }\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var stringHeader = body.substring(0, headerLength);\n  var restOfData = body.substring(headerLength);\n  var headerBytes = atob(stringHeader);\n  var dataArray = new Uint8Array(headerBytes.length);\n  for (var i = 0; i < dataArray.length; i++) {\n    dataArray[i] = headerBytes.charCodeAt(i);\n  }\n  var finalArray = changeDpiOnArray(dataArray, dpi, type, overwritepHYs);\n  var base64Header = btoa(String.fromCharCode.apply(String, _toConsumableArray(finalArray)));\n  return [format, ',', base64Header, restOfData].join('');\n}\n\nfunction detectPhysChunkFromDataUrl(data) {\n  var b64index = data.indexOf(b64PhysSignature1);\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature2);\n  }\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature3);\n  }\n  // if b64index === -1 chunk is not found\n  return b64index;\n}\n\nfunction searchStartOfPhys(data) {\n  var length = data.length - 1;\n  // we check from the end since we cut the string in proximity of the header\n  // the header is within 21 bytes from the end.\n  for (var i = length; i >= 4; i--) {\n    if (data[i - 4] === 9 && data[i - 3] === _P && data[i - 2] === _H && data[i - 1] === _Y && data[i] === _S) {\n      return i - 3;\n    }\n  }\n}\n\nfunction changeDpiOnArray(dataArray, dpi, format, overwritepHYs) {\n  if (format === JPEG) {\n    dataArray[13] = 1; // 1 pixel per inch or 2 pixel per cm\n    dataArray[14] = dpi >> 8; // dpiX high byte\n    dataArray[15] = dpi & 0xff; // dpiX low byte\n    dataArray[16] = dpi >> 8; // dpiY high byte\n    dataArray[17] = dpi & 0xff; // dpiY low byte\n    return dataArray;\n  }\n  if (format === PNG) {\n    var physChunk = new Uint8Array(13);\n    // chunk header pHYs\n    // 9 bytes of data\n    // 4 bytes of crc\n    // this multiplication is because the standard is dpi per meter.\n    dpi *= 39.3701;\n    physChunk[0] = _P;\n    physChunk[1] = _H;\n    physChunk[2] = _Y;\n    physChunk[3] = _S;\n    physChunk[4] = dpi >>> 24; // dpiX highest byte\n    physChunk[5] = dpi >>> 16; // dpiX veryhigh byte\n    physChunk[6] = dpi >>> 8; // dpiX high byte\n    physChunk[7] = dpi & 0xff; // dpiX low byte\n    physChunk[8] = physChunk[4]; // dpiY highest byte\n    physChunk[9] = physChunk[5]; // dpiY veryhigh byte\n    physChunk[10] = physChunk[6]; // dpiY high byte\n    physChunk[11] = physChunk[7]; // dpiY low byte\n    physChunk[12] = 1; // dot per meter....\n\n    var crc = calcCrc(physChunk);\n\n    var crcChunk = new Uint8Array(4);\n    crcChunk[0] = crc >>> 24;\n    crcChunk[1] = crc >>> 16;\n    crcChunk[2] = crc >>> 8;\n    crcChunk[3] = crc & 0xff;\n\n    if (overwritepHYs) {\n      var startingIndex = searchStartOfPhys(dataArray);\n      dataArray.set(physChunk, startingIndex);\n      dataArray.set(crcChunk, startingIndex + 13);\n      return dataArray;\n    } else {\n      // i need to give back an array of data that is divisible by 3 so that\n      // dataurl encoding gives me integers, for luck this chunk is 17 + 4 = 21\n      // if it was we could add a text chunk contaning some info, untill desired\n      // length is met.\n\n      // chunk structur 4 bytes for length is 9\n      var chunkLength = new Uint8Array(4);\n      chunkLength[0] = 0;\n      chunkLength[1] = 0;\n      chunkLength[2] = 0;\n      chunkLength[3] = 9;\n\n      var finalHeader = new Uint8Array(54);\n      finalHeader.set(dataArray, 0);\n      finalHeader.set(chunkLength, 33);\n      finalHeader.set(physChunk, 37);\n      finalHeader.set(crcChunk, 50);\n      return finalHeader;\n    }\n  }\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { GPULayer } from './GPULayer';\nimport {\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tFLOAT,\n\tHALF_FLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tGLSLVersion,\n\tGLSL1,\n\tGLSL3,\n\tWEBGL2,\n\tWEBGL1,\n\tEXPERIMENTAL_WEBGL,\n\tCLAMP_TO_EDGE,\n\tTextureFormat,\n\tNEAREST,\n\tRGBA,\n\tTextureType,\n\tPROGRAM_NAME_INTERNAL,\n\tCompileTimeVars,\n\tDEFAULT_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tLAYER_POINTS_PROGRAM_NAME,\n\tLAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tLAYER_LINES_PROGRAM_NAME,\n\tErrorCallback,\n\tDEFAULT_CIRCLE_NUM_SEGMENTS,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tUINT,\n\tGLSLPrecision,\n\tPRECISION_HIGH_P,\n\tDEFAULT_ERROR_CALLBACK,\n\tBOOL,\n\tGPULayerState,\n\tGPUIO_VS_UV_ATTRIBUTE,\n\tGPUIO_VS_NORMAL_ATTRIBUTE,\n\tGPUIO_VS_POSITION_W_ACCUM,\n\tGPUIO_VS_WRAP_X,\n\tGPUIO_VS_WRAP_Y,\n\tMAX_FLOAT_INT,\n\tGPUIO_VS_INDEXED_POSITIONS,\n} from './constants';\nimport { GPUProgram } from './GPUProgram';\n// Just importing the types here.\n// Only @types/three is installed as dev dependency.\nimport {\n\tWebGLRenderer,\n\tVector4,\n} from 'three';\nimport * as utils from './Vector4';\nimport {\n\tisWebGL2,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n\tpreprocessVertexShader,\n\tcompileShader,\n} from './utils';\nimport {\n\tisArray,\n\tisString,\n\tisValidFilter,\n\tisValidTextureType,\n\tisValidTextureFormat,\n\tisValidWrap,\n} from './checks';\nconst defaultVertexShaderSource = require('./glsl/vert/DefaultVertShader.glsl');\n\nexport class GPUComposer {\n\treadonly canvas: HTMLCanvasElement;\n\treadonly gl!: WebGLRenderingContext | WebGL2RenderingContext;\n\treadonly glslVersion!: GLSLVersion;\n\treadonly intPrecision!: GLSLPrecision;\n\treadonly floatPrecision!: GLSLPrecision;\n\t// These width and height are the current canvas at full res.\n\tprivate _width!: number;\n\tprivate _height!: number;\n\n\tprivate _errorThrown = false;\n\t/**\n\t * @private\n\t */\n\treadonly _errorCallback: ErrorCallback;\n\n\t// Save threejs renderer if passed in.\n\t/**\n\t * @private\n\t */\n\treadonly _renderer?: WebGLRenderer;\n\tprivate readonly _maxNumTextures!: number;\n\t\n\t// Precomputed buffers (inited as needed).\n\tprivate _quadPositionsBuffer?: WebGLBuffer;\n\tprivate _boundaryPositionsBuffer?: WebGLBuffer;\n\t// Store multiple circle positions buffers for various num segments, use numSegments as key.\n\tprivate _circlePositionsBuffer: { [key: number]: WebGLBuffer } = {};\n\n\tprivate _pointIndexArray?: Float32Array;\n\tprivate _pointIndexBuffer?: WebGLBuffer;\n\tprivate _vectorFieldIndexArray?: Float32Array;\n\tprivate _vectorFieldIndexBuffer?: WebGLBuffer;\n\tprivate _indexedLinesIndexBuffer?: WebGLBuffer;\n\n\t// Keep track of all GL extensions that have been loaded.\n\t/**\n\t * @private\n\t */\n\treadonly _extensions: { [key: string]: any } = {};\n\n\t// Programs for copying data (these are needed for rendering partial screen geometries).\n\tprivate readonly _copyPrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/CopyFragShader.glsl'),\n\t};\n\n\t// Other util programs.\n\tprivate readonly _setValuePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/SetValueFragShader.glsl'),\n\t};\n\tprivate _wrappedLineColorProgram?: GPUProgram; // We only need a FLOAT version of this.\n\tprivate readonly _vectorMagnitudePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/VectorMagnitudeFragShader.glsl'),\n\t};\n\n\t/**\n\t * Vertex shaders are shared across all GPUProgram instances.\n\t * @private\n\t */\n\treadonly _vertexShaders: {[key in PROGRAM_NAME_INTERNAL]: {\n\t\tsrc: string,\n\t\tcompiledShaders: { [key: string] : WebGLShader },\n\t}} = {\n\t\t[DEFAULT_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tcompiledShaders: {},\n\t\t},\n\t\t[SEGMENT_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/SegmentVertShader.glsl'),\n\t\t\tcompiledShaders: {},\n\t\t},\n\t\t[LAYER_POINTS_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerPointsVertShader.glsl'),\n\t\t\tcompiledShaders: {},\n\t\t},\n\t\t[LAYER_VECTOR_FIELD_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerVectorFieldVertShader.glsl'),\n\t\t\tcompiledShaders: {},\n\t\t},\n\t\t[LAYER_LINES_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerLinesVertShader.glsl'),\n\t\t\tcompiledShaders: {},\n\t\t},\n\t};\n\n\tverboseLogging = false;\n\n\tprivate _lastTickTime?: number;\n\tprivate _lastTickFPS?: number\n\tprivate _numTicks = 0;\n\n\tconstructor(\n\t\tparams: {\n\t\t\tcanvas: HTMLCanvasElement,\n\t\t\tcontext?: WebGLRenderingContext | WebGL2RenderingContext,\n\t\t\tcontextID?: typeof WEBGL2 | typeof WEBGL1 | typeof EXPERIMENTAL_WEBGL | string,\n\t\t\tcontextOptions?: {\n\t\t\t\tantialias?: boolean,\n\t\t\t\t[key: string]: any,\n\t\t\t},\n\t\t\tglslVersion?: GLSLVersion,\n\t\t\tintPrecision?: GLSLPrecision,\n\t\t\tfloatPrecision?: GLSLPrecision,\n\t\t\tverboseLogging?: boolean,\n\t\t\t// Optionally pass in an error callback in case we want to handle errors related to webgl support.\n\t\t\t// e.g. throw up a modal telling user this will not work on their device.\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['canvas', 'context', 'contextID', 'contextOptions', 'glslVersion', 'verboseLogging', 'errorCallback'];\n\t\tconst requiredKeys = ['canvas'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to new GPUComposer(params).  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to new GPUComposer(params).`);\n\t\t\t}\n\t\t});\n\n\t\tif (params.verboseLogging !== undefined) this.verboseLogging = params.verboseLogging;\n\n\t\t// Save callback in case we run into an error.\n\t\tconst self = this;\n\t\tthis._errorCallback = (message: string) => {\n\t\t\tif (self._errorThrown) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself._errorThrown = true;\n\t\t\tparams.errorCallback ? params.errorCallback(message) : DEFAULT_ERROR_CALLBACK(message);\n\t\t}\n\n\t\tconst { canvas } = params;\n\t\tthis.canvas = canvas;\n\t\tlet gl = params.context;\n\n\t\t// Init GL.\n\t\tif (!gl) {\n\t\t\t// Init a gl context if not passed in.\n\t\t\tif (params.contextID) {\n\t\t\t\tconst _gl = canvas.getContext(params.contextID, params.contextOptions) as WebGLRenderingContext | null;\n\t\t\t\tif (!_gl) {\n\t\t\t\t\tconsole.warn(`Unable to initialize WebGL context with contextID: ${params.contextID}.`);\n\t\t\t\t} else {\n\t\t\t\t\tgl = _gl;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gl) {\n\t\t\t\tconst _gl = canvas.getContext(WEBGL2, params.contextOptions)  as WebGL2RenderingContext | null\n\t\t\t\t\t|| canvas.getContext(WEBGL1, params.contextOptions)  as WebGLRenderingContext | null\n\t\t\t\t\t|| canvas.getContext(EXPERIMENTAL_WEBGL, params.contextOptions)  as WebGLRenderingContext | null;\n\t\t\t\tif (_gl) {\n\t\t\t\t\tgl = _gl;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gl) {\n\t\t\t\tthis._errorCallback('Unable to initialize WebGL context.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (isWebGL2(gl)) {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 2.0 context.');\n\t\t} else {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 1.0 context.');\n\t\t}\n\t\tthis.gl = gl;\n\n\t\t// Save glsl version, default to 3 if using webgl2 context.\n\t\tlet glslVersion = params.glslVersion || (isWebGL2(gl) ? GLSL3 : GLSL1);\n\t\tif (!isWebGL2(gl) && glslVersion === GLSL3) {\n\t\t\tconsole.warn('GLSL3.x is incompatible with WebGL1.0 contexts, falling back to GLSL1.');\n\t\t\tglslVersion = GLSL1; // Fall back to GLSL1 in these cases.\n\t\t}\n\t\t// TODO: check that this is valid.\n\t\tthis.glslVersion = glslVersion;\n\n\t\t// Set default int/float precision.\n\t\tthis.intPrecision = params.intPrecision || PRECISION_HIGH_P;\n\t\tthis.floatPrecision = params.floatPrecision || PRECISION_HIGH_P;\n\n\t\t// GL setup.\n\t\t// Disable depth testing globally.\n\t\tgl.disable(gl.DEPTH_TEST);\n\t\t// Set unpack alignment to 1 so we can have textures of arbitrary dimensions.\n\t\t// https://stackoverflow.com/questions/51582282/error-when-creating-textures-in-webgl-with-the-rgb-format\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\t\t// TODO: look into more of these: https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n\t\t// // Some implementations of HTMLCanvasElement's or OffscreenCanvas's CanvasRenderingContext2D store color values\n\t\t// // internally in premultiplied form. If such a canvas is uploaded to a WebGL texture with the\n\t\t// // UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter set to false, the color channels will have to be un-multiplied\n\t\t// // by the alpha channel, which is a lossy operation. The WebGL implementation therefore can not guarantee that colors\n\t\t// // with alpha < 1.0 will be preserved losslessly when first drawn to a canvas via CanvasRenderingContext2D and then\n\t\t// // uploaded to a WebGL texture when the UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter is set to false.\n\t\t// gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n\t\t// Unbind active buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\t// Canvas setup.\n\t\tthis.resize(canvas.clientWidth, canvas.clientHeight);\n\n\t\t// Log number of textures available.\n\t\tthis._maxNumTextures = this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tif (this.verboseLogging) console.log(`${this._maxNumTextures} textures max.`);\n\t}\n\n\tstatic initWithThreeRenderer(\n\t\trenderer: WebGLRenderer,\n\t\tparams?: {\n\t\t\tverboseLogging?: boolean,\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\tconst composer = new GPUComposer(\n\t\t\t{\n\t\t\t\tfloatPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\tintPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\t...params,\n\t\t\t\tcanvas: renderer.domElement,\n\t\t\t\tcontext: renderer.getContext(),\n\t\t\t\tglslVersion: renderer.capabilities.isWebGL2 ? GLSL3 : GLSL1,\n\t\t\t},\n\t\t);\n\t\t// Attach renderer.\n\t\t// @ts-ignore\n\t\tcomposer.renderer = renderer;\n\t\treturn composer;\n\t}\n\n\tisWebGL2() {\n\t\treturn isWebGL2(this.gl);\n\t}\n\n\tprivate _glslKeyForType(type: GPULayerType) {\n\t\tswitch (type) {\n\t\t\tcase HALF_FLOAT:\n\t\t\tcase FLOAT:\n\t\t\t\treturn FLOAT;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\tif (this.glslVersion === GLSL1) return INT;\n\t\t\t\treturn UINT;\n\t\t\tcase BYTE:\n\t\t\tcase SHORT:\n\t\t\tcase INT:\n\t\t\t\treturn INT;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid type: ${type} passed to GPUComposer.copyProgramForType.`);\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t_setValueProgramForType(type: GPULayerType) {\n\t\tconst { _setValuePrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_setValuePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `setValue-${key}`,\n\t\t\t\tfragmentShader: _setValuePrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_value',\n\t\t\t\t\t\tvalue: [0, 0, 0, 0],\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_setValuePrograms[key] = program;\n\t\t}\n\t\treturn _setValuePrograms[key]!;\n\t}\n\n\tprivate _copyProgramForType(type: GPULayerType) {\n\t\tconst { _copyPrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_copyPrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `copy-${key}`,\n\t\t\t\tfragmentShader: _copyPrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_state',\n\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\ttype: INT,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_copyPrograms[key] = program;\n\t\t}\n\t\treturn _copyPrograms[key]!;\n\t}\n\n\tprivate _getWrappedLineColorProgram() {\n\t\tif (this._wrappedLineColorProgram === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: 'wrappedLineColor',\n\t\t\t\tfragmentShader: require('./glsl/frag/WrappedLineColorFragShader.glsl'),\n\t\t\t});\n\t\t\tthis._wrappedLineColorProgram = program;\n\t\t}\n\t\treturn this._wrappedLineColorProgram;\n\t}\n\n\tprivate _vectorMagnitudeProgramForType(type: GPULayerType) {\n\t\tconst { _vectorMagnitudePrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_vectorMagnitudePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `vectorMagnitude-${key}`,\n\t\t\t\tfragmentShader: _vectorMagnitudePrograms.src,\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_vectorMagnitudePrograms[key] = program;\n\t\t}\n\t\treturn _vectorMagnitudePrograms[key]!;\n\t}\n\n\t_getQuadPositionsBuffer() {\n\t\tif (this._quadPositionsBuffer === undefined) {\n\t\t\tconst fsQuadPositions = new Float32Array([ -1, -1, 1, -1, -1, 1, 1, 1 ]);\n\t\t\tthis._quadPositionsBuffer = this._initVertexBuffer(fsQuadPositions)!;\n\t\t}\n\t\treturn this._quadPositionsBuffer!;\n\t}\n\n\tprivate _getBoundaryPositionsBuffer() {\n\t\tif (this._boundaryPositionsBuffer === undefined) {\n\t\t\tconst boundaryPositions = new Float32Array([ -1, -1, 1, -1, 1, 1, -1, 1, -1, -1 ]);\n\t\t\tthis._boundaryPositionsBuffer = this._initVertexBuffer(boundaryPositions)!;\n\t\t}\n\t\treturn this._boundaryPositionsBuffer!;\n\t}\n\n\tprivate _getCirclePositionsBuffer(numSegments: number) {\n\t\tconst { _circlePositionsBuffer } = this;\n\t\tif (_circlePositionsBuffer[numSegments] == undefined) {\n\t\t\tconst unitCirclePoints = [0, 0];\n\t\t\tfor (let i = 0; i <= numSegments; i++) { // TODO: should this be just less than?\n\t\t\t\tunitCirclePoints.push(\n\t\t\t\t\tMath.cos(2 * Math.PI * i / numSegments),\n\t\t\t\t\tMath.sin(2 * Math.PI * i / numSegments),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst circlePositions = new Float32Array(unitCirclePoints);\n\t\t\tconst buffer = this._initVertexBuffer(circlePositions)!;\n\t\t\t_circlePositionsBuffer[numSegments] = buffer;\n\t\t}\n\t\treturn _circlePositionsBuffer[numSegments];\n\t}\n\n\tprivate _initVertexBuffer(\n\t\tdata: Float32Array,\n\t) {\n\t\tconst { _errorCallback, gl } = this;\n\t\tconst buffer = gl.createBuffer();\n\t\tif (!buffer) {\n\t\t\t_errorCallback('Unable to allocate gl buffer.');\n\t\t\treturn;\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t// Add buffer data.\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\t\treturn buffer;\n\t}\n\n\t/**\n\t * Used internally, see GPULayer.clone() for public API.\n\t * @private\n\t */\n\t_cloneGPULayer(gpuLayer: GPULayer, name?: string) {\n\t\tlet dimensions: number | [number, number] = 0;\n\t\ttry {\n\t\t\tdimensions = gpuLayer.length;\n\t\t} catch {\n\t\t\tdimensions = [gpuLayer.width, gpuLayer.height];\n\t\t}\n\n\t\t// If read only, get state by reading to GPU.\n\t\tconst array = gpuLayer.writable ? undefined : gpuLayer.getValues();\n\n\t\tconst clone = new GPULayer(this, {\n\t\t\tname: name || `${gpuLayer.name}-clone`,\n\t\t\tdimensions,\n\t\t\ttype: gpuLayer.type,\n\t\t\tnumComponents: gpuLayer.numComponents,\n\t\t\tfilter: gpuLayer.filter,\n\t\t\twrapS: gpuLayer.wrapS,\n\t\t\twrapT: gpuLayer.wrapT,\n\t\t\twritable: gpuLayer.writable,\n\t\t\tnumBuffers: gpuLayer.numBuffers,\n\t\t\tclearValue: gpuLayer.clearValue,\n\t\t\tarray,\n\t\t});\n\n\t\t// TODO: check this.\n\t\t// If writable, copy current state with a draw call.\n\t\tif (gpuLayer.writable) {\n\t\t\tfor (let i = 0; i < gpuLayer.numBuffers - 1; i++) {\n\t\t\t\tthis.step({\n\t\t\t\t\tprogram: this._copyProgramForType(gpuLayer.type),\n\t\t\t\t\tinput: gpuLayer.getStateAtIndex((gpuLayer.bufferIndex + i + 1) % gpuLayer.numBuffers),\n\t\t\t\t\toutput: clone,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.step({\n\t\t\t\tprogram: this._copyProgramForType(gpuLayer.type),\n\t\t\t\tinput: gpuLayer.currentState,\n\t\t\t\toutput: clone,\n\t\t\t});\n\t\t}\n\n\t\t// TODO: Increment clone's buffer index until it is identical to the original layer.\n\n\n\t\treturn clone;\n\t}\n\n\tinitTexture(\n\t\tparams: {\n\t\t\tname: string,\n\t\t\turl: string,\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\tformat?: TextureFormat,\n\t\t\ttype?: TextureType,\n\t\t\tonLoad?: (texture: WebGLTexture) => void,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['name', 'url', 'filter', 'wrapS', 'wrapT', 'format', 'type', 'onLoad'];\n\t\tObject.keys(params).forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to GPUComposer.initTexture with name \"${params.name}\".  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\tconst { url, name } = params;\n\t\tif (!isString(url)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have url of type string, got ${url} of type ${typeof url}.`)\n\t\t}\n\t\tif (!isString(name)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have name of type string, got ${name} of type ${typeof name}.`)\n\t\t}\n\n\t\t// Get filter type, default to nearest.\n\t\tconst filter = params.filter !== undefined ? params.filter : NEAREST;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${filter} for GPULayer \"${name}\", must be ${validFilters.join(', ')}.`);\n\t\t}\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${wrapS} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${wrapT} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\n\t\t// Get image format type, default to rgba.\n\t\tconst format = params.format !== undefined ? params.format : RGBA;\n\t\tif (!isValidTextureFormat(format)) {\n\t\t\tthrow new Error(`Invalid format: ${format} for GPULayer \"${name}\", must be ${validTextureFormats.join(', ')}.`);\n\t\t}\n\n\t\t// Get image data type, default to unsigned byte.\n\t\tconst type = params.type !== undefined ? params.type : UNSIGNED_BYTE;\n\t\tif (!isValidTextureType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${type} for GPULayer \"${name}\", must be ${validTextureTypes.join(', ')}.`);\n\t\t}\n\n\t\tconst { gl, _errorCallback } = this;\n\t\tconst texture = gl.createTexture();\n\t\tif (texture === null) {\n\t\t\tthrow new Error(`Unable to init glTexture.`);\n\t\t}\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t// Because images have to be downloaded over the internet\n\t\t// they might take a moment until they are ready.\n\t\t// Until then put a single pixel in the texture so we can\n\t\t// use it immediately. When the image has finished downloading\n\t\t// we'll update the texture with the contents of the image.\n\t\tconst level = 0;\n\t\tconst internalFormat = gl.RGBA;\n\t\tconst width = 1;\n\t\tconst height = 1;\n\t\tconst border = 0;\n\t\tconst srcFormat = gl[format];\n\t\tconst srcType = gl[type];\n\t\tconst pixel = new Uint8Array([0, 0, 0, 0]);\n\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\twidth, height, border, srcFormat, srcType, pixel);\n\n\t\tconst image = new Image();\n\t\timage.onload = () => {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\t\tsrcFormat, srcType, image);\n\n\t\t\t// WebGL1 has different requirements for power of 2 images\n\t\t\t// vs non power of 2 images so check if the image is a\n\t\t\t// power of 2 in both dimensions.\n\t\t\tif (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n\t\t\t\t// // Yes, it's a power of 2. Generate mips.\n\t\t\t\t// gl.generateMipmap(gl.TEXTURE_2D);\n\t\t\t} else {\n\t\t\t\t// TODO: finish implementing this.\n\t\t\t\tconsole.warn(`Texture ${name} dimensions [${image.width}, ${image.height}] are not power of 2.`);\n\t\t\t\t// // No, it's not a power of 2. Turn off mips and set\n\t\t\t\t// // wrapping to clamp to edge\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t}\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[filter]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[filter]);\n\n\t\t\t// Callback when texture has loaded.\n\t\t\tif (params.onLoad) params.onLoad(texture);\n\t\t};\n\t\timage.onerror = (e) => {\n\t\t\t_errorCallback(`Error loading image ${name}: ${e}`);\n\t\t}\n\t\timage.src = url;\n\n\t\treturn texture;\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t _getVertexShader(\n\t\tname: PROGRAM_NAME_INTERNAL,\n\t\tvertexID: string,\n\t\tvertexDefines: CompileTimeVars,\n\t\tprogramName: string,\n\t) {\n\t\tconst {\n\t\t\t_errorCallback,\n\t\t\t_vertexShaders,\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t} = this;\n\t\tconst { compiledShaders, src } = _vertexShaders[name];\n\t\tif (vertexID === '') vertexID = '_default';\n\t\tif (compiledShaders[vertexID] === undefined) {\n\t\t\t// Compile a vertex shader (this only happens once for each possible vertex shader across all GPUPrograms).\n\t\t\tif (src === '') {\n\t\t\t\tthrow new Error(`Error compiling GPUProgram \"${programName}\": no source for vertex shader with name \"${name}\".`);\n\t\t\t}\n\t\t\tconst preprocessedSrc = preprocessVertexShader(src, glslVersion);\n\t\t\tconst shader = compileShader(\n\t\t\t\tgl,\n\t\t\t\tglslVersion,\n\t\t\t\tintPrecision,\n\t\t\t\tfloatPrecision,\n\t\t\t\tpreprocessedSrc,\n\t\t\t\tgl.VERTEX_SHADER,\n\t\t\t\tprogramName,\n\t\t\t\t_errorCallback,\n\t\t\t\tvertexDefines,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tif (!shader) {\n\t\t\t\t_errorCallback(`Unable to compile \"${name}${vertexID}\" vertex shader for GPUProgram \"${programName}\".`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Save the results so this does not have to be repeated.\n\t\t\tcompiledShaders[vertexID] = shader;\n\t\t}\n\t\treturn compiledShaders[vertexID];\n\t}\n\n\tresize(width: number, height: number) {\n\t\tconst { canvas } = this;\n\t\t// Set correct canvas pixel size.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/By_example/Canvas_size_and_WebGL\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\t// Save dimensions.\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t};\n\n\tprivate _drawSetup(\n\t\tgpuProgram: GPUProgram,\n\t\tprogramName: PROGRAM_NAME_INTERNAL,\n\t\tvertexDefines: CompileTimeVars,\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\toutput?: GPULayer,\n\t) {\n\t\tconst { gl } = this;\n\n\t\t// CAUTION: the order of these next few lines is important.\n\n\t\t// Get a shallow copy of current textures.\n\t\t// This line must come before this._setOutputLayer() as it depends on current internal state.\n\t\tconst inputTextures: GPULayerState[] = [];\n\t\tif (input) {\n\t\t\tif ((input as GPULayerState).layer) {\n\t\t\t\tinputTextures.push(input as GPULayerState);\n\t\t\t} else if (input.constructor === GPULayer) {\n\t\t\t\tinputTextures.push((input as GPULayer).currentState);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < (input as (GPULayer | GPULayerState)[]).length; i++) {\n\t\t\t\t\tconst layer = (input as (GPULayer | GPULayerState)[])[i];\n\t\t\t\t\tinputTextures.push((layer as GPULayer).currentState ? (layer as GPULayer).currentState : layer as GPULayerState);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst program = gpuProgram._getProgramWithName(programName, vertexDefines, inputTextures)!;\n\n\t\t// Set output framebuffer.\n\t\t// This may modify WebGL internal state.\n\t\tthis._setOutputLayer(fullscreenRender, input, output);\n\n\t\t// Set current program.\n\t\t// Must do this before calling gpuProgram._setInternalFragmentUniforms(program, inputTextures);\n\t\tgl.useProgram(program);\n\n\t\t// Set input textures.\n\t\tfor (let i = 0; i < inputTextures.length; i++) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTextures[i].texture);\n\t\t}\n\t\tgpuProgram._setInternalFragmentUniforms(program, inputTextures);\n\t\treturn program;\n\t}\n\n\tprivate _setBlendMode(shouldBlendAlpha?: boolean) {\n\t\tconst { gl } = this;\n\t\tif (shouldBlendAlpha) {\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t}\n\t}\n\n\tprivate _indexOfLayerInArray(layer: GPULayer, array: (GPULayer | GPULayerState)[]) {\n\t\treturn array.findIndex(item => item === layer || (item as GPULayerState).layer === layer);\n\t}\n\n\tprivate _addLayerToInputs(\n\t\tlayer: GPULayer,\n\t\tinput?:  (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t) {\n\t\t// Add layer to end of input if needed.\n\t\t// Do this with no mutations.\n\t\tif (input === undefined) {\n\t\t\treturn [layer];\n\t\t}\n\t\tif (isArray(input)) {\n\t\t\t// Return input with layer added if needed.\n\t\t\tif (this._indexOfLayerInArray(layer, (input as (GPULayer | GPULayerState)[])) >= 0) {\n\t\t\t\treturn input  as (GPULayer | GPULayerState)[];\n\t\t\t}\n\t\t\treturn [...(input as (GPULayer | GPULayerState)[]), layer];\n\t\t}\n\t\tif (input === layer || (input as GPULayerState).layer === layer) {\n\t\t\treturn [input as GPULayerState];\n\t\t}\n\t\treturn [(input as GPULayer | GPULayerState), layer];\n\t}\n\n\tprivate _passThroughLayerDataFromInputToOutput(state: GPULayer) {\n\t\t// TODO: figure out the fastest way to copy a texture.\n\t\tconst copyProgram = this._copyProgramForType(state._internalType);\n\t\tthis.step({\n\t\t\tprogram: copyProgram,\n\t\t\tinput: state,\n\t\t\toutput: state,\n\t\t});\n\t}\n\n\tprivate _setOutputLayer(\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t) {\n\t\tconst { gl } = this;\n\n\t\t// Render to screen.\n\t\tif (!output) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t// Resize viewport.\n\t\t\tconst { _width, _height } = this;\n\t\t\tgl.viewport(0, 0, _width, _height);\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if output is same as one of input layers.\n\t\tif (input && ((input === output || (input as GPULayerState).layer === output) ||\n\t\t\t(isArray(input) && this._indexOfLayerInArray(output, input as (GPULayer | GPULayerState)[]) >= 0))) {\n\t\t\tif (output.numBuffers === 1) {\n\t\t\t\tthrow new Error('Cannot use same buffer for input and output of a program. Try increasing the number of buffers in your output layer to at least 2 so you can render to nextState using currentState as an input.');\n\t\t\t}\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render and increment buffer so we are rendering to a different target\n\t\t\t\t// than the input texture.\n\t\t\t\toutput._prepareForWrite(true);\n\t\t\t} else {\n\t\t\t\t// Pass input texture through to output.\n\t\t\t\tthis._passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t// Render to output without incrementing buffer.\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t}\n\t\t} else {\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render to current buffer.\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t} else {\n\t\t\t\t// If we are doing a sneaky thing with a swapped texture and are\n\t\t\t\t// only rendering part of the screen, we may need to add a copy operation.\n\t\t\t\tif (output._usingTextureOverrideForCurrentBuffer()) {\n\t\t\t\t\tthis._passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t}\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resize viewport.\n\t\tconst { width, height } = output;\n\t\tgl.viewport(0, 0, width, height);\n\t};\n\n\tprivate _setVertexAttribute(program: WebGLProgram, name: string, size: number, programName: string) {\n\t\tconst { gl } = this;\n\t\t// Point attribute to the currently bound VBO.\n\t\tconst location = gl.getAttribLocation(program, name);\n\t\tif (location < 0) {\n\t\t\tthrow new Error(`Unable to find vertex attribute \"${name}\" in program \"${programName}\".`);\n\t\t}\n\t\t// INT types not supported for attributes.\n\t\t// Use FLOAT rather than SHORT bc FLOAT covers more INT range.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\n\t\tgl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\n\t\t// Enable the attribute.\n\t\tgl.enableVertexAttribArray(location);\n\t}\n\n\t_setPositionAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_gpuio_position', 2, programName);\n\t}\n\n\tprivate _setIndexAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_gpuio_index', 1, programName);\n\t}\n\n\tprivate _setUVAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_gpuio_uv', 2, programName);\n\t}\n\n\t// Step for entire fullscreen quad.\n\tstep(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, DEFAULT_PROGRAM_NAME, {}, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a strip of px along the boundary.\n\tstepBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tsingleEdge?: 'LEFT' | 'RIGHT' | 'TOP' | 'BOTTOM';\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, DEFAULT_PROGRAM_NAME, {}, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\t// Frame needs to be offset and scaled so that all four sides are in viewport.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [1 - onePx[0], 1 - onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getBoundaryPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.singleEdge) {\n\t\t\tswitch(params.singleEdge) {\n\t\t\t\tcase 'LEFT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 3, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RIGHT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 1, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TOP':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 2, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BOTTOM':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 0, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unknown boundary edge type: ${params.singleEdge}.`);\n\t\t\t}\n\t\t} else {\n\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program for all but a strip of px along the boundary.\n\tstepNonBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, DEFAULT_PROGRAM_NAME, {}, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [1 - 2 * onePx[0], 1 - 2 * onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program inside a circular spot.\n\tstepCircle(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition: [number, number], // Position is in units of pixels.\n\t\t\tdiameter: number, // Diameter is in units of pixels.\n\t\t\tinput?:  (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tnumSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _width, _height } = this;\n\t\tconst { program, position, diameter, input, output } = params;\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, DEFAULT_PROGRAM_NAME, {}, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [diameter / _width, diameter / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', [2 * position[0] / _width - 1, 2 * position[1] / _height - 1], FLOAT);\n\t\tconst numSegments = params.numSegments ? params.numSegments : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (numSegments < 3) {\n\t\t\tthrow new Error(`numSegments for GPUComposer.stepCircle must be greater than 2, got ${numSegments}.`);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getCirclePositionsBuffer(numSegments));\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\t\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a thickened line segment (rounded end caps available).\n\tstepSegment(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition1: [number, number], // Position is in units of pixels.\n\t\t\tposition2: [number, number], // Position is in units of pixels.\n\t\t\tthickness: number, // Thickness is in units of pixels.\n\t\t\tinput?:  (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tendCaps?: boolean,\n\t\t\tnumCapSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, position1, position2, thickness, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, SEGMENT_PROGRAM_NAME, {}, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_halfThickness', thickness / 2, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [2 / width, 2 / height], FLOAT);\n\t\tconst diffX = position1[0] - position2[0];\n\t\tconst diffY = position1[1] - position2[1];\n\t\tconst angle = Math.atan2(diffY, diffX);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_rotation', angle, FLOAT);\n\t\tconst centerX = (position1[0] + position2[0]) / 2;\n\t\tconst centerY = (position1[1] + position2[1]) / 2;\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', [2 * centerX / this._width - 1, 2 * centerY / this._height - 1], FLOAT);\n\t\tconst length = Math.sqrt(diffX * diffX + diffY * diffY);\n\t\t\n\t\tconst numSegments = params.numCapSegments ? params.numCapSegments * 2 : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (params.endCaps) {\n\t\t\tif (numSegments < 6 || numSegments % 6 !== 0) {\n\t\t\t\tthrow new Error(`numSegments for GPUComposer.stepSegment must be divisible by 6, got ${numSegments}.`);\n\t\t\t}\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_length', length - thickness * Math.sin(Math.PI / numSegments), FLOAT);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getCirclePositionsBuffer(numSegments));\n\t\t} else {\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_length', length - thickness, FLOAT);\n\t\t\t// Use a rectangle in case of no caps.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\t}\n\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.endCaps) {\n\t\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\n\t\t} else {\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepPolyline(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: [number, number][],\n\t\t\tthickness: number, // Thickness of line is in units of pixels.\n\t\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcloseLoop?: boolean,\n\t\t\tincludeUVs?: boolean,\n\t\t\tincludeNormals?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { program, input, output } = params;\n\t\tconst vertices = params.positions;\n\t\tconst closeLoop = !!params.closeLoop;\n\t\t\n\t\tconst { gl, _width, _height } = this\n\n\t\t// Offset vertices.\n\t\tconst halfThickness = params.thickness / 2;\n\t\tconst numPositions = closeLoop ? vertices.length * 4 + 2 : (vertices.length - 1) * 4;\n\t\tconst positions = new Float32Array(2 * numPositions);\n\t\tconst uvs = params.includeUVs ? new Float32Array(2 * numPositions) : undefined;\n\t\tconst normals = params.includeNormals ? new Float32Array(2 * numPositions) : undefined;\n\n\t\t// tmp arrays.\n\t\tconst s1 = [0, 0];\n\t\tconst s2 = [0, 0];\n\t\tconst n1 = [0, 0];\n\t\tconst n2 = [0, 0];\n\t\tconst n3 = [0, 0];\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tif (!closeLoop && i === vertices.length - 1) continue;\n\t\t\t// Vertices on this segment.\n\t\t\tconst v1 = vertices[i];\n\t\t\tconst v2 = vertices[(i + 1) % vertices.length];\n\t\t\ts1[0] = v2[0] - v1[0];\n\t\t\ts1[1] = v2[1] - v1[1];\n\t\t\tconst length1 = Math.sqrt(s1[0] * s1[0] + s1[1] * s1[1]);\n\t\t\tn1[0] = s1[1] / length1;\n\t\t\tn1[1] = - s1[0] / length1;\n\n\t\t\tconst index = i * 4 + 2;\n\n\t\t\tif (!closeLoop && i === 0) {\n\t\t\t\t// Add starting points to positions array.\n\t\t\t\tpositions[0] = v1[0] + n1[0] * halfThickness;\n\t\t\t\tpositions[1] = v1[1] + n1[1] * halfThickness;\n\t\t\t\tpositions[2] = v1[0] - n1[0] * halfThickness;\n\t\t\t\tpositions[3] = v1[1] - n1[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[0] = 0;\n\t\t\t\t\tuvs[1] = 1;\n\t\t\t\t\tuvs[2] = 0;\n\t\t\t\t\tuvs[3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[0] = n1[0];\n\t\t\t\t\tnormals[1] = n1[1];\n\t\t\t\t\tnormals[2] = n1[0];\n\t\t\t\t\tnormals[3] = n1[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst u = (i + 1) / (vertices.length - 1);\n\n\t\t\t// Offset from v2.\n\t\t\tpositions[2 * index] = v2[0] + n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 1] = v2[1] + n1[1] * halfThickness;\n\t\t\tpositions[2 * index + 2] = v2[0] - n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 3] = v2[1] - n1[1] * halfThickness;\n\t\t\tif (uvs) {\n\t\t\t\tuvs[2 * index] = u;\n\t\t\t\tuvs[2 * index + 1] = 1;\n\t\t\t\tuvs[2 * index + 2] = u;\n\t\t\t\tuvs[2 * index + 3] = 0;\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[2 * index] = n1[0];\n\t\t\t\tnormals[2 * index + 1] = n1[1];\n\t\t\t\tnormals[2 * index + 2] = n1[0];\n\t\t\t\tnormals[2 * index + 3] = n1[1];\n\t\t\t}\n\n\t\t\tif ((i < vertices.length - 2) || closeLoop) {\n\t\t\t\t// Vertices on next segment.\n\t\t\t\tconst v3 = vertices[(i + 1) % vertices.length];\n\t\t\t\tconst v4 = vertices[(i + 2) % vertices.length];\n\t\t\t\ts2[0] = v4[0] - v3[0];\n\t\t\t\ts2[1] = v4[1] - v3[1];\n\t\t\t\tconst length2 = Math.sqrt(s2[0] * s2[0] + s2[1] * s2[1]);\n\t\t\t\tn2[0] = s2[1] / length2;\n\t\t\t\tn2[1] = - s2[0] / length2;\n\n\t\t\t\t// Offset from v3\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = v3[0] + n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = v3[1] + n2[1] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = v3[0] - n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = v3[1] - n2[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length))] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 1] = 1;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 2] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length))] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 1] = n2[1];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 2] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 3] = n2[1];\n\t\t\t\t}\n\n\t\t\t\t// Check the angle between adjacent segments.\n\t\t\t\tconst cross = n1[0] * n2[1] - n1[1] * n2[0];\n\t\t\t\tif (Math.abs(cross) < 1e-6) continue;\n\t\t\t\tn3[0] = n1[0] + n2[0];\n\t\t\t\tn3[1] = n1[1] + n2[1];\n\t\t\t\tconst length3 = Math.sqrt(n3[0] * n3[0] + n3[1] * n3[1]);\n\t\t\t\tn3[0] /= length3;\n\t\t\t\tn3[1] /= length3;\n\t\t\t\t// Make adjustments to positions.\n\t\t\t\tconst angle = Math.acos(n1[0] * n2[0] + n1[1] * n2[1]);\n\t\t\t\tconst offset = halfThickness / Math.cos(angle / 2);\n\t\t\t\tif (cross < 0) {\n\t\t\t\t\tpositions[2 * index] = v2[0] + n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 1] = v2[1] + n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = positions[2 * index];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = positions[2 * index + 1];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[2 * index + 2] = v2[0] - n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 3] = v2[1] - n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = positions[2 * index + 2];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = positions[2 * index + 3];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (closeLoop) {\n\t\t\t// Duplicate starting points to end of positions array.\n\t\t\tpositions[vertices.length * 8] = positions[0];\n\t\t\tpositions[vertices.length * 8 + 1] = positions[1];\n\t\t\tpositions[vertices.length * 8 + 2] = positions[2];\n\t\t\tpositions[vertices.length * 8 + 3] = positions[3];\n\t\t\tif (uvs) {\n\t\t\t\tuvs[vertices.length * 8] = uvs[0];\n\t\t\t\tuvs[vertices.length * 8 + 1] = uvs[1];\n\t\t\t\tuvs[vertices.length * 8 + 2] = uvs[2];\n\t\t\t\tuvs[vertices.length * 8 + 3] = uvs[3];\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[vertices.length * 8] = normals[0];\n\t\t\t\tnormals[vertices.length * 8 + 1] = normals[1];\n\t\t\t\tnormals[vertices.length * 8 + 2] = normals[2];\n\t\t\t\tnormals[vertices.length * 8 + 3] = normals[3];\n\t\t\t}\n\t\t}\n\n\t\tconst vertexShaderOptions: CompileTimeVars = {};\n\t\tif (uvs) vertexShaderOptions[GPUIO_VS_UV_ATTRIBUTE] = '1';\n\t\tif (normals) vertexShaderOptions[GPUIO_VS_NORMAL_ATTRIBUTE] = '1';\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, DEFAULT_PROGRAM_NAME, vertexShaderOptions, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_gpuio_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, numPositions);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepTriangleStrip(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: Float32Array,\n\t\t\tnormals?: Float32Array,\n\t\t\tuvs?: Float32Array,\n\t\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcount?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\n\t\tconst { program, input, output, positions, uvs, normals } = params;\n\t\tconst { gl, _width, _height } = this;\n\n\t\tconst vertexShaderOptions: CompileTimeVars = {};\n\t\tif (uvs) vertexShaderOptions[GPUIO_VS_UV_ATTRIBUTE] = '1';\n\t\tif (normals) vertexShaderOptions[GPUIO_VS_NORMAL_ATTRIBUTE] = '1';\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, DEFAULT_PROGRAM_NAME, vertexShaderOptions, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_gpuio_normal', 2, program.name);\n\t\t}\n\n\t\tconst count = params.count ? params.count : positions.length / 2;\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepLines(params: {\n\t\tprogram: GPUProgram,\n\t\tpositions: Float32Array,\n\t\tindices?: Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\tnormals?: Float32Array,\n\t\tuvs?: Float32Array,\n\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\tcount?: number,\n\t\tcloseLoop?: boolean,\n\t\tshouldBlendAlpha?: boolean,\n\t}) {\n\t\tconst { gl, _width, _height } = this;\n\t\tconst { indices, uvs, normals, input, output, program } = params;\n\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && indices) {\n\t\t\tthrow new Error(`GPUComposer.stepLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\n\t\tconst vertexShaderOptions: CompileTimeVars = {};\n\t\tif (uvs) vertexShaderOptions[GPUIO_VS_UV_ATTRIBUTE] = '1';\n\t\tif (normals) vertexShaderOptions[GPUIO_VS_NORMAL_ATTRIBUTE] = '1';\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, DEFAULT_PROGRAM_NAME, vertexShaderOptions, false, input, output);\n\n\t\tconst count = params.count ? params.count : (indices ? indices.length : (params.positions.length / 2));\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', [-1, -1], FLOAT);\n\t\tif (indices) {\n\t\t\t// Reorder positions array to match indices.\n\t\t\tconst positions = new Float32Array(2 * count);\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst index = indices[i];\n\t\t\t\tpositions[2 * i] = params.positions[2 * index];\n\t\t\t\tpositions[2 * i + 1] = params.positions[2 * index + 1];\n\t\t\t}\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(params.positions)!);\n\t\t}\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_gpuio_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsPoints(\n\t\tparams: {\n\t\t\tpositions: GPULayer, // Positions in units of pixels.\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer,\n\t\t\tpointSize?: number,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _pointIndexArray, _width, _height, glslVersion } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Check that numPoints is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsPoints() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\tif (glslVersion === GLSL1 && positions.width * positions.height > MAX_FLOAT_INT) {\n\t\t\tconsole.warn(`Points positions array length: ${positions.width * positions.height} is longer than what is supported by GLSL1 : ${MAX_FLOAT_INT}, expect index overflow.`);\n\t\t}\n\t\tconst { length } = positions;\n\t\tconst count = params.count || length;\n\t\tif (count > length) {\n\t\t\tthrow new Error(`Invalid count ${count} for position GPULayer of length ${length}.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);\n\t\t\tconst color = params.color || [1, 0, 0]; // Default of red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\n\t\t// Add positions to end of input if needed.\n\t\tconst input = this._addLayerToInputs(positions, params.input);\n\n\t\tconst vertexShaderOptions: CompileTimeVars = {};\n\t\t// Tell whether we are using an absolute position (2 components),\n\t\t// or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tif (positions.numComponents === 4) vertexShaderOptions[GPUIO_VS_POSITION_W_ACCUM] = '1';\n\t\tif (params.wrapX) vertexShaderOptions[GPUIO_VS_WRAP_X] = '1';\n\t\tif (params.wrapY) vertexShaderOptions[GPUIO_VS_WRAP_Y] = '1';\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, LAYER_POINTS_PROGRAM_NAME, vertexShaderOptions, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_positions', this._indexOfLayerInArray(positions, input), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [1 / _width, 1 / _height], FLOAT);\n\t\t// Set default pointSize.\n\t\tconst pointSize = params.pointSize || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_pointSize', pointSize, FLOAT);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\t// We get this for free in GLSL3 with gl_VertexID.\n\t\tif (glslVersion === GLSL1) {\n\t\t\tif (this._pointIndexBuffer === undefined || (_pointIndexArray && _pointIndexArray.length < count)) {\n\t\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\t\tthis._pointIndexArray = indices;\n\t\t\t\tthis._pointIndexBuffer = this._initVertexBuffer(indices);\n\t\t\t}\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._pointIndexBuffer!);\n\t\t\tthis._setIndexAttribute(glProgram, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.POINTS, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsLines(\n\t\tparams: {\n\t\t\tpositions: GPULayer,\n\t\t\tindices?: Float32Array | Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tcloseLoop?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _width, _height, glslVersion } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Check that positions is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && params.indices) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = params.wrapX || params.wrapY ? this._getWrappedLineColorProgram() : this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\n\t\t// Add positionLayer to end of input if needed.\n\t\tconst input = this._addLayerToInputs(positions, params.input);\n\n\t\tconst vertexShaderOptions: CompileTimeVars = {};\n\t\t// Tell whether we are using an absolute position (2 components),\n\t\t// or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tif (positions.numComponents === 4) vertexShaderOptions[GPUIO_VS_POSITION_W_ACCUM] = '1';\n\t\tif (params.wrapX) vertexShaderOptions[GPUIO_VS_WRAP_X] = '1';\n\t\tif (params.wrapY) vertexShaderOptions[GPUIO_VS_WRAP_Y] = '1';\n\t\tvertexShaderOptions[GPUIO_VS_INDEXED_POSITIONS] = params.indices ? '1': '0';\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, LAYER_LINES_PROGRAM_NAME, vertexShaderOptions, false, input, output);\n\n\t\tconst count = params.count ? params.count : (params.indices ? params.indices.length : positions.length);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_positions', this._indexOfLayerInArray(positions, input), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [1 / _width, 1 / _height], FLOAT);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\t// Only pass in indices if we are using indexed pts or GLSL1, otherwise we get this for free from gl_VertexID.\n\t\tif (params.indices || glslVersion === GLSL1) {\n\t\t\t// TODO: cache indexArray if no indices passed in.\n\t\t\tconst indices = params.indices ? params.indices : initSequentialFloatArray(count);\n\t\t\tif (this._indexedLinesIndexBuffer === undefined) {\n\t\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\t\tlet floatArray: Float32Array;\n\t\t\t\tif (indices.constructor !== Float32Array) {\n\t\t\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\t\t\tfloatArray = new Float32Array(indices.length);\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t\tfloatArray[i] = indices[i];\n\t\t\t\t\t}\n\t\t\t\t\tconsole.warn(`Converting indices array of type ${indices.constructor} to Float32Array in GPUComposer.drawIndexedLines for WebGL compatibility, you may want to use a Float32Array to store this information so the conversion is not required.`);\n\t\t\t\t} else {\n\t\t\t\t\tfloatArray = indices as Float32Array;\n\t\t\t\t}\n\t\t\t\tthis._indexedLinesIndexBuffer = this._initVertexBuffer(floatArray);\n\t\t\t} else {\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._indexedLinesIndexBuffer!);\n\t\t\t\t// Copy buffer data.\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\t\t\t}\n\t\t\tthis._setIndexAttribute(glProgram, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsVectorField(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer,\n\t\t\tvectorSpacing?: number,\n\t\t\tvectorScale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _vectorFieldIndexArray, _width, _height, glslVersion } = this;\n\t\tconst { data, output } = params;\n\n\t\t// Check that field is valid.\n\t\tif (data.numComponents !== 2) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsVectorField() must be passed a fieldLayer with 2 components, got fieldLayer \"${data.name}\" with ${data.numComponents} components.`)\n\t\t}\n\t\t// Check aspect ratio.\n\t\t// const dimensions = [vectorLayer.width, vectorLayer.height];\n\t\t// if (Math.abs(dimensions[0] / dimensions[1] - width / height) > 0.01) {\n\t\t// \tthrow new Error(`Invalid aspect ratio ${(dimensions[0] / dimensions[1]).toFixed(3)} vector GPULayer with dimensions [${dimensions[0]}, ${dimensions[1]}], expected ${(width / height).toFixed(3)}.`);\n\t\t// }\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this._addLayerToInputs(data, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, LAYER_VECTOR_FIELD_PROGRAM_NAME, {}, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_vectors', this._indexOfLayerInArray(data, input), INT);\n\t\t// Set default scale.\n\t\tconst vectorScale = params.vectorScale || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [vectorScale / _width, vectorScale / _height], FLOAT);\n\t\tconst vectorSpacing = params.vectorSpacing || 10;\n\t\tconst spacedDimensions = [Math.floor(_width / vectorSpacing), Math.floor(_height / vectorSpacing)] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_dimensions', spacedDimensions, FLOAT);\n\t\tconst length = 2 * spacedDimensions[0] * spacedDimensions[1];\n\t\t// We get this for free in GLSL3 with gl_VertexID.\n\t\tif (glslVersion === GLSL1) {\n\t\t\tif (this._vectorFieldIndexBuffer === undefined || (_vectorFieldIndexArray && _vectorFieldIndexArray.length < length)) {\n\t\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\t\tthis._vectorFieldIndexArray = indices;\n\t\t\t\tthis._vectorFieldIndexBuffer = this._initVertexBuffer(indices);\n\t\t\t}\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._vectorFieldIndexBuffer!);\n\t\t\tthis._setIndexAttribute(glProgram, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.LINES, 0, length);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerMagnitude(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tinput?: (GPULayer | GPULayerState)[] | GPULayer | GPULayerState,\n\t\t\toutput?: GPULayer,\n\t\t\tscale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { data, output } = params;\n\n\t\tconst program = this._vectorMagnitudeProgramForType(data.type);\n\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\tprogram.setUniform('u_color', color, FLOAT);\n\t\tconst scale = params.scale || 1;\n\t\tprogram.setUniform('u_scale', scale, FLOAT);\n\t\tprogram.setUniform('u_gpuio_numDimensions', data.numComponents, INT);\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this._addLayerToInputs(data, params.input);\n\t\t// Do setup - this must come first.\n\t\tconst glProgram = this._drawSetup(program, DEFAULT_PROGRAM_NAME, {}, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_data', this._indexOfLayerInArray(data, input), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_gpuio_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tresetThreeState() {\n\t\tif (!this._renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer, use GPUComposer.initWithThreeRenderer() to initialize GPUComposer instead.');\n\t\t}\n\t\tconst { gl } = this;\n\t\t// Reset viewport.\n\t\tconst viewport = this._renderer.getViewport(new utils.Vector4() as Vector4);\n\t\tgl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n\t\t// Unbind framebuffer (render to screen).\n\t\tthis._renderer.setRenderTarget(null);\n\t\t// Reset texture bindings.\n\t\tthis._renderer.resetState();\n\t}\n\n\t/**\n\t * Save the current state of the canvas to png.\n\t * @param params - PNG parameters.\n\t * @param params.filename - PNG filename (no extension).\n\t * @param params.dpi - PNG dpi (defaults to 72dpi).\n\t * @param params.callback - Optional callback when Blob is ready, default behavior saves the PNG using FileSaver.js. \n\t*/\n\tsavePNG(params: {\n\t\tfilename?: string,\n\t\tdpi?: number,\n\t\tmultiplier?: number,\n\t\tcallback?: (blob: Blob, filename: string) => void,\n\t} = {}) {\n\t\tconst { canvas } = this;\n\t\tconst filename = params.filename || 'output';\n\t\tconst callback = params.callback || saveAs; // Default to saving the image with FileSaver.\n\t\tcanvas.toBlob((blob) => {\n\t\t\tif (!blob) {\n\t\t\t\tconsole.warn(`Problem saving PNG from GPULayer \"${name}\", unable to init blob.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (params.dpi) {\n\t\t\t\tchangeDpiBlob(blob, params.dpi).then((blob: Blob) =>{\n\t\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t}\n\t\t}, 'image/png');\n\t}\n\n\ttick() {\n\t\tlet { _lastTickTime, _lastTickFPS } = this;\n\t\tconst currentTime = performance.now();\n\t\tthis._lastTickTime = currentTime;\n\t\tif (!_lastTickTime) {\n\t\t\treturn { fps: 0, milliseconds: 0 };\n\t\t}\n\t\tconst currentFPS = 1000 / (currentTime - _lastTickTime);\n\t\tif (!_lastTickFPS) _lastTickFPS = currentFPS;\n\t\t// Use a low pass filter to smooth out fps reading.\n\t\tconst factor = 0.9;\n\t\tconst fps =  Number.parseFloat((factor * _lastTickFPS + (1 - factor) * currentFPS).toFixed(1));\n\t\tthis._lastTickFPS = fps;\n\t\tthis._numTicks += 1;\n\t\treturn {\n\t\t\tfps,\n\t\t\tnumTicks: this._numTicks,\n\t\t}\n\t}\n\t\n\tdispose() {\n\t\tconst {\n\t\t\tgl, verboseLogging,\n\t\t\t_vertexShaders,\n\t\t\t_copyPrograms, _setValuePrograms, _vectorMagnitudePrograms,\n\t\t} = this;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUComposer.`);\n\n\t\t// TODO: delete buffers.\n\n\t\t// Delete vertex shaders.\n\t\tObject.values(_vertexShaders).forEach(({ compiledShaders })=> {\n\t\t\tObject.keys(compiledShaders).forEach(key => {\n\t\t\t\tgl.deleteShader(compiledShaders[key]);\n\t\t\t\tdelete compiledShaders[key];\n\t\t\t});\n\t\t});\n\t\t\n\t\t// Delete fragment shaders.\n\t\tObject.values(_copyPrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_copyPrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _copyPrograms[key];\n\t\t});\n\t\tObject.values(_setValuePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_setValuePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _setValuePrograms[key];\n\t\t});\n\t\tObject.values(_vectorMagnitudePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_vectorMagnitudePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _vectorMagnitudePrograms[key];\n\t\t});\n\t\tthis._wrappedLineColorProgram?.dispose();\n\t\tdelete this._wrappedLineColorProgram;\n\n\t\t// @ts-ignore\n\t\tdelete this._renderer;\n\t\t// @ts-ignore\n\t\tdelete this.gl;\n\t\t// @ts-ignore;\n\t\tdelete this.canvas;\n\t\t// GL context will be garbage collected by webgl.\n\t}\n}","import { setFloat16, getFloat16 } from '@petamoriken/float16';\n// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { saveAs } from 'file-saver';\nimport { GPUComposer } from './GPUComposer';\nimport {\n\tisArray,\n\tisNumber,\n\tisObject,\n\tisPositiveInteger,\n\tisValidClearValue,\n\tisValidDataType,\n\tisValidFilter,\n\tisValidWrap,\n} from './checks';\nimport {\n\tHALF_FLOAT,\n\tFLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tNEAREST,\n\tLINEAR,\n\tCLAMP_TO_EDGE,\n\tGPULayerArray,\n\tGPULayerFilter,\n\tGPULayerNumComponents,\n\tGPULayerType,\n\tGPULayerWrap,\n\tGPULayerBuffer,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidDataTypes,\n\tGPULayerState,\n } from './constants';\nimport {\n\treadyToRead,\n} from './utils';\nimport {\n\tcalcGPULayerSize,\n\tgetGLTextureParameters,\n\tgetGPULayerInternalFilter,\n\tgetGPULayerInternalType,\n\tgetGPULayerInternalWrap,\n\tinitArrayForType,\n\tvalidateGPULayerArray,\n} from './GPULayerHelpers';\nimport { Texture } from 'three';\n\nexport class GPULayer {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly _composer: GPUComposer;\n\n\t/**\n\t * Name of GPULayer, used for error logging.\n\t */\n\treadonly name: string;\n\t/**\n\t * Data type represented by GPULayer.\n\t */\n\treadonly type: GPULayerType; // Input type passed in during setup.\n\t/**\n\t * Number of RGBA elements represented by each pixel in the GPULayer (1-4).\n\t */\n\treadonly numComponents: GPULayerNumComponents;\n\t/**\n\t * Interpolation filter for GPULayer, defaults to LINEAR for 2D FLOAT/HALF_FLOAT GPULayers, otherwise defaults to NEAREST.\n\t */\n\treadonly filter: GPULayerFilter;\n\t/**\n\t * Horizontal wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t */\n\treadonly wrapS: GPULayerWrap;\n\t/**\n\t * Vertical wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t */\n\treadonly wrapT: GPULayerWrap;\n\t/**\n\t * Sets GPULayer as readonly or readwrite, defaults to false.\n\t */\n\treadonly writable: boolean;\n\t// Value to set when clear() is called, defaults to zero.\n\t// Access with GPULayer.clearValue.\n\tprivate _clearValue: number | number[] = 0;\n\n\t// Each GPULayer may contain a number of buffers to store different instances of the state.\n\t// e.g [currentState, previousState]\n\tprivate _bufferIndex = 0;\n\treadonly numBuffers;\n\tprivate readonly _buffers: GPULayerBuffer[] = [];\n\n\t// Texture sizes.\n\tprivate _length?: number; // This is only used for 1D data layers, access with GPULayer.length.\n\tprivate _width: number; // Access with GPULayer.width.\n\tprivate _height: number; // Access with GPULayer.height.\n\n\t// GPULayer settings.\n\t// Due to variable browser support of WebGL features, \"internal\" variables may be different\n\t// from the parameter originally passed in.  These variables are set so that they match the original\n\t// parameter as best as possible, but fragment shader polyfills may be required.\n\t// All \"gl\" variables are used to initialize internal WebGLTexture.\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\t/**\n\t * @private\n\t */\n\treadonly _glInternalFormat: number;\n\t/**\n\t * @private\n\t */\n\treadonly _glFormat: number;\n\n\t// GPULayer.internalType corresponds to GPULayer.glType, may be different from GPULayer.type.\n\t/**\n\t * @private\n\t */\n\treadonly _internalType: GPULayerType;\n\t/**\n\t * @private\n\t */\n\treadonly _glType: number;\n\n\t// Internally, GPULayer.glNumChannels may represent a larger number of channels than GPULayer.numComponents.\n\t// For example, writable RGB textures are not supported in WebGL2, must use RGBA instead.\n\t/**\n\t * @private\n\t */\n\treadonly _glNumChannels: number;\n\n\t// GPULayer.internalFilter corresponds to GPULayer.glFilter, may be different from GPULayer.filter.\n\t/**\n\t * @private\n\t */\n\treadonly _internalFilter: GPULayerFilter;\n\t/**\n\t * @private\n\t */\n\treadonly _glFilter: number;\n\n\t// GPULayer.internalWrapS corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapS.\n\t/**\n\t * @private\n\t */\n\treadonly _internalWrapS: GPULayerWrap;\n\t/**\n\t * @private\n\t */\n\treadonly _glWrapS: number;\n\n\t// GPULayer.internalWrapT corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapT.\n\t/**\n\t * @private\n\t */\n\treadonly _internalWrapT: GPULayerWrap;\n\t/**\n\t * @private\n\t */\n\treadonly _glWrapT: number;\n\t\n\t// Optimizations so that \"copying\" can happen without draw calls.\n\t// TODO: take a second look at this.\n\tprivate _textureOverrides?: (WebGLTexture | undefined)[];\n\n\t/**\n\t * Create a GPULayer.\n\t * @param composer - The current GPUComposer instance.\n\t * @param params  - GPULayer parameters.\n\t * @param params.name - Name of GPULayer, used for error logging.\n \t * @param params.type - Data type represented by GPULayer.\n\t * @param params.numComponents - Number of RGBA elements represented by each pixel in the GPULayer (1-4).\n\t * @param params.dimensions - Dimensions of 1D or 2D GPULayer.\n\t * @param params.filter - Interpolation filter for GPULayer, defaults to LINEAR for 2D FLOAT/HALF_FLOAT GPULayers, otherwise defaults to NEAREST.\n\t * @param params.wrapS - Horizontal wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t * @param params.wrapT - Vertical wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t * @param params.writable - Sets GPULayer as readonly or readwrite, defaults to false.\n\t * @param params.numBuffers - How may buffers to allocate, defaults to 1.  If you intend to use the current state of this GPULayer as an input to generate a new state, you will need at least 2 buffers.\n\t * @param params.clearValue - Value to write to GPULayer when GPULayer.clear() is called.\n\t * @param params.array - Array to initialize GPULayer.\n\t */\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\ttype: GPULayerType,\n\t\t\tnumComponents: GPULayerNumComponents,\n\t\t\tdimensions: number | [number, number],\n\t\t\tarray?: GPULayerArray | number[],\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\twritable?: boolean,\n\t\t\tnumBuffers?: number,\n\t\t\tclearValue?: number | number[],\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPULayer \"${name}\": must pass GPUComposer instance to GPULayer(composer, params).`);\n\t\t}\n\t\tif (!params) {\n\t\t\tthrow new Error('Error initing GPULayer: must pass params to GPULayer(composer, params).');\n\t\t}\n\t\tif (!isObject(params)) {\n\t\t\tthrow new Error(`Error initing GPULayer: must pass valid params object to GPULayer(composer, params), got ${JSON.stringify(params)}.`);\n\t\t}\n\t\t// Check params keys.\n\t\tconst validKeys = ['name', 'type', 'numComponents', 'dimensions', 'filter', 'wrapS', 'wrapT', 'writable', 'numBuffers', 'clearValue', 'array'];\n\t\tconst requiredKeys = ['name', 'type', 'numComponents', 'dimensions'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPULayer(composer, params) with name \"${params.name}\".  Valid keys are ${JSON.stringify(validKeys)}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPULayer(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { dimensions, type, numComponents } = params;\n\t\tconst { gl } = composer;\n\n\t\t// Save params.\n\t\tthis._composer = composer;\n\t\tthis.name = name;\n\n\t\t// numComponents must be between 1 and 4.\n\t\tif (!isPositiveInteger(numComponents) || numComponents > 4) {\n\t\t\tthrow new Error(`Invalid numComponents: ${JSON.stringify(numComponents)} for GPULayer \"${name}\", must be number in range [1-4].`);\n\t\t}\n\t\tthis.numComponents = numComponents;\n\n\t\t// Writable defaults to false.\n\t\tconst writable = !!params.writable;\n\t\tthis.writable = writable;\n\n\t\t// Set dimensions, may be 1D or 2D.\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, composer.verboseLogging);\n\t\t// We already type checked length, width, and height in calcGPULayerSize.\n\t\tthis._length = length;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\t// Set filtering - if we are processing a 1D array, default to NEAREST filtering.\n\t\t// Else default to LINEAR (interpolation) filtering for float types and NEAREST for integer types.\n\t\tconst defaultFilter = length ? NEAREST : ((type === FLOAT || type == HALF_FLOAT) ? LINEAR : NEAREST);\n\t\tconst filter = params.filter !== undefined ? params.filter : defaultFilter;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${JSON.stringify(filter)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validFilters)}.`);\n\t\t}\n\t\t// Don't allow LINEAR filtering on integer types, it is not supported.\n\t\tif (filter === LINEAR && !(type === FLOAT || type == HALF_FLOAT)) {\n\t\t\tthrow new Error(`LINEAR filtering is not supported on integer types, please use NEAREST filtering for GPULayer \"${name}\" with type: ${type}.`);\n\t\t}\n\t\tthis.filter = filter;\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${JSON.stringify(wrapS)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validWraps)}.`);\n\t\t}\n\t\tthis.wrapS = wrapS;\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${JSON.stringify(wrapT)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validWraps)}.`);\n\t\t}\n\t\tthis.wrapT = wrapT;\n\n\t\t// Set data type.\n\t\tif (!isValidDataType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${JSON.stringify(type)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validDataTypes)}.`);\n\t\t}\n\t\tthis.type = type;\n\t\tconst internalType = getGPULayerInternalType({\n\t\t\tcomposer,\n\t\t\ttype,\n\t\t\twritable,\n\t\t\tname,\n\t\t});\n\t\tthis._internalType = internalType;\n\t\t// Set gl texture parameters.\n\t\tconst {\n\t\t\tglFormat,\n\t\t\tglInternalFormat,\n\t\t\tglType,\n\t\t\tglNumChannels,\n\t\t} = getGLTextureParameters({\n\t\t\tcomposer,\n\t\t\tname,\n\t\t\tnumComponents,\n\t\t\twritable,\n\t\t\tinternalType,\n\t\t});\n\t\tthis._glInternalFormat = glInternalFormat;\n\t\tthis._glFormat = glFormat;\n\t\tthis._glType = glType;\n\t\tthis._glNumChannels = glNumChannels;\n\n\t\t// Set internal filtering/wrap types.\n\t\t// Make sure that we set filter BEFORE setting wrap.\n\t\tconst internalFilter = getGPULayerInternalFilter({ composer, filter, wrapS, wrapT, internalType, name });\n\t\tthis._internalFilter = internalFilter;\n\t\tthis._glFilter = gl[internalFilter];\n\t\tthis._internalWrapS = getGPULayerInternalWrap({ composer, wrap: wrapS, internalFilter, internalType, name });\n\t\tthis._glWrapS = gl[this._internalWrapS];\n\t\tthis._internalWrapT = getGPULayerInternalWrap({ composer, wrap: wrapT, internalFilter, internalType, name });\n\t\tthis._glWrapT = gl[this._internalWrapT];\n\t\t\n\n\t\t// Num buffers is the number of states to store for this data.\n\t\tconst numBuffers = params.numBuffers !== undefined ? params.numBuffers : 1;\n\t\tif (!isPositiveInteger(numBuffers)) {\n\t\t\tthrow new Error(`Invalid numBuffers: ${JSON.stringify(numBuffers)} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tthis.numBuffers = numBuffers;\n\n\t\t// Wait until after type has been set to set clearValue.\n\t\tif (params.clearValue !== undefined) {\n\t\t\tthis.clearValue = params.clearValue; // Setter can only be called after this.numComponents has been set.\n\t\t}\n\n\t\tthis._initBuffers(params.array);\n\t}\n\n\t/**\n\t * The width of the GPULayer array.\n\t */\n\t get width() {\n\t\treturn this._width;\n\t}\n\n\t/**\n\t * The height of the GPULayer array.\n\t */\n\tget height() {\n\t\treturn this._height;\n\t}\n\n\t/**\n\t * The length of the GPULayer array (only available to 1D GPULayers).\n\t */\n\tget length() {\n\t\tif (!this._length) {\n\t\t\tthrow new Error(`Cannot access length on 2D GPULayer \"${this.name}\".`);\n\t\t}\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * Returns whether the GPULayer was inited as a 1D array (rather than 2D).\n\t * @returns - true if GPULayer is 1D, else false.\n\t */\n\tis1D() {\n\t\treturn this._length !== undefined;\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t_usingTextureOverrideForCurrentBuffer() {\n\t\treturn this._textureOverrides && this._textureOverrides[this.bufferIndex];\n\t}\n\n\t// saveCurrentStateToGPULayer(layer: GPULayer) {\n\t// \t// A method for saving a copy of the current state without a draw call.\n\t// \t// Draw calls are expensive, this optimization helps.\n\t// \tif (this.numBuffers < 2) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" with less than 2 buffers.`);\n\t// \t}\n\t// \tif (!this.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on read-only GPULayer \"${this.name}\".`);\n\t// \t}\n\t// \tif (layer.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" using writable GPULayer \"${layer.name}\".`)\n\t// \t}\n\t// \t// Check that texture params are the same.\n\t// \tif (layer.glWrapS !== this.glWrapS || layer.glWrapT !== this.glWrapT ||\n\t// \t\tlayer.wrapS !== this.wrapS || layer.wrapT !== this.wrapT ||\n\t// \t\tlayer.width !== this.width || layer.height !== this.height ||\n\t// \t\tlayer.glFilter !== this.glFilter || layer.filter !== this.filter ||\n\t// \t\tlayer.glNumChannels !== this.glNumChannels || layer.numComponents !== this.numComponents ||\n\t// \t\tlayer.glType !== this.glType || layer.type !== this.type ||\n\t// \t\tlayer.glFormat !== this.glFormat || layer.glInternalFormat !== this.glInternalFormat) {\n\t// \t\t\tthrow new Error(`Incompatible texture params between GPULayers \"${layer.name}\" and \"${this.name}\".`);\n\t// \t}\n\n\t// \t// If we have not already inited overrides array, do so now.\n\t// \tif (!this.textureOverrides) {\n\t// \t\tthis.textureOverrides = [];\n\t// \t\tfor (let i = 0; i < this.numBuffers; i++) {\n\t// \t\t\tthis.textureOverrides.push(undefined);\n\t// \t\t}\n\t// \t}\n\n\t// \t// Check if we already have an override in place.\n\t// \tif (this.textureOverrides[this.bufferIndex]) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\", this GPULayer has not written new state since last call to GPULayer.saveCurrentStateToGPULayer.`);\n\t// \t}\n\t// \tconst { currentState } = this;\n\t// \tthis.textureOverrides[this.bufferIndex] = currentState;\n\t// \t// Swap textures.\n\t// \tthis.buffers[this.bufferIndex].texture = layer.currentState;\n\t// \tlayer._setCurrentStateTexture(currentState);\n\n\t// \t// Bind swapped texture to framebuffer.\n\t// \tconst { gl } = this.composer;\n\t// \tconst { framebuffer, texture } = this.buffers[this.bufferIndex];\n\t// \tif (!framebuffer) throw new Error(`No framebuffer for writable GPULayer \"${this.name}\".`);\n\t// \tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// \t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t// \tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t// \t// Unbind.\n\t// \tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t// }\n\n\t// // This is used internally.\n\t// _setCurrentStateTexture(texture: WebGLTexture) {\n\t// \tif (this.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer._setCurrentStateTexture on writable texture \"${this.name}\".`);\n\t// \t}\n\t// \tthis.buffers[this.bufferIndex].texture = texture;\n\t// }\n\n\t/**\t\n\t * Init GLTexture/GLFramebuffer pairs for reading/writing GPULayer data.\n\t * @private\n\t */\n\tprivate _initBuffers(\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst {\n\t\t\tname,\n\t\t\tnumBuffers,\n\t\t\t_composer,\n\t\t\t_glInternalFormat,\n\t\t\t_glFormat,\n\t\t\t_glType,\n\t\t\t_glFilter,\n\t\t\t_glWrapS,\n\t\t\t_glWrapT,\n\t\t\twritable,\n\t\t\twidth,\n\t\t\theight,\n\t\t} = this;\n\t\tconst { gl, _errorCallback } = _composer;\n\n\t\tconst validatedArray = array ? validateGPULayerArray(array, this) : undefined;\n\n\t\t// Init a texture for each buffer.\n\t\tfor (let i = 0; i < numBuffers; i++) {\n\t\t\tconst texture = gl.createTexture();\n\t\t\tif (!texture) {\n\t\t\t\t_errorCallback(`Could not init texture for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\t\t// TODO: are there other params to look into:\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, _glWrapS);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, _glWrapT);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, _glFilter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, _glFilter);\n\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, validatedArray ? validatedArray : null);\n\t\t\t\n\t\t\tconst buffer: GPULayerBuffer = {\n\t\t\t\ttexture,\n\t\t\t};\n\n\t\t\tif (writable) {\n\t\t\t\t// Init a framebuffer for this texture so we can write to it.\n\t\t\t\tconst framebuffer = gl.createFramebuffer();\n\t\t\t\tif (!framebuffer) {\n\t\t\t\t\t_errorCallback(`Could not init framebuffer for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\t\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\t\tif(status !== gl.FRAMEBUFFER_COMPLETE){\n\t\t\t\t\t_errorCallback(`Invalid status for framebuffer for GPULayer \"${name}\": ${status}.`);\n\t\t\t\t}\n\n\t\t\t\t// Add framebuffer.\n\t\t\t\tbuffer.framebuffer = framebuffer;\n\t\t\t}\n\t\t\t\n\t\t\t// Save this buffer to the list.\n\t\t\tthis._buffers.push(buffer);\n\t\t}\n\t\t// Unbind.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\t\n\t/**\n\t * Get buffer index of the current state.\n\t */\n\tget bufferIndex() {\n\t\treturn this._bufferIndex;\n\t}\n\n\t/**\n\t * Increment buffer index by 1.\n\t */\n\tincrementBufferIndex() {\n\t\t// Increment bufferIndex.\n\t\tthis._bufferIndex = (this.bufferIndex + 1) % this.numBuffers;\n\t}\n\n\t/**\n\t * Get the current state as a GPULayerState object.\n\t */\n\tget currentState() {\n\t\treturn this.getStateAtIndex(this.bufferIndex);\n\t}\n\n\t/**\n\t * Get the previous state as a GPULayerState object (only available for GPULayers with numBuffers > 1).\n\t */\n\tget lastState() {\n\t\tif (this.numBuffers === 1) {\n\t\t\tthrow new Error(`Cannot access lastState on GPULayer \"${this.name}\" with only one buffer.`);\n\t\t}\n\t\treturn this.getStateAtIndex((this.bufferIndex - 1 + this.numBuffers) % this.numBuffers);\n\t}\n\n\t/**\n\t * Get the state at a specified index as a GPULayerState object.\n\t */\n\tgetStateAtIndex(index: number): GPULayerState {\n\t\tconst { numBuffers, _textureOverrides, _buffers } = this;\n\t\tif (index < 0 && index > -numBuffers) {\n\t\t\tindex += numBuffers; // Slightly negative numbers are ok.\n\t\t}\n\t\tif (index < 0 || index >= numBuffers) {\n\t\t\t// We will allow this number to overflow with warning - likely user error.\n\t\t\tconsole.warn(`Out of range buffer index: ${index} for GPULayer \"${this.name}\" with $.numBuffers} buffer${numBuffers > 1 ? 's' : ''}.  Was this intentional?`);\n\t\t\tif (index < 0) {\n\t\t\t\tindex += numBuffers * Math.ceil(Math.abs(index) / numBuffers);\n\t\t\t} else {\n\t\t\t\tindex = index % numBuffers;\n\t\t\t}\n\t\t}\n\t\t// if (_textureOverrides && _textureOverrides[index]) return _textureOverrides[index]!;\n\t\treturn {\n\t\t\ttexture: _buffers[index].texture,\n\t\t\tlayer: this,\n\t\t};\n\t}\n\n\t/**\n\t * Binds this GPULayer's current framebuffer as the draw target.\n\t */\n\tprivate _bindFramebuffer() {\n\t\tconst { gl } = this._composer;\n\t\tconst { framebuffer } = this._buffers[this.bufferIndex];\n\t\tif (!framebuffer) {\n\t\t\tthrow new Error(`GPULayer \"${this.name}\" is not writable.`);\n\t\t}\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t}\n\n\t/**\n\t * Increments the buffer index (if needed) and binds next framebuffer as draw target.\n\t * @private\n\t */\n\t_prepareForWrite(\n\t\tincrementBufferIndex: boolean,\n\t) {\n\t\tif (incrementBufferIndex) {\n\t\t\tthis.incrementBufferIndex();\n\t\t}\n\t\tthis._bindFramebuffer();\n\n\t\t// We are going to do a data write, if we have overrides enabled, we can remove them.\n\t\tif (this._textureOverrides) {\n\t\t\tthis._textureOverrides[this.bufferIndex] = undefined;\n\t\t}\n\t}\n\n\tsetFromArray(array: GPULayerArray | number[], applyToAllBuffers = false) {\n\t\tconst { _composer, _glInternalFormat, _glFormat, _glType, numBuffers, width, height, bufferIndex } = this;\n\t\tconst { gl } = _composer;\n\t\tconst validatedArray = validateGPULayerArray(array, this);\n\t\t// TODO: check that this is working.\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tconst { texture } = this.getStateAtIndex(i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, validatedArray);\n\t\t}\n\t\t// Unbind texture.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tresize(\n\t\tdimensions: number | [number, number],\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst { name, _composer } = this;\n\t\tconst { verboseLogging } = _composer;\n\t\tif (verboseLogging) console.log(`Resizing GPULayer \"${name}\" to ${JSON.stringify(dimensions)}.`);\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, verboseLogging);\n\t\tthis._length = length;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._destroyBuffers();\n\t\tthis._initBuffers(array);\n\t}\n\n\t/**\n\t * Set the clearValue of the GPULayer, which is applied during GPULayer.clear().\n\t */\n\tset clearValue(clearValue: number | number[]) {\n\t\tconst { numComponents, type } = this;\n\t\tif (!isValidClearValue(clearValue, numComponents, type)) {\n\t\t\tthrow new Error(`Invalid clearValue: ${JSON.stringify(clearValue)} for GPULayer \"${this.name}\", expected ${type} or array of ${type} of length ${numComponents}.`);\n\t\t}\n\t\t// Make deep copy if needed.\n\t\tthis._clearValue = isArray(clearValue) ? (clearValue as number[]).slice() : clearValue;\n\t}\n\n\t/**\n\t * Get the clearValue of the GPULayer.\n\t */\n\tget clearValue() {\n\t\treturn this._clearValue;\n\t}\n\n\t/**\n\t * Clear all data in GPULayer to GPULayer.clearValue.\n\t * @param applyToAllBuffers - Flag to apply to all buffers of GPULayer, or just the current output buffer.\n\t */\n\tclear(applyToAllBuffers = false) {\n\t\tconst { name, _composer, clearValue, numBuffers, bufferIndex, type } = this;\n\t\tconst { verboseLogging } = _composer;\n\t\tif (verboseLogging) console.log(`Clearing GPULayer \"${name}\".`);\n\n\t\tconst value: number[] = [];\n\t\tif (isNumber(clearValue)) {\n\t\t\tvalue.push(clearValue as number, clearValue as number, clearValue as number, clearValue as number);\n\t\t} else {\n\t\t\tvalue.push(...clearValue as number[]);\n\t\t\tfor (let j = value.length; j < 4; j++) {\n\t\t\t\tvalue.push(0);\n\t\t\t}\n\t\t}\n\t\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tif (this.writable) {\n\t\t\tconst program = _composer._setValueProgramForType(type);\n\t\t\tprogram.setUniform('u_value', value as [number, number, number, number]);\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t// Write clear value to buffers.\n\t\t\t\t_composer.step({\n\t\t\t\t\tprogram,\n\t\t\t\t\toutput: this,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// Init a typed array containing clearValue and pass to buffers.\n\t\t\tconst {\n\t\t\t\twidth, height, _glNumChannels, _internalType,\n\t\t\t\t_glInternalFormat, _glFormat, _glType,\n\t\t\t} = this;\n\t\t\tconst { gl } = _composer;\n\t\t\tconst fillLength = this._length ? this._length : width * height;\n\t\t\tconst array = initArrayForType(_internalType, width * height * _glNumChannels);\n\t\t\tconst float16View = _internalType === HALF_FLOAT ? new DataView(array.buffer) : null;\n\t\t\tfor (let j = 0; j < fillLength; j++) {\n\t\t\t\tfor (let k = 0; k < _glNumChannels; k++) {\n\t\t\t\t\tconst index = j * _glNumChannels + k;\n\t\t\t\t\tif (_internalType === HALF_FLOAT) {\n\t\t\t\t\t\t// Float16 needs to be handled separately.\n\t\t\t\t\t\tsetFloat16(float16View!, 2 * index, value[k], true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray[index] = value[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst { texture } = this.getStateAtIndex(i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, array);\n\t\t\t}\n\t\t\t// Unbind texture.\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t}\n\t}\n\n\t// TODO: this does not work on non-writable GPULayers, change this?\n\t/**\n\t * Returns the current values of the GPULayer as a TypedArray.\n\t * @returns - A TypedArray containing current state of GPULayer.\n\t */\n\tgetValues() {\n\t\tconst { width, height, _composer, numComponents, type } = this;\n\t\tconst { gl } = _composer;\n\n\t\t// In case GPULayer was not the last output written to.\n\t\tthis._bindFramebuffer();\n\n\t\tlet { _glNumChannels, _glType, _glFormat, _internalType } = this;\n\t\tlet values;\n\t\tswitch (_internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tif (gl.FLOAT !== undefined) {\n\t\t\t\t\t// Firefox requires that RGBA/FLOAT is used for readPixels of float16 types.\n\t\t\t\t\t_glNumChannels = 4;\n\t\t\t\t\t_glFormat = gl.RGBA;\n\t\t\t\t\t_glType = gl.FLOAT;\n\t\t\t\t\tvalues = new Float32Array(width * height * _glNumChannels);\n\t\t\t\t} else {\n\t\t\t\t\tvalues = new Uint16Array(width * height * _glNumChannels);\n\t\t\t\t}\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak\n\t\t\tcase FLOAT:\n\t\t\t\t// Chrome and Firefox require that RGBA/FLOAT is used for readPixels of float32 types.\n\t\t\t\t// https://github.com/KhronosGroup/WebGL/issues/2747\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = gl.RGBA;\n\t\t\t\tvalues = new Float32Array(width * height * _glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\t// We never hit glslVersion === GLSL1 anymore, see GPULayerHelpers.shouldCastIntTypeAsFloat for more info.\n\t\t\t\t// if (glslVersion === GLSL1) {\n\t\t\t\t// \t// Firefox requires that RGBA/UNSIGNED_BYTE is used for readPixels of unsigned byte types.\n\t\t\t\t// \t_glNumChannels = 4;\n\t\t\t\t// \t_glFormat = gl.RGBA;\n\t\t\t\t// \tvalues = new Uint8Array(width * height * _glNumChannels);\n\t\t\t\t// \tbreak;\n\t\t\t\t// }\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported internalType ${_internalType} for getValues().`);\n\t\t}\n\n\t\tif (readyToRead(gl)) {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\n\t\t\tgl.readPixels(0, 0, width, height, _glFormat, _glType, values);\n\t\t\tconst OUTPUT_LENGTH = (this._length ? this._length : width * height) * numComponents;\n\n\t\t\t// Convert uint16 to float32 if needed.\n\t\t\tconst handleFloat16Conversion = _internalType === HALF_FLOAT && values.constructor === Uint16Array;\n\t\t\t// @ts-ignore\n\t\t\tconst view = handleFloat16Conversion ? new DataView((values as Uint16Array).buffer) : undefined;\n\n\t\t\t// We may use a different internal type than the assigned type of the GPULayer.\n\t\t\tlet output: GPULayerArray = _internalType === type ? values : initArrayForType(type, OUTPUT_LENGTH, true);\n\n\t\t\t// In some cases glNumChannels may be > numComponents.\n\t\t\tif (view || output !== values || numComponents !== _glNumChannels) {\n\t\t\t\tfor (let i = 0, length = width * height; i < length; i++) {\n\t\t\t\t\tconst index1 = i * _glNumChannels;\n\t\t\t\t\tconst index2 = i * numComponents;\n\t\t\t\t\tif (index2 >= OUTPUT_LENGTH) break;\n\t\t\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\t\t\tif (view) {\n\t\t\t\t\t\t\toutput[index2 + j] = getFloat16(view, 2 * (index1 + j), true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toutput[index2 + j] = values[index1 + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (output.length !== OUTPUT_LENGTH) {\n\t\t\t\toutput = output.slice(0, OUTPUT_LENGTH);\n\t\t\t}\n\t\t\treturn output;\n\t\t} else {\n\t\t\tthrow new Error(`Unable to read values from Buffer with status: ${gl.checkFramebufferStatus(gl.FRAMEBUFFER)}.`);\n\t\t}\n\t}\n\n\t// TODO: this does not work on non-writable GPULayers, change this?\n\t/**\n\t * Save the current state of this GPULayer to png.\n\t * @param params - PNG parameters.\n\t * @param params.filename - PNG filename (no extension, defaults to the name of the GPULayer).\n\t * @param params.dpi - PNG dpi (defaults to 72dpi).\n\t * @param params.multiplier - Multiplier to apply to data before saving PNG (defaults to 255 for FLOAT and HALF_FLOAT types, else 1).\n\t * @param params.callback - Optional callback when Blob is ready, default behavior saves the PNG using FileSaver.js. \n\t*/\n\tsavePNG(params: {\n\t\tfilename?: string,\n\t\tdpi?: number,\n\t\tmultiplier?: number,\n\t\tcallback?: (blob: Blob, filename: string) => void,\n\t} = {}) {\n\t\tconst values = this.getValues();\n\t\tconst { width, height, type, name, numComponents } = this;\n\t\tconst callback = params.callback || saveAs; // Default to saving the image with FileSaver.\n\t\tconst filename = params.filename || name; // Default to the name of this layer.\n\t\tconst multiplier = params.multiplier ||\n\t\t\t((type === FLOAT || type === HALF_FLOAT) ? 255 : 1);\n\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n    \tcanvas.height = height;\n\t\tconst context = canvas.getContext('2d')!;\n\t\tconst imageData = context.getImageData(0, 0, width, height);\n\t\tconst buffer = imageData.data;\n\t\t// Have to flip the y axis since PNGs are written top to bottom.\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tconst index = y * width + x;\n\t\t\t\tconst indexFlipped = (height - 1 - y) * width + x;\n\t\t\t\tfor (let i = 0; i < numComponents; i++) {\n\t\t\t\t\tbuffer[4 * indexFlipped + i] = values[numComponents * index + i] * multiplier;\n\t\t\t\t}\n\t\t\t\tif (numComponents === 1) {\n\t\t\t\t\t// Make monochrome.\n\t\t\t\t\tbuffer[4 * indexFlipped + 1] = buffer[4 * indexFlipped];\n\t\t\t\t\tbuffer[4 * indexFlipped + 2] = buffer[4 * indexFlipped];\n\t\t\t\t}\n\t\t\t\tif (numComponents < 4) {\n\t\t\t\t\tbuffer[4 * indexFlipped + 3] = 255; // Set alpha channel to 255.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcontext.putImageData(imageData, 0, 0);\n\n\t\tcanvas.toBlob((blob) => {\n\t\t\tif (!blob) {\n\t\t\t\tconsole.warn(`Problem saving PNG from GPULayer \"${name}\", unable to init blob.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (params.dpi) {\n\t\t\t\tchangeDpiBlob(blob, params.dpi).then((blob: Blob) =>{\n\t\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t}\n\t\t}, 'image/png');\n\t}\n\n\t/**\n\t * Attach the output buffer of this GPULayer to a Threejs Texture object.\n\t * @param {Texture} texture - Threejs texture object.\n\t */\n\tattachToThreeTexture(texture: Texture) {\n\t\tconst { _composer, numBuffers, currentState, name } = this;\n\t\tconst { _renderer } = _composer;\n\t\tif (!_renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer.');\n\t\t}\n\t\t// Link webgl texture to threejs object.\n\t\t// This is not officially supported.\n\t\tif (numBuffers > 1) {\n\t\t\tthrow new Error(`GPULayer \"${name}\" contains multiple WebGL textures (one for each buffer) that are flip-flopped during compute cycles, please choose a GPULayer with one buffer.`);\n\t\t}\n\t\tconst offsetTextureProperties = _renderer.properties.get(texture);\n\t\toffsetTextureProperties.__webglTexture = currentState;\n\t\toffsetTextureProperties.__webglInit = true;\n\t}\n\n\t/**\n\t * Delete this GPULayer's framebuffers and textures.\n\t * @private\n\t */\n\tprivate _destroyBuffers() {\n\t\tconst { _composer, _buffers } = this;\n\t\tconst { gl } = _composer;\n\t\t_buffers.forEach(buffer => {\n\t\t\tconst { framebuffer, texture } = buffer;\n\t\t\tgl.deleteTexture(texture);\n\t\t\tif (framebuffer) {\n\t\t\t\tgl.deleteFramebuffer(framebuffer);\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tdelete buffer.texture;\n\t\t\tdelete buffer.framebuffer;\n\t\t});\n\t\t_buffers.length = 0;\n\n\t\t// These are technically owned by another GPULayer,\n\t\t// so we are not responsible for deleting them from gl context.\n\t\tdelete this._textureOverrides;\n\t}\n\n\t/**\n\t * Create a deep copy of GPULayer with current state copied over.\n\t * @param name - Name of new GPULayer as string.\n\t * @returns - Deep copy of GPULayer.\n\t */\n\tclone(name?: string) {\n\t\t// Make a deep copy.\n\t\treturn this._composer._cloneGPULayer(this, name);\n\t}\n\n\t/**\n\t * Deallocate GPULayer instance and associated WebGL properties.\n\t */\n\tdispose() {\n\t\tconst { name, _composer } = this;\n\t\tconst { gl, verboseLogging } = _composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPULayer \"${name}\".`);\n\n\t\tif (!gl) throw new Error(`Must call dispose() on all GPULayers before calling dispose() on GPUComposer.`);\n\t\n\t\tthis._destroyBuffers();\n\t\t// @ts-ignore\n\t\tdelete this._buffers;\n\t\t// @ts-ignore\n\t\tdelete this._composer;\n\t}\n}","import { setFloat16 } from '@petamoriken/float16';\nimport {\n\tisNumber,\n\tisPositiveInteger,\n} from './checks';\nimport {\n\tBYTE,\n\tCLAMP_TO_EDGE,\n\tFLOAT,\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tHALF_FLOAT,\n\tINT,\n\tNEAREST,\n\tSHORT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_INT,\n\tUNSIGNED_SHORT,\n\tGLSL3,\n\tGPULayerNumComponents,\n\tGLSL1,\n\tGPULayerArray,\n\tvalidArrayTypes,\n\tMIN_UNSIGNED_BYTE,\n\tMAX_UNSIGNED_BYTE,\n\tMIN_BYTE,\n\tMAX_BYTE,\n\tMIN_UNSIGNED_SHORT,\n\tMAX_UNSIGNED_SHORT,\n\tMIN_SHORT,\n\tMAX_SHORT,\n\tMIN_UNSIGNED_INT,\n\tMAX_UNSIGNED_INT,\n\tMIN_INT,\n\tMAX_INT,\n\tLINEAR,\n\tDEFAULT_PROGRAM_NAME,\n} from './constants';\nimport {\n\tEXT_COLOR_BUFFER_FLOAT,\n\tEXT_COLOR_BUFFER_HALF_FLOAT,\n\tgetExtension,\n\tOES_TEXTURE_FLOAT,\n\tOES_TEXTURE_FLOAT_LINEAR,\n\tOES_TEXTURE_HALF_FLOAT,\n\tOES_TEXTURE_HAlF_FLOAT_LINEAR,\n} from './extensions';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport {\n\tcompileShader,\n\tconvertFragmentShaderToGLSL1,\n\tinitGLProgram,\n\tisIntType,\n\tisUnsignedIntType,\n\tisWebGL2,\n} from './utils';\n\n// Memoize results.\nconst results = {\n\twriteSupport: {} as { [key: string]: boolean },\n\tfilterWrapSupport: {} as { [key: string]: boolean },\n}\n\n/**\n * Init empty typed array for type, optionally use Float32Array for HALF_FLOAT.\n * @private\n */\nexport function initArrayForType(\n\ttype: GPULayerType,\n\tlength: number,\n\thalfFloatsAsFloats = false,\n) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\t\tif (halfFloatsAsFloats) return new Float32Array(length);\n\t\t\treturn new Uint16Array(length);\n\t\tcase FLOAT:\n\t\t\treturn new Float32Array(length);\n\t\tcase UNSIGNED_BYTE:\n\t\t\treturn new Uint8Array(length);\n\t\tcase BYTE:\n\t\t\treturn new Int8Array(length);\n\t\tcase UNSIGNED_SHORT:\n\t\t\treturn new Uint16Array(length);\n\t\tcase SHORT:\n\t\t\treturn new Int16Array(length);\n\t\tcase UNSIGNED_INT:\n\t\t\treturn new Uint32Array(length);\n\t\tcase INT:\n\t\t\treturn new Int32Array(length);\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported type: \"${type}\".`);\n\t}\n}\n\n/**\n * Calc 2D size [width, height] for GPU layer given a 1D or 2D size parameter.\n * If 1D size supplied, nearest power of 2 width/height is generated.\n * Also checks that size elements are valid.\n * @private\n */\n// TODO: should we relax adherence to power of 2?\nexport function calcGPULayerSize(\n\tsize: number | [number, number],\n\tname: string,\n\tverboseLogging: boolean,\n) {\n\tif (isNumber(size as number)) {\n\t\tif (!isPositiveInteger(size)) {\n\t\t\tthrow new Error(`Invalid length: ${JSON.stringify(size)} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tconst length = size as number;\n\t\t// Calc power of two width and height for length.\n\t\tlet exp = 1;\n\t\tlet remainder = length;\n\t\twhile (remainder > 2) {\n\t\t\texp++;\n\t\t\tremainder /= 2;\n\t\t}\n\t\tconst width = Math.pow(2, Math.floor(exp / 2) + exp % 2);\n\t\tconst height = Math.pow(2, Math.floor(exp/2));\n\t\tif (verboseLogging) console.log(`Using [${width}, ${height}] for 1D array of length ${size} in GPULayer \"${name}\".`);\n\t\treturn { width, height, length };\n\t}\n\tconst width = (size as [number, number])[0];\n\tif (!isPositiveInteger(width)) {\n\t\tthrow new Error(`Invalid width: ${JSON.stringify(width)} for GPULayer \"${name}\", must be positive integer.`);\n\t}\n\tconst height = (size as [number, number])[1];\n\tif (!isPositiveInteger(height)) {\n\t\tthrow new Error(`Invalid height: ${JSON.stringify(height)} for GPULayer \"${name}\", must be positive integer.`);\n\t}\n\treturn { width, height };\n}\n\n/**\n * Get the GL wrap type to use internally in GPULayer, based on browser support.\n * @private\n */\nexport function getGPULayerInternalWrap(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\twrap: GPULayerWrap,\n\t\tinternalFilter: GPULayerFilter,\n\t\tinternalType: GPULayerType,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, wrap, internalFilter, internalType } = params;\n\n\t// CLAMP_TO_EDGE is always supported.\n\tif (wrap === CLAMP_TO_EDGE) {\n\t\treturn wrap;\n\t}\n\n\t// Test if wrap/filter combo is actually supported by running some numbers through.\n\tif (testFilterWrap(composer, internalType, internalFilter, wrap)) {\n\t\treturn wrap;\n\t}\n\t// If not, convert to CLAMP_TO_EDGE and polyfill in fragment shader.\n\treturn CLAMP_TO_EDGE;\n\t// REPEAT and MIRROR_REPEAT wrap not supported for non-power of 2 textures in safari.\n\t// I've tested this and it seems that some power of 2 textures will work (512 x 512),\n\t// but not others (1024x1024), so let's just change all WebGL 1.0 to CLAMP.\n\t// Without this, we currently get an error at drawArrays():\n\t// \"WebGL: drawArrays: texture bound to texture unit 0 is not renderable.\n\t// It maybe non-power-of-2 and have incompatible texture filtering or is not\n\t// 'texture complete', or it is a float/half-float type with linear filtering and\n\t// without the relevant float/half-float linear extension enabled.\"\n}\n\n/**\n * Get the GL filter type to use internally in GPULayer, based on browser support.\n * @private\n */\nexport function getGPULayerInternalFilter(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tfilter: GPULayerFilter,\n\t\twrapS: GPULayerWrap,\n\t\twrapT: GPULayerWrap,\n\t\tinternalType: GPULayerType,\n\t\tname: string,\n\t},\n) {\n\tlet { filter } = params;\n\tif (filter === NEAREST) {\n\t\t// NEAREST filtering is always supported.\n\t\treturn filter;\n\t}\n\n\tconst { composer, internalType, wrapS, wrapT, name } = params;\n\n\tif (internalType === HALF_FLOAT) {\n\t\tconst extension = getExtension(composer, OES_TEXTURE_HAlF_FLOAT_LINEAR, true)\n\t\t\t|| getExtension(composer, OES_TEXTURE_FLOAT_LINEAR, true);\n\t\tif (!extension || !testFilterWrap(composer, internalType, filter, wrapS) || !testFilterWrap(composer, internalType, filter, wrapT)) {\n\t\t\tconsole.warn(`This browser does not support ${filter} filtering for type ${internalType} and wrap [${wrapS}, ${wrapT}].  Falling back to NEAREST filter for GPULayer \"${name}\" with ${filter} polyfill in fragment shader.`);\n\t\t\tfilter = NEAREST; // Polyfill in fragment shader.\n\t\t}\n\t} if (internalType === FLOAT) {\n\t\tconst extension = getExtension(composer, OES_TEXTURE_FLOAT_LINEAR, true);\n\t\tif (!extension || !testFilterWrap(composer, internalType, filter, wrapS) || !testFilterWrap(composer, internalType, filter, wrapT)) {\n\t\t\tconsole.warn(`This browser does not support ${filter} filtering for type ${internalType} and wrap [${wrapS}, ${wrapT}].  Falling back to NEAREST filter for GPULayer \"${name}\" with ${filter} polyfill in fragment shader.`);\n\t\t\tfilter = NEAREST; // Polyfill in fragment shader.\n\t\t}\n\t}\n\treturn filter;\n}\n\n/**\n * Returns whether to cast int type as floats, as needed by browser.\n * @private\n */\nexport function shouldCastIntTypeAsFloat(\n\tcomposer: GPUComposer,\n\ttype: GPULayerType,\n) {\n\tconst { gl, glslVersion } = composer;\n\t// All types are supported by WebGL2 + glsl3.\n\tif (glslVersion === GLSL3 && isWebGL2(gl)) return false;\n\t// Int textures (other than UNSIGNED_BYTE) are not supported by WebGL1.0 or glsl1.x.\n\t// https://stackoverflow.com/questions/55803017/how-to-select-webgl-glsl-sampler-type-from-texture-format-properties\n\t// Use HALF_FLOAT/FLOAT instead.\n\t// Some large values of INT and UNSIGNED_INT are not supported unfortunately.\n\t// See tests for more information.\n\t// Update: Even UNSIGNED_BYTE should be cast as float in GLSL1.  I noticed some strange behavior in test:\n\t// setUniform>'should cast/handle uint uniforms for UNSIGNED_BYTE GPULayers' in tests/mocha/GPUProgram and \n\t// getValues>'should return correct values for UNSIGNED_BYTE GPULayer' in tests/mocha/GPULayer\n\treturn type === UNSIGNED_BYTE || type === BYTE || type === SHORT || type === INT || type === UNSIGNED_SHORT || type === UNSIGNED_INT;\n}\n\n/**\n * Returns GLTexture parameters for GPULayer, based on browser support.\n * @private\n */\nexport function getGLTextureParameters(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tname: string,\n\t\tnumComponents: GPULayerNumComponents,\n\t\tinternalType: GPULayerType,\n\t\twritable: boolean,\n\t}\n) {\n\tconst { composer, name, numComponents, internalType, writable } = params;\n\tconst { gl, glslVersion } = composer;\n\t// https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\n\tlet glType: number | undefined,\n\t\tglFormat: number | undefined,\n\t\tglInternalFormat: number | undefined,\n\t\tglNumChannels: number | undefined;\n\n\tif (isWebGL2(gl)) {\n\t\tglNumChannels = numComponents;\n\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t\t// The sized internal format RGBxxx are not color-renderable for some reason.\n\t\t// If numComponents == 3 for a writable texture, use RGBA instead.\n\t\t// Page 5 of https://www.khronos.org/files/webgl20-reference-guide.pdf\n\t\tif (numComponents === 3 && writable) {\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\tif (internalType === FLOAT || internalType === HALF_FLOAT) {\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = gl.RGB;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t// The following lines of code are not hit now that we have cast UNSIGNED_BYTE types to HALF_FLOAT.\n\t\t// See comments in shouldCastIntTypeAsFloat for more information.\n\t\t// } else if (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t// \t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\t// \tif (writable) {\n\t\t// \t\t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGBA.\n\t\t// \t\tglNumChannels = 4;\n\t\t// \t}\n\t\t// \t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGB/RGBA.\n\t\t// \tswitch (glNumChannels) {\n\t\t// \t\tcase 1:\n\t\t// \t\tcase 2:\n\t\t// \t\tcase 3:\n\t\t// \t\t\tglFormat = gl.RGB;\n\t\t// \t\t\tglNumChannels = 3;\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase 4:\n\t\t// \t\t\tglFormat = gl.RGBA;\n\t\t// \t\t\tglNumChannels = 4;\n\t\t// \t\t\tbreak;\n\t\t// \t\tdefault:\n\t\t// \t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t// \t}\n\t\t} else {\n\t\t\t// This case will only be hit by GLSL 3.\n\t\t\t// Int textures are not supported in GLSL1.\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGB_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tif (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t\t\t\tglInternalFormat = glFormat;\n\t\t\t\t} else {\n\t\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\tglType = gl.BYTE;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\tglType = gl.SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\tglType = gl.UNSIGNED_SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\tglType = gl.INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: \"${internalType}\" for GPULayer \"${name}\".`);\n\t\t}\n\t} else {\n\t\t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\tglNumChannels = numComponents;\n\t\tif (writable) {\n\t\t\t// For writable textures in WebGL 1, use RGBA.\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\t// For read only textures in WebGL 1, use RGB/RGBA.\n\t\tswitch (glNumChannels) {\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\t\tglFormat = gl.RGB;\n\t\t\t\tglInternalFormat = gl.RGB;\n\t\t\t\tglNumChannels = 3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\tglInternalFormat = gl.RGBA;\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase FLOAT:\n\t\t\t\tglType = gl.FLOAT;\n\t\t\t\tbreak;\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT || getExtension(composer, OES_TEXTURE_HALF_FLOAT).HALF_FLOAT_OES as number;\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tbreak;\n\t\t\t// No other types are supported in WebGL1.\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: \"${internalType}\" in WebGL 1.0 for GPULayer \"${name}\".`);\n\t\t}\n\t}\n\n\t// Check for missing params.\n\tif (glType === undefined || glFormat === undefined || glInternalFormat === undefined) {\n\t\tconst missingParams = [];\n\t\tif (glType === undefined) missingParams.push('glType');\n\t\tif (glFormat === undefined) missingParams.push('glFormat');\n\t\tif (glInternalFormat === undefined) missingParams.push('glInternalFormat');\n\t\tthrow new Error(`Invalid type: ${internalType} for numComponents: ${numComponents}, unable to init parameter${missingParams.length > 1 ? 's' : ''} ${missingParams.join(', ')} for GPULayer \"${name}\".`);\n\t}\n\tif (glNumChannels === undefined || numComponents < 1 || numComponents > 4 || glNumChannels < numComponents) {\n\t\tthrow new Error(`Invalid numChannels: ${glNumChannels} for numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t}\n\n\treturn {\n\t\tglFormat,\n\t\tglInternalFormat,\n\t\tglType,\n\t\tglNumChannels,\n\t};\n}\n\n/**\n * Rigorous method for testing FLOAT and HALF_FLOAT write support by attaching texture to framebuffer.\n * @private\n */\nexport function testWriteSupport(\n\tcomposer: GPUComposer,\n\tinternalType: GPULayerType,\n) {\n\tconst { gl, glslVersion } = composer;\n\n\t// Memoize results for a given set of inputs.\n\tconst key = `${isWebGL2(gl)},${internalType},${glslVersion === GLSL3 ? '3' : '1'}`;\n\tif (results.writeSupport[key] !== undefined) {\n\t\treturn results.writeSupport[key];\n\t}\n\n\tconst texture = gl.createTexture();\n\tif (!texture) {\n\t\tresults.writeSupport[key] = false;\n\t\treturn results.writeSupport[key];\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t// Default to most widely supported settings.\n\tconst wrap = gl[CLAMP_TO_EDGE];\n\tconst filter = gl[NEAREST];\n\t// Use non-power of two dimensions to check for more universal support.\n\t// (In case size of GPULayer is changed at a later point).\n\tconst width = 10;\n\tconst height = 10;\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\n\tconst { glInternalFormat, glFormat, glType } = getGLTextureParameters({\n\t\tcomposer,\n\t\tname: 'testWriteSupport',\n\t\tnumComponents: 1,\n\t\twritable: true,\n\t\tinternalType,\n\t});\n\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, null);\n\n\t// Init a framebuffer for this texture so we can write to it.\n\tconst framebuffer = gl.createFramebuffer();\n\tif (!framebuffer) {\n\t\t// Clear out allocated memory.\n\t\tgl.deleteTexture(texture);\n\t\tresults.writeSupport[key] = false;\n\t\treturn results.writeSupport[key];\n\t}\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\tconst validStatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n\n\t// Clear out allocated memory.\n\tgl.deleteTexture(texture);\n\tgl.deleteFramebuffer(framebuffer);\n\n\tresults.writeSupport[key] = validStatus;\n\treturn results.writeSupport[key];\n}\n\n/**\n * Rigorous method for testing whether a filter/wrap combination is supported\n * by the current browser.  I found that some versions of WebGL2 mobile safari\n * may support the OES_texture_float_linear and EXT_color_buffer_float, but still\n * do not linearly interpolate float textures or wrap only for power-of-two textures.\n * @private\n */\nexport function testFilterWrap(\n\tcomposer: GPUComposer,\n\tinternalType: GPULayerType,\n\tfilter: GPULayerFilter,\n\twrap: GPULayerWrap,\n) {\n\tconst { gl, glslVersion, intPrecision, floatPrecision, _errorCallback } = composer;\n\n\t// Memoize results for a given set of inputs.\n\tconst key = `${isWebGL2(gl)},${internalType},${filter},${wrap},${glslVersion === GLSL3 ? '3' : '1'}`;\n\tif (results.filterWrapSupport[key] !== undefined) {\n\t\treturn results.filterWrapSupport[key];\n\t}\n\n\tconst texture = gl.createTexture();\n\tif (!texture) {\n\t\tresults.filterWrapSupport[key] = false;\n\t\treturn results.filterWrapSupport[key];\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\tconst glWrap = gl[wrap];\n\tconst glFilter = gl[filter];\n\t// Use non power of two dimensions to check for more universal support.\n\tconst width = 3;\n\tconst height = 3;\n\tconst numComponents = 1;\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, glWrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, glWrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glFilter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glFilter);\n\n\tconst { glInternalFormat, glFormat, glType, glNumChannels } = getGLTextureParameters({\n\t\tcomposer,\n\t\tname: 'testFilterWrap',\n\t\tnumComponents,\n\t\tinternalType,\n\t\twritable: true,\n\t});\n\t// Init texture with values.\n\tconst values = [3, 56.5, 834, -53.6, 0.003, 96.2, 23, 90.2, 32];\n\tlet valuesTyped = initArrayForType(internalType, values.length * glNumChannels, true);\n\tfor (let i = 0; i < values.length; i++) {\n\t\tvaluesTyped[i * glNumChannels] = values[i];\n\t\tvalues[i] = valuesTyped[i * glNumChannels]; // Cast as int/uint if needed.\n\t}\n\tif (internalType === HALF_FLOAT) {\n\t\t// Cast values as Uint16Array for HALF_FLOAT.\n\t\tconst valuesTyped16 = new Uint16Array(valuesTyped.length);\n\t\tconst float16View =  new DataView(valuesTyped16.buffer);\n\t\tfor (let i = 0; i < valuesTyped.length; i++) {\n\t\t\tsetFloat16(float16View, 2 * i, valuesTyped[i], true);\n\t\t}\n\t\tvaluesTyped = valuesTyped16;\n\t}\n\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, valuesTyped);\n\n\t// Init a GPULayer to write to.\n\t// Must use CLAMP_TO_EDGE/NEAREST on this GPULayer to avoid infinite loop.\n\tconst output = new GPULayer(composer, {\n\t\tname: 'testFloatLinearFiltering-output',\n\t\ttype: internalType,\n\t\tnumComponents,\n\t\tdimensions: [width, height],\n\t\twrapS: CLAMP_TO_EDGE,\n\t\twrapT: CLAMP_TO_EDGE,\n\t\tfilter: NEAREST,\n\t\twritable: true,\n\t});\n\n\tconst offset = filter === LINEAR ? 0.5 : 1;\n\t// Run program to perform linear filter.\n\tconst programName = 'testFilterWrap-program';\n\tlet fragmentShaderSource = `\nin vec2 v_uv;\nuniform vec2 u_offset;\n#ifdef GPUIO_INT\n\tuniform isampler2D u_input;\n\tout int out_fragColor;\n#endif\n#ifdef GPUIO_UINT\n\tuniform usampler2D u_input;\n\tout uint out_fragColor;\n#endif\n#ifdef GPUIO_FLOAT\n\tuniform sampler2D u_input;\n\tout float out_fragColor;\n#endif\nvoid main() {\n\tout_fragColor = texture(u_input, v_uv + offset).x;\n}`;\n\tif (glslVersion !== GLSL3) {\n\t\tfragmentShaderSource = convertFragmentShaderToGLSL1(fragmentShaderSource, programName);\n\t}\n\tconst fragmentShader = compileShader(\n\t\tgl,\n\t\tglslVersion,\n\t\tintPrecision,\n\t\tfloatPrecision,\n\t\tfragmentShaderSource,\n\t\tgl.FRAGMENT_SHADER,\n\t\tprogramName,\n\t\t_errorCallback,\n\t\t{\n\t\t\toffset: `vec2(${offset / width}, ${offset / height})`,\n\t\t\t[isUnsignedIntType(internalType) ? 'GPUIO_UINT' : (isIntType(internalType) ? 'GPUIO_INT': 'GPUIO_FLOAT')]: '1',\n\t\t},\n\t\ttrue,\n\t);\n\n\tfunction wrapValue(val: number, max: number) {\n\t\tif (wrap === CLAMP_TO_EDGE) return Math.max(0, Math.min(max - 1, val));\n\t\treturn (val + max) % max;\n\t}\n\n\tconst vertexShader = composer._getVertexShader(DEFAULT_PROGRAM_NAME, '', {}, programName);\n\tif (vertexShader && fragmentShader) {\n\t\tconst program = initGLProgram(gl, vertexShader, fragmentShader, programName, _errorCallback);\n\t\tif (program) {\n\t\t\t// Draw setup.\n\t\t\toutput._prepareForWrite(false);\n\t\t\tgl.viewport(0, 0, width, height);\n\t\t\tgl.useProgram(program);\n\t\t\t// Bind texture.\n\t\t\tgl.activeTexture(gl.TEXTURE0 );\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t// Set uniforms.\n\t\t\tgl.uniform2fv(gl.getUniformLocation(program, 'u_gpuio_scale'), [1, 1]);\n\t\t\tgl.uniform2fv(gl.getUniformLocation(program, 'u_gpuio_translation'), [0, 0]);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, composer._getQuadPositionsBuffer());\n\t\t\tcomposer._setPositionAttribute(program, programName);\n\n\t\t\t// Draw.\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\tgl.disable(gl.BLEND);\n\n\t\t\tconst filtered = output.getValues();\n\t\t\tlet supported = true;\n\t\t\tconst tol = isIntType(internalType) ? 0 : (internalType === HALF_FLOAT ? 1e-2 : 1e-4);\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tfor (let y = 0; y < height; y++) {\n\t\t\t\t\tlet expected;\n\t\t\t\t\tif (filter === LINEAR) {\n\t\t\t\t\t\texpected = (values[y * width + x] +\n\t\t\t\t\t\t\tvalues[y * width + wrapValue(x + 1, width)] +\n\t\t\t\t\t\t\tvalues[wrapValue(y + 1, height) * width + x] +\n\t\t\t\t\t\t\tvalues[wrapValue(y + 1, height) * width + wrapValue(x + 1, width)]) / 4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst _x = wrapValue(x + offset, width);\n\t\t\t\t\t\tconst _y = wrapValue(y + offset, height);\n\t\t\t\t\t\texpected = values[_y * width + _x];\n\t\t\t\t\t}\n\t\t\t\t\tconst i = y * width + x;\n\t\t\t\t\tif (Math.abs((expected - filtered[i]) / expected) > tol) {\n\t\t\t\t\t\tsupported = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tresults.filterWrapSupport[key] = supported;\n\t\t\t// Clear out allocated memory.\n\t\t\tgl.deleteProgram(program);\n\t\t} else {\n\t\t\tresults.filterWrapSupport[key] = false;\n\t\t}\n\t\t// Clear out allocated memory.\n\t\t// vertexShader belongs to composer, don't delete it.\n\t\tgl.deleteShader(fragmentShader);\n\t} else {\n\t\tresults.filterWrapSupport[key] = false;\n\t}\n\t// Clear out allocated memory.\n\toutput.dispose();\n\tgl.deleteTexture(texture);\n\treturn results.filterWrapSupport[key];\n}\n\n/**\n * Get the GL type to use internally in GPULayer, based on browser support.\n * @private\n * Exported here for testing purposes.\n */\nexport function getGPULayerInternalType(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\ttype: GPULayerType,\n\t\twritable: boolean,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, writable, name } = params;\n\tconst { gl, _errorCallback } = composer;\n\tconst { type } = params;\n\tlet internalType = type;\n\t// Check if int types are supported.\n\tconst intCast = shouldCastIntTypeAsFloat(composer, type);\n\tif (intCast) {\n\t\tif (internalType === UNSIGNED_BYTE || internalType === BYTE) {\n\t\t\t// Integers between -2048 and +2048 can be exactly represented by half float.\n\t\t\tinternalType = HALF_FLOAT;\n\t\t} else {\n\t\t\t// Integers between 0 and 16777216 can be exactly represented by float32 (also applies for negative integers between −16777216 and 0)\n\t\t\t// This is sufficient for UNSIGNED_SHORT and SHORT types.\n\t\t\t// Large UNSIGNED_INT and INT cannot be represented by FLOAT type.\n\t\t\tconsole.warn(`Falling back ${internalType} type to FLOAT type for glsl1.x support for GPULayer \"${name}\".\nLarge UNSIGNED_INT or INT with absolute value > 16,777,216 are not supported, on mobile UNSIGNED_INT, INT, UNSIGNED_SHORT, and SHORT with absolute value > 2,048 may not be supported.`);\n\t\t\tinternalType = FLOAT;\n\t\t}\n\t}\n\n\t// Check if float textures supported.\n\tif (!isWebGL2(gl)) {\n\t\tif (internalType === FLOAT) {\n\t\t\t// The OES_texture_float extension implicitly enables WEBGL_color_buffer_float extension (for writing).\n\t\t\tconst extension = getExtension(composer, OES_TEXTURE_FLOAT, true);\n\t\t\tif (!extension) {\n\t\t\t\tconsole.warn(`FLOAT not supported in this browser, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t// https://stackoverflow.com/questions/17476632/webgl-extension-support-across-browsers\n\t\t\t// Rendering to a floating-point texture may not be supported, even if the OES_texture_float extension\n\t\t\t// is supported. Typically, this fails on mobile hardware. To check if this is supported, you have to\n\t\t\t// call the WebGL checkFramebufferStatus() function after attempting to attach texture to framebuffer.\n\t\t\t} else if (writable) {\n\t\t\t\tconst valid = testWriteSupport(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\tconsole.warn(`FLOAT not supported for writing operations in this browser, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Must support at least half float if using a float type.\n\t\tif (internalType === HALF_FLOAT) {\n\t\t\t// The OES_texture_half_float extension implicitly enables EXT_color_buffer_half_float extension (for writing).\n\t\t\tgetExtension(composer, OES_TEXTURE_HALF_FLOAT);\n\t\t\t// TODO: https://stackoverflow.com/questions/54248633/cannot-create-half-float-oes-texture-from-uint16array-on-ipad\n\t\t\tif (writable) {\n\t\t\t\tconst valid = testWriteSupport(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\t_errorCallback(`This browser does not support rendering to HALF_FLOAT textures.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (writable) {\n\t\t// For writable webGL2 contexts, load EXT_color_buffer_float/EXT_color_buffer_half_float extension.\n\t\tif (internalType === FLOAT) {\n\t\t\tconst extension = getExtension(composer, EXT_COLOR_BUFFER_FLOAT, true);\n\t\t\tif (!extension) {\n\t\t\t\tconsole.warn(`FLOAT not supported in this browser, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t} else {\n\t\t\t\t// Test attaching texture to framebuffer to be sure float writing is supported.\n\t\t\t\tconst valid = testWriteSupport(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\tconsole.warn(`FLOAT not supported for writing operations in this browser, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (internalType === HALF_FLOAT) {\n\t\t\t// On WebGL 2, EXT_color_buffer_half_float is an alternative to using the EXT_color_buffer_float extension\n\t\t\t// on platforms that support 16-bit floating point render targets but not 32-bit floating point render targets.\n\t\t\tconst halfFloatExt = getExtension(composer, EXT_COLOR_BUFFER_HALF_FLOAT, true);\n\t\t\tif (!halfFloatExt) {\n\t\t\t\t// Some versions of Firefox (e.g. Firefox v104 on Mac) do not support EXT_COLOR_BUFFER_HALF_FLOAT,\n\t\t\t\t// but EXT_COLOR_BUFFER_FLOAT will work instead.\n\t\t\t\tgetExtension(composer, EXT_COLOR_BUFFER_FLOAT);\n\t\t\t}\n\t\t\t// Test attaching texture to framebuffer to be sure half float writing is supported.\n\t\t\tconst valid = testWriteSupport(composer, internalType);\n\t\t\tif (!valid) {\n\t\t\t\t_errorCallback(`This browser does not support rendering to HALF_FLOAT textures.`);\n\t\t\t}\n\t\t}\n\t}\n\treturn internalType;\n}\n\n/**\n * Min and max values for types.\n * @private\n */\nexport function minMaxValuesForType(type: GPULayerType) {\n\t// Get min and max values for int types.\n\tlet min = -Infinity;\n\tlet max = Infinity;\n\tswitch(type) {\n\t\t// TODO: handle float types?\n\t\tcase UNSIGNED_BYTE:\n\t\t\tmin = MIN_UNSIGNED_BYTE;\n\t\t\tmax = MAX_UNSIGNED_BYTE;\n\t\t\tbreak;\n\t\tcase BYTE:\n\t\t\tmin = MIN_BYTE;\n\t\t\tmax = MAX_BYTE;\n\t\t\tbreak;\n\t\tcase UNSIGNED_SHORT:\n\t\t\tmin = MIN_UNSIGNED_SHORT;\n\t\t\tmax = MAX_UNSIGNED_SHORT;\n\t\t\tbreak;\n\t\tcase SHORT:\n\t\t\tmin = MIN_SHORT;\n\t\t\tmax = MAX_SHORT;\n\t\t\tbreak;\n\t\tcase UNSIGNED_INT:\n\t\t\tmin = MIN_UNSIGNED_INT;\n\t\t\tmax = MAX_UNSIGNED_INT;\n\t\t\tbreak;\n\t\tcase INT:\n\t\t\tmin = MIN_INT;\n\t\t\tmax = MAX_INT;\n\t\t\tbreak;\n\t}\n\treturn {\n\t\tmin, max,\n\t};\n}\n\n/**\n * Recasts typed array to match GPULayer.internalType.\n * @private\n */\nexport function validateGPULayerArray(array: GPULayerArray | number[], layer: GPULayer) {\n\tconst { numComponents, width, height, name } = layer;\n\tconst glNumChannels = layer._glNumChannels;\n\tconst internalType = layer._internalType;\n\tconst length = layer.is1D() ? layer.length : null;\n\n\t// Check that data is correct length (user error).\n\tif (array.length !== width * height * numComponents) { // Either the correct length for WebGLTexture size\n\t\tif (!length || (length &&  array.length !== length * numComponents)) { // Of the correct length for 1D array.\n\t\t\tthrow new Error(`Invalid data length: ${array.length} for GPULayer \"${name}\" of ${length ? `length ${length} and ` : ''}dimensions: [${width}, ${height}] and numComponents: ${numComponents}.`);\n\t\t}\n\t}\n\n\t// Get array type to figure out if we need to type cast.\n\t// For webgl1.0 we may need to cast an int type to a FLOAT or HALF_FLOAT.\n\tlet shouldTypeCast = false;\n\tswitch(array.constructor) {\n\t\tcase Array:\n\t\t\tshouldTypeCast = true;\n\t\t\tbreak;\n\t\tcase Float32Array:\n\t\t\tshouldTypeCast = internalType !== FLOAT;\n\t\t\tbreak;\n\t\tcase Uint8Array:\n\t\t\tshouldTypeCast = internalType !== UNSIGNED_BYTE;\n\t\t\tbreak;\n\t\tcase Int8Array:\n\t\t\tshouldTypeCast = internalType !== BYTE;\n\t\t\tbreak;\n\t\tcase Uint16Array:\n\t\t\t// User may have converted to HALF_FLOAT already.\n\t\t\t// We need to add this check in case type is UNSIGNED_SHORT and internal type is HALF_FLOAT.\n\t\t\t// (This can happen for some WebGL1 contexts.)\n\t\t\t// if (type === HALF_FLOAT) {\n\t\t\t// \tshouldTypeCast = internalType !== HALF_FLOAT;\n\t\t\t// \t// In order to complete this, we will also need to handle converting from Uint16Array to some other type.\n\t\t\t// \t// Are there cases where HALF_FLOAT is not supported?\n\t\t\t// } else {\n\t\t\t\tshouldTypeCast = internalType !== UNSIGNED_SHORT\n\t\t\t// }\n\t\t\tbreak;\n\t\tcase Int16Array:\n\t\t\tshouldTypeCast = internalType !== SHORT;\n\t\t\tbreak;\n\t\tcase Uint32Array:\n\t\t\tshouldTypeCast = internalType !== UNSIGNED_INT;\n\t\t\tbreak;\n\t\tcase Int32Array:\n\t\t\tshouldTypeCast = internalType !== INT;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(`Invalid array type: ${array.constructor.name} for GPULayer \"${name}\", please use one of [${validArrayTypes.map(constructor => constructor.name).join(', ')}].`);\n\t}\n\n\t// Get min and max values for internalType.\n\tconst { min, max } = minMaxValuesForType(internalType);\n\n\t// Then check if array needs to be lengthened.\n\t// This could be because glNumChannels !== numComponents or because length !== width * height.\n\tconst arrayLength = width * height * glNumChannels;\n\tconst shouldResize = array.length !== arrayLength;\n\t\t\n\tlet validatedArray = array as GPULayerArray;\n\tif (shouldTypeCast || shouldResize) {\n\t\tvalidatedArray = initArrayForType(internalType, arrayLength);\n\t\t// Fill new data array with old data.\n\t\t// We have to handle the case of Float16 specially by converting data to Uint16Array.\n\t\tconst view = (internalType === HALF_FLOAT && shouldTypeCast) ? new DataView(validatedArray.buffer) : null;\n\t\tfor (let i = 0, _len = array.length / numComponents; i < _len; i++) {\n\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\tconst origValue = array[i * numComponents + j];\n\t\t\t\tlet value = origValue;\n\t\t\t\tlet clipped = false;\n\t\t\t\tif (value < min) {\n\t\t\t\t\tvalue = min;\n\t\t\t\t\tclipped = true;\n\t\t\t\t} else if (value > max) {\n\t\t\t\t\tvalue = max;\n\t\t\t\t\tclipped = true;\n\t\t\t\t}\n\t\t\t\tif (clipped) {\n\t\t\t\t\tconsole.warn(`Clipping out of range value ${origValue} to ${value} for GPULayer \"${name}\" with internal type ${internalType}.`);\n\t\t\t\t}\n\t\t\t\tconst index = i * glNumChannels + j;\n\t\t\t\tif (view) {\n\t\t\t\t\tsetFloat16(view, 2 * index, value, true);\n\t\t\t\t} else {\n\t\t\t\t\tvalidatedArray[index] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn validatedArray;\n}","import { GPUComposer } from './GPUComposer';\nimport {\n\tisArray,\n\tisBoolean,\n\tisInteger,\n\tisNonNegativeInteger,\n\tisNumber,\n\tisObject,\n\tisString,\n} from './checks';\nimport {\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tUniform,\n\tUniformType,\n\tUniformInternalType,\n\tUniformValue,\n\tCompileTimeVars,\n\tPROGRAM_NAME_INTERNAL,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n\tUniformParams,\n\tBOOL_1D_UNIFORM,\n\tBOOL_2D_UNIFORM,\n\tBOOL_3D_UNIFORM,\n\tBOOL_4D_UNIFORM,\n\tGLSL3,\n\tGPULayerState,\n\tREPEAT,\n\tLINEAR,\n\tGLSL1,\n} from './constants';\nimport {\n\tcompileShader,\n\tpreprocessFragmentShader,\n\tinitGLProgram,\n\tuniformInternalTypeForValue,\n\tisIntType,\n} from './utils';\nimport {\n\tSAMPLER2D_CAST_INT,\n\tSAMPLER2D_DIMENSIONS_UNIFORM,\n\tSAMPLER2D_FILTER,\n\tSAMPLER2D_HALF_PX_UNIFORM,\n\tSAMPLER2D_WRAP_X,\n\tSAMPLER2D_WRAP_Y,\n} from './polyfills';\n\nexport class GPUProgram {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly _composer: GPUComposer;\n\n\t/**\n\t * Name of GPUProgram, used for error logging.\n\t */\n\treadonly name: string;\n\n\t// Compiled fragment shaders (we hang onto different versions depending on compile-time variables).\n\tprivate _fragmentShaders: {[key: string]: WebGLShader} = {};\n\t// Source code for fragment shader.\n\t// Hold onto this in case we need to recompile with different #defines.\n\tprivate readonly _fragmentShaderSource: string;\n\t// #define variables for fragment shader program.\n\tprivate readonly _defines: CompileTimeVars = {};\n\t// Uniform locations, values, and types.\n\tprivate readonly _uniforms: { [ key: string]: Uniform } = {};\n\n\t// Store WebGLProgram's - we need to compile several WebGLPrograms of GPUProgram.fragmentShader + various vertex shaders.\n\t// Each combination of vertex + fragment shader requires a separate WebGLProgram.\n\t// These programs are compiled on the fly as needed.\n\tprivate readonly _programs: {[key: string]: WebGLProgram } = {};\n\t// Reverse lookup for above.\n\tprivate readonly _programsKeyLookup = new WeakMap<WebGLProgram, string>();\n\n\t// Store the index of input sampler2D in input array.\n\tprivate readonly _samplerUniformsIndices: { name: string, inputIndex: number, shaderIndex: number }[] = [];\n\n\t/**\n     * Create a GPUProgram.\n     * @param composer - The current GPUComposer instance.\n     * @param params - GPUProgram parameters.\n\t * @param params.name - Name of GPUProgram, used for error logging.\n\t * @param params.fragmentShader - Fragment shader source or array of sources to be joined.\n\t * @param params.uniforms - Array of uniforms to initialize with GPUProgram.  More uniforms can be added later with GPUProgram.setUniform().\n\t * @param params.defines - Compile-time #define variables to include with fragment shader.\n     */\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\t// We may want to pass in an array of shader string sources, if split across several files.\n\t\t\tfragmentShader: string | string[],\n\t\t\tuniforms?: UniformParams[],\n\t\t\t// We'll allow some compile-time variables to be passed in as #define to the preprocessor for the fragment shader.\n\t\t\tdefines?: CompileTimeVars,\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPUProgram \"${name}\": must pass GPUComposer instance to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!params) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass params to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!isObject(params)) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass valid params object to GPUProgram(composer, params), got ${JSON.stringify(params)}.`);\n\t\t}\n\t\t// Check params keys.\n\t\tconst validKeys = ['name', 'fragmentShader', 'uniforms', 'defines'];\n\t\tconst requiredKeys = ['name', 'fragmentShader'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPUProgram(composer, params) with name \"${name}\".  Valid keys are ${JSON.stringify(validKeys)}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPUProgram(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { fragmentShader, uniforms, defines } = params;\n\n\t\t// Save arguments.\n\t\tthis._composer = composer;\n\t\tthis.name = name;\n\n\t\t// Preprocess fragment shader source.\n\t\tconst fragmentShaderSource = isString(fragmentShader) ?\n\t\t\tfragmentShader as string :\n\t\t\t(fragmentShader as string[]).join('\\n');\n\t\tconst { shaderSource, samplerUniforms } = preprocessFragmentShader(\n\t\t\tfragmentShaderSource, composer.glslVersion, name,\n\t\t);\n\t\tthis._fragmentShaderSource = shaderSource;\n\t\tsamplerUniforms.forEach((name, i) => {\n\t\t\tthis._samplerUniformsIndices.push({\n\t\t\t\tname,\n\t\t\t\tinputIndex: 0, // All uniforms default to 0.\n\t\t\t\tshaderIndex: i,\n\t\t\t});\n\t\t});\n\n\t\t// Save defines.\n\t\tif (defines) {\n\t\t\tthis._defines = { ...defines };\n\t\t}\n\n\t\t// Set program uniforms.\n\t\tif (uniforms) {\n\t\t\tfor (let i = 0; i < uniforms.length; i++) {\n\t\t\t\tconst { name, value, type } = uniforms[i];\n\t\t\t\tthis.setUniform(name, value, type);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get fragment shader for GPUProgram, compile new onw if needed.\n\t * Used internally.\n\t * @private\n\t */\n\tprivate _getFragmentShader(fragmentId: string, internalDefines: CompileTimeVars, ) {\n\t\tconst { _fragmentShaders } = this;\n\t\tif (_fragmentShaders[fragmentId]) {\n\t\t\t// No need to recompile.\n\t\t\treturn _fragmentShaders[fragmentId];\n\t\t}\n\n\t\tconst { _composer, name, _fragmentShaderSource, _defines } = this;\n\t\tconst {\n\t\t\tgl,\n\t\t\t_errorCallback,\n\t\t\tverboseLogging,\n\t\t\tglslVersion,\n\t\t\tfloatPrecision,\n\t\t\tintPrecision,\n\t\t} = _composer;\n\t\t\n\t\t// Update internalDefines.\n\t\tconst keys = Object.keys(internalDefines);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key = keys[i];\n\t\t\t_defines[key] = internalDefines[key];\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Compiling fragment shader for GPUProgram \"${name}\" with defines: ${JSON.stringify(_defines)}`);\n\t\tconst shader = compileShader(\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t\t_fragmentShaderSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\tname,\n\t\t\t_errorCallback,\n\t\t\t_defines,\n\t\t\tObject.keys(_fragmentShaders).length === 0,\n\t\t);\n\t\tif (!shader) {\n\t\t\t_errorCallback(`Unable to compile fragment shader for GPUProgram \"${name}\".`);\n\t\t\treturn;\n\t\t}\n\t\t_fragmentShaders[fragmentId] = shader;\n\t\treturn _fragmentShaders[fragmentId];\n\t}\n\n\t/**\n\t * Get GLProgram associated with a specific vertex shader.\n\t * @private\n\t */\n\t_getProgramWithName(name: PROGRAM_NAME_INTERNAL, vertexDefines: CompileTimeVars, input: GPULayerState[]) {\n\t\tconst { _samplerUniformsIndices, _composer } = this;\n\n\t\tlet fragmentID = '';\n\t\tconst fragmentDefines: CompileTimeVars = {};\n\t\tfor (let i = 0, length = _samplerUniformsIndices.length; i < length; i++) {\n\t\t\tconst { inputIndex } = _samplerUniformsIndices[i];\n\t\t\tconst { layer } = input[inputIndex];\n\t\t\tconst {\n\t\t\t\tfilter, wrapS, wrapT, type,\n\t\t\t\t_internalFilter, _internalWrapS, _internalWrapT,\n\t\t\t} = layer;\n\t\t\tconst wrapXVal = wrapS === _internalWrapS ? 0 : (wrapS === REPEAT ? 1 : 0);\n\t\t\tconst wrapYVal = wrapT === _internalWrapT ? 0 : (wrapT === REPEAT ? 1 : 0);\n\t\t\tconst filterVal = filter === _internalFilter ? 0 : (filter === LINEAR ? 1 : 0);\n\t\t\tfragmentID += `_IN${i}_${wrapXVal}_${wrapYVal}_${filterVal}`;\n\t\t\tfragmentDefines[`${SAMPLER2D_WRAP_X}${i}`] = `${wrapXVal}`;\n\t\t\tfragmentDefines[`${SAMPLER2D_WRAP_Y}${i}`] = `${wrapYVal}`;\n\t\t\tfragmentDefines[`${SAMPLER2D_FILTER}${i}`] = `${filterVal}`;\n\t\t\tif (_composer.glslVersion === GLSL1 && isIntType(type)) {\n\t\t\t\tfragmentDefines[`${SAMPLER2D_CAST_INT}${i}`] = '1';\n\t\t\t}\n\t\t}\n\t\tconst vertexID = Object.keys(vertexDefines).map(key => `_${key}_${vertexDefines[key]}`).join();\n\t\tconst key = `${name}${vertexID}${fragmentID}`;\n\n\t\t// Check if we've already compiled program.\n\t\tif (this._programs[key]) return this._programs[key];\n\n\t\t// Otherwise, we need to compile a new program on the fly.\n\t\tconst { _uniforms, _programs, _programsKeyLookup } = this;\n\t\tconst { gl, _errorCallback } = _composer;\n\n\t\tconst vertexShader = _composer._getVertexShader(name, vertexID, vertexDefines, this.name);\n\t\tif (vertexShader === undefined) {\n\t\t\t_errorCallback(`Unable to init vertex shader \"${name}${vertexID}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentShader = this._getFragmentShader(fragmentID, fragmentDefines);\n\t\tif (fragmentShader === undefined) {\n\t\t\t_errorCallback(`Unable to init fragment shader \"${fragmentID}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst program = initGLProgram(gl, vertexShader, fragmentShader, this.name, _errorCallback);\n\t\tif (program === undefined) {\n\t\t\tgl.deleteShader(fragmentShader);\n\t\t\t_errorCallback(`Unable to init program \"${key}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\t// If we have any uniforms set for this GPUProgram, add those to WebGLProgram we just inited.\n\t\t// Set active program.\n\t\tgl.useProgram(program);\n\t\tconst uniformNames = Object.keys(_uniforms);\n\t\tfor (let i = 0; i < uniformNames.length; i++) {\n\t\t\tconst uniformName = uniformNames[i];\n\t\t\tconst uniform = _uniforms[uniformName];\n\t\t\tconst { value, type } = uniform;\n\t\t\tthis._setProgramUniform(program, key, uniformName, value, type);\n\t\t}\n\n\t\t_programs[key] = program;\n\t\t_programsKeyLookup.set(program, key);\n\t\treturn program;\n\t}\n\n\t/**\n\t * Set uniform for GLProgram.\n\t * @private\n\t */\n\tprivate _setProgramUniform(\n\t\tprogram: WebGLProgram,\n\t\tprogramName: string,\n\t\tuniformName: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformInternalType,\n\t) {\n\t\tconst { _composer, _uniforms } = this;\n\t\tconst { gl, _errorCallback, glslVersion } = _composer;\n\n\t\t// We have already set gl.useProgram(program) outside this function.\n\n\t\tconst isGLSL3 = glslVersion === GLSL3;\n\n\t\tlet location = _uniforms[uniformName]?.location[programName];\n\t\t// Init a location for WebGLProgram if needed (only do this once).\n\t\tif (location === undefined) {\n\t\t\tconst _location = gl.getUniformLocation(program, uniformName);\n\t\t\tif (_location === null) {\n\t\t\t\tconsole.warn(`Could not init uniform \"${uniformName}\" for program \"${this.name}\". Check that uniform is present in shader code, unused uniforms may be removed by compiler. Also check that uniform type in shader code matches type ${type}. Error code: ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocation = _location;\n\t\t\t// Save location for future use.\n\t\t\tif (_uniforms[uniformName]) {\n\t\t\t\t_uniforms[uniformName].location[programName] = location;\n\t\t\t}\n\n\t\t\t// Since this is the first time we are initing the uniform, check that type is correct.\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniform\n\t\t\tconst uniform = gl.getUniform(program, location);\n\t\t\tlet badType = false;\n\t\t\tif (type === BOOL_1D_UNIFORM || type === BOOL_2D_UNIFORM || type === BOOL_3D_UNIFORM || type === BOOL_4D_UNIFORM) {\n\t\t\t\tif (!isBoolean(uniform) && uniform.constructor !== Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else \n\t\t\tif (type === FLOAT_1D_UNIFORM || type === FLOAT_2D_UNIFORM || type === FLOAT_3D_UNIFORM || type === FLOAT_4D_UNIFORM) {\n\t\t\t\tif (!isNumber(uniform) && uniform.constructor !== Float32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else if (type === INT_1D_UNIFORM || type === INT_2D_UNIFORM || type === INT_3D_UNIFORM || type === INT_4D_UNIFORM) {\n\t\t\t\tif (!isInteger(uniform) && uniform.constructor !== Int32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else if (type === UINT_1D_UNIFORM || type === UINT_2D_UNIFORM || type === UINT_3D_UNIFORM || type === UINT_4D_UNIFORM) {\n\t\t\t\tif (!isGLSL3) {\n\t\t\t\t\t// GLSL1 does not have uint type, expect int instead.\n\t\t\t\t\tif (!isNonNegativeInteger(uniform) && uniform.constructor !== Int32Array) {\n\t\t\t\t\t\tbadType = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!isNonNegativeInteger(uniform) && uniform.constructor !== Uint32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (badType) {\n\t\t\t\t_errorCallback(`Invalid uniform \"${uniformName}\" for program \"${this.name}\". Check that uniform type in shader code matches type ${type}, gl.getUniform(program, location) returned type: ${uniform.constructor.name}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Set uniform.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform\n\t\tswitch (type) {\n\t\t\t// We are setting boolean uniforms with uniform[1234]i.\n\t\t\t// This suggest floats work as well, but ints seem more natural:\n\t\t\t// https://github.com/KhronosGroup/WebGL/blob/main/sdk/tests/conformance/uniforms/gl-uniform-bool.html\n\t\t\tcase BOOL_1D_UNIFORM:\n\t\t\t\tgl.uniform1i(location, value ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_2D_UNIFORM:\n\t\t\t\tgl.uniform2i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_3D_UNIFORM:\n\t\t\t\tgl.uniform3i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0, (value as number[])[2] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_4D_UNIFORM:\n\t\t\t\tgl.uniform4i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0, (value as number[])[2] ? 1 : 0, (value as number[])[3] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_1D_UNIFORM:\n\t\t\t\tgl.uniform1f(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_2D_UNIFORM:\n\t\t\t\tgl.uniform2fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_3D_UNIFORM:\n\t\t\t\tgl.uniform3fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_4D_UNIFORM:\n\t\t\t\tgl.uniform4fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_1D_UNIFORM:\n\t\t\t\tgl.uniform1i(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase INT_2D_UNIFORM:\n\t\t\t\tgl.uniform2iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_3D_UNIFORM:\n\t\t\t\tgl.uniform3iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_4D_UNIFORM:\n\t\t\t\tgl.uniform4iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\t// Uint not supported in GLSL1, use int instead.\n\t\t\tcase UINT_1D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform1ui(location, value as number);\n\t\t\t\telse gl.uniform1i(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase UINT_2D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform2uiv(location, value as number[]);\n\t\t\t\telse gl.uniform2iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_3D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform3uiv(location, value as number[]);\n\t\t\t\telse gl.uniform3iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_4D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform4uiv(location, value as number[]);\n\t\t\t\telse gl.uniform4iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown uniform type ${type} for GPUProgram \"${this.name}\".`);\n\t\t}\n\t}\n\n\t/**\n\t * Set fragment shader uniform for GPUProgram.\n\t * @param name - Uniform name as it appears in fragment shader.\n\t * @param value - Uniform value.\n\t * @param type - Uniform type (this only needs to be set once).\n\t */\n\tsetUniform(\n\t\tname: string,\n\t\tvalue: UniformValue,\n\t\ttype?: UniformType,\n\t) {\n\t\tconst { _programs, _uniforms, _composer, _samplerUniformsIndices } = this;\n\t\tconst { verboseLogging, gl } = _composer;\n\n\t\t// Check that length of value is correct.\n\t\tif (isArray(value)) {\n\t\t\tconst length = (value as number[]).length;\n\t\t\tif (length > 4) throw new Error(`Invalid uniform value: [${(value as number[]).join(', ')}] passed to GPUProgram \"${this.name}, uniforms must be of type number[] with length <= 4, number, or boolean.\"`)\n\t\t}\n\n\t\tlet currentType = _uniforms[name]?.type;\n\t\tif (type) {\n\t\t\tconst internalType = uniformInternalTypeForValue(value, type, name, this.name);\n\t\t\tif (currentType === undefined) currentType = internalType;\n\t\t\telse {\n\t\t\t\t// console.warn(`Don't need to pass in type to GPUProgram.setUniform for previously inited uniform \"${uniformName}\"`);\n\t\t\t\t// Check that types match previously set uniform.\n\t\t\t\tif (currentType !== internalType) {\n\t\t\t\t\tthrow new Error(`Uniform \"${name}\" for GPUProgram \"${this.name}\" cannot change from type ${currentType} to type ${internalType}.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (currentType === undefined) {\n\t\t\tthrow new Error(`Unknown type for uniform \"${name}\", please pass in type to GPUProgram.setUniform(name, value, type) when initing a new uniform.`);\n\t\t}\n\n\t\tif (!_uniforms[name]) {\n\t\t\t// Init uniform if needed.\n\t\t\t_uniforms[name] = { type: currentType, location: {}, value };\n\t\t} else {\n\t\t\t// Deep check if value has changed.\n\t\t\tif (isArray(value)) {\n\t\t\t\tlet isChanged = true;\n\t\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\t\tif (_uniforms[name].value !== value) {\n\t\t\t\t\t\tisChanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isChanged) return; // No change.\n\t\t\t} else if (_uniforms[name].value === value) {\n\t\t\t\treturn; // No change.\n\t\t\t}\n\t\t\t// Update value.\n\t\t\t_uniforms[name].value = value;\n\t\t}\n\n\t\tconst samplerUniform = _samplerUniformsIndices.find((uniform) => uniform.name === name);\n\t\tif (samplerUniform && currentType === INT_1D_UNIFORM) {\n\t\t\tsamplerUniform.inputIndex = value as number;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Setting uniform \"${name}\" for program \"${this.name}\" to value ${JSON.stringify(value)} with type ${currentType}.`)\n\n\t\t// Update any active programs.\n\t\tconst keys = Object.keys(_programs);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst programName = keys[i];\n\t\t\t// Set active program.\n\t\t\tconst program = _programs[programName]!;\n\t\t\tgl.useProgram(program);\n\t\t\tthis._setProgramUniform(program, programName, name, value, currentType);\n\t\t}\n\t};\n\n\t/**\n\t * Set internal fragment shader uniforms for GPUProgram.\n\t * @private\n\t */\n\t_setInternalFragmentUniforms(\n\t\tprogram: WebGLProgram,\n\t\tinput: GPULayerState[],\n\t) {\n\t\tif (input.length === 0) return;\n\t\tif (!program) {\n\t\t\tthrow new Error('Must pass in valid WebGLProgram to GPUProgram._setInternalFragmentUniforms, got undefined.');\n\t\t}\n\t\tconst { _programsKeyLookup, _samplerUniformsIndices } = this;\n\t\tconst programName = _programsKeyLookup.get(program);\n\t\tif (!programName) {\n\t\t\tthrow new Error(`Could not find valid programName for WebGLProgram in GPUProgram \"${this.name}\".`);\n\t\t}\n\n\t\t// TODO: memoize this.\n\t\tconst indexLookup = new Array(_samplerUniformsIndices.length).fill(-1);\n\t\tfor (let i = 0, length = _samplerUniformsIndices.length; i < length; i++) {\n\t\t\tconst { inputIndex, shaderIndex } = _samplerUniformsIndices[i];\n\t\t\tif (indexLookup[inputIndex] >= 0) {\n\t\t\t\t// There is an index collision, this should not happen.\n\t\t\t\tconsole.warn(`Found > 1 sampler2D uniforms at texture index ${inputIndex} for GPUProgram \"${this.name}\".`);\n\t\t\t} else {\n\t\t\t\tindexLookup[inputIndex] = shaderIndex;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, length = input.length; i < length; i++) {\n\t\t\tconst { layer } = input[i];\n\t\t\tconst { width, height } = layer;\n\t\t\tconst index = indexLookup[i];\n\t\t\tif (index < 0) continue;\n\t\t\tconst { filter, wrapS, wrapT, _internalFilter, _internalWrapS, _internalWrapT } = layer;\n\t\t\tconst filterMismatch = filter !== _internalFilter;\n\t\t\tif (filterMismatch || wrapS !== _internalWrapS || wrapT !== _internalWrapT) {\n\t\t\t\tconst halfPxSize = [0.5 / width, 0.5 / height];\n\t\t\t\tconst halfPxUniform = `${SAMPLER2D_HALF_PX_UNIFORM}${index}`;\n\t\t\t\tthis._setProgramUniform(\n\t\t\t\t\tprogram,\n\t\t\t\t\tprogramName,\n\t\t\t\t\thalfPxUniform,\n\t\t\t\t\thalfPxSize,\n\t\t\t\t\tFLOAT_2D_UNIFORM,\n\t\t\t\t);\n\t\t\t\tif (filterMismatch) {\n\t\t\t\t\tconst dimensions = [width, height];\n\t\t\t\t\tconst dimensionsUniform = `${SAMPLER2D_DIMENSIONS_UNIFORM}${index}`;\n\t\t\t\t\tthis._setProgramUniform(\n\t\t\t\t\t\tprogram,\n\t\t\t\t\t\tprogramName,\n\t\t\t\t\t\tdimensionsUniform,\n\t\t\t\t\t\tdimensions,\n\t\t\t\t\t\tFLOAT_2D_UNIFORM,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set vertex shader uniform for GPUProgram.\n\t * @private\n\t */\n\t_setVertexUniform(\n\t\tprogram: WebGLProgram,\n\t\tuniformName: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformType,\n\t) {\n\t\tif (!program) {\n\t\t\tthrow new Error('Must pass in valid WebGLProgram to GPUProgram._setVertexUniform, got undefined.');\n\t\t}\n\t\tconst { _programsKeyLookup } = this;\n\t\tconst programName = _programsKeyLookup.get(program);\n\t\tif (!programName) {\n\t\t\tthrow new Error(`Could not find valid programName for WebGLProgram in GPUProgram \"${this.name}\".`);\n\t\t}\n\t\tconst internalType = uniformInternalTypeForValue(value, type, uniformName, this.name);\n\t\tthis._setProgramUniform(program, programName, uniformName, value, internalType);\n\t}\n\n\t/**\n\t * Deallocate GPUProgram instance and associated WebGL properties.\n\t */\n\tdispose() {\n\t\tconst { _composer, _fragmentShaders, _programs, _programsKeyLookup } = this;\n\t\tconst { gl, verboseLogging } = _composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUProgram \"${this.name}\".`);\n\t\tif (!gl) throw new Error(`Must call dispose() on all GPUPrograms before calling dispose() on GPUComposer.`);\n\n\t\t// Unbind all gl data before deleting.\n\t\tObject.values(_programs).forEach(program => {\n\t\t\tif (program) {\n\t\t\t\tgl.deleteProgram(program);\n\t\t\t\t_programsKeyLookup.delete(program);\n\t\t\t}\n\t\t});\n\t\tObject.keys(_programs).forEach(key => {\n\t\t\tdelete this._programs[key as PROGRAM_NAME_INTERNAL];\n\t\t});\n\n\t\t// Delete fragment shaders.\n\t\tObject.values(_fragmentShaders).forEach(shader => {\n\t\t\tgl.deleteShader(shader);\n\t\t});\n\t\t// @ts-ignore\n\t\tdelete this._fragmentShaders;\n\t\t// Vertex shaders are owned by GPUComposer and shared across many GPUPrograms.\n\n\t\t// Delete all references.\n\t\t// @ts-ignore\n\t\tdelete this._composer;\n\t\t// @ts-ignore\n\t\tdelete this.name;\n\t\t// @ts-ignore\n\t\tdelete this._fragmentShaderSource;\n\t\t// @ts-ignore\n\t\tdelete this._defines;\n\t\t// @ts-ignore\n\t\tdelete this._uniforms;\n\t\t// @ts-ignore\n\t\tdelete this._programs;\n\t\t// @ts-ignore\n\t\tdelete this._programsKeyLookup;\n\t\t// @ts-ignore\n\t\tdelete this._samplerUniformsIndices;\n\t}\n}\n","/**\n * These are the parts of threejs Vector4 that we need.\n * Used internally.\n * @private\n */\nexport class Vector4 {\n\tx: number;\n\ty: number;\n\tz: number;\n\tw: number;\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\tget width() {\n\t\treturn this.z;\n\t}\n\tget height() {\n\t\treturn this.w;\n\t}\n\tcopy(v: Vector4) {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t\treturn this;\n\t}\n}","import {\n\tvalidDataTypes,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tGPULayerType,\n\tHALF_FLOAT,\n\tFLOAT,\n\tBYTE,\n\tSHORT,\n\tINT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_SHORT,\n\tUNSIGNED_INT,\n} from './constants';\n\n/**\n * Checks if type is valid GPULayer data type.\n * @private\n */\nexport function isValidDataType(type: string) {\n\treturn validDataTypes.indexOf(type) > -1;\n}\n\n/**\n * Checks if filter is valid GPULayer filter type.\n * @private\n */\nexport function isValidFilter(type: string) {\n\treturn validFilters.indexOf(type) > -1;\n}\n\n/**\n * Checks if wrap is valid GPULayer wrap type.\n * @private\n */\nexport function isValidWrap(type: string) {\n\treturn validWraps.indexOf(type) > -1;\n}\n\n// For image urls that are passed in and inited as textures.\n// TODO: add docs\nexport function isValidTextureFormat(type: string) {\n\treturn validTextureFormats.indexOf(type) > -1;\n}\n// TODO: add docs\nexport function isValidTextureType(type: string) {\n\treturn validTextureTypes.indexOf(type) > -1;\n}\n\n/**\n * Checks if value is valid GPULayer clear value for numComponents and type.\n * @private\n */\nexport function isValidClearValue(clearValue: number | number[], numComponents: number, type: GPULayerType) {\n\tif (isArray(clearValue)) {\n\t\t// Length of clearValue must match numComponents.\n\t\tif ((clearValue as number[]).length !== numComponents) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < (clearValue as number[]).length; i++) {\n\t\t\tif (!isNumberOfType((clearValue as number[])[i], type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (!isNumberOfType(clearValue, type)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Checks if value is valid number for a given GPULayer type.\n * Checks extrema values.\n * @private\n */\nexport function isNumberOfType(value: any, type: GPULayerType) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\tcase FLOAT:\n\t\t\treturn isNumber(value);\n\t\tcase BYTE:\n\t\t\t// -(2 ** 7)\n\t\t\tif (value < -128) return false;\n\t\t\t// 2 ** 7 - 1\n\t\t\tif (value > 127) return false;\n\t\t\treturn isInteger(value);\n\t\tcase SHORT:\n\t\t\t// -(2 ** 15)\n\t\t\tif (value < -32768) return false;\n\t\t\t// 2 ** 15 - 1\n\t\t\tif (value > 32767) return false;\n\t\t\treturn isInteger(value);\n\t\tcase INT:\n\t\t\t// -(2 ** 31)\n\t\t\tif (value < -2147483648) return false;\n\t\t\t// 2 ** 31 - 1\n\t\t\tif (value > 2147483647) return false;\n\t\t\treturn isInteger(value);\n\t\tcase UNSIGNED_BYTE:\n\t\t\t// 2 ** 8 - 1\n\t\t\tif (value > 255) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_SHORT:\n\t\t\t// 2 ** 16 - 1\n\t\t\tif (value > 65535) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_INT:\n\t\t\t// 2 ** 32 - 1\n\t\t\tif (value > 4294967295) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown type ${type}`);\n\t}\n}\n\n/**\n * Checks if value is finite number.\n * @private\n */\nexport function isNumber(value: any) {\n\treturn !Number.isNaN(value) && typeof value === 'number' && Number.isFinite(value);\n}\n\n/**\n * Checks if value is finite integer.\n * @private\n */\nexport function isInteger(value: any) {\n\treturn isNumber(value) && (value % 1 === 0);\n}\n\n/**\n * Checks if value is finite positive integer (> 0).\n * @private\n */\nexport function isPositiveInteger(value: any) {\n\treturn isInteger(value) && value > 0;\n}\n\n/**\n * Checks if value is finite non-negative integer (>= 0).\n * @private\n */\nexport function isNonNegativeInteger(value: any) {\n\treturn isInteger(value) &&  value >= 0;\n}\n\n/**\n * Checks if value is string.\n * @private\n */\nexport function isString(value: any){\n\treturn typeof value === 'string';\n}\n\n/**\n * Checks if value is array.\n * @private\n */\nexport function isArray(value: any) {\n\treturn Array.isArray(value);\n}\n\n/**\n * Checks if value is Javascript object.\n * @private\n */\nexport function isObject(value: any) {\n\treturn typeof value === 'object' && !isArray(value) && value !== null;\n}\n\n/**\n * Checks if value is boolean.\n * @private\n */\nexport function isBoolean(value: any) {\n\treturn typeof value === 'boolean';\n}","// Data types.\n\nimport { GPULayer } from './GPULayer';\n\n/**\n * Half float data type.\n */\nexport const HALF_FLOAT = 'HALF_FLOAT';\n/**\n * Float data type.\n */\nexport const FLOAT = 'FLOAT';\n/**\n * Unsigned byte data type.\n */\nexport const UNSIGNED_BYTE = 'UNSIGNED_BYTE';\n/**\n * Byte data type.\n */\nexport const BYTE = 'BYTE';\n/**\n * Unsigned short data type.\n */\nexport const UNSIGNED_SHORT = 'UNSIGNED_SHORT';\n/**\n * Short data type.\n */\nexport const SHORT = 'SHORT';\n/**\n * Unsigned int data type.\n */\nexport const UNSIGNED_INT = 'UNSIGNED_INT';\n/**\n * Int data type.\n */\nexport const INT = 'INT';\n/**\n * Boolean data type (GPUProgram uniforms only).\n */\nexport const BOOL = 'BOOL';\n/**\n * Unsigned int data type (GPUProgram uniforms only).\n */\nexport const UINT = 'UINT';\n\n// Filter types.\n/**\n * Nearest texture filtering.\n */\nexport const NEAREST = 'NEAREST';\n/**\n * Linear texture filtering.\n */\nexport const LINEAR = 'LINEAR';\n\n// Wrap types.\n/**\n * Clamp to edge wrapping (no wrapping).\n */\nexport const CLAMP_TO_EDGE = 'CLAMP_TO_EDGE';\n/**\n * Repeat/periodic wrapping.\n */\nexport const REPEAT = 'REPEAT';\n// export const MIRRORED_REPEAT = 'MIRRORED_REPEAT';\n\n// GPULayer parameter types.\n/**\n * GPULayer array types.\n */\nexport type GPULayerArray =  Float32Array | Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array;\n/**\n * @private\n */\nexport const validArrayTypes = [Float32Array, Uint8Array, Int8Array, Uint16Array, Int16Array, Uint32Array, Int32Array, Array];\n/**\n * GPULayer data types.\n */\nexport type GPULayerType = typeof HALF_FLOAT | typeof FLOAT | typeof UNSIGNED_BYTE | typeof BYTE | typeof UNSIGNED_SHORT | typeof SHORT | typeof UNSIGNED_INT | typeof INT;\n/**\n * @private\n */\nexport const validDataTypes = [HALF_FLOAT, FLOAT, UNSIGNED_BYTE, BYTE, UNSIGNED_SHORT, SHORT, UNSIGNED_INT, INT];\n/**\n * GPULayer numComponents options.\n */\nexport type GPULayerNumComponents = 1 | 2 | 3 | 4;\n/**\n * GPULayer filter/interpolation types.\n */\nexport type GPULayerFilter = typeof LINEAR | typeof NEAREST;\n/**\n * @private\n */\nexport const validFilters = [NEAREST, LINEAR];\n/**\n * @private\n */\n/**\n * GPULayer wrap types.\n */\nexport type GPULayerWrap = typeof REPEAT | typeof CLAMP_TO_EDGE;// | typeof MIRRORED_REPEAT;\n/**\n * @private\n */\nexport const validWraps = [CLAMP_TO_EDGE, REPEAT]; // MIRRORED_REPEAT\n/**\n * GPULayer state.\n * @private\n */\nexport type GPULayerState = {\n\ttexture: WebGLTexture,\n\tlayer: GPULayer,\n}\n\n\n// TODO: change this?\n// For image urls that are passed in and inited as textures.\n/**\n * @private\n */\nexport const RGB = 'RGB';\n/**\n * @private\n */\nexport const RGBA = 'RGBA';\n/**\n * @private\n */\nexport type TextureFormat = typeof RGB | typeof RGBA;\n/**\n * @private\n */\nexport const validTextureFormats = [RGB, RGBA];\n/**\n * @private\n */\nexport type TextureType = typeof UNSIGNED_BYTE;\n/**\n * @private\n */\nexport const validTextureTypes = [UNSIGNED_BYTE];\n\n// GLSL versions.\n/**\n * GLSL version 300 (WebGL2 only).\n */\nexport const GLSL3 = '300 es';\n/**\n * GLSL version 100 (WebGL1 and WebGL2).\n */\nexport const GLSL1 = '100';\n/**\n * GLSL available versions.\n */\nexport type GLSLVersion = typeof GLSL1 | typeof GLSL3;\n\n// WebGL versions.\n/**\n * WebGL2 context ID.\n */\nexport const WEBGL2 = 'webgl2';\n/**\n * WebGL1 context ID.\n */\nexport const WEBGL1 = 'webgl';\n/**\n * Experimental WebGL context ID.\n */\nexport const EXPERIMENTAL_WEBGL = 'experimental-webgl';\n\n// Precision declarations.\n/**\n * GLSL lowp precision declaration.\n */\nexport const PRECISION_LOW_P = 'lowp';\n/**\n * GLSL mediump precision declaration.\n */\nexport const PRECISION_MEDIUM_P = 'mediump';\n/**\n * GLSL highp precision declaration.\n */\nexport const PRECISION_HIGH_P = 'highp';\n/**\n * GLSL available precision declarations.\n */\nexport type GLSLPrecision = typeof PRECISION_LOW_P | typeof PRECISION_MEDIUM_P | typeof PRECISION_HIGH_P;\n\n// Uniform types.\n/**\n * @private\n */\nexport const FLOAT_1D_UNIFORM = 'FLOAT_1D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_2D_UNIFORM = 'FLOAT_2D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_3D_UNIFORM = 'FLOAT_3D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_4D_UNIFORM = 'FLOAT_4D_UNIFORM';\n/**\n * @private\n */\nexport const INT_1D_UNIFORM = 'INT_1D_UNIFORM';\n/**\n * @private\n */\nexport const INT_2D_UNIFORM = 'INT_2D_UNIFORM';\n/**\n * @private\n */\nexport const INT_3D_UNIFORM = 'INT_3D_UNIFORM';\n/**\n * @private\n */\nexport const INT_4D_UNIFORM = 'INT_4D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_1D_UNIFORM = 'UINT_1D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_2D_UNIFORM = 'UINT_2D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_3D_UNIFORM = 'UINT_3D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_4D_UNIFORM = 'UINT_4D_UNIFORM';\n/**\n * @private\n */\n export const BOOL_1D_UNIFORM = 'BOOL_1D_UNIFORM';\n /**\n * @private\n */\n  export const BOOL_2D_UNIFORM = 'BOOL_2D_UNIFORM';\n  /**\n * @private\n */\n export const BOOL_3D_UNIFORM = 'BOOL_3D_UNIFORM';\n /**\n * @private\n */\n  export const BOOL_4D_UNIFORM = 'BOOL_4D_UNIFORM';\n\n// Uniform types and values.\n/**\n * GPUProgram uniform types.\n */\nexport type UniformType = typeof FLOAT | typeof INT | typeof UINT | typeof BOOL;\n/**\n * @private\n */\nexport type UniformInternalType = \n\ttypeof BOOL_1D_UNIFORM |\n\ttypeof BOOL_2D_UNIFORM |\n\ttypeof BOOL_3D_UNIFORM |\n\ttypeof BOOL_4D_UNIFORM |\n\ttypeof FLOAT_1D_UNIFORM |\n\ttypeof FLOAT_2D_UNIFORM |\n\ttypeof FLOAT_3D_UNIFORM |\n\ttypeof FLOAT_4D_UNIFORM |\n\ttypeof INT_1D_UNIFORM |\n\ttypeof INT_2D_UNIFORM |\n\ttypeof INT_3D_UNIFORM |\n\ttypeof INT_4D_UNIFORM |\n\ttypeof UINT_1D_UNIFORM |\n\ttypeof UINT_2D_UNIFORM |\n\ttypeof UINT_3D_UNIFORM |\n\ttypeof UINT_4D_UNIFORM;\n/**\n * GPUProgram uniform values.\n */\nexport type UniformValue = boolean | boolean[] | number | number[];\n/**\n * GPUProgram uniform parameters.\n */\nexport type UniformParams = {\n\tname: string,\n\tvalue: UniformValue,\n\ttype: UniformType,\n};\n/**\n * @private\n */\nexport type Uniform = { \n\tlocation: { [key: string]: WebGLUniformLocation },\n\ttype: UniformInternalType,\n\tvalue: UniformValue,\n};\n\n// Vertex shader types.\n/**\n * @private\n */\nexport const DEFAULT_PROGRAM_NAME = 'DEFAULT';\n/**\n * @private\n */\nexport const SEGMENT_PROGRAM_NAME = 'SEGMENT';\n/**\n * @private\n */\nexport const LAYER_POINTS_PROGRAM_NAME = 'LAYER_POINTS';\n/**\n * @private\n */\nexport const LAYER_LINES_PROGRAM_NAME = 'LAYER_LINES';\n/**\n * @private\n */\nexport const LAYER_VECTOR_FIELD_PROGRAM_NAME = 'LAYER_VECTOR_FIELD';\n// Vertex shader compile time vars.\n// Be sure to change these in the vertex shader if updated!\n/**\n * @private\n */\nexport const GPUIO_VS_WRAP_X = 'GPUIO_VS_WRAP_X';\n/**\n * @private\n */\nexport const GPUIO_VS_WRAP_Y = 'GPUIO_VS_WRAP_Y';\n/**\n * @private\n */\n export const GPUIO_VS_INDEXED_POSITIONS = 'GPUIO_VS_INDEXED_POSITIONS';\n/**\n * @private\n */\nexport const GPUIO_VS_UV_ATTRIBUTE = 'GPUIO_VS_UV_ATTRIBUTE';\n /**\n * @private\n */\nexport const GPUIO_VS_NORMAL_ATTRIBUTE = 'GPUIO_VS_NORMAL_ATTRIBUTE';\n/**\n * @private\n */\nexport const GPUIO_VS_POSITION_W_ACCUM = 'GPUIO_VS_POSITION_W_ACCUM';\n\n/**\n * @private\n */\nexport type PROGRAM_NAME_INTERNAL =\n\ttypeof DEFAULT_PROGRAM_NAME |\n\ttypeof SEGMENT_PROGRAM_NAME |\n\ttypeof LAYER_POINTS_PROGRAM_NAME |\n\ttypeof LAYER_LINES_PROGRAM_NAME |\n\ttypeof LAYER_VECTOR_FIELD_PROGRAM_NAME;\n\n// Pass in #defines as strings to make it easier to control float vs int.\n/**\n * Object containing compile-time #define variables for GPUProgram fragment shader.\n */\nexport type CompileTimeVars = { [key: string]: string };\n\n// Each buffer in GPULayer contains a WebGLTexture and WebGLFramebuffer.\n/**\n * @private\n */\nexport type GPULayerBuffer = {\n\ttexture: WebGLTexture,\n\tframebuffer?: WebGLFramebuffer,\n}\n\n// Error callback, defaults to throwing an error.\nexport type ErrorCallback = (message: string) => void;\n/**\n * @private\n */\nexport const DEFAULT_ERROR_CALLBACK = (message: string) => { throw new Error(message); };\n\n// For stepCircle() and stepSegment() (with end caps).\n/**\n * @private\n */\nexport const DEFAULT_CIRCLE_NUM_SEGMENTS = 18;// Must be divisible by 6 to work with stepSegment().\n\n// Extrema values.\n/**\n * @private\n */\nexport const MIN_UNSIGNED_BYTE = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_BYTE = 2 ** 8 - 1;\n/**\n * @private\n */\nexport const MIN_BYTE = -(2 ** 7);\n/**\n * @private\n */\nexport const MAX_BYTE = 2 ** 7 - 1;\n/**\n * @private\n */\nexport const MIN_UNSIGNED_SHORT = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_SHORT = 2 ** 16 - 1;\n/**\n * @private\n */\nexport const MIN_SHORT = -(2 ** 15);\n/**\n * @private\n */\nexport const MAX_SHORT = 2 ** 15 - 1;\n/**\n * @private\n */\nexport const MIN_UNSIGNED_INT = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_INT = 2 ** 32 - 1;\n/**\n * @private\n */\nexport const MIN_INT = -(2 ** 31);\n/**\n * @private\n */\nexport const MAX_INT = 2 ** 31 - 1;\n// There are larger HALF_FLOAT and FLOAT ints, but they may be spaced out by > 1.\n/**\n * @private\n */\nexport const MIN_HALF_FLOAT_INT = -2048;\n/**\n * @private\n */\nexport const MAX_HALF_FLOAT_INT = 2048;\n/**\n * @private\n */\nexport const MIN_FLOAT_INT = -16777216;\n/**\n * @private\n */\nexport const MAX_FLOAT_INT = 16777216;","import { GPUComposer } from './GPUComposer';\n\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float\n// Float is provided by default in WebGL2 contexts.\n// This extension implicitly enables the WEBGL_color_buffer_float extension (if supported), which allows rendering to 32-bit floating-point color buffers.\nexport const OES_TEXTURE_FLOAT = 'OES_texture_float';\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_half_float\n// Half float is supported by modern mobile browsers, float not yet supported.\n// Half float is provided by default for Webgl2 contexts.\n// This extension implicitly enables the EXT_color_buffer_half_float extension (if supported), which allows rendering to 16-bit floating point formats.\nexport const OES_TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n// TODO: Seems like linear filtering of floats may be supported in some browsers without these extensions?\n// https://www.khronos.org/registry/OpenGL/extensions/OES/OES_texture_float_linear.txt\nexport const OES_TEXTURE_FLOAT_LINEAR = 'OES_texture_float_linear';\nexport const OES_TEXTURE_HAlF_FLOAT_LINEAR = 'OES_texture_half_float_linear';\n// https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n// Adds gl.UNSIGNED_SHORT, gl.UNSIGNED_INT types to textImage2D in WebGL1.0\nexport const WEBGL_DEPTH_TEXTURE = 'WEBGL_depth_texture';\n// EXT_COLOR_BUFFER_FLOAT adds ability to render to a variety of floating pt textures.\n// This is needed for the WebGL2 contexts that do not support OES_TEXTURE_FLOAT / OES_TEXTURE_HALF_FLOAT extensions.\n// https://developer.mozilla.org/en-US/docs/Web/API/EXT_color_buffer_float\n// https://stackoverflow.com/questions/34262493/framebuffer-incomplete-attachment-for-texture-with-internal-format\n// https://stackoverflow.com/questions/36109347/framebuffer-incomplete-attachment-only-happens-on-android-w-firefox\nexport const EXT_COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n// On WebGL 2, EXT_COLOR_BUFFER_HALF_FLOAT is an alternative to using the EXT_color_buffer_float extension on platforms\n// that support 16-bit floating point render targets but not 32-bit floating point render targets.\nexport const EXT_COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n\nexport function getExtension(\n\tcomposer: GPUComposer,\n\textensionName: string,\n\toptional = false,\n) {\n\t// Check if we've already loaded the extension.\n\tif (composer._extensions[extensionName] !== undefined) return composer._extensions[extensionName];\n\n\tconst { gl, _errorCallback, _extensions, verboseLogging } = composer;\n\tlet extension;\n\ttry {\n\t\textension = gl.getExtension(extensionName);\n\t} catch (e) {}\n\tif (extension) {\n\t\t// Cache this extension.\n\t\t_extensions[extensionName] = extension;\n\t\tif (composer.verboseLogging) console.log(`Loaded extension: ${extensionName}.`);\n\t} else {\n\t\t_extensions[extensionName] = false; // Cache the bad extension lookup.\n\t\tif (composer.verboseLogging) console.log(`Unsupported ${optional ? 'optional ' : ''}extension: ${extensionName}.`);\n\t}\n\t// If the extension is not optional, throw error.\n\tif (!extension && !optional) {\n\t\t_errorCallback(`Required extension unsupported by this device / browser: ${extensionName}.`);\n\t}\n\treturn extension;\n}","import * as utils from './utils';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport { GPUProgram } from './GPUProgram';\nimport * as checks from './checks';\nimport * as GPULayerHelpers from './GPULayerHelpers';\nimport * as regex from './regex';\nimport * as extensions from './extensions';\nimport * as polyfills from './polyfills';\n\n// These exports are only used for testing.\n/**\n * @private\n */\nconst _testing = {\n\tisFloatType: utils.isFloatType,\n\tisUnsignedIntType: utils.isUnsignedIntType,\n\tisSignedIntType: utils.isSignedIntType,\n\tisIntType: utils.isIntType,\n\tmakeShaderHeader: utils.makeShaderHeader,\n\tcompileShader: utils.compileShader,\n\tinitGLProgram: utils.initGLProgram,\n\treadyToRead: utils.readyToRead,\n\tpreprocessVertexShader: utils.preprocessVertexShader,\n\tpreprocessFragmentShader: utils.preprocessFragmentShader,\n\tisPowerOf2: utils.isPowerOf2,\n\tinitSequentialFloatArray: utils.initSequentialFloatArray,\n\tuniformInternalTypeForValue: utils.uniformInternalTypeForValue,\n\t...extensions,\n\t...regex,\n\t...checks,\n\t...GPULayerHelpers,\n\t...polyfills,\n}\n\n// Named exports.\nexport * from './constants';\nconst {\n\tisWebGL2,\n\tisWebGL2Supported,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n} = utils;\nexport {\n\tGPUComposer,\n\tGPULayer,\n\tGPUProgram,\n\tisWebGL2,\n\tisWebGL2Supported,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n\t_testing,\n}","import { getSampler2DsInProgram, stripComments } from './regex';\n\n/**\n * Wrap type to use in polyfill.\n * (0) Default behavior (no polyfill).\n * (1) REPEAT polyfill.\n * @private\n */\nexport const SAMPLER2D_WRAP_X = 'GPUIO_WRAP_X';\n/**\n * Wrap type to use in polyfill.\n * (0) Default behavior (no polyfill).\n * (1) REPEAT polyfill.\n * @private\n */\nexport const SAMPLER2D_WRAP_Y = 'GPUIO_WRAP_Y';\n/**\n * Flag to cast texture() result to int type (needed for GLSL1).\n * @private\n */\n export const SAMPLER2D_CAST_INT = 'GPUIO_CAST_INT';\n\n/**\n * Filter type to use in polyfill.\n * (0) Default behavior (no polyfill).\n * (0) LINEAR polyfill.\n * @private\n */\nexport const SAMPLER2D_FILTER = 'GPUIO_FILTER';\n\n/**\n * UV size of half a pixel for this texture.\n * @private\n */\nexport const SAMPLER2D_HALF_PX_UNIFORM = 'u_gpuio_half_px';\n\n/**\n * Dimensions of texture\n * @private\n */\nexport const SAMPLER2D_DIMENSIONS_UNIFORM = 'u_gpuio_dimensions';\n\n/**\n * Override texture function to perform polyfill filter/wrap.\n * https://www.codeproject.com/Articles/236394/Bi-Cubic-and-Bi-Linear-Interpolation-with-GLSL\n * @private\n */\nexport function texturePolyfill(shaderSource: string) {\n\tconst textureCalls = shaderSource.match(/\\btexture\\(/g);\n\tif (!textureCalls || textureCalls.length === 0) return { shaderSource, samplerUniforms: [] };\n\tconst samplerUniforms = getSampler2DsInProgram(shaderSource);\n\tif (samplerUniforms.length === 0) return { shaderSource, samplerUniforms };\n\tsamplerUniforms.forEach((name, i) => {\n\t\tconst regex = new RegExp(`\\\\btexture(2D)?\\\\(\\\\s?${name}\\\\b`, 'gs');\n\t\tshaderSource = shaderSource.replace(regex, `GPUIO_TEXTURE_POLYFILL${i}(${name}`);\n\t});\n\tconst remainingTextureCalls = shaderSource.match(/\\btexture(2D)?\\(/g);\n\tif (remainingTextureCalls?.length) {\n\t\tconsole.warn('Fragment shader polyfill has missed some calls to texture().', shaderSource);\n\t}\n\t\n\tlet polyfillUniforms: {[key: string] : string } = {};\n\tfor (let i = 0; i < samplerUniforms.length; i++) {\n\t\t// Init uniforms with a type.\n\t\tpolyfillUniforms[`${SAMPLER2D_HALF_PX_UNIFORM}${i}`] = 'vec2';\n\t\tpolyfillUniforms[`${SAMPLER2D_DIMENSIONS_UNIFORM}${i}`] = 'vec2';\n\t}\n\n\tfunction make_GPUIO_TEXTURE_POLYFILL(i: number, prefix: string, castOpening = '') {\n\t\tconst castEnding = castOpening === '' ? '' : ')';\n\t\tconst returnPrefix = castOpening === '' ? prefix : 'i';\n\t\treturn `\n${returnPrefix}vec4 GPUIO_TEXTURE_POLYFILL${i}(const ${prefix}sampler2D sampler, const vec2 uv) {\n\t${ prefix === '' ? `#if (${SAMPLER2D_FILTER}${i} == 0)` : ''}\n\t\t#if (${SAMPLER2D_WRAP_X}${i} == 0)\n\t\t\t#if (${SAMPLER2D_WRAP_Y}${i} == 0)\n\t\t\t\treturn ${castOpening}texture(sampler, uv)${castEnding};\n\t\t\t#else\n\t\t\t\treturn ${castOpening}GPUIO_TEXTURE_WRAP_CLAMP_REPEAT(sampler, uv, ${SAMPLER2D_HALF_PX_UNIFORM}${i})${castEnding};\n\t\t\t#endif\n\t\t#else\n\t\t\t#if (${SAMPLER2D_WRAP_Y}${i} == 0)\n\t\t\t\treturn ${castOpening}GPUIO_TEXTURE_WRAP_REPEAT_CLAMP(sampler, uv, ${SAMPLER2D_HALF_PX_UNIFORM}${i})${castEnding};\n\t\t\t#else\n\t\t\t\treturn ${castOpening}GPUIO_TEXTURE_WRAP_REPEAT_REPEAT(sampler, uv, ${SAMPLER2D_HALF_PX_UNIFORM}${i})${castEnding};\n\t\t\t#endif\n\t\t#endif\n\t${ prefix === '' ? `#else\n\t\t#if (${SAMPLER2D_WRAP_X}${i} == 0)\n\t\t\t#if (${SAMPLER2D_WRAP_Y}${i} == 0)\n\t\t\t\treturn ${castOpening}GPUIO_TEXTURE_BILINEAR_INTERP(sampler, uv, ${SAMPLER2D_HALF_PX_UNIFORM}${i}, ${SAMPLER2D_DIMENSIONS_UNIFORM}${i})${castEnding};\n\t\t\t#else\n\t\t\t\treturn ${castOpening}GPUIO_TEXTURE_BILINEAR_INTERP_WRAP_CLAMP_REPEAT(sampler, uv, ${SAMPLER2D_HALF_PX_UNIFORM}${i}, ${SAMPLER2D_DIMENSIONS_UNIFORM}${i})${castEnding};\n\t\t\t#endif\n\t\t#else\n\t\t\t#if (${SAMPLER2D_WRAP_Y}${i} == 0)\n\t\t\t\treturn ${castOpening}GPUIO_TEXTURE_BILINEAR_INTERP_WRAP_REPEAT_CLAMP(sampler, uv, ${SAMPLER2D_HALF_PX_UNIFORM}${i}, ${SAMPLER2D_DIMENSIONS_UNIFORM}${i})${castEnding};\n\t\t\t#else\n\t\t\t\treturn ${castOpening}GPUIO_TEXTURE_BILINEAR_INTERP_WRAP_REPEAT_REPEAT(sampler, uv, ${SAMPLER2D_HALF_PX_UNIFORM}${i}, ${SAMPLER2D_DIMENSIONS_UNIFORM}${i})${castEnding};\n\t\t\t#endif\n\t\t#endif\n\t#endif` : '' }\n}\\n`;\n\t}\n\n\tfunction make_GPUIO_TEXTURE_WRAP(prefix: string) {\n\t\treturn `\n${prefix}vec4 GPUIO_TEXTURE_WRAP_REPEAT_REPEAT(const ${prefix}sampler2D sampler, const vec2 uv, const vec2 halfPx) {\n\treturn texture(sampler, GPUIO_WRAP_REPEAT_UV(uv));\n}\n${prefix}vec4 GPUIO_TEXTURE_WRAP_REPEAT_CLAMP(const ${prefix}sampler2D sampler, vec2 uv, const vec2 halfPx) {\n\tuv.x = GPUIO_WRAP_REPEAT_UV_COORD(uv.x);\n\t// uv.y = GPUIO_WRAP_CLAMP_UV_COORD(uv.y, halfPx.y);\n\treturn texture(sampler, uv);\n}\n${prefix}vec4 GPUIO_TEXTURE_WRAP_CLAMP_REPEAT(const ${prefix}sampler2D sampler, vec2 uv, const vec2 halfPx) {\n\t// uv.x = GPUIO_WRAP_CLAMP_UV_COORD(uv.x, halfPx.x);\n\tuv.y = GPUIO_WRAP_REPEAT_UV_COORD(uv.y);\n\treturn texture(sampler, uv);\n}\\n`;\n\t}\n\n\tfunction make_GPUIO_BILINEAR_INTERP(wrapType: string | null) {\n\t\tconst lookupFunction = wrapType ? `GPUIO_TEXTURE_WRAP_${wrapType}` : 'texture';\n\t\tconst extraParams =  wrapType ? `, halfPx` : '';\n\t\treturn`\nvec4 GPUIO_TEXTURE_BILINEAR_INTERP${ wrapType ? `_WRAP_${wrapType}` : '' }(const sampler2D sampler, const vec2 uv, const vec2 halfPx, const vec2 dimensions) {\n\tvec2 pxFraction = fract(uv * dimensions);\n\tvec2 offset = halfPx - vec2(0.00001, 0.00001) * max(\n\t\t\tstep(abs(pxFraction.x - 0.5), 0.001),\n\t\t\tstep(abs(pxFraction.y - 0.5), 0.001)\n\t\t);\n\tvec2 baseUV = uv - offset;\n\tvec2 diagOffset = vec2(offset.x, -offset.y);\n\tvec4 minmin = ${lookupFunction}(sampler, baseUV${extraParams});\n\tvec4 maxmin = ${lookupFunction}(sampler, uv + diagOffset${extraParams});\n\tvec4 minmax = ${lookupFunction}(sampler, uv - diagOffset${extraParams});\n\tvec4 maxmax = ${lookupFunction}(sampler, uv + offset${extraParams});\n\tvec2 t = fract(baseUV * dimensions);\n\tvec4 yMin = mix(minmin, maxmin, t.x);\n\tvec4 yMax = mix(minmax, maxmax, t.x);\n\treturn mix(yMin, yMax, t.y);\n}\\n`;\n\t}\n\n\tshaderSource = `\n${ Object.keys(polyfillUniforms).map((key) => `uniform ${polyfillUniforms[key]} ${key};`).join('\\n') }\n\nfloat GPUIO_WRAP_REPEAT_UV_COORD(const float coord) {\n\treturn fract(coord + ceil(abs(coord)));\n}\nvec2 GPUIO_WRAP_REPEAT_UV(const vec2 uv) {\n\treturn fract(uv + ceil(abs(uv)));\n}\n// float GPUIO_WRAP_CLAMP_UV_COORD(const float coord, const float halfPx) {\n// \treturn clamp(coord, halfPx, 1.0 - halfPx);\n// }\n\n${ make_GPUIO_TEXTURE_WRAP('') }\n#if (__VERSION__ == 300)\n${ ['u', 'i'].map(prefix => make_GPUIO_TEXTURE_WRAP(prefix)).join('\\n') }\n#endif\n\n${ [ null,\n\t'REPEAT_REPEAT',\n\t'REPEAT_CLAMP',\n\t'CLAMP_REPEAT',\n].map(wrap => make_GPUIO_BILINEAR_INTERP(wrap)).join('\\n') }\n\n${ samplerUniforms.map((uniform, index) => {\nreturn `#ifndef ${SAMPLER2D_CAST_INT}${index}\n\t${ make_GPUIO_TEXTURE_POLYFILL(index, '') }\n#endif`}).join('\\n') }\n#if (__VERSION__ == 300)\n${ ['u', 'i'].map(prefix => {\n\treturn samplerUniforms.map((uniform, index) => {\n\t\treturn make_GPUIO_TEXTURE_POLYFILL(index, prefix);\n\t}).join('\\n');\n}).join('\\n') }\n#else\n\t${ samplerUniforms.map((uniform, index) => {\nreturn `#ifdef ${SAMPLER2D_CAST_INT}${index}\n\t${make_GPUIO_TEXTURE_POLYFILL(index, '', 'ivec4(') }\n#endif`}).join('\\n') }\n#endif\n\n${shaderSource}`;\n\treturn {\n\t\tshaderSource,\n\t\tsamplerUniforms,\n\t}\n}\n\ntype T = 'float' | 'vec2' | 'vec3' | 'vec4';\ntype TI = 'int' | 'ivec2' | 'ivec3' | 'ivec4';\ntype TU = 'uint' | 'uvec2' | 'uvec3' | 'uvec4';\ntype TB = 'bool' | 'bvec2' | 'bvec3' | 'bvec4';\n\nfunction floatTypeForIntType(type: TI | TU): T {\n\tswitch(type) {\n\t\tcase 'int':\n\t\tcase 'uint':\n\t\t\treturn 'float';\n\t\tcase 'ivec2':\n\t\tcase 'uvec2':\n\t\t\treturn 'vec2';\n\t\tcase 'ivec3':\n\t\tcase 'uvec3':\n\t\t\treturn 'vec3';\n\t\tcase 'ivec4':\n\t\tcase 'uvec4':\n\t\t\treturn 'vec4';\n\t}\n\tthrow new Error(`Unknown type ${type}.`);\n}\n\nfunction floatTypeForBoolType(type: TB): T {\n\tswitch(type) {\n\t\tcase 'bool':\n\t\t\treturn 'float';\n\t\tcase 'bvec2':\n\t\t\treturn 'vec2';\n\t\tcase 'bvec3':\n\t\t\treturn 'vec3';\n\t\tcase 'bvec4':\n\t\t\treturn 'vec4';\n\t}\n\tthrow new Error(`Unknown type ${type}.`);\n}\n\nlet GLSL1_POLYFILLS: string;\n/**\n * Polyfill common functions/operators that GLSL1 lacks.\n * @private\n */\nexport function GLSL1Polyfills() {\n\tif (GLSL1_POLYFILLS) return GLSL1_POLYFILLS;\n\n\tconst abs = (type: TI) => `${type} abs(const ${type} a) { return ${type}(abs(${floatTypeForIntType(type)}(a))); }`;\n\tconst sign = (type: TI) => `${type} sign(const ${type} a) { return ${type}(sign(${floatTypeForIntType(type)}(a))); }`;\n\tconst trunc = (type: T) => `${type} trunc(const ${type} a) { return round(a - fract(a) * sign(a)); }`;\n\tconst round = (type: T) => `${type} round(const ${type} a) { return floor(a + 0.5); }`;\n\tconst roundEven = (type: T) => `${type} roundEven(const ${type} a) { return 2.0 * round(a / 2.0); }`;\n\tconst min = (type1: TI, type2: TI) => `${type1} min(const ${type1} a, const ${type2} b) { return ${type1}(min(${floatTypeForIntType(type1)}(a), ${floatTypeForIntType(type2)}(b))); }`;\n\tconst max = (type1: TI, type2: TI) => `${type1} max(const ${type1} a, const ${type2} b) { return ${type1}(max(${floatTypeForIntType(type1)}(a), ${floatTypeForIntType(type2)}(b))); }`;\n\tconst clamp = (type1: TI, type2: TI) => `${type1} clamp(const ${type1} a, const ${type2} min, const ${type2} max) { return ${type1}(clamp(${floatTypeForIntType(type1)}(a), ${floatTypeForIntType(type2)}(min), ${floatTypeForIntType(type2)}(max))); }`;\n\tconst mix = (type1: T, type2: TB) => `${type1} mix(const ${type1} a, const ${type1} b, const ${type2} c) { return mix(a, b, ${floatTypeForBoolType(type2)}(c)); }`;\n\tconst det2 = (n: number, m: number, size: number) => `a[${n}][${m}] * a[${(n + 1) % size}][${(m + 1) % size}] - a[${(n + 1) % size}][${m}] * a[${n}][${(m + 1) % size}]`;\n\t// TODO: I don't think these are quite right yet.\n\tconst det3 = (n: number, m: number, size: number) => [0, 1, 2].map(offset => `a[${n}][${(m + offset) % size}] * (${det2((n + 1) % size, (m + 1 + offset) % size, size)})`).join(' + ');\n\tconst det4 = (n: number, m: number, size: number) => [0, 1, 2, 3].map(offset => `a[${n}][${(m + offset) % size}] * (${det3((n + 1) % size, (m + 1 + offset) % size, size)})`).join(' + ');\n\n\t// We don't need to create unsigned int polyfills, bc unsigned int is not a supported type in GLSL1.\n\t// All unsigned int variables will be cast as int and be caught by the signed int polyfills.\n\tGLSL1_POLYFILLS = `\n${abs('int')}\n${abs('ivec2')}\n${abs('ivec3')}\n${abs('ivec4')}\n\n${sign('int')}\n${sign('ivec2')}\n${sign('ivec3')}\n${sign('ivec4')}\n\n${round('float')}\n${round('vec2')}\n${round('vec3')}\n${round('vec4')}\n\n${trunc('float')}\n${trunc('vec2')}\n${trunc('vec3')}\n${trunc('vec4')}\n\n${roundEven('float')}\n${roundEven('vec2')}\n${roundEven('vec3')}\n${roundEven('vec4')}\n\n${min('int', 'int')}\n${min('ivec2', 'ivec2')}\n${min('ivec3', 'ivec3')}\n${min('ivec4', 'ivec4')}\n${min('ivec2', 'int')}\n${min('ivec3', 'int')}\n${min('ivec4', 'int')}\n\n${max('int', 'int')}\n${max('ivec2', 'ivec2')}\n${max('ivec3', 'ivec3')}\n${max('ivec4', 'ivec4')}\n${max('ivec2', 'int')}\n${max('ivec3', 'int')}\n${max('ivec4', 'int')}\n\n${clamp('int', 'int')}\n${clamp('ivec2', 'ivec2')}\n${clamp('ivec3', 'ivec3')}\n${clamp('ivec4', 'ivec4')}\n${clamp('ivec2', 'int')}\n${clamp('ivec3', 'int')}\n${clamp('ivec4', 'int')}\n\n${mix('float', 'bool')}\n${mix('vec2', 'bvec2')}\n${mix('vec3', 'bvec3')}\n${mix('vec4', 'bvec4')}\n\nmat2 outerProduct(const vec2 a, const vec2 b) {\n\treturn mat2(\n\t\ta.x * b.x, a.x * b.y,\n\t\ta.y * b.x, a.y * b.y\n\t);\n}\nmat3 outerProduct(const vec3 a, const vec3 b) {\n\treturn mat3(\n\t\ta.x * b.x, a.x * b.y, a.x * b.z,\n\t\ta.y * b.x, a.y * b.y, a.y * b.z,\n\t\ta.z * b.x, a.z * b.y, a.z * b.z\n\t);\n}\nmat4 outerProduct(const vec4 a, const vec4 b) {\n\treturn mat4(\n\t\ta.x * b.x, a.x * b.y, a.x * b.z, a.x * b.w,\n\t\ta.y * b.x, a.y * b.y, a.y * b.z, a.y * b.w,\n\t\ta.z * b.x, a.z * b.y, a.z * b.z, a.z * b.w,\n\t\ta.w * b.x, a.w * b.y, a.w * b.z, a.w * b.w\n\t);\n}\nmat2 transpose(mat2 a) {\n\tfloat temp = a[0][1];\n\ta[0][1] = a[1][0];\n\ta[1][0] = temp;\n\treturn a;\n}\nmat3 transpose(mat3 a) {\n\tfloat temp = a[0][2];\n\ta[0][2] = a[2][0];\n\ta[2][0] = temp;\n\ttemp = a[0][1];\n\ta[0][1] = a[1][0];\n\ta[1][0] = temp;\n\ttemp = a[1][2];\n\ta[1][2] = a[2][1];\n\ta[2][1] = temp;\n\treturn a;\n}\nmat4 transpose(mat4 a) {\n\tfloat temp = a[0][3];\n\ta[0][3] = a[3][0];\n\ta[3][0] = temp;\n\ttemp = a[0][2];\n\ta[0][2] = a[2][0];\n\ta[2][0] = temp;\n\ttemp = a[2][3];\n\ta[2][3] = a[3][2];\n\ta[3][2] = temp;\n\ttemp = a[0][1];\n\ta[0][1] = a[1][0];\n\ta[1][0] = temp;\n\ttemp = a[1][2];\n\ta[1][2] = a[2][1];\n\ta[2][1] = temp;\n\ttemp = a[2][3];\n\ta[2][3] = a[3][2];\n\ta[3][2] = temp;\n\treturn a;\n}\n\nfloat determinant(const mat2 a) {\n\treturn ${ det2(0, 0, 2) };\n}\nfloat determinant(const mat3 a) {\n\treturn ${ det3(0, 0, 3) };\n}\nfloat determinant(const mat4 a) {\n\treturn ${ det4(0, 0, 4) };\n}\n` + \n// Copied from https://github.com/gpujs/gpu.js/blob/master/src/backend/web-gl/fragment-shader.js\n`\nfloat cosh(const float x) {\n\treturn (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\nfloat sinh(const float x) {\n\treturn (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\nfloat tanh(const float x) {\n\tfloat e = exp(2.0 * x);\n\treturn (e - 1.0) / (e + 1.0);\n}\nfloat asinh(const float x) {\n\treturn log(x + sqrt(x * x + 1.0));\n}\nfloat acosh(const float x) {\n\treturn log(x + sqrt(x * x - 1.0));\n}\nfloat atanh(float x) {\n\tx = (x + 1.0) / (x - 1.0);\n\treturn 0.5 * log(x * sign(x));\n}`;\n\treturn GLSL1_POLYFILLS;\n}\n\nlet FRAGMENT_SHADER_POLYFILLS: string;\n/**\n * Polyfills to be make available for both GLSL1 and GLSL3fragment shaders.\n * @private\n */\nexport function fragmentShaderPolyfills() {\n\tif (FRAGMENT_SHADER_POLYFILLS) return FRAGMENT_SHADER_POLYFILLS;\n\n\tconst mod = (type1: TI | TU, type2: TI | TU) => `${type1} mod(const ${type1} x, const ${type2} y) { return x - y * (x / y); }`;\n\tconst bitshiftLeft = (type1: TI | TU, type2: TI | TU) => `${type1} bitshiftLeft(const ${type1} a, const ${type2} b) { return a * ${type1}(pow(${floatTypeForIntType(type2)}(2.0), ${floatTypeForIntType(type2)}(b))); }`;\n\tconst bitshiftRight = (type1: TI | TU, type2: TI | TU) => `${type1} bitshiftRight(const ${type1} a, const ${type2} b) { return ${type1}(round(${floatTypeForIntType(type1)}(a) / pow(${floatTypeForIntType(type2)}(2.0), ${floatTypeForIntType(type2)}(b)))); }`;\n\n\t// Copied from https://github.com/gpujs/gpu.js/blob/master/src/backend/web-gl/fragment-shader.js\n\t// Seems like these could be optimized.\n\tconst bitwiseOr = (numBits: 8 | 16 | 32) => {\nreturn `int bitwiseOr${numBits === 32 ? '' : numBits}(int a, int b) {\n\tint result = 0;\n\tint n = 1;\n\t\n\tfor (int i = 0; i < ${numBits}; i++) {\n\t\tif ((mod(a, 2) == 1) || (mod(b, 2) == 1)) {\n\t\t\tresult += n;\n\t\t}\n\t\ta = a / 2;\n\t\tb = b / 2;\n\t\tn = n * 2;\n\t\tif(!(a > 0 || b > 0)) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}`; };\nconst bitwiseXOR = (numBits: 8 | 16 | 32) => {\nreturn `int bitwiseXOR${numBits === 32 ? '' : numBits}(int a, int b) {\n\tint result = 0;\n\tint n = 1;\n\t\n\tfor (int i = 0; i < ${numBits}; i++) {\n\t\tif ((mod(a, 2) == 1) != (mod(b, 2) == 1)) {\n\t\t\tresult += n;\n\t\t}\n\t\ta = a / 2;\n\t\tb = b / 2;\n\t\tn = n * 2;\n\t\tif(!(a > 0 || b > 0)) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}`; }\n\tconst bitwiseAnd = (numBits: 8 | 16 | 32) => {\nreturn `int bitwiseAnd${numBits === 32 ? '' : numBits}(int a, int b) {\n\tint result = 0;\n\tint n = 1;\n\tfor (int i = 0; i < ${numBits}; i++) {\n\t\tif ((mod(a, 2) == 1) && (mod(b, 2) == 1)) {\n\t\t\tresult += n;\n\t\t}\n\t\ta = a / 2;\n\t\tb = b / 2;\n\t\tn = n * 2;\n\t\tif(!(a > 0 && b > 0)) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}`; };\n\tconst bitwiseNot = (numBits: 8 | 16 | 32) => {\nreturn `int bitwiseNot${numBits === 32 ? '' : numBits}(int a) {\n\tint result = 0;\n\tint n = 1;\n\n\tfor (int i = 0; i < ${numBits}; i++) {\n\t\tif (mod(a, 2) == 0) {\n\t\t\tresult += n;\n\t\t}\n\t\ta = a / 2;\n\t\tn = n * 2;\n\t}\n\treturn result;\n}`; }\n\n\tFRAGMENT_SHADER_POLYFILLS = `\n${mod('int', 'int')}\n${mod('ivec2', 'ivec2')}\n${mod('ivec3', 'ivec3')}\n${mod('ivec4', 'ivec4')}\n${mod('ivec2', 'int')}\n${mod('ivec3', 'int')}\n${mod('ivec4', 'int')}\n#if (__VERSION__ == 300)\n${mod('uint', 'uint')}\n${mod('uvec2', 'uvec2')}\n${mod('uvec3', 'uvec3')}\n${mod('uvec4', 'uvec4')}\n${mod('uvec2', 'uint')}\n${mod('uvec3', 'uint')}\n${mod('uvec4', 'uint')}\n#endif\n\n${bitshiftLeft('int', 'int')}\n${bitshiftLeft('ivec2', 'ivec2')}\n${bitshiftLeft('ivec3', 'ivec3')}\n${bitshiftLeft('ivec4', 'ivec4')}\n${bitshiftLeft('ivec2', 'int')}\n${bitshiftLeft('ivec3', 'int')}\n${bitshiftLeft('ivec4', 'int')}\n#if (__VERSION__ == 300)\n${bitshiftLeft('uint', 'uint')}\n${bitshiftLeft('uvec2', 'uvec2')}\n${bitshiftLeft('uvec3', 'uvec3')}\n${bitshiftLeft('uvec4', 'uvec4')}\n${bitshiftLeft('uvec2', 'uint')}\n${bitshiftLeft('uvec3', 'uint')}\n${bitshiftLeft('uvec4', 'uint')}\n#endif\n\n${bitshiftRight('int', 'int')}\n${bitshiftRight('ivec2', 'ivec2')}\n${bitshiftRight('ivec3', 'ivec3')}\n${bitshiftRight('ivec4', 'ivec4')}\n${bitshiftRight('ivec2', 'int')}\n${bitshiftRight('ivec3', 'int')}\n${bitshiftRight('ivec4', 'int')}\n#if (__VERSION__ == 300)\n${bitshiftRight('uint', 'uint')}\n${bitshiftRight('uvec2', 'uvec2')}\n${bitshiftRight('uvec3', 'uvec3')}\n${bitshiftRight('uvec4', 'uvec4')}\n${bitshiftRight('uvec2', 'uint')}\n${bitshiftRight('uvec3', 'uint')}\n${bitshiftRight('uvec4', 'uint')}\n#endif\n\n${bitwiseOr(8)}\n${bitwiseOr(16)}\n${bitwiseOr(32)}\n\n${bitwiseXOR(8)}\n${bitwiseXOR(16)}\n${bitwiseXOR(32)}\n\n${bitwiseAnd(8)}\n${bitwiseAnd(16)}\n${bitwiseAnd(32)}\n\n${bitwiseNot(8)}\n${bitwiseNot(16)}\n${bitwiseNot(32)}\n\n#if (__VERSION__ == 300)\n${ [8, 16, ''].map(suffix => {\nreturn `\nuint bitwiseOr${suffix}(uint a, uint b) {\n\treturn uint(bitwiseOr${suffix}(int(a), int(b)));\n}\nuint bitwiseXOR${suffix}(uint a, uint b) {\n\treturn uint(bitwiseXOR${suffix}(int(a), int(b)));\n}\nuint bitwiseAnd${suffix}(uint a, uint b) {\n\treturn uint(bitwiseAnd${suffix}(int(a), int(b)));\n}\nuint bitwiseNot${suffix}(uint a) {\n\treturn uint(bitwiseNot${suffix}(int(a)));\n}` }).join('\\n')}\n\n#endif\n`;\n\treturn FRAGMENT_SHADER_POLYFILLS;\n}\n","import { GLSLVersion, GLSL3 } from './constants';\n\n/**\n * Helper functions for converting GLSL3 to GLSL1 and checking for valid shader code.\n * Note: there is no positive lookbehind support in some browsers, use capturing parens instead.\n * https://stackoverflow.com/questions/3569104/positive-look-behind-in-javascript-regular-expression/3569116#3569116\n */\n\nfunction escapeRegExp(string: string){\n\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\n/**\n * Typecast variable assignment.\n * This is used in cases when e.g. varyings have to be converted to float in GLSL1.\n * @private\n */\nexport function typecastVariable(shaderSource: string, variableName: string, type: string) {\n\t// \"s\" makes this work for multiline values.\n\t// Do this without lookbehind to support older browsers.\n\t// const regexMatch = new RegExp(`(?<=\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*)\\\\S[^;]*(?=;)`, 'sg');\n\tconst regexMatch = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*\\\\S[^;]*;`, 'sg');\n\tconst assignmentExpressions = shaderSource.match(regexMatch);\n\tif (assignmentExpressions) {\n\t\t// Loop through all places where variable is assigned and typecast.\n\t\tfor (let i = 0; i < assignmentExpressions.length; i++) {\n\t\t\tconst regexValueMatch = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*(\\\\S[^;]*);`, 's');\n\t\t\tconst value = assignmentExpressions[i].match(regexValueMatch);\n\t\t\tif (value && value[1]) {\n\t\t\t\tconst regexReplace = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*${escapeRegExp(value[1])}\\\\s*;`, 's');\n\t\t\t\tshaderSource = shaderSource.replace(regexReplace, `${variableName} = ${type}(${value[1]});`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`Could not find value in expression: \"${assignmentExpressions[i]}\"`);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconsole.warn(`No assignment found for shader variable ${variableName}.`);\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader \"in\" to \"attribute\".\n * @private\n */\nexport function glsl1VertexIn(shaderSource: string) {\n\treturn shaderSource.replace(/\\bin\\b/g, 'attribute');\n}\n\n/**\n * Convert int varyings to float types.\n * Also update any variable assignments so that they are cast to float.\n * @private\n */\nfunction _castVaryingToFloat(shaderSource: string, regexString: string, type: string) {\n\t// Do this without lookbehind to support older browsers.\n\t// const regexMatch = new RegExp(`(?<=${regexString}\\\\s+)\\\\S[^;]*(?=;)`, 'g');\n\tconst regexMatch = new RegExp(`${regexString}\\\\s+\\\\S[^;]*;`, 'g');\n\tconst castToFloatExpressions = shaderSource.match(regexMatch);\n\tif (castToFloatExpressions) {\n\t\t// Replace all with new type.\n\t\tconst regexReplace = new RegExp(`${regexString}\\\\b`, 'g');\n\t\tshaderSource = shaderSource.replace(regexReplace, `varying ${type}`);\n\t\t// Loop through each expression, grab variable name, and cast all assignments.\n\t\tfor (let i = 0; i < castToFloatExpressions.length; i++) {\n\t\t\tconst regexVariableMatch = new RegExp(`${regexString}\\\\s+(\\\\S[^;]*);`);\n\t\t\tconst variable = castToFloatExpressions[i].match(regexVariableMatch);\n\t\t\tif (variable && variable[2]) {\n\t\t\t\tshaderSource = typecastVariable(shaderSource, variable[2], type);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`Could not find variable name in expression: \"${castToFloatExpressions[i]}\"`);\n\t\t\t}\n\t\t}\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Convert int varyings to float types.\n * Only exported for testing.\n * @private\n */\nexport function castVaryingToFloat(shaderSource: string) {\n\t// Need to init all expressions with the same number of capturing groups\n\t// so that this will work in _castVaryingToFloat.\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(u)?int', 'float');\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec2', 'vec2');\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec3', 'vec3');\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec4', 'vec4');\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader \"out\" to \"varying\".\n * Also remove \"flat\" if necessary.\n * Also cast as float if necessary.\n * @private\n */\nexport function glsl1VertexOut(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/(\\bflat\\s+)?\\bout\\b/g, 'varying');\n\tshaderSource = castVaryingToFloat(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert fragment shader \"in\" to \"varying\".\n * Also remove \"flat\" if necessary.\n * Also cast as float if necessary.\n * @private\n */\nexport function glsl1FragmentIn(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/(\\bflat\\s+)?\\bin\\b/g, 'varying');\n\tshaderSource = castVaryingToFloat(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Contains out_fragColor.\n * @private\n */\nfunction containsOutFragColor(shaderSource: string) {\n\treturn !!shaderSource.match(/\\bout_fragColor\\b/);\n}\n\n/**\n * Contains gl_FragColor.\n * @private\n */\nfunction containsGLFragColor(shaderSource: string) {\n\treturn !!shaderSource.match(/\\bgl_FragColor\\b/);\n}\n\n/**\n * Get type (int, float, vec3, etc) of fragment out.\n * Only exported for testing.\n * @private\n */\nexport function getFragmentOutType(shaderSource: string, name: string) {\n\t// Do this without lookbehind to support older browsers.\n\t// const type = shaderSource.match(/(?<=\\bout\\s+((lowp|mediump|highp)\\s+)?)(float|int|((i|u)?vec(2|3|4)))(?=\\s+out_fragColor;)/);\n\tconst type = shaderSource.match(/\\bout\\s+((lowp|mediump|highp)\\s+)?((float|int|((i|u)?vec(2|3|4))))\\s+out_fragColor;/);\n\tif (!type || !type[3]) {\n\t\tthrow new Error(`No type found in out_fragColor declaration for GPUProgram \"${name}\".`);\n\t}\n\treturn type[3] as 'float' | 'int' | 'vec2' | 'vec3' | 'vec4' | 'ivec2' | 'ivec3' | 'ivec4' | 'uvec2' | 'uvec3' | 'uvec4';\n}\n\n/**\n * Convert out_fragColor to gl_FragColor.\n * @private\n */\nexport function glsl1FragmentOut(shaderSource: string, name: string) {\n\tif (containsOutFragColor(shaderSource)) {\n\t\tconst type = getFragmentOutType(shaderSource, name);\n\t\t// Remove out_fragColor declaration.\n\t\tshaderSource = shaderSource.replace(/\\bout\\s+((lowp|mediump|highp)\\s+)?\\w+\\s+out_fragColor\\s*;/g, '');\n\t\tlet assignmentFound = false;\n\t\twhile (true) {\n\t\t\t// Replace each instance of out_fragColor = with gl_FragColor = and cast to vec4.\n\t\t\t// Do this without lookbehind to support older browsers.\n\t\t\t// const output = shaderSource.match(/(?<=\\bout_fragColor\\s*=\\s*)\\S.*(?=;)/s); // /s makes this work for multiline.\n\t\t\tconst output = shaderSource.match(/\\bout_fragColor\\s*=\\s*(\\S.*);/s); // /s makes this work for multiline.\n\t\t\tif (output && output[1]) {\n\t\t\t\tassignmentFound = true;\n\t\t\t\tlet filler = '';\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'float':\n\t\t\t\t\tcase 'int':\n\t\t\t\t\t\tfiller = ', 0, 0, 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vec2':\n\t\t\t\t\tcase 'ivec2':\n\t\t\t\t\tcase 'uvec2':\n\t\t\t\t\t\tfiller = ', 0, 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vec3':\n\t\t\t\t\tcase 'ivec3':\n\t\t\t\t\tcase 'uvec3':\n\t\t\t\t\t\tfiller = ', 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tshaderSource = shaderSource.replace(/\\bout_fragColor\\s*=\\s*.+;/s, `gl_FragColor = vec4(${output[1]}${filler});`);\n\t\t\t} else {\n\t\t\t\tif (!assignmentFound) throw new Error(`No assignment found for out_fragColor in GPUProgram \"${name}\".`);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Check that out_fragColor or gl_FragColor is present in fragment shader source.\n * @private \n */\n export function checkFragmentShaderForFragColor(shaderSource: string, glslVersion: GLSLVersion, name: string) {\n\tconst gl_FragColor = containsGLFragColor(shaderSource);\n\tconst out_fragColor = containsOutFragColor(shaderSource);\n\tif (glslVersion === GLSL3) {\n\t\t// Check that fragment shader source DOES NOT contain gl_FragColor\n\t\tif (gl_FragColor) {\n\t\t\tthrow new Error(`Found \"gl_FragColor\" declaration in fragment shader for GPUProgram \"${name}\": either init GPUComposer with glslVersion = GLSL1 or use GLSL3 syntax in your fragment shader.`);\n\t\t}\n\t\t// Check that fragment shader source DOES contain out_fragColor.\n\t\tif (!out_fragColor) {\n\t\t\tthrow new Error(`Found no \"out_fragColor\" (GLSL3) or \"gl_FragColor\" (GLSL1) declarations or  in fragment shader for GPUProgram \"${name}\".`);\n\t\t}\n\t} else {\n\t\t// Check that fragment shader source DOES contain either gl_FragColor or out_fragColor.\n\t\tif (!gl_FragColor && !out_fragColor) {\n\t\t\tthrow new Error(`Found no \"out_fragColor\" (GLSL3) or \"gl_FragColor\" (GLSL1) declarations or  in fragment shader for GPUProgram \"${name}\".`);\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Convert texture to texture2D.\n * @private\n */\nexport function glsl1Texture(shaderSource: string) {\n\treturn shaderSource.replace(/\\btexture\\(/g, 'texture2D(');\n}\n\n/**\n * Convert isampler2D and usampler2D to sampler2D.\n * @private\n */\nexport function glsl1Sampler2D(shaderSource: string) {\n\treturn shaderSource.replace(/\\b(i|u)sampler2D\\b/g, 'sampler2D');\n}\n\n/**\n * Unsigned int types are not supported, use int types instead.\n * @private\n */\nexport function glsl1Uint(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/\\buint\\b/g, 'int');\n\tshaderSource = shaderSource.replace(/\\buvec2\\b/g, 'ivec2');\n\tshaderSource = shaderSource.replace(/\\buvec3\\b/g, 'ivec3');\n\tshaderSource = shaderSource.replace(/\\buvec4\\b/g, 'ivec4');\n\tshaderSource = shaderSource.replace(/\\buint\\(/g, 'int(');\n\tshaderSource = shaderSource.replace(/\\buvec2\\(/g, 'ivec2(');\n\tshaderSource = shaderSource.replace(/\\buvec3\\(/g, 'ivec3(');\n\tshaderSource = shaderSource.replace(/\\buvec4\\(/g, 'ivec4(');\n\treturn shaderSource;\n}\n\n/**\n * Replace all highp with mediump.\n * @private\n */\nexport function highpToMediump(shaderSource: string) {\n\treturn shaderSource.replace(/\\bhighp\\b/, 'mediump');\n}\n\n/**\n * Strip out any version numbers.\n * https://github.com/Jam3/glsl-version-regex\n * @private\n */\nexport function stripVersion(shaderSource: string) {\n\tconst origLength = shaderSource.length;\n\tshaderSource = shaderSource.replace(/^\\s*\\#version\\s+([0-9]+(\\s+(es)+)?)\\s*/, '');\n\tif (shaderSource.length !== origLength) {\n\t\tconsole.warn('GPUIO expects shader source that does not contain #version declarations, removing....');\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Strip out any precision declarations.\n * @private\n */\nexport function stripPrecision(shaderSource: string) {\n\tconst origLength = shaderSource.length;\n\tshaderSource = shaderSource.replace(/\\s*precision\\s+((highp)|(mediump)|(lowp))\\s+[a-zA-Z0-9]+\\s*;/g, '');\n\tif (shaderSource.length !== origLength) {\n\t\tconsole.warn('GPUIO expects shader source that does not contain precision declarations, removing....');\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Strip out comments from shader code.\n * @private\n */\nexport function stripComments(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/\\s?\\/\\/.*\\n/g, ''); // Remove single-line comments.\n\t// ? puts this in lazy mode (match shortest strings).\n\tshaderSource = shaderSource.replace(/\\/\\*.*?\\*\\//gs, ''); /* Remove multi-line comments */\n\treturn shaderSource;\n}\n\n/**\n * Get the number of sampler2D's in a fragment shader program.\n * @private\n */\nexport function getSampler2DsInProgram(shaderSource: string) {\n\t// Do this without lookbehind to support older browsers.\n\t// const samplers = shaderSource.match(/(?<=\\buniform\\s+(((highp)|(mediump)|(lowp))\\s+)?(i|u)?sampler2D\\s+)\\w+(?=\\s?;)/g);\n\tconst samplersNoDuplicates: {[key: string]: boolean} = {};\n\tconst regex = '\\\\buniform\\\\s+(((highp)|(mediump)|(lowp))\\\\s+)?(i|u)?sampler2D\\\\s+(\\\\w+)\\\\s?;';\n\tconst samplers = shaderSource.match(new RegExp(regex, 'g'));\n\tif (!samplers || samplers.length === 0) return [];\n\t// We need to be a bit careful as same sampler could be declared multiple times if compile-time args are used.\n\t// Extract uniform name.\n\tconst uniformMatch = new RegExp(regex);\n\tsamplers.forEach(sampler => {\n\t\tconst uniform = sampler.match(uniformMatch);\n\t\tif (!uniform || !uniform[7]) {\n\t\t\tconsole.warn(`Could not find sampler2D uniform name in string \"${sampler}\".`);\n\t\t\treturn;\n\t\t}\n\t\tsamplersNoDuplicates[uniform[7]] = true;\n\t})\n\treturn Object.keys(samplersNoDuplicates);\n}","import {\n\tisArray,\n\tisBoolean,\n\tisInteger,\n\tisNonNegativeInteger,\n\tisNumber,\n\tisString,\n} from './checks';\nimport {\n\tBOOL,\n\tBOOL_1D_UNIFORM,\n\tBOOL_2D_UNIFORM,\n\tBOOL_3D_UNIFORM,\n\tBOOL_4D_UNIFORM,\n\tBYTE,\n\tCompileTimeVars,\n\tDEFAULT_ERROR_CALLBACK,\n\tErrorCallback,\n\tFLOAT,\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tGLSL1,\n\tGLSL3,\n\tGLSLPrecision,\n\tGLSLVersion,\n\tGPULayerType,\n\tHALF_FLOAT,\n\tINT,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tPRECISION_HIGH_P,\n\tPRECISION_LOW_P,\n\tPRECISION_MEDIUM_P,\n\tSHORT,\n\tUINT,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n\tUniformType,\n\tUniformValue,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_INT,\n\tUNSIGNED_SHORT,\n\tWEBGL1,\n\tWEBGL2,\n} from './constants';\nimport { fragmentShaderPolyfills, GLSL1Polyfills, texturePolyfill } from './polyfills';\nimport {\n\tcheckFragmentShaderForFragColor,\n\tglsl1FragmentIn,\n\tglsl1FragmentOut,\n\tglsl1Sampler2D,\n\tglsl1Texture,\n\tglsl1Uint,\n\tglsl1VertexIn,\n\tglsl1VertexOut,\n\thighpToMediump,\n\tstripComments,\n\tstripPrecision,\n\tstripVersion,\n} from './regex';\nconst precisionSource = require('./glsl/common/precision.glsl');\n\n/**\n * Memoize results of more complex WebGL tests (that require allocations/deallocations).\n * @private\n */\nconst results = {\n\tsupportsWebGL2: undefined as undefined | boolean,\n\tsupportsHighpVertex: undefined as  undefined | boolean,\n\tsupportsHighpFragment: undefined as undefined | boolean,\n\tmediumpVertexPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n\tmediumpFragmentPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n}\n\n/**\n * Test whether a GPULayer type is a float type.\n * @private\n */\nexport function isFloatType(type: GPULayerType) {\n\treturn type === FLOAT || type === HALF_FLOAT;\n}\n\n/**\n * Test whether a GPULayer type is an unsigned int type.\n * @private\n */\n export function isUnsignedIntType(type: GPULayerType) {\n\treturn type === UNSIGNED_BYTE || type === UNSIGNED_SHORT || type === UNSIGNED_INT;\n}\n\n/**\n * Test whether a GPULayer type is a signed int type.\n * @private\n */\n export function isSignedIntType(type: GPULayerType) {\n\treturn type === BYTE || type === SHORT || type === INT;\n}\n\n/**\n * Test whether a GPULayer type is a int type.\n * @private\n */\n export function isIntType(type: GPULayerType) {\n\treturn isUnsignedIntType(type) || isSignedIntType(type);\n}\n\n/**\n * Enum for precision values.\n * See src/glsl/common/precision.glsl for more info.\n * @private\n */\nfunction intForPrecision(precision: GLSLPrecision) {\n\tif (precision === PRECISION_HIGH_P) return 2;\n\tif (precision === PRECISION_MEDIUM_P) return 1;\n\tif (precision === PRECISION_LOW_P) return 0;\n\tthrow new Error(`Unknown shader precision value: ${JSON.stringify(precision)}.`);\n}\n\n/**\n * Create a string to pass defines into shader.\n * @private\n */\nfunction convertDefinesToString(defines: CompileTimeVars) {\n\tlet definesSource = '';\n\tconst keys = Object.keys(defines);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\t// Check that define is passed in as a string.\n\t\tif (!isString(key) || !isString(defines[key])) {\n\t\t\tthrow new Error(`GPUProgram defines must be passed in as key value pairs that are both strings, got key value pair of type [${typeof key} : ${typeof defines[key]}] for key ${key}.`)\n\t\t}\n\t\tdefinesSource += `#define ${key} ${defines[key]}\\n`;\n\t}\n\treturn definesSource;\n}\n\n/**\n * Create header string for fragment and vertex shaders.\n * Export this for testing purposes.\n * @private\n */\nexport function makeShaderHeader(\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tdefines?: CompileTimeVars,\n) {\n\tconst versionSource = glslVersion === GLSL3 ? `#version ${GLSL3}\\n` : '';\n\tconst definesSource = defines ? convertDefinesToString(defines) : '';\n\tconst precisionDefinesSource = convertDefinesToString({\n\t\tGPUIO_INT_PRECISION: `${intForPrecision(intPrecision)}`,\n\t\tGPUIO_FLOAT_PRECISION: `${intForPrecision(floatPrecision)}`,\n\t});\n\treturn `${versionSource}${definesSource}${precisionDefinesSource}${precisionSource}`;\n}\n\n/**\n * Compile vertex or fragment shaders.\n * Fragment shaders may be compiled on the fly, so keep this efficient.\n * Copied from http://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html\n * @private\n */\nexport function compileShader(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tshaderSource: string,\n\tshaderType: number,\n\tprogramName: string,\n\terrorCallback: ErrorCallback,\n\tdefines?: CompileTimeVars,\n\tcheckCompileStatus = false,\n) {\n\t// Create the shader object\n\tconst shader = gl.createShader(shaderType);\n\tif (!shader) {\n\t\terrorCallback('Unable to init gl shader.');\n\t\treturn null;\n\t}\n\n\t// Set the shader source code.\n\tconst shaderHeader = makeShaderHeader(\n\t\tglslVersion,\n\t\tintPrecision,\n\t\tfloatPrecision,\n\t\tdefines,\n\t);\n\tconst fullShaderSource = `${shaderHeader}${shaderSource}`;\n\tgl.shaderSource(shader, fullShaderSource);\n\n\t// Compile the shader\n\tgl.compileShader(shader);\n\n\tif (checkCompileStatus) {\n\t\t// TODO: https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#dont_check_shader_compile_status_unless_linking_fails\n\t\t// Check if it compiled.\n\t\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tif (!success) {\n\t\t\t// Something went wrong during compilation - print shader source (with line number) and the error.\n\t\t\tconsole.log(fullShaderSource.split('\\n').map((line, i) => `${i}\\t${line}`).join('\\n'));\n\t\t\terrorCallback(`Could not compile ${shaderType === gl.FRAGMENT_SHADER ? 'fragment' : 'vertex'} shader for program \"${programName}\": ${gl.getShaderInfoLog(shader)}.`);\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn shader;\n}\n\n/**\n * Init a WebGL program from vertex and fragment shaders.\n * GLPrograms may be inited on the fly, so keep this efficient.\n * @private\n */\nexport function initGLProgram(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tvertexShader: WebGLShader,\n\tfragmentShader: WebGLShader,\n\tname: string,\n\terrorCallback: ErrorCallback,\n) {\n\t// Create a program.\n\tconst program = gl.createProgram();\n\tif (!program) {\n\t\terrorCallback(`Unable to init GL program for GPUProgram \"${name}\", gl.createProgram() has failed.`);\n\t\treturn;\n\t}\n\t// Link the program.\n\tgl.attachShader(program, vertexShader);\n\tgl.attachShader(program, fragmentShader);\n\tgl.linkProgram(program);\n\t// Check if it linked.\n\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\tif (!success) {\n\t\t// Something went wrong with the link.\n\t\terrorCallback(`GPUProgram \"${name}\" failed to link: ${gl.getProgramInfoLog(program)}`);\n\t\treturn;\n\t}\n\treturn program;\n}\n\n/**\n * Returns whether a WebGL context is WebGL2.\n * This code is pulled from https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLCapabilities.js\n * @param gl - WebGL context to test.\n * @returns - true if WebGL2 context, else false.\n */\nexport function isWebGL2(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\t// @ts-ignore\n\treturn (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) || (typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext);\n}\n\n/**\n * Returns whether WebGL2 is supported by the current browser.\n * @returns - true if WebGL2 is supported, else false.\n*/\nexport function isWebGL2Supported() {\n\tif (results.supportsWebGL2 === undefined) {\n\t\tconst gl = document.createElement('canvas').getContext(WEBGL2);\n\t\t// GL context and canvas will be garbage collected.\n\t\tresults.supportsWebGL2 = isWebGL2(gl!); // Will return false in case of gl = null.\n\t}\n\treturn results.supportsWebGL2;\n}\n\n/**\n * Checks if the framebuffer is ready to read.\n * @private\n */\nexport function readyToRead(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\treturn gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n};\n\n/**\n * Detects whether highp is supported by this browser.\n * This is supposed to be relatively easy. You call gl.getShaderPrecisionFormat, you pass in the shader type,\n * VERTEX_SHADER or FRAGMENT_SHADER and you pass in one of LOW_FLOAT, MEDIUM_FLOAT, HIGH_FLOAT, LOW_INT, MEDIUM_INT, HIGH_INT,\n * and it returns the precision info.\n * Unfortunately Safari has a bug here which means checking this way will fail on iPhone, at least as of April 2020.\n * https://webglfundamentals.org/webgl/webgl-precision-lowp-mediump-highp.html\n * @private\n */\nfunction isHighpSupported(vsSource: string, fsSource: string) {\n\tconst gl = document.createElement('canvas').getContext(WEBGL1);\n\tif (!gl) {\n\t\tthrow new Error(`Unable to init webgl context.`);\n\t}\n\ttry {\n\t\tconst vs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tvsSource,\n\t\t\tgl.VERTEX_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst fs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tfsSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst program = initGLProgram(gl, vs, fs, 'highpFragmentTest', DEFAULT_ERROR_CALLBACK)!;\n\t\t// Deallocate everything.\n\t\tgl.deleteProgram(program);\n\t\tgl.deleteShader(vs);\n\t\tgl.deleteShader(fs);\n\t\t// GL context and canvas will be garbage collected.\n\t} catch {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/**\n * Detects whether highp precision is supported in vertex shaders in the current browser.\n * @returns - true is highp is supported in vertex shaders, else false.\n */\nexport function isHighpSupportedInVertexShader() {\n\tif (results.supportsHighpVertex === undefined) {\n\t\tconst vertexSupport = isHighpSupported(\n\t\t\t'void main() { highp float test = 0.524; gl_Position = vec4(test, test, 0, 1); }',\n\t\t\t'void main() { gl_FragColor = vec4(0); }',\n\t\t);\n\t\tresults.supportsHighpVertex = vertexSupport;\n\t}\n\treturn results.supportsHighpVertex;\n}\n\n/**\n * Detects whether highp precision is supported in fragment shaders in the current browser.\n * @returns - true is highp is supported in fragment shaders, else false.\n */\nexport function isHighpSupportedInFragmentShader() {\n\tif (results.supportsHighpFragment === undefined) {\n\t\tconst fragmentSupport = isHighpSupported(\n\t\t\t'void main() { gl_Position = vec4(0.5, 0.5, 0, 1); }',\n\t\t\t'void main() { highp float test = 1.35; gl_FragColor = vec4(test); }',\n\t\t);\n\t\tresults.supportsHighpFragment = fragmentSupport;\n\t}\n\treturn results.supportsHighpFragment;\n}\n\n/**\n * Helper function to perform a 1px math calculation in order to determine WebGL capabilities.\n * From https://webglfundamentals.org/\n * @private\n */\nfunction test1PxCalc(\n\tname: string,\n\tgl: WebGL2RenderingContext | WebGLRenderingContext,\n\tfs: WebGLShader,\n\tvs: WebGLShader,\n\taddUniforms: (program: WebGLProgram) => void,\n) {\n\tconst program = initGLProgram(gl, vs, fs, name, DEFAULT_ERROR_CALLBACK);\n\tif (!program) {\n\t\tthrow new Error(`Unable to init WebGLProgram.`);\n\t}\n\tconst positionLocation = gl.getAttribLocation(program, 'position');\n\n\t// create a buffer and setup an attribute\n\t// We wouldn't need this except for a bug in Safari.\n\t// See https://webglfundamentals.org/webgl/lessons/webgl-smallest-programs.html\n\t// and https://bugs.webkit.org/show_bug.cgi?id=197592\n\tconst buffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ARRAY_BUFFER, 1, gl.STATIC_DRAW);\n\tgl.enableVertexAttribArray(positionLocation);\n\tgl.vertexAttribPointer(\n\t\tpositionLocation,\n\t\t1,                // pull 1 value per vertex shader iteration from buffer\n\t\tgl.UNSIGNED_BYTE, // type of data in buffer,\n\t\tfalse,            // don't normalize\n\t\t0,                // bytes to advance per iteration (0 = compute from size and type)\n\t\t0,                // offset into buffer\n\t);\n\n\tgl.viewport(0, 0, 1, 1);\n\tgl.useProgram(program);\n\n\taddUniforms(program);\n\t\n\tgl.drawArrays(\n\t\tgl.POINTS,\n\t\t0, // offset\n\t\t1, // number of vertices to process\n\t);\n\n\tconst pixel = new Uint8Array(4);\n\tgl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n\n\t// Deallocate everything.\n\tgl.deleteProgram(program);\n\tgl.deleteShader(vs);\n\tgl.deleteShader(fs);\n\tgl.deleteBuffer(buffer);\n\t// GL context and canvas will be garbage collected.\n\n\treturn pixel;\n}\n\n/**\n * Returns the actual precision of mediump inside vertex shader.\n * From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n * @returns - Vertex shader mediump precision.\n */\nexport function getVertexShaderMediumpPrecision() {\n\tif (results.mediumpVertexPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\t/** @type {HTMLCanvasElement} */\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tuniform mediump vec3 v;\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t\tv_result = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_FragColor = v_result;\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionVertexTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpVertexPrecision = mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpVertexPrecision;\n}\n\n/**\n * Returns the actual precision of mediump inside fragment shader.\n * From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n * @returns - Fragment shader supported mediump precision.\n */\nexport function getFragmentShaderMediumpPrecision() {\n\tif (results.mediumpFragmentPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P,`\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tuniform mediump vec3 v;\n\tvoid main() {\n\t\tgl_FragColor = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionFragmentTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpFragmentPrecision =  mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpFragmentPrecision;\n}\n\n/**\n * Returns whether a number is a power of 2.\n * @private\n */\nexport function isPowerOf2(value: number) {\n\t// Use bitwise operation to evaluate this.\n\treturn value > 0 && (value & (value - 1)) == 0;\n}\n\n/**\n * Returns a Float32 array with sequential values [0, 1, 2, 3...].\n * @private\n */\nexport function initSequentialFloatArray(length: number) {\n\tconst array = new Float32Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tarray[i] = i;\n\t}\n\treturn array;\n}\n\n/**\n * Strip out any unnecessary elements in shader source, e.g. #version and precision declarations.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction preprocessShader(shaderSource: string) {\n\t// Strip out any version numbers.\n\tshaderSource = stripVersion(shaderSource);\n\t// Strip out any precision declarations.\n\tshaderSource = stripPrecision(shaderSource);\n\t// Strip out comments.\n\tshaderSource = stripComments(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Common code for converting vertex/fragment shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction convertShaderToGLSL1(shaderSource: string) {\n\t// TODO: there are probably more to add here.\n\t// No isampler2D or usampler2D.\n\tshaderSource = glsl1Sampler2D(shaderSource);\n\t// Unsigned int types are not supported, use int types instead.\n\tshaderSource = glsl1Uint(shaderSource);\n\t// Convert texture to texture2D.\n\tshaderSource = glsl1Texture(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction convertVertexShaderToGLSL1(shaderSource: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to attribute.\n\tshaderSource = glsl1VertexIn(shaderSource);\n\t// Convert out to varying.\n\tshaderSource = glsl1VertexOut(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert fragment shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nexport function convertFragmentShaderToGLSL1(shaderSource: string, name: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to varying.\n\tshaderSource = glsl1FragmentIn(shaderSource);\n\t// Convert out_fragColor to gl_FragColor.\n\tshaderSource = glsl1FragmentOut(shaderSource, name);\n\treturn shaderSource;\n}\n\n/**\n * Preprocess vertex shader for glslVersion and browser capabilities.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nexport function preprocessVertexShader(shaderSource: string, glslVersion: GLSLVersion) {\n\tshaderSource = preprocessShader(shaderSource);\n\t// Check if highp supported in vertex shaders.\n\tif (!isHighpSupportedInVertexShader()) {\n\t\tconsole.warn('highp not supported in vertex shader in this browser, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = highpToMediump(shaderSource);\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertVertexShaderToGLSL1(shaderSource);\n}\n\n\n\n/**\n * Preprocess fragment shader for glslVersion and browser capabilities.\n * This is called once on initialization of GPUProgram, so doesn't need to be extremely efficient.\n * @private\n */\nexport function preprocessFragmentShader(shaderSource: string, glslVersion: GLSLVersion, name: string) {\n\tshaderSource = preprocessShader(shaderSource);\n\tcheckFragmentShaderForFragColor(shaderSource, glslVersion, name);\n\t// Check if highp supported in fragment shaders.\n\tif (!isHighpSupportedInFragmentShader()) {\n\t\tconsole.warn('highp not supported in fragment shader in this browser, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = highpToMediump(shaderSource);\n\t}\n\t// Add function/operator polyfills.\n\tshaderSource = fragmentShaderPolyfills() + shaderSource;\n\t// Add texture() polyfills if needed.\n\tlet samplerUniforms: string[];\n\t({ shaderSource, samplerUniforms } = texturePolyfill(shaderSource));\n\tif (glslVersion !== GLSL3) {\n\t\tshaderSource = convertFragmentShaderToGLSL1(shaderSource, name);\n\t\t// add glsl1 specific polyfills.\n\t\tshaderSource = GLSL1Polyfills() + shaderSource;\n\t}\n\treturn { shaderSource, samplerUniforms };\n}\n\n/**\n * Check uniforms and return internal WebGL type (e.g. [1234][u]?[if])\n * @private\n */\nexport function uniformInternalTypeForValue(\n\tvalue: UniformValue,\n\ttype: UniformType,\n\tuniformName: string,\n\tprogramName: string,\n) {\n\tif (type === FLOAT) {\n\t\t// Check that we are dealing with a number.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNumber((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNumber(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn FLOAT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn FLOAT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn FLOAT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn FLOAT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t} else if (type === INT) {\n\t\t// Check that we are dealing with an int.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn INT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn INT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn INT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn INT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t} else if (type === UINT) {\n\t\t// Check that we are dealing with a uint.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNonNegativeInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNonNegativeInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn UINT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn UINT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn UINT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn UINT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t} else if (type === BOOL) {\n\t\t// Check that we are dealing with a boolean.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as boolean[]).length; i++) {\n\t\t\t\tif (!isBoolean((value as boolean[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected bool or bool[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isBoolean(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected bool or bool[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn BOOL_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn BOOL_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn BOOL_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn BOOL_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected boolean.`);\n\t} else {\n\t\tthrow new Error(`Invalid type \"${type}\" for uniform \"${uniformName}\" in program \"${programName}\", expected ${FLOAT} or ${INT} or ${BOOL}.`);\n\t}\n}","module.exports = \"#if (GPUIO_INT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp int;\\n#if (__VERSION__ == 300)\\nprecision highp isampler2D;precision highp usampler2D;\\n#endif\\n#else\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#endif\\n#if (GPUIO_INT_PRECISION == 1)\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#if (GPUIO_INT_PRECISION == 0)\\nprecision lowp int;\\n#if (__VERSION__ == 300)\\nprecision lowp isampler2D;precision lowp usampler2D;\\n#endif\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;precision highp sampler2D;\\n#else\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 1)\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 0)\\nprecision lowp float;precision lowp sampler2D;\\n#endif\\n\"","module.exports = \"in vec2 v_uv;\\n#ifdef GPUIO_FLOAT\\nuniform sampler2D u_state;\\n#endif\\n#ifdef GPUIO_INT\\nuniform isampler2D u_state;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform usampler2D u_state;\\n#endif\\n#ifdef GPUIO_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=texture(u_state,v_uv);}\"","module.exports = \"#ifdef GPUIO_FLOAT\\nuniform vec4 u_value;\\n#endif\\n#ifdef GPUIO_INT\\nuniform ivec4 u_value;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform uvec4 u_value;\\n#endif\\n#ifdef GPUIO_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=u_value;}\"","module.exports = \"in vec2 v_uv;uniform vec3 u_color;uniform float u_scale;\\n#ifdef GPUIO_FLOAT\\nuniform sampler2D u_gpuio_data;\\n#endif\\n#ifdef GPUIO_INT\\nuniform isampler2D u_gpuio_data;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform usampler2D u_gpuio_data;\\n#endif\\nout vec4 out_fragColor;void main(){uvec4 value=texture(u_gpuio_data,v_uv);float mag=length(value);out_fragColor=vec4(mag*u_scale*u_color,1);}\"","module.exports = \"in vec2 v_lineWrapping;uniform vec4 u_value;out vec4 out_fragColor;void main(){if((v_lineWrapping.x!=0.&&v_lineWrapping.x!=1.)||(v_lineWrapping.y!=0.&&v_lineWrapping.y!=1.)){discard;return;}out_fragColor=vec4(u_value);}\"","module.exports = \"in vec2 a_gpuio_position;\\n#ifdef GPUIO_VS_UV_ATTRIBUTE\\nin vec2 a_gpuio_uv;\\n#endif\\n#ifdef GPUIO_VS_NORMAL_ATTRIBUTE\\nin vec2 a_gpuio_normal;\\n#endif\\nuniform vec2 u_gpuio_scale;uniform vec2 u_gpuio_translation;out vec2 v_uv;out vec2 v_uv_local;\\n#ifdef GPUIO_VS_NORMAL_ATTRIBUTE\\nout vec2 v_normal;\\n#endif\\nvoid main(){\\n#ifdef GPUIO_VS_UV_ATTRIBUTE\\nv_uv_local=a_gpuio_uv;\\n#else\\nv_uv_local=0.5*(a_gpuio_position+1.);\\n#endif\\n#ifdef GPUIO_VS_NORMAL_ATTRIBUTE\\nv_normal=a_gpuio_normal;\\n#endif\\nvec2 position=u_gpuio_scale*a_gpuio_position+u_gpuio_translation;v_uv=0.5*(position+1.);gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}vec2 uvFromIndex(const float index,const vec2 dimensions){return vec2(modI(index,dimensions.x),floor(floor(index+0.5)/dimensions.x))/dimensions;}vec2 uvFromIndex(const int index,const vec2 dimensions){int width=int(dimensions.x);int y=index/width;return vec2(index-y*width,y)/dimensions;}\\n#if (__VERSION__ != 300 || GPUIO_VS_INDEXED_POSITIONS == 1)\\nin float a_gpuio_index;\\n#endif\\nuniform sampler2D u_gpuio_positions;uniform vec2 u_gpuio_positionsDimensions;uniform vec2 u_gpuio_scale;out vec2 v_uv;out vec2 v_lineWrapping;flat out int v_index;void main(){\\n#if (__VERSION__ != 300 || GPUIO_VS_INDEXED_POSITIONS == 1)\\nvec2 positionUV=uvFromIndex(a_gpuio_index,u_gpuio_positionsDimensions);v_index=int(a_gpuio_index);\\n#else\\nvec2 positionUV=uvFromIndex(gl_VertexID,u_gpuio_positionsDimensions);v_index=gl_VertexID;\\n#endif\\n#ifdef GPUIO_VS_POSITION_W_ACCUM\\nvec4 positionData=texture(u_gpuio_positions,positionUV);v_uv=(positionData.rg+positionData.ba)*u_gpuio_scale;\\n#else\\nv_uv=texture(u_gpuio_positions,positionUV).rg*u_gpuio_scale;\\n#endif\\nv_lineWrapping=vec2(0.);\\n#ifdef GPUIO_VS_WRAP_X\\nif(v_uv.x<0.){v_uv.x+=1.;v_lineWrapping.x=1.;}else if(v_uv.x>1.){v_uv.x-=1.;v_lineWrapping.x=1.;}\\n#endif\\n#ifdef GPUIO_VS_WRAP_Y\\nif(v_uv.y<0.){v_uv.y+=1.;v_lineWrapping.y=1.;}else if(v_uv.y>1.){v_uv.y-=1.;v_lineWrapping.y=1.;}\\n#endif\\nvec2 position=v_uv*2.-1.;gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}vec2 uvFromIndex(const float index,const vec2 dimensions){return vec2(modI(index,dimensions.x),floor(floor(index+0.5)/dimensions.x))/dimensions;}vec2 uvFromIndex(const int index,const vec2 dimensions){int width=int(dimensions.x);int y=index/width;return vec2(index-y*width,y)/dimensions;}\\n#if (__VERSION__ != 300)\\nin float a_gpuio_index;\\n#endif\\nuniform sampler2D u_gpuio_positions;uniform vec2 u_gpuio_positionsDimensions;uniform vec2 u_gpuio_scale;uniform float u_gpuio_pointSize;out vec2 v_uv;flat out int v_index;void main(){\\n#if (__VERSION__ == 300)\\nvec2 positionUV=uvFromIndex(gl_VertexID,u_gpuio_positionsDimensions);v_index=gl_VertexID;\\n#else\\nvec2 positionUV=uvFromIndex(a_gpuio_index,u_gpuio_positionsDimensions);v_index=int(a_gpuio_index);\\n#endif\\n#ifdef GPUIO_VS_POSITION_W_ACCUM\\nvec4 positionData=texture(u_gpuio_positions,positionUV);v_uv=(positionData.rg+positionData.ba)*u_gpuio_scale;\\n#else\\nv_uv=texture(u_gpuio_positions,positionUV).rg*u_gpuio_scale;\\n#endif\\n#ifdef GPUIO_VS_WRAP_X\\nv_uv.x=fract(v_uv.x+ceil(abs(v_uv.x)));\\n#endif\\n#ifdef GPUIO_VS_WRAP_Y\\nv_uv.y=fract(v_uv.y+ceil(abs(v_uv.y)));\\n#endif\\nvec2 position=v_uv*2.-1.;gl_PointSize=u_gpuio_pointSize;gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}vec2 uvFromIndex(const float index,const vec2 dimensions){return vec2(modI(index,dimensions.x),floor(floor(index+0.5)/dimensions.x))/dimensions;}vec2 uvFromIndex(const int index,const vec2 dimensions){int width=int(dimensions.x);int y=index/width;return vec2(index-y*width,y)/dimensions;}\\n#if (__VERSION__ != 300)\\nin float a_gpuio_index;\\n#endif\\nuniform sampler2D u_gpuio_vectors;uniform vec2 u_gpuio_dimensions;uniform vec2 u_gpuio_scale;out vec2 v_uv;flat out int v_index;void main(){\\n#if (__VERSION__ == 300)\\nint index=gl_VertexID/2;v_index=gl_VertexID;\\n#else\\nfloat index=floor((a_gpuio_index+0.5)/2.);v_index=int(a_gpuio_index);\\n#endif\\nv_uv=uvFromIndex(index,u_gpuio_dimensions);\\n#if (__VERSION__ == 300)\\nv_uv+=float(gl_VertexID-2*index)*texture(u_gpuio_vectors,v_uv).xy*u_gpuio_scale;\\n#else\\nv_uv+=(a_gpuio_index-2*index)*texture(u_gpuio_vectors,v_uv).xy*u_gpuio_scale;\\n#endif\\nvec2 position=v_uv*2.-1.;gl_Position=vec4(position,0,1);}\"","module.exports = \"in vec2 a_gpuio_position;uniform float u_gpuio_halfThickness;uniform vec2 u_gpuio_scale;uniform float u_gpuio_length;uniform float u_gpuio_rotation;uniform vec2 u_gpuio_translation;out vec2 v_uv_local;out vec2 v_uv;mat2 rotate2d(float _angle){return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));}void main(){v_uv_local=0.5*(a_gpuio_position+1.);vec2 position=a_gpuio_position;position*=u_gpuio_halfThickness;float signX=sign(position.x);position.x+=signX*u_gpuio_length/2.;v_uv_local.x=(signX+1.)/2.;position=u_gpuio_scale*(rotate2d(-u_gpuio_rotation)*position)+u_gpuio_translation;v_uv=0.5*(position+1.);gl_Position=vec4(position,0,1);}\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["root","factory","exports","module","define","amd","self","buffer","ArrayBuffer","floatView","Float32Array","uint32View","Uint32Array","baseTable","shiftTable","i","e","roundToFloat16Bits","num","f","mantissaTable","exponentTable","offsetTable","m","convertToNumber","float16bits","hfround","Number","isFinite","global","Object","freeSelf","Function","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","undefined","value","isOwn","call","tag","unmasked","result","type","uid","maskSrcKey","exec","func","funcToString","reIsHostCtor","reIsNative","RegExp","replace","test","object","key","this","__data__","size","has","data","Hash","entries","index","length","clear","entry","set","get","other","array","splice","Array","pop","push","ListCache","map","MapCache","memoize","resolver","TypeError","memoized","args","arguments","apply","cache","Cache","isTypedArrayIndexedPropertyWritable","getOwnPropertyDescriptor","Uint8Array","writable","ToInteger","target","number","isNaN","Math","trunc","defaultCompareFunction","x","y","isNaN_x","isNaN_y","isPlusZero_x","isPlusZero_y","is","isDataView","view","DataView","isStringNumberKey","freeExports","nodeType","freeModule","freeProcess","nodeUtil","types","require","binding","nodeIsArrayBuffer","_","wm","WeakMap","obj","create","createPrivateStorage","isFloat16Array","Float16Array","assertFloat16Array","copyToArray","applyHandler","thisArg","defaultFloat16ArrayMethods","Reflect","handler","wrapper","ret","proxy","Proxy","isFrozen","getPrototypeOf","setPrototypeOf","defineProperty","descriptor","deleteProperty","isExtensible","preventExtensions","ownKeys","Uint16Array","constructor","input","byteOffset","super","arrayLike","Symbol","iterator","static","src","opts","from","mapFunc","val","keys","values","callback","l","filter","reduce","start","reduceRight","forEach","find","findIndex","every","some","offset","reverse","fill","copyWithin","sort","compareFunction","_convertToNumber","slice","subarray","indexOf","element","lastIndexOf","includes","join","toLocaleString","toStringTag","Float16Array$prototype","WeakSet","add","getFloat16","dataView","getUint16","setFloat16","setUint16","calcCrc","buf","c","pngDataTable","crcTable","Int32Array","n","k","createPngDataTable","changeDpiBlob","blob","dpi","headerChunk","Promise","resolve","reject","fileReader","FileReader","onload","dataArray","tail","changedArray","changeDpiOnArray","Blob","readAsArrayBuffer","changeDpiDataUrl","base64Image","dataSplitted","split","format","body","headerLength","overwritepHYs","PNG","b64Index","b64index","b64PhysSignature1","b64PhysSignature2","b64PhysSignature3","detectPhysChunkFromDataUrl","ceil","JPEG","stringHeader","substring","restOfData","headerBytes","atob","charCodeAt","finalArray","base64Header","btoa","String","fromCharCode","arr","isArray","arr2","_toConsumableArray","_P","_H","_Y","_S","physChunk","crc","crcChunk","startingIndex","searchStartOfPhys","chunkLength","finalHeader","b","a","autoBom","console","warn","d","XMLHttpRequest","open","responseType","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","navigator","userAgent","saveAs","HTMLAnchorElement","h","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","innerText","HTMLElement","safari","onloadend","readAsDataURL","defaultVertexShaderSource","params","_errorThrown","_circlePositionsBuffer","_extensions","_copyPrograms","_setValuePrograms","_vectorMagnitudePrograms","_vertexShaders","DEFAULT_PROGRAM_NAME","compiledShaders","SEGMENT_PROGRAM_NAME","LAYER_POINTS_PROGRAM_NAME","LAYER_VECTOR_FIELD_PROGRAM_NAME","LAYER_LINES_PROGRAM_NAME","verboseLogging","_numTicks","validKeys","Error","_errorCallback","message","errorCallback","DEFAULT_ERROR_CALLBACK","canvas","gl","context","_gl","contextID","getContext","contextOptions","WEBGL2","WEBGL1","EXPERIMENTAL_WEBGL","isWebGL2","log","glslVersion","GLSL3","GLSL1","intPrecision","PRECISION_HIGH_P","floatPrecision","disable","DEPTH_TEST","pixelStorei","UNPACK_ALIGNMENT","bindBuffer","ARRAY_BUFFER","resize","clientWidth","clientHeight","_maxNumTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","initWithThreeRenderer","renderer","composer","GPUComposer","capabilities","precision","domElement","_glslKeyForType","HALF_FLOAT","FLOAT","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","INT","UINT","BYTE","SHORT","_setValueProgramForType","program","GPUProgram","fragmentShader","uniforms","defines","_copyProgramForType","_getWrappedLineColorProgram","_wrappedLineColorProgram","_vectorMagnitudeProgramForType","_getQuadPositionsBuffer","_quadPositionsBuffer","fsQuadPositions","_initVertexBuffer","_getBoundaryPositionsBuffer","_boundaryPositionsBuffer","boundaryPositions","_getCirclePositionsBuffer","numSegments","unitCirclePoints","cos","PI","sin","circlePositions","createBuffer","bufferData","STATIC_DRAW","_cloneGPULayer","gpuLayer","dimensions","width","height","getValues","clone","GPULayer","numComponents","wrapS","wrapT","numBuffers","clearValue","step","getStateAtIndex","bufferIndex","output","currentState","initTexture","url","isString","NEAREST","isValidFilter","validFilters","CLAMP_TO_EDGE","isValidWrap","validWraps","RGBA","isValidTextureFormat","validTextureFormats","isValidTextureType","validTextureTypes","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","srcFormat","srcType","pixel","texImage2D","image","Image","isPowerOf2","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","onLoad","_getVertexShader","vertexID","vertexDefines","programName","preprocessedSrc","preprocessVertexShader","shader","compileShader","VERTEX_SHADER","_width","_height","_drawSetup","gpuProgram","fullscreenRender","inputTextures","layer","_getProgramWithName","_setOutputLayer","useProgram","activeTexture","TEXTURE0","_setInternalFragmentUniforms","_setBlendMode","shouldBlendAlpha","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","_indexOfLayerInArray","item","_addLayerToInputs","_passThroughLayerDataFromInputToOutput","state","copyProgram","_internalType","_prepareForWrite","_usingTextureOverrideForCurrentBuffer","viewport","bindFramebuffer","FRAMEBUFFER","_setVertexAttribute","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","_setPositionAttribute","_setIndexAttribute","_setUVAttribute","glProgram","_setVertexUniform","drawArrays","TRIANGLE_STRIP","stepBoundary","onePx","singleEdge","LINES","LINE_LOOP","stepNonBoundary","stepCircle","position","diameter","DEFAULT_CIRCLE_NUM_SEGMENTS","TRIANGLE_FAN","stepSegment","position1","position2","thickness","diffX","diffY","angle","atan2","centerX","centerY","sqrt","numCapSegments","endCaps","stepPolyline","vertices","positions","closeLoop","halfThickness","numPositions","uvs","includeUVs","normals","includeNormals","s1","s2","n1","n2","n3","v1","v2","length1","u","v3","v4","length2","cross","abs","length3","acos","vertexShaderOptions","GPUIO_VS_UV_ATTRIBUTE","GPUIO_VS_NORMAL_ATTRIBUTE","stepTriangleStrip","count","stepLines","indices","LINE_STRIP","drawLayerAsPoints","_pointIndexArray","MAX_FLOAT_INT","color","setUniform","GPUIO_VS_POSITION_W_ACCUM","wrapX","GPUIO_VS_WRAP_X","wrapY","GPUIO_VS_WRAP_Y","pointSize","positionLayerDimensions","_pointIndexBuffer","initSequentialFloatArray","POINTS","drawLayerAsLines","GPUIO_VS_INDEXED_POSITIONS","_indexedLinesIndexBuffer","floatArray","drawLayerAsVectorField","_vectorFieldIndexArray","vectorScale","vectorSpacing","spacedDimensions","floor","_vectorFieldIndexBuffer","drawLayerMagnitude","scale","resetThreeState","_renderer","getViewport","utils","Vector4","setRenderTarget","resetState","savePNG","filename","toBlob","then","tick","_lastTickTime","_lastTickFPS","currentTime","performance","now","fps","milliseconds","currentFPS","parseFloat","toFixed","numTicks","dispose","deleteShader","_clearValue","_bufferIndex","_buffers","isObject","JSON","stringify","_composer","isPositiveInteger","calcGPULayerSize","_length","defaultFilter","LINEAR","isValidDataType","validDataTypes","internalType","getGPULayerInternalType","getGLTextureParameters","glFormat","glInternalFormat","glType","glNumChannels","_glInternalFormat","_glFormat","_glType","_glNumChannels","internalFilter","getGPULayerInternalFilter","_internalFilter","_glFilter","_internalWrapS","getGPULayerInternalWrap","wrap","_glWrapS","_internalWrapT","_glWrapT","_initBuffers","is1D","_textureOverrides","validatedArray","validateGPULayerArray","getError","framebuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","incrementBufferIndex","_bindFramebuffer","setFromArray","applyToAllBuffers","endIndex","_destroyBuffers","isValidClearValue","isNumber","startIndex","fillLength","initArrayForType","float16View","RGBA_INTEGER","readyToRead","readPixels","OUTPUT_LENGTH","index1","index2","multiplier","imageData","getImageData","indexFlipped","putImageData","attachToThreeTexture","offsetTextureProperties","properties","__webglTexture","__webglInit","deleteTexture","deleteFramebuffer","results","writeSupport","filterWrapSupport","halfFloatsAsFloats","Int8Array","Int16Array","shouldCastIntTypeAsFloat","RED","RG","RGB","RED_INTEGER","RG_INTEGER","RGB_INTEGER","R16F","RG16F","RGB16F","RGBA16F","R32F","RG32F","RGB32F","RGBA32F","R8UI","RG8UI","RGB8UI","RGBA8UI","R8I","RG8I","RGB8I","RGBA8I","R16I","RG16I","RGB16I","RGBA16I","R16UI","RG16UI","RGB16UI","RGBA16UI","R32I","RG32I","RGB32I","RGBA32I","R32UI","RG32UI","RGB32UI","RGBA32UI","getExtension","OES_TEXTURE_HALF_FLOAT","HALF_FLOAT_OES","missingParams","testWriteSupport","validStatus","testFilterWrap","glWrap","glFilter","valuesTyped","valuesTyped16","fragmentShaderSource","convertFragmentShaderToGLSL1","FRAGMENT_SHADER","isUnsignedIntType","isIntType","wrapValue","max","min","vertexShader","initGLProgram","uniform2fv","getUniformLocation","filtered","supported","tol","expected","_x","deleteProgram","minMaxValuesForType","Infinity","MIN_UNSIGNED_BYTE","MAX_UNSIGNED_BYTE","MIN_BYTE","MAX_BYTE","MIN_UNSIGNED_SHORT","MAX_UNSIGNED_SHORT","MIN_SHORT","MAX_SHORT","MIN_UNSIGNED_INT","MAX_UNSIGNED_INT","MIN_INT","MAX_INT","exp","remainder","pow","OES_TEXTURE_HAlF_FLOAT_LINEAR","OES_TEXTURE_FLOAT_LINEAR","EXT_COLOR_BUFFER_FLOAT","EXT_COLOR_BUFFER_HALF_FLOAT","OES_TEXTURE_FLOAT","shouldTypeCast","validArrayTypes","arrayLength","shouldResize","_len","origValue","clipped","_fragmentShaders","_defines","_uniforms","_programs","_programsKeyLookup","_samplerUniformsIndices","preprocessFragmentShader","shaderSource","samplerUniforms","_fragmentShaderSource","inputIndex","shaderIndex","_getFragmentShader","fragmentId","internalDefines","fragmentID","fragmentDefines","wrapXVal","REPEAT","wrapYVal","filterVal","SAMPLER2D_WRAP_X","SAMPLER2D_WRAP_Y","SAMPLER2D_FILTER","SAMPLER2D_CAST_INT","uniformNames","uniformName","uniform","_setProgramUniform","isGLSL3","_location","getUniform","badType","BOOL_1D_UNIFORM","BOOL_2D_UNIFORM","BOOL_3D_UNIFORM","BOOL_4D_UNIFORM","isBoolean","FLOAT_1D_UNIFORM","FLOAT_2D_UNIFORM","FLOAT_3D_UNIFORM","FLOAT_4D_UNIFORM","INT_1D_UNIFORM","INT_2D_UNIFORM","INT_3D_UNIFORM","INT_4D_UNIFORM","isInteger","UINT_1D_UNIFORM","UINT_2D_UNIFORM","UINT_3D_UNIFORM","UINT_4D_UNIFORM","isNonNegativeInteger","uniform1i","uniform2i","uniform3i","uniform4i","uniform1f","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1ui","uniform2uiv","uniform3uiv","uniform4uiv","currentType","uniformInternalTypeForValue","isChanged","samplerUniform","indexLookup","filterMismatch","halfPxSize","halfPxUniform","SAMPLER2D_HALF_PX_UNIFORM","dimensionsUniform","SAMPLER2D_DIMENSIONS_UNIFORM","delete","z","w","copy","v","isNumberOfType","BOOL","PRECISION_LOW_P","PRECISION_MEDIUM_P","MIN_HALF_FLOAT_INT","MAX_HALF_FLOAT_INT","MIN_FLOAT_INT","WEBGL_DEPTH_TEXTURE","extensionName","optional","extension","_testing","isFloatType","isSignedIntType","makeShaderHeader","extensions","regex","checks","GPULayerHelpers","polyfills","isWebGL2Supported","isHighpSupportedInVertexShader","isHighpSupportedInFragmentShader","getVertexShaderMediumpPrecision","getFragmentShaderMediumpPrecision","GLSL1_POLYFILLS","FRAGMENT_SHADER_POLYFILLS","floatTypeForIntType","textureCalls","match","getSampler2DsInProgram","remainingTextureCalls","polyfillUniforms","make_GPUIO_TEXTURE_POLYFILL","prefix","castOpening","castEnding","make_GPUIO_TEXTURE_WRAP","lookupFunction","wrapType","extraParams","sign","round","roundEven","type1","type2","clamp","mix","floatTypeForBoolType","det2","det3","E","mod","bitshiftLeft","bitshiftRight","bitwiseOr","numBits","bitwiseXOR","bitwiseAnd","bitwiseNot","suffix","escapeRegExp","string","typecastVariable","variableName","regexMatch","assignmentExpressions","regexValueMatch","regexReplace","_castVaryingToFloat","regexString","castToFloatExpressions","regexVariableMatch","variable","castVaryingToFloat","containsOutFragColor","getFragmentOutType","assignmentFound","filler","gl_FragColor","containsGLFragColor","out_fragColor","origLength","samplersNoDuplicates","samplers","uniformMatch","sampler","precisionSource","supportsWebGL2","supportsHighpVertex","supportsHighpFragment","mediumpVertexPrecision","mediumpFragmentPrecision","intForPrecision","convertDefinesToString","definesSource","versionSource","precisionDefinesSource","GPUIO_INT_PRECISION","GPUIO_FLOAT_PRECISION","shaderType","checkCompileStatus","createShader","shaderHeader","fullShaderSource","getShaderParameter","COMPILE_STATUS","line","getShaderInfoLog","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","WebGL2RenderingContext","WebGL2ComputeRenderingContext","isHighpSupported","vsSource","fsSource","vs","fs","vertexSupport","fragmentSupport","test1PxCalc","addUniforms","positionLocation","deleteBuffer","preprocessShader","stripVersion","stripPrecision","stripComments","convertShaderToGLSL1","glsl1Sampler2D","glsl1Uint","glsl1Texture","glsl1FragmentIn","glsl1FragmentOut","vLocation","uniform3f","mediumpPrecision","highpToMediump","glsl1VertexIn","glsl1VertexOut","convertVertexShaderToGLSL1","checkFragmentShaderForFragColor","fragmentShaderPolyfills","texturePolyfill","GLSL1Polyfills","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","o","enumerable","globalThis","prop","r"],"sourceRoot":""}
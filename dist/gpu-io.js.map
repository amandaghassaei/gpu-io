{"version":3,"sources":["webpack://GPUIO/webpack/universalModuleDefinition","webpack://GPUIO/./node_modules/@petamoriken/float16/src/lib.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/hfround.js","webpack://GPUIO/./node_modules/lodash-es/_freeGlobal.js","webpack://GPUIO/./node_modules/lodash-es/_root.js","webpack://GPUIO/./node_modules/lodash-es/_Symbol.js","webpack://GPUIO/./node_modules/lodash-es/_getRawTag.js","webpack://GPUIO/./node_modules/lodash-es/_objectToString.js","webpack://GPUIO/./node_modules/lodash-es/_baseGetTag.js","webpack://GPUIO/./node_modules/lodash-es/isObject.js","webpack://GPUIO/./node_modules/lodash-es/isFunction.js","webpack://GPUIO/./node_modules/lodash-es/_coreJsData.js","webpack://GPUIO/./node_modules/lodash-es/_isMasked.js","webpack://GPUIO/./node_modules/lodash-es/_toSource.js","webpack://GPUIO/./node_modules/lodash-es/_baseIsNative.js","webpack://GPUIO/./node_modules/lodash-es/_getValue.js","webpack://GPUIO/./node_modules/lodash-es/_getNative.js","webpack://GPUIO/./node_modules/lodash-es/_nativeCreate.js","webpack://GPUIO/./node_modules/lodash-es/_hashClear.js","webpack://GPUIO/./node_modules/lodash-es/_hashDelete.js","webpack://GPUIO/./node_modules/lodash-es/_hashGet.js","webpack://GPUIO/./node_modules/lodash-es/_hashHas.js","webpack://GPUIO/./node_modules/lodash-es/_hashSet.js","webpack://GPUIO/./node_modules/lodash-es/_Hash.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheClear.js","webpack://GPUIO/./node_modules/lodash-es/eq.js","webpack://GPUIO/./node_modules/lodash-es/_assocIndexOf.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheDelete.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheGet.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheHas.js","webpack://GPUIO/./node_modules/lodash-es/_listCacheSet.js","webpack://GPUIO/./node_modules/lodash-es/_ListCache.js","webpack://GPUIO/./node_modules/lodash-es/_Map.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheClear.js","webpack://GPUIO/./node_modules/lodash-es/_isKeyable.js","webpack://GPUIO/./node_modules/lodash-es/_getMapData.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheDelete.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheGet.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheHas.js","webpack://GPUIO/./node_modules/lodash-es/_mapCacheSet.js","webpack://GPUIO/./node_modules/lodash-es/_MapCache.js","webpack://GPUIO/./node_modules/lodash-es/memoize.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/bug.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/spec.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/is.js","webpack://GPUIO/./node_modules/lodash-es/isObjectLike.js","webpack://GPUIO/./node_modules/lodash-es/_baseIsArrayBuffer.js","webpack://GPUIO/./node_modules/lodash-es/_baseUnary.js","webpack://GPUIO/./node_modules/lodash-es/_nodeUtil.js","webpack://GPUIO/./node_modules/lodash-es/isArrayBuffer.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/private.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/Float16Array.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/dataView.js","webpack://GPUIO/./node_modules/@petamoriken/float16/src/index.js","webpack://GPUIO/./node_modules/changedpi/dist/index.js","webpack://GPUIO/./node_modules/file-saver/dist/FileSaver.min.js","webpack://GPUIO/./src/GPUComposer.ts","webpack://GPUIO/./src/GPULayer.ts","webpack://GPUIO/./src/GPULayerHelpers.ts","webpack://GPUIO/./src/GPUProgram.ts","webpack://GPUIO/./src/Vector4.ts","webpack://GPUIO/./src/checks.ts","webpack://GPUIO/./src/constants.ts","webpack://GPUIO/./src/extensions.ts","webpack://GPUIO/./src/index.ts","webpack://GPUIO/./src/regex.ts","webpack://GPUIO/./src/utils.ts","webpack://GPUIO/./src/glsl/common/precision.glsl","webpack://GPUIO/./src/glsl/frag/CopyFragShader.glsl","webpack://GPUIO/./src/glsl/frag/SetValueFragShader.glsl","webpack://GPUIO/./src/glsl/frag/VectorMagnitudeFragShader.glsl","webpack://GPUIO/./src/glsl/frag/WrappedLineColorFragShader.glsl","webpack://GPUIO/./src/glsl/vert/DefaultVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerLinesVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerPointsVertShader.glsl","webpack://GPUIO/./src/glsl/vert/LayerVectorFieldVertShader.glsl","webpack://GPUIO/./src/glsl/vert/SegmentVertShader.glsl","webpack://GPUIO/webpack/bootstrap","webpack://GPUIO/webpack/runtime/define property getters","webpack://GPUIO/webpack/runtime/global","webpack://GPUIO/webpack/runtime/hasOwnProperty shorthand","webpack://GPUIO/webpack/runtime/make namespace object","webpack://GPUIO/webpack/startup"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;ACVA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA,cAAc,SAAS;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACO;AACP;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,cAAc,UAAU;AACxB,oBAAoB;AACpB,cAAc;;AAEd;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA,qBAAqB;AACrB,oBAAoB;;AAEpB;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;;ACrH4D;;AAE5D;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC,WAAW,eAAe;AAC1B;;;ACjBA;AACA;;AAEA,kDAAe,UAAU,EAAC;;;ACHgB;;AAE1C;AACA;;AAEA;AACA,WAAW,WAAU;;AAErB,4CAAe,IAAI,EAAC;;;ACRU;;AAE9B;AACA,IAAI,cAAM,GAAG,YAAW;;AAExB,8CAAe,cAAM,EAAC;;;ACLY;;AAElC;AACA;;AAEA;AACA,IAAI,yBAAc;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,OAAM,GAAG,mBAAkB;;AAEhD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA,cAAc,yBAAc;AAC5B;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,iDAAe,SAAS,EAAC;;;AC7CzB;AACA,IAAI,2BAAW;;AAEf;AACA;AACA;AACA;AACA;AACA,IAAI,oCAAoB,GAAG,2BAAW;;AAEtC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA,SAAS,oCAAoB;AAC7B;;AAEA,sDAAe,cAAc,EAAC;;;ACrBI;AACM;AACU;;AAElD;AACA;AACA;;AAEA;AACA,IAAI,0BAAc,GAAG,OAAM,GAAG,mBAAkB;;AAEhD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,UAAU,0BAAc,IAAI,0BAAc;AAC1C,MAAM,UAAS;AACf,MAAM,eAAc;AACpB;;AAEA,kDAAe,UAAU,EAAC;;;AC3B1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAe,QAAQ,EAAC;;;AC9BkB;AACL;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,kBAAQ;AACf;AACA;AACA;AACA;AACA,YAAY,WAAU;AACtB;AACA;;AAEA,2DAAe,UAAU,EAAC;;;ACpCI;;AAE9B;AACA,iBAAiB,2BAA0B;;AAE3C,kDAAe,UAAU,EAAC;;;ACLgB;;AAE1C;AACA;AACA,0BAA0B,WAAU,IAAI,gBAAe,IAAI,yBAAwB;AACnF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,gDAAe,QAAQ,EAAC;;;ACnBxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,gDAAe,QAAQ,EAAC;;;ACzBiB;AACH;AACD;AACC;;AAEtC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA,IAAI,uBAAS;AACb,IAAI,yBAAW;;AAEf;AACA,IAAI,0BAAY,GAAG,uBAAS;;AAE5B;AACA,IAAI,4BAAc,GAAG,yBAAW;;AAEhC;AACA;AACA,EAAE,0BAAY,MAAM,4BAAc;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,OAAO,kBAAQ,WAAW,SAAQ;AAClC;AACA;AACA,gBAAgB,oBAAU;AAC1B,sBAAsB,SAAQ;AAC9B;;AAEA,oDAAe,YAAY,EAAC;;;AC9C5B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA,gDAAe,QAAQ,EAAC;;;ACZsB;AACR;;AAEtC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA,cAAc,SAAQ;AACtB,SAAS,aAAY;AACrB;;AAEA,iDAAe,SAAS,EAAC;;;AChBe;;AAExC;AACA,mBAAmB,UAAS;;AAE5B,oDAAe,YAAY,EAAC;;;ACLkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAY,GAAG,aAAY;AAC7C;AACA;;AAEA,iDAAe,SAAS,EAAC;;;ACdzB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAe,UAAU,EAAC;;;AChBoB;;AAE9C;AACA;;AAEA;AACA,IAAI,oBAAW;;AAEf;AACA,IAAI,uBAAc,GAAG,oBAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA,MAAM,aAAY;AAClB;AACA;AACA;AACA,SAAS,uBAAc;AACvB;;AAEA,+CAAe,OAAO,EAAC;;;AC7BuB;;AAE9C;AACA,IAAI,oBAAW;;AAEf;AACA,IAAI,uBAAc,GAAG,oBAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,SAAS,aAAY,+BAA+B,uBAAc;AAClE;;AAEA,+CAAe,OAAO,EAAC;;;ACtBuB;;AAE9C;AACA,IAAI,uBAAc;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,eAAe,aAAY,2BAA2B,uBAAc;AACpE;AACA;;AAEA,+CAAe,OAAO,EAAC;;;ACtBiB;AACE;AACN;AACA;AACA;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,UAAS;AAChC,2BAA2B,WAAU;AACrC,qBAAqB,QAAO;AAC5B,qBAAqB,QAAO;AAC5B,qBAAqB,QAAO;;AAE5B,4CAAe,IAAI,EAAC;;;AC/BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAe,cAAc,EAAC;;;ACZ9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAe,EAAE,EAAC;;;ACpCO;;AAEzB;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,QAAQ,YAAE;AACV;AACA;AACA;AACA;AACA;;AAEA,oDAAe,YAAY,EAAC;;;ACpBkB;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,cAAc,aAAY;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,uDAAe,eAAe,EAAC;;;AClCe;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA,cAAc,aAAY;;AAE1B;AACA;;AAEA,oDAAe,YAAY,EAAC;;;AClBkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,aAAY;AACrB;;AAEA,oDAAe,YAAY,EAAC;;;ACfkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA,cAAc,aAAY;;AAE1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,oDAAe,YAAY,EAAC;;;ACzBsB;AACE;AACN;AACA;AACA;;AAE9C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,eAAc;AAC1C,gCAAgC,gBAAe;AAC/C,0BAA0B,aAAY;AACtC,0BAA0B,aAAY;AACtC,0BAA0B,aAAY;;AAEtC,iDAAe,SAAS,EAAC;;;AC/Be;AACV;;AAE9B;AACA,UAAU,UAAS,CAAC,KAAI;;AAExB,2CAAe,GAAG,EAAC;;;ACNW;AACU;AACZ;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,KAAI;AACpB,gBAAgB,IAAG,IAAI,UAAS;AAChC,kBAAkB,KAAI;AACtB;AACA;;AAEA,qDAAe,aAAa,EAAC;;;ACpB7B;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAe,SAAS,EAAC;;;ACde;;AAExC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA,SAAS,UAAS;AAClB;AACA;AACA;;AAEA,kDAAe,UAAU,EAAC;;;ACjBgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,eAAe,WAAU;AACzB;AACA;AACA;;AAEA,sDAAe,cAAc,EAAC;;;ACjBY;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA,SAAS,WAAU;AACnB;;AAEA,mDAAe,WAAW,EAAC;;;ACfe;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,WAAU;AACnB;;AAEA,mDAAe,WAAW,EAAC;;;ACfe;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA,aAAa,WAAU;AACvB;;AAEA;AACA;AACA;AACA;;AAEA,mDAAe,WAAW,EAAC;;;ACrBqB;AACE;AACN;AACA;AACA;;AAE5C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,cAAa;AACxC,+BAA+B,eAAc;AAC7C,yBAAyB,YAAW;AACpC,yBAAyB,YAAW;AACpC,yBAAyB,YAAW;;AAEpC,gDAAe,QAAQ,EAAC;;;AC/Bc;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAQ;AACjD;AACA;;AAEA;AACA,gBAAgB,SAAQ;;AAExB,wDAAe,OAAO,EAAC;;;ACxEvB;AACA;AACA;AACA;AACO;;;ACJP;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;ACrDmC;;AAEgC;;AAEnE;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP,8CAA8C,SAAS;AACvD;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAAe,YAAY,EAAC;;;AC5Bc;AACG;;AAE7C;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,sBAAY,WAAW,WAAU;AAC1C;;AAEA,yDAAe,iBAAiB,EAAC;;;AChBjC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAe,SAAS,EAAC;;;ACbiB;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,mBAAkB;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;;AAED,gDAAe,QAAQ,EAAC;;;AC7BgC;AAChB;AACF;;AAEtC;AACA,wBAAwB,SAAQ,IAAI,uBAAsB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAS,sBAAsB,kBAAiB;;AAExF,8DAAe,aAAa,EAAC;;;AC1B7B;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;ACfwC;AACoB;AACJ;AACI;AACX;AACU;;AAE3D,UAAU,oBAAoB;;AAE9B;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,YAAY;AACZ;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY;AAC9B,mBAAmB,eAAe;AAClC;;AAEA;AACA;;AAEA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;;AAEA,YAAY,iBAAiB;AAC7B,8CAA8C,eAAe;AAC7D,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;;AAEA,YAAY,iBAAiB;AAC7B,4CAA4C,kBAAkB;AAC9D,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAA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A,yBAAyB,KAAK;AAC9B,gBAAgB,eAAe;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,OAAO;AAC5C,0BAA0B,eAAe;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxlBkC;AAC0B;;AAE5D;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa;AACb;AACO;AACP,SAAS,UAAU;AACnB;AACA;;AAEA,WAAW,eAAe;AAC1B;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACO;AACP,SAAS,UAAU;AACnB;AACA;;AAEA,mCAAmC,kBAAkB;AACrD;;;AC/B+C;AACU;AACF;;;;;;;;;ACF1C;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,qBAAqB;AACrB,wBAAwB;;AAExB,kCAAkC,0BAA0B,0CAA0C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE,OAAO,wBAAwB,EAAE;;AAEjM;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB;AAChE;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"gpu-io.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GPUIO\"] = factory();\n\telse\n\t\troot[\"GPUIO\"] = factory();\n})(self, function() {\nreturn ","// algorithm: ftp://ftp.fox-toolkit.org/pub/fasthalffloatconversion.pdf\n\nconst buffer = new ArrayBuffer(4);\nconst floatView = new Float32Array(buffer);\nconst uint32View = new Uint32Array(buffer);\n\n\nconst baseTable = new Uint32Array(512);\nconst shiftTable = new Uint32Array(512);\n\nfor(let i = 0; i < 256; ++i) {\n    const e = i - 127;\n\n    // very small number (0, -0)\n    if (e < -27) {\n        baseTable[i | 0x000] = 0x0000;\n        baseTable[i | 0x100] = 0x8000;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // small number (denorm)\n    } else if (e < -14) {\n        baseTable[i | 0x000] =  0x0400 >> (-e - 14);\n        baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n        shiftTable[i | 0x000] = -e - 1;\n        shiftTable[i | 0x100] = -e - 1;\n\n    // normal number\n    } else if (e <= 15) {\n        baseTable[i | 0x000] =  (e + 15) << 10;\n        baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n\n    // large number (Infinity, -Infinity)\n    } else if (e < 128) {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // stay (NaN, Infinity, -Infinity)\n    } else {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n    }\n}\n\n/**\n * round a number to a half float number bits.\n * @param {number} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n    floatView[0] = num;\n\n    const f = uint32View[0];\n    const e = (f >> 23) & 0x1ff;\n    return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\n\nconst mantissaTable = new Uint32Array(2048);\nconst exponentTable = new Uint32Array(64);\nconst offsetTable = new Uint32Array(64);\n\nmantissaTable[0] = 0;\nfor(let i = 1; i < 1024; ++i) {\n    let m = i << 13;    // zero pad mantissa bits\n    let e = 0;          // zero exponent\n\n    // normalized\n    while((m & 0x00800000) === 0) {\n        e -= 0x00800000;    // decrement exponent\n        m <<= 1;\n    }\n\n    m &= ~0x00800000;   // clear leading 1 bit\n    e += 0x38800000;    // adjust bias\n\n    mantissaTable[i] = m | e;\n}\nfor(let i = 1024; i < 2048; ++i) {\n    mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nexponentTable[0] = 0;\nfor(let i = 1; i < 31; ++i) {\n    exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor(let i = 33; i < 63; ++i) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\noffsetTable[0] = 0;\nfor(let i = 1; i < 64; ++i) {\n    if (i === 32) {\n        offsetTable[i] = 0;\n    } else {\n        offsetTable[i] = 1024;\n    }\n}\n\n/**\n * convert a half float number bits to a number.\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n    const m = float16bits >> 10;\n    uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n    return floatView[0];\n}\n","import { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns the nearest half precision float representation of a number.\n * @param {number} num\n * @returns {number}\n */\nexport default function hfround(num) {\n    num = Number(num);\n\n    // for optimization\n    if (!Number.isFinite(num) || num === 0) {\n        return num;\n    }\n\n    const x16 = roundToFloat16Bits(num);\n    return convertToNumber(x16);\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","/**\n * JavaScriptCore <= 12 bug\n * @see https://bugs.webkit.org/show_bug.cgi?id=171606\n */\nexport const isTypedArrayIndexedPropertyWritable = Object.getOwnPropertyDescriptor(new Uint8Array(1), 0).writable;\n","/**\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToInteger(target) {\n    let number = typeof target !== \"number\" ? Number(target) : target;\n    if (Number.isNaN(number)) {\n        number = 0;\n    }\n    return Math.trunc(number);\n}\n\n/**\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompareFunction(x, y) {\n    const [isNaN_x, isNaN_y] = [Number.isNaN(x), Number.isNaN(y)];\n\n    if (isNaN_x && isNaN_y) {\n        return 0;\n    }\n\n    if (isNaN_x) {\n        return 1;\n    }\n\n    if (isNaN_y) {\n        return -1;\n    }\n\n    if (x < y) {\n        return -1;\n    }\n\n    if (x > y) {\n        return 1;\n    }\n\n    if (x === 0 && y === 0) {\n        const [isPlusZero_x, isPlusZero_y] = [Object.is(x, 0), Object.is(y, 0)];\n\n        if (!isPlusZero_x && isPlusZero_y) {\n            return -1;\n        }\n\n        if (isPlusZero_x && !isPlusZero_y) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n","import { ToInteger } from \"./spec\";\n\nexport { default as isArrayBuffer } from \"lodash-es/isArrayBuffer\";\n\n/**\n * @param {unknown} view\n * @returns {boolean}\n */\nexport function isDataView(view) {\n    return view instanceof DataView;\n}\n\n/**\n * @param {unknown} key\n * @returns {boolean}\n */\nexport function isStringNumberKey(key) {\n    return typeof key === \"string\" && key === ToInteger(key) + \"\";\n}\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/**\n * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n */\nfunction baseIsArrayBuffer(value) {\n  return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n}\n\nexport default baseIsArrayBuffer;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\n\n/**\n * Checks if `value` is classified as an `ArrayBuffer` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n * @example\n *\n * _.isArrayBuffer(new ArrayBuffer(2));\n * // => true\n *\n * _.isArrayBuffer(new Array(2));\n * // => false\n */\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\nexport default isArrayBuffer;\n","/**\n * @returns {(self:object) => object}\n */\nexport function createPrivateStorage() {\n\tconst wm = new WeakMap();\n\treturn (self) => {\n\t\tlet obj = wm.get(self);\n\t\tif (obj) {\n\t\t\treturn obj;\n\t\t} else {\n\t\t\tobj = Object.create(null);\n\t\t\twm.set(self, obj);\n\t\t\treturn obj;\n\t\t}\n\t};\n}\n","import memoize from \"lodash-es/memoize\";\nimport { isTypedArrayIndexedPropertyWritable } from \"./bug\";\nimport { isArrayBuffer, isStringNumberKey } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\nimport { createPrivateStorage } from \"./private\";\nimport { ToInteger, defaultCompareFunction } from \"./spec\";\n\nconst _ = createPrivateStorage();\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isFloat16Array(target) {\n    return target instanceof Float16Array;\n}\n\n/**\n * @param {unknown} target\n * @throws {TypeError}\n */\nfunction assertFloat16Array(target) {\n    if (!isFloat16Array(target)) {\n        throw new TypeError(\"This is not a Float16Array\");\n    }\n}\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isDefaultFloat16ArrayMethods(target) {\n    return typeof target === \"function\" && defaultFloat16ArrayMethods.has(target);\n}\n\n/**\n * @param {Float16Array} float16bits\n * @return {number[]}\n */\nfunction copyToArray(float16bits) {\n    const length = float16bits.length;\n\n    const array = new Array(length);\n    for(let i = 0; i < length; ++i) {\n        array[i] = convertToNumber(float16bits[i]);\n    }\n\n    return array;\n}\n\n/** @type {ProxyHandler<Function>} */\nconst applyHandler = {\n    apply(func, thisArg, args) {\n        // peel off proxy\n        if (isFloat16Array(thisArg) && isDefaultFloat16ArrayMethods(func)) {\n            return Reflect.apply(func, _(thisArg).target ,args);\n        }\n\n        return Reflect.apply(func, thisArg, args);\n    },\n};\n\n/** @type {ProxyHandler<Float16Array>} */\nconst handler = {\n    get(target, key) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.has(target, key) ? convertToNumber(Reflect.get(target, key)) : undefined;\n        } else {\n            const ret = wrapper !== null && Reflect.has(wrapper, key) ? Reflect.get(wrapper, key) : Reflect.get(target, key);\n\n            if (typeof ret !== \"function\") {\n                return ret;\n            }\n\n            // TypedArray methods can't be called by Proxy Object\n            let proxy = _(ret).proxy;\n\n            if (proxy === undefined) {\n                proxy = _(ret).proxy = new Proxy(ret, applyHandler);\n            }\n\n            return proxy;\n        }\n    },\n\n    set(target, key, value) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.set(target, key, roundToFloat16Bits(value));\n        } else {\n            // frozen object can't change prototype property\n            if (wrapper !== null && (!Reflect.has(target, key) || Object.isFrozen(wrapper))) {\n                return Reflect.set(wrapper, key, value);\n            } else {\n                return Reflect.set(target, key, value);\n            }\n        }\n    },\n};\n\nif (!isTypedArrayIndexedPropertyWritable) {\n    handler.getPrototypeOf = (wrapper) => { return Reflect.getPrototypeOf(_(wrapper).target); };\n    handler.setPrototypeOf = (wrapper, prototype) => { return Reflect.setPrototypeOf(_(wrapper).target, prototype); };\n\n    handler.defineProperty = (wrapper, key, descriptor) => {\n        const target = _(wrapper).target;\n        return !Reflect.has(target, key) || Object.isFrozen(wrapper) ? Reflect.defineProperty(wrapper, key, descriptor) : Reflect.defineProperty(target, key, descriptor);\n    };\n    handler.deleteProperty = (wrapper, key) => {\n        const target = _(wrapper).target;\n        return Reflect.has(wrapper, key) ? Reflect.deleteProperty(wrapper, key) : Reflect.deleteProperty(target, key);\n    };\n\n    handler.has = (wrapper, key) => { return Reflect.has(wrapper, key) || Reflect.has(_(wrapper).target, key); };\n\n    handler.isExtensible = (wrapper) => { return Reflect.isExtensible(wrapper); };\n    handler.preventExtensions = (wrapper) => { return Reflect.preventExtensions(wrapper); };\n\n    handler.getOwnPropertyDescriptor = (wrapper, key) => { return Reflect.getOwnPropertyDescriptor(wrapper, key); };\n    handler.ownKeys = (wrapper) => { return Reflect.ownKeys(wrapper); };\n}\n\nexport default class Float16Array extends Uint16Array {\n\n    constructor(input, byteOffset, length) {\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            super(_(input).target);\n\n        // 22.2.1.3, 22.2.1.4 TypedArray, Array, ArrayLike, Iterable\n        } else if (input !== null && typeof input === \"object\" && !isArrayBuffer(input)) {\n            // if input is not ArrayLike and Iterable, get Array\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n\n            const length = arrayLike.length;\n            super(length);\n\n            for(let i = 0; i < length; ++i) {\n                // super (Uint16Array)\n                this[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n\n        // 22.2.1.2, 22.2.1.5 primitive, ArrayBuffer\n        } else {\n            switch(arguments.length) {\n                case 0:\n                    super();\n                    break;\n\n                case 1:\n                    super(input);\n                    break;\n\n                case 2:\n                    super(input, byteOffset);\n                    break;\n\n                case 3:\n                    super(input, byteOffset, length);\n                    break;\n\n                default:\n                    // @ts-ignore\n                    super(...arguments);\n            }\n        }\n\n        let proxy;\n\n        if (isTypedArrayIndexedPropertyWritable) {\n            proxy = new Proxy(this, handler);\n        } else {\n            const wrapper = Object.create(null);\n            _(wrapper).target = this;\n            proxy = new Proxy(wrapper, handler);\n        }\n\n        // proxy private storage\n        _(proxy).target = this;\n\n        // this private storage\n        _(this).proxy = proxy;\n\n        return proxy;\n    }\n\n    // static methods\n    static from(src, ...opts) {\n        if (opts.length === 0) {\n            return new Float16Array(Uint16Array.from(src, roundToFloat16Bits).buffer);\n        }\n\n        const mapFunc = opts[0];\n        const thisArg = opts[1];\n\n        return new Float16Array(Uint16Array.from(src, function (val, ...args) {\n            return roundToFloat16Bits(mapFunc.call(this, val, ...args));\n        }, thisArg).buffer);\n    }\n\n    static of(...args) {\n        return new Float16Array(args);\n    }\n\n    // iterate methods\n    * [Symbol.iterator]() {\n        for(const val of super[Symbol.iterator]()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    keys() {\n        return super.keys();\n    }\n\n    * values() {\n        for(const val of super.values()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    /** @type {() => IterableIterator<[number, number]>} */\n    * entries() {\n        for(const [i, val] of super.entries()) {\n            yield [i, convertToNumber(val)];\n        }\n    }\n\n    // functional methods\n    // @ts-ignore\n    map(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            array.push(callback.call(thisArg, val, i, _(this).proxy));\n        }\n\n        return new Float16Array(array);\n    }\n\n    // @ts-ignore\n    filter(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            if (callback.call(thisArg, val, i, _(this).proxy)) {\n                array.push(val);\n            }\n        }\n\n        return new Float16Array(array);\n    }\n\n    reduce(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        if (opts.length === 0) {\n            val = convertToNumber(this[0]);\n            start = 1;\n        } else {\n            val = opts[0];\n            start = 0;\n        }\n\n        for(let i = start, l = this.length; i < l; ++i) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    reduceRight(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        const length = this.length;\n        if (opts.length === 0) {\n            val = convertToNumber(this[length - 1]);\n            start = length - 1;\n        } else {\n            val = opts[0];\n            start = length;\n        }\n\n        for(let i = start; i--;) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    forEach(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy);\n        }\n    }\n\n    find(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return value;\n            }\n        }\n    }\n\n    findIndex(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    every(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (!callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    some(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // change element methods\n    set(input, ...opts) {\n        assertFloat16Array(this);\n\n        const offset = opts[0];\n\n        let float16bits;\n\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            float16bits = _(input).target;\n\n        // input others\n        } else {\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n            const length = arrayLike.length;\n\n            float16bits = new Uint16Array(length);\n            for(let i = 0, l = arrayLike.length; i < l; ++i) {\n                float16bits[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n        }\n\n        super.set(float16bits, offset);\n    }\n\n    reverse() {\n        assertFloat16Array(this);\n\n        super.reverse();\n\n        return _(this).proxy;\n    }\n\n    fill(value, ...opts) {\n        assertFloat16Array(this);\n\n        super.fill(roundToFloat16Bits(value), ...opts);\n\n        return _(this).proxy;\n    }\n\n    copyWithin(target, start, ...opts) {\n        assertFloat16Array(this);\n\n        super.copyWithin(target, start, ...opts);\n\n        return _(this).proxy;\n    }\n\n    sort(...opts) {\n        assertFloat16Array(this);\n\n        let compareFunction = opts[0];\n\n        if (compareFunction === undefined) {\n            compareFunction = defaultCompareFunction;\n        }\n\n        const _convertToNumber = memoize(convertToNumber);\n\n        super.sort((x, y) => { return compareFunction(_convertToNumber(x), _convertToNumber(y)); });\n\n        return _(this).proxy;\n    }\n\n    // copy element methods\n    // @ts-ignore\n    slice(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.slice(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.slice(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer);\n    }\n\n    // @ts-ignore\n    subarray(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.subarray(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.subarray(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer, float16bits.byteOffset, float16bits.length);\n    }\n\n    // contains methods\n    indexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        for(let i = from, l = length; i < l; ++i) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    lastIndexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        from = from === 0 ? length : from + 1;\n\n        if (from >= 0) {\n            from = from < length ? from : length;\n        } else {\n            from += length;\n        }\n\n        for(let i = from; i--;) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    includes(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        const isNaN = Number.isNaN(element);\n        for(let i = from, l = length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n\n            if (isNaN && Number.isNaN(value)) {\n                return true;\n            }\n\n            if (value === element) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // string methods\n    join(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        return array.join(...opts);\n    }\n\n    toLocaleString(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        // @ts-ignore\n        return array.toLocaleString(...opts);\n    }\n\n    // @ts-ignore\n    get [Symbol.toStringTag]() {\n        if (isFloat16Array(this)) {\n            return \"Float16Array\";\n        }\n    }\n}\n\nconst Float16Array$prototype = Float16Array.prototype;\n\nconst defaultFloat16ArrayMethods = new WeakSet();\nfor(const key of Reflect.ownKeys(Float16Array$prototype)) {\n    const val = Float16Array$prototype[key];\n    if (typeof val === \"function\") {\n        defaultFloat16ArrayMethods.add(val);\n    }\n}\n","import { isDataView } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to getFloat16 function must be a DataView\");\n    }\n\n    return convertToNumber( dataView.getUint16(byteOffset, ...opts) );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to setFloat16 function must be a DataView\");\n    }\n\n    dataView.setUint16(byteOffset, roundToFloat16Bits(value), ...opts);\n}\n","export { default as hfround } from \"./hfround\";\nexport { default as Float16Array } from \"./Float16Array\";\nexport { getFloat16, setFloat16 } from \"./dataView.js\";\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeDpiBlob = changeDpiBlob;\nexports.changeDpiDataUrl = changeDpiDataUrl;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createPngDataTable() {\n  /* Table of CRCs of all 8-bit messages. */\n  var crcTable = new Int32Array(256);\n  for (var n = 0; n < 256; n++) {\n    var c = n;\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xedb88320 ^ c >>> 1 : c >>> 1;\n    }\n    crcTable[n] = c;\n  }\n  return crcTable;\n}\n\nfunction calcCrc(buf) {\n  var c = -1;\n  if (!pngDataTable) pngDataTable = createPngDataTable();\n  for (var n = 0; n < buf.length; n++) {\n    c = pngDataTable[(c ^ buf[n]) & 0xFF] ^ c >>> 8;\n  }\n  return c ^ -1;\n}\n\nvar pngDataTable = void 0;\n\nvar PNG = 'image/png';\nvar JPEG = 'image/jpeg';\n\n// those are 3 possible signature of the physBlock in base64.\n// the pHYs signature block is preceed by the 4 bytes of lenght. The length of\n// the block is always 9 bytes. So a phys block has always this signature:\n// 0 0 0 9 p H Y s.\n// However the data64 encoding aligns we will always find one of those 3 strings.\n// this allow us to find this particular occurence of the pHYs block without\n// converting from b64 back to string\nvar b64PhysSignature1 = 'AAlwSFlz';\nvar b64PhysSignature2 = 'AAAJcEhZ';\nvar b64PhysSignature3 = 'AAAACXBI';\n\nvar _P = 'p'.charCodeAt(0);\nvar _H = 'H'.charCodeAt(0);\nvar _Y = 'Y'.charCodeAt(0);\nvar _S = 's'.charCodeAt(0);\n\nfunction changeDpiBlob(blob, dpi) {\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var headerChunk = blob.slice(0, 33);\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      var dataArray = new Uint8Array(fileReader.result);\n      var tail = blob.slice(33);\n      var changedArray = changeDpiOnArray(dataArray, dpi, blob.type);\n      resolve(new Blob([changedArray, tail], { type: blob.type }));\n    };\n    fileReader.readAsArrayBuffer(headerChunk);\n  });\n}\n\nfunction changeDpiDataUrl(base64Image, dpi) {\n  var dataSplitted = base64Image.split(',');\n  var format = dataSplitted[0];\n  var body = dataSplitted[1];\n  var type = void 0;\n  var headerLength = void 0;\n  var overwritepHYs = false;\n  if (format.indexOf(PNG) !== -1) {\n    type = PNG;\n    var b64Index = detectPhysChunkFromDataUrl(body);\n    // 28 bytes in dataUrl are 21bytes, length of phys chunk with everything inside.\n    if (b64Index >= 0) {\n      headerLength = Math.ceil((b64Index + 28) / 3) * 4;\n      overwritepHYs = true;\n    } else {\n      headerLength = 33 / 3 * 4;\n    }\n  }\n  if (format.indexOf(JPEG) !== -1) {\n    type = JPEG;\n    headerLength = 18 / 3 * 4;\n  }\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var stringHeader = body.substring(0, headerLength);\n  var restOfData = body.substring(headerLength);\n  var headerBytes = atob(stringHeader);\n  var dataArray = new Uint8Array(headerBytes.length);\n  for (var i = 0; i < dataArray.length; i++) {\n    dataArray[i] = headerBytes.charCodeAt(i);\n  }\n  var finalArray = changeDpiOnArray(dataArray, dpi, type, overwritepHYs);\n  var base64Header = btoa(String.fromCharCode.apply(String, _toConsumableArray(finalArray)));\n  return [format, ',', base64Header, restOfData].join('');\n}\n\nfunction detectPhysChunkFromDataUrl(data) {\n  var b64index = data.indexOf(b64PhysSignature1);\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature2);\n  }\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature3);\n  }\n  // if b64index === -1 chunk is not found\n  return b64index;\n}\n\nfunction searchStartOfPhys(data) {\n  var length = data.length - 1;\n  // we check from the end since we cut the string in proximity of the header\n  // the header is within 21 bytes from the end.\n  for (var i = length; i >= 4; i--) {\n    if (data[i - 4] === 9 && data[i - 3] === _P && data[i - 2] === _H && data[i - 1] === _Y && data[i] === _S) {\n      return i - 3;\n    }\n  }\n}\n\nfunction changeDpiOnArray(dataArray, dpi, format, overwritepHYs) {\n  if (format === JPEG) {\n    dataArray[13] = 1; // 1 pixel per inch or 2 pixel per cm\n    dataArray[14] = dpi >> 8; // dpiX high byte\n    dataArray[15] = dpi & 0xff; // dpiX low byte\n    dataArray[16] = dpi >> 8; // dpiY high byte\n    dataArray[17] = dpi & 0xff; // dpiY low byte\n    return dataArray;\n  }\n  if (format === PNG) {\n    var physChunk = new Uint8Array(13);\n    // chunk header pHYs\n    // 9 bytes of data\n    // 4 bytes of crc\n    // this multiplication is because the standard is dpi per meter.\n    dpi *= 39.3701;\n    physChunk[0] = _P;\n    physChunk[1] = _H;\n    physChunk[2] = _Y;\n    physChunk[3] = _S;\n    physChunk[4] = dpi >>> 24; // dpiX highest byte\n    physChunk[5] = dpi >>> 16; // dpiX veryhigh byte\n    physChunk[6] = dpi >>> 8; // dpiX high byte\n    physChunk[7] = dpi & 0xff; // dpiX low byte\n    physChunk[8] = physChunk[4]; // dpiY highest byte\n    physChunk[9] = physChunk[5]; // dpiY veryhigh byte\n    physChunk[10] = physChunk[6]; // dpiY high byte\n    physChunk[11] = physChunk[7]; // dpiY low byte\n    physChunk[12] = 1; // dot per meter....\n\n    var crc = calcCrc(physChunk);\n\n    var crcChunk = new Uint8Array(4);\n    crcChunk[0] = crc >>> 24;\n    crcChunk[1] = crc >>> 16;\n    crcChunk[2] = crc >>> 8;\n    crcChunk[3] = crc & 0xff;\n\n    if (overwritepHYs) {\n      var startingIndex = searchStartOfPhys(dataArray);\n      dataArray.set(physChunk, startingIndex);\n      dataArray.set(crcChunk, startingIndex + 13);\n      return dataArray;\n    } else {\n      // i need to give back an array of data that is divisible by 3 so that\n      // dataurl encoding gives me integers, for luck this chunk is 17 + 4 = 21\n      // if it was we could add a text chunk contaning some info, untill desired\n      // length is met.\n\n      // chunk structur 4 bytes for length is 9\n      var chunkLength = new Uint8Array(4);\n      chunkLength[0] = 0;\n      chunkLength[1] = 0;\n      chunkLength[2] = 0;\n      chunkLength[3] = 9;\n\n      var finalHeader = new Uint8Array(54);\n      finalHeader.set(dataArray, 0);\n      finalHeader.set(chunkLength, 33);\n      finalHeader.set(physChunk, 37);\n      finalHeader.set(crcChunk, 50);\n      return finalHeader;\n    }\n  }\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { GPULayer } from './GPULayer';\nimport {\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tFLOAT,\n\tHALF_FLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tGLSLVersion,\n\tGLSL1,\n\tGLSL3,\n\tWEBGL2,\n\tWEBGL1,\n\tEXPERIMENTAL_WEBGL,\n\tCLAMP_TO_EDGE,\n\tTextureFormat,\n\tNEAREST,\n\tRGBA,\n\tTextureType,\n\tPROGRAM_NAME_INTERNAL,\n\tCompileTimeVars,\n\tDEFAULT_PROGRAM_NAME,\n\tDEFAULT_W_UV_PROGRAM_NAME,\n\tDEFAULT_W_NORMAL_PROGRAM_NAME,\n\tDEFAULT_W_UV_NORMAL_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tLAYER_POINTS_PROGRAM_NAME,\n\tLAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tLAYER_LINES_PROGRAM_NAME,\n\tErrorCallback,\n\tDEFAULT_CIRCLE_NUM_SEGMENTS,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tUINT,\n\tGLSLPrecision,\n\tPRECISION_HIGH_P,\n\tDEFAULT_ERROR_CALLBACK,\n\tBOOL,\n} from './constants';\nimport { GPUProgram } from './GPUProgram';\n// Just importing the types here.\n// Only @types/three is installed as dev dependency.\nimport {\n\tWebGLRenderer,\n\tVector4,\n} from 'three';\nimport * as utils from './Vector4';\nimport {\n\tisWebGL2,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n\tpreprocessVertexShader,\n\tcompileShader,\n} from './utils';\nimport {\n\tisArray,\n\tisString,\n\tisValidFilter,\n\tisValidTextureType,\n\tisValidTextureFormat,\n\tisValidWrap,\n} from './checks';\nconst defaultVertexShaderSource = require('./glsl/vert/DefaultVertShader.glsl');\n\nexport class GPUComposer {\n\treadonly canvas: HTMLCanvasElement;\n\treadonly gl!: WebGLRenderingContext | WebGL2RenderingContext;\n\treadonly glslVersion!: GLSLVersion;\n\treadonly intPrecision!: GLSLPrecision;\n\treadonly floatPrecision!: GLSLPrecision;\n\t// These width and height are the current canvas at full res.\n\tprivate _width!: number;\n\tprivate _height!: number;\n\n\tprivate _errorThrown = false;\n\t/**\n\t * @private\n\t */\n\treadonly _errorCallback: ErrorCallback;\n\n\t// Save threejs renderer if passed in.\n\t/**\n\t * @private\n\t */\n\treadonly _renderer?: WebGLRenderer;\n\tprivate readonly _maxNumTextures!: number;\n\t\n\t// Precomputed buffers (inited as needed).\n\tprivate _quadPositionsBuffer?: WebGLBuffer;\n\tprivate _boundaryPositionsBuffer?: WebGLBuffer;\n\t// Store multiple circle positions buffers for various num segments, use numSegments as key.\n\tprivate _circlePositionsBuffer: { [key: number]: WebGLBuffer } = {};\n\n\tprivate _pointIndexArray?: Float32Array;\n\tprivate _pointIndexBuffer?: WebGLBuffer;\n\tprivate _vectorFieldIndexArray?: Float32Array;\n\tprivate _vectorFieldIndexBuffer?: WebGLBuffer;\n\tprivate _indexedLinesIndexBuffer?: WebGLBuffer;\n\n\t// Keep track of all GL extensions that have been loaded.\n\t/**\n\t * @private\n\t */\n\treadonly _extensions: { [key: string]: any } = {};\n\n\t// Programs for copying data (these are needed for rendering partial screen geometries).\n\tprivate readonly _copyPrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/CopyFragShader.glsl'),\n\t};\n\n\t// Other util programs.\n\tprivate readonly _setValuePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/SetValueFragShader.glsl'),\n\t};\n\tprivate _wrappedLineColorProgram?: GPUProgram; // We only need a FLOAT version of this.\n\tprivate readonly _vectorMagnitudePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/VectorMagnitudeFragShader.glsl'),\n\t};\n\n\t/**\n\t * Vertex shaders are shared across all GPUProgram instances.\n\t * @private\n\t */\n\treadonly _vertexShaders: {[key in PROGRAM_NAME_INTERNAL]: {\n\t\tsrc: string,\n\t\tshader?: WebGLProgram,\n\t\tdefines?: CompileTimeVars,\n\t}} = {\n\t\t[DEFAULT_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t},\n\t\t[DEFAULT_W_UV_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'GPUIO_UV_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[DEFAULT_W_NORMAL_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'GPUIO_NORMAL_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[DEFAULT_W_UV_NORMAL_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'GPUIO_UV_ATTRIBUTE': '1',\n\t\t\t\t'GPUIO_NORMAL_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[SEGMENT_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/SegmentVertShader.glsl'),\n\t\t},\n\t\t[LAYER_POINTS_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerPointsVertShader.glsl'),\n\t\t},\n\t\t[LAYER_VECTOR_FIELD_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerVectorFieldVertShader.glsl'),\n\t\t},\n\t\t[LAYER_LINES_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerLinesVertShader.glsl'),\n\t\t},\n\t};\n\n\tverboseLogging = false;\n\n\tprivate _lastTickTime?: number;\n\tprivate _lastTickFPS?: number\n\tprivate _numTicks = 0;\n\n\tconstructor(\n\t\tparams: {\n\t\t\tcanvas: HTMLCanvasElement,\n\t\t\tcontext?: WebGLRenderingContext | WebGL2RenderingContext,\n\t\t\tcontextID?: typeof WEBGL2 | typeof WEBGL1 | typeof EXPERIMENTAL_WEBGL | string,\n\t\t\tcontextOptions?: {\n\t\t\t\tantialias?: boolean,\n\t\t\t\t[key: string]: any,\n\t\t\t},\n\t\t\tglslVersion?: GLSLVersion,\n\t\t\tintPrecision?: GLSLPrecision,\n\t\t\tfloatPrecision?: GLSLPrecision,\n\t\t\tverboseLogging?: boolean,\n\t\t\t// Optionally pass in an error callback in case we want to handle errors related to webgl support.\n\t\t\t// e.g. throw up a modal telling user this will not work on their device.\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['canvas', 'context', 'contextID', 'contextOptions', 'glslVersion', 'verboseLogging', 'errorCallback'];\n\t\tconst requiredKeys = ['canvas'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to new GPUComposer(params).  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to new GPUComposer(params).`);\n\t\t\t}\n\t\t});\n\n\t\tif (params.verboseLogging !== undefined) this.verboseLogging = params.verboseLogging;\n\n\t\t// Save callback in case we run into an error.\n\t\tconst self = this;\n\t\tthis._errorCallback = (message: string) => {\n\t\t\tif (self._errorThrown) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself._errorThrown = true;\n\t\t\tparams.errorCallback ? params.errorCallback(message) : DEFAULT_ERROR_CALLBACK(message);\n\t\t}\n\n\t\tconst { canvas } = params;\n\t\tthis.canvas = canvas;\n\t\tlet gl = params.context;\n\n\t\t// Init GL.\n\t\tif (!gl) {\n\t\t\t// Init a gl context if not passed in.\n\t\t\tif (params.contextID) {\n\t\t\t\tconst _gl = canvas.getContext(params.contextID, params.contextOptions) as WebGLRenderingContext | null;\n\t\t\t\tif (!_gl) {\n\t\t\t\t\tconsole.warn(`Unable to initialize WebGL context with contextID: ${params.contextID}.`);\n\t\t\t\t} else {\n\t\t\t\t\tgl = _gl;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gl) {\n\t\t\t\tconst _gl = canvas.getContext(WEBGL2, params.contextOptions)  as WebGL2RenderingContext | null\n\t\t\t\t\t|| canvas.getContext(WEBGL1, params.contextOptions)  as WebGLRenderingContext | null\n\t\t\t\t\t|| canvas.getContext(EXPERIMENTAL_WEBGL, params.contextOptions)  as WebGLRenderingContext | null;\n\t\t\t\tif (_gl) {\n\t\t\t\t\tgl = _gl;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gl) {\n\t\t\t\tthis._errorCallback('Unable to initialize WebGL context.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (isWebGL2(gl)) {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 2.0 context.');\n\t\t} else {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 1.0 context.');\n\t\t}\n\t\tthis.gl = gl;\n\n\t\t// Save glsl version, default to 3 if using webgl2 context.\n\t\tlet glslVersion = params.glslVersion || (isWebGL2(gl) ? GLSL3 : GLSL1);\n\t\tif (!isWebGL2(gl) && glslVersion === GLSL3) {\n\t\t\tconsole.warn('GLSL3.x is incompatible with WebGL1.0 contexts, falling back to GLSL1.');\n\t\t\tglslVersion = GLSL1; // Fall back to GLSL1 in these cases.\n\t\t}\n\t\t// TODO: check that this is valid.\n\t\tthis.glslVersion = glslVersion;\n\n\t\t// Set default int/float precision.\n\t\tthis.intPrecision = params.intPrecision || PRECISION_HIGH_P;\n\t\tthis.floatPrecision = params.floatPrecision || PRECISION_HIGH_P;\n\n\t\t// GL setup.\n\t\t// Disable depth testing globally.\n\t\tgl.disable(gl.DEPTH_TEST);\n\t\t// Set unpack alignment to 1 so we can have textures of arbitrary dimensions.\n\t\t// https://stackoverflow.com/questions/51582282/error-when-creating-textures-in-webgl-with-the-rgb-format\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\t\t// TODO: look into more of these: https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n\t\t// // Some implementations of HTMLCanvasElement's or OffscreenCanvas's CanvasRenderingContext2D store color values\n\t\t// // internally in premultiplied form. If such a canvas is uploaded to a WebGL texture with the\n\t\t// // UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter set to false, the color channels will have to be un-multiplied\n\t\t// // by the alpha channel, which is a lossy operation. The WebGL implementation therefore can not guarantee that colors\n\t\t// // with alpha < 1.0 will be preserved losslessly when first drawn to a canvas via CanvasRenderingContext2D and then\n\t\t// // uploaded to a WebGL texture when the UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter is set to false.\n\t\t// gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n\t\t// Unbind active buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\t// Canvas setup.\n\t\tthis.resize(canvas.clientWidth, canvas.clientHeight);\n\n\t\t// Log number of textures available.\n\t\tthis._maxNumTextures = this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tif (this.verboseLogging) console.log(`${this._maxNumTextures} textures max.`);\n\t}\n\n\tstatic initWithThreeRenderer(\n\t\trenderer: WebGLRenderer,\n\t\tparams?: {\n\t\t\tverboseLogging?: boolean,\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\tconst composer = new GPUComposer(\n\t\t\t{\n\t\t\t\tfloatPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\tintPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\t...params,\n\t\t\t\tcanvas: renderer.domElement,\n\t\t\t\tcontext: renderer.getContext(),\n\t\t\t\tglslVersion: renderer.capabilities.isWebGL2 ? GLSL3 : GLSL1,\n\t\t\t},\n\t\t);\n\t\t// Attach renderer.\n\t\t// @ts-ignore\n\t\tcomposer.renderer = renderer;\n\t\treturn composer;\n\t}\n\n\tisWebGL2() {\n\t\treturn isWebGL2(this.gl);\n\t}\n\n\tprivate _glslKeyForType(type: GPULayerType) {\n\t\tswitch (type) {\n\t\t\tcase HALF_FLOAT:\n\t\t\tcase FLOAT:\n\t\t\t\treturn FLOAT;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\tif (this.glslVersion === GLSL1) return INT;\n\t\t\t\treturn UINT;\n\t\t\tcase BYTE:\n\t\t\tcase SHORT:\n\t\t\tcase INT:\n\t\t\t\treturn INT;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid type: ${type} passed to GPUComposer.copyProgramForType.`);\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t_setValueProgramForType(type: GPULayerType) {\n\t\tconst { _setValuePrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_setValuePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `setValue-${key}`,\n\t\t\t\tfragmentShader: _setValuePrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_value',\n\t\t\t\t\t\tvalue: [0, 0, 0, 0],\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_setValuePrograms[key] = program;\n\t\t}\n\t\treturn _setValuePrograms[key]!;\n\t}\n\n\tprivate _copyProgramForType(type: GPULayerType) {\n\t\tconst { _copyPrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_copyPrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `copy-${key}`,\n\t\t\t\tfragmentShader: _copyPrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_state',\n\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\ttype: INT,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_copyPrograms[key] = program;\n\t\t}\n\t\treturn _copyPrograms[key]!;\n\t}\n\n\tprivate _getWrappedLineColorProgram() {\n\t\tif (this._wrappedLineColorProgram === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: 'wrappedLineColor',\n\t\t\t\tfragmentShader: require('./glsl/frag/WrappedLineColorFragShader.glsl'),\n\t\t\t});\n\t\t\tthis._wrappedLineColorProgram = program;\n\t\t}\n\t\treturn this._wrappedLineColorProgram;\n\t}\n\n\tprivate _vectorMagnitudeProgramForType(type: GPULayerType) {\n\t\tconst { _vectorMagnitudePrograms } = this;\n\t\tconst key = this._glslKeyForType(type);\n\t\tif (_vectorMagnitudePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `vectorMagnitude-${key}`,\n\t\t\t\tfragmentShader: _vectorMagnitudePrograms.src,\n\t\t\t\tdefines: {\n\t\t\t\t\t[`GPUIO_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\t_vectorMagnitudePrograms[key] = program;\n\t\t}\n\t\treturn _vectorMagnitudePrograms[key]!;\n\t}\n\n\tprivate _getQuadPositionsBuffer() {\n\t\tif (this._quadPositionsBuffer === undefined) {\n\t\t\tconst fsQuadPositions = new Float32Array([ -1, -1, 1, -1, -1, 1, 1, 1 ]);\n\t\t\tthis._quadPositionsBuffer = this._initVertexBuffer(fsQuadPositions)!;\n\t\t}\n\t\treturn this._quadPositionsBuffer!;\n\t}\n\n\tprivate _getBoundaryPositionsBuffer() {\n\t\tif (this._boundaryPositionsBuffer === undefined) {\n\t\t\tconst boundaryPositions = new Float32Array([ -1, -1, 1, -1, 1, 1, -1, 1, -1, -1 ]);\n\t\t\tthis._boundaryPositionsBuffer = this._initVertexBuffer(boundaryPositions)!;\n\t\t}\n\t\treturn this._boundaryPositionsBuffer!;\n\t}\n\n\tprivate _getCirclePositionsBuffer(numSegments: number) {\n\t\tconst { _circlePositionsBuffer } = this;\n\t\tif (_circlePositionsBuffer[numSegments] == undefined) {\n\t\t\tconst unitCirclePoints = [0, 0];\n\t\t\tfor (let i = 0; i <= numSegments; i++) { // TODO: should this be just less than?\n\t\t\t\tunitCirclePoints.push(\n\t\t\t\t\tMath.cos(2 * Math.PI * i / numSegments),\n\t\t\t\t\tMath.sin(2 * Math.PI * i / numSegments),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst circlePositions = new Float32Array(unitCirclePoints);\n\t\t\tconst buffer = this._initVertexBuffer(circlePositions)!;\n\t\t\t_circlePositionsBuffer[numSegments] = buffer;\n\t\t}\n\t\treturn _circlePositionsBuffer[numSegments];\n\t}\n\n\tprivate _initVertexBuffer(\n\t\tdata: Float32Array,\n\t) {\n\t\tconst { _errorCallback, gl } = this;\n\t\tconst buffer = gl.createBuffer();\n\t\tif (!buffer) {\n\t\t\t_errorCallback('Unable to allocate gl buffer.');\n\t\t\treturn;\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t// Add buffer data.\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\t\treturn buffer;\n\t}\n\n\t/**\n\t * Used internally, see GPULayer.clone() for public API.\n\t * @private\n\t */\n\t_cloneGPULayer(gpuLayer: GPULayer, name?: string) {\n\t\tlet dimensions: number | [number, number] = 0;\n\t\ttry {\n\t\t\tdimensions = gpuLayer.length;\n\t\t} catch {\n\t\t\tdimensions = [gpuLayer.width, gpuLayer.height];\n\t\t}\n\n\t\t// If read only, get state by reading to GPU.\n\t\tconst array = gpuLayer.writable ? undefined : gpuLayer.getValues();\n\n\t\tconst clone = new GPULayer(this, {\n\t\t\tname: name || `${gpuLayer.name}-clone`,\n\t\t\tdimensions,\n\t\t\ttype: gpuLayer.type,\n\t\t\tnumComponents: gpuLayer.numComponents,\n\t\t\tfilter: gpuLayer.filter,\n\t\t\twrapS: gpuLayer.wrapS,\n\t\t\twrapT: gpuLayer.wrapT,\n\t\t\twritable: gpuLayer.writable,\n\t\t\tnumBuffers: gpuLayer.numBuffers,\n\t\t\tclearValue: gpuLayer.clearValue,\n\t\t\tarray,\n\t\t});\n\n\t\t// TODO: check this.\n\t\t// If writable, copy current state with a draw call.\n\t\tif (gpuLayer.writable) {\n\t\t\tfor (let i = 0; i < gpuLayer.numBuffers - 1; i++) {\n\t\t\t\tthis.step({\n\t\t\t\t\tprogram: this._copyProgramForType(gpuLayer.type),\n\t\t\t\t\tinput: gpuLayer.getStateAtIndex((gpuLayer.bufferIndex + i + 1) % gpuLayer.numBuffers),\n\t\t\t\t\toutput: clone,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.step({\n\t\t\t\tprogram: this._copyProgramForType(gpuLayer.type),\n\t\t\t\tinput: gpuLayer.currentState,\n\t\t\t\toutput: clone,\n\t\t\t});\n\t\t}\n\n\t\t// TODO: Increment clone's buffer index until it is identical to the original layer.\n\n\n\t\treturn clone;\n\t}\n\n\tinitTexture(\n\t\tparams: {\n\t\t\tname: string,\n\t\t\turl: string,\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\tformat?: TextureFormat,\n\t\t\ttype?: TextureType,\n\t\t\tonLoad?: (texture: WebGLTexture) => void,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['name', 'url', 'filter', 'wrapS', 'wrapT', 'format', 'type', 'onLoad'];\n\t\tObject.keys(params).forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to GPUComposer.initTexture with name \"${params.name}\".  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\tconst { url, name } = params;\n\t\tif (!isString(url)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have url of type string, got ${url} of type ${typeof url}.`)\n\t\t}\n\t\tif (!isString(name)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have name of type string, got ${name} of type ${typeof name}.`)\n\t\t}\n\n\t\t// Get filter type, default to nearest.\n\t\tconst filter = params.filter !== undefined ? params.filter : NEAREST;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${filter} for GPULayer \"${name}\", must be ${validFilters.join(', ')}.`);\n\t\t}\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${wrapS} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${wrapT} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\n\t\t// Get image format type, default to rgba.\n\t\tconst format = params.format !== undefined ? params.format : RGBA;\n\t\tif (!isValidTextureFormat(format)) {\n\t\t\tthrow new Error(`Invalid format: ${format} for GPULayer \"${name}\", must be ${validTextureFormats.join(', ')}.`);\n\t\t}\n\n\t\t// Get image data type, default to unsigned byte.\n\t\tconst type = params.type !== undefined ? params.type : UNSIGNED_BYTE;\n\t\tif (!isValidTextureType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${type} for GPULayer \"${name}\", must be ${validTextureTypes.join(', ')}.`);\n\t\t}\n\n\t\tconst { gl, _errorCallback } = this;\n\t\tconst texture = gl.createTexture();\n\t\tif (texture === null) {\n\t\t\tthrow new Error(`Unable to init glTexture.`);\n\t\t}\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t// Because images have to be downloaded over the internet\n\t\t// they might take a moment until they are ready.\n\t\t// Until then put a single pixel in the texture so we can\n\t\t// use it immediately. When the image has finished downloading\n\t\t// we'll update the texture with the contents of the image.\n\t\tconst level = 0;\n\t\tconst internalFormat = gl.RGBA;\n\t\tconst width = 1;\n\t\tconst height = 1;\n\t\tconst border = 0;\n\t\tconst srcFormat = gl[format];\n\t\tconst srcType = gl[type];\n\t\tconst pixel = new Uint8Array([0, 0, 0, 0]);\n\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\twidth, height, border, srcFormat, srcType, pixel);\n\n\t\tconst image = new Image();\n\t\timage.onload = () => {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\t\tsrcFormat, srcType, image);\n\n\t\t\t// WebGL1 has different requirements for power of 2 images\n\t\t\t// vs non power of 2 images so check if the image is a\n\t\t\t// power of 2 in both dimensions.\n\t\t\tif (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n\t\t\t\t// // Yes, it's a power of 2. Generate mips.\n\t\t\t\t// gl.generateMipmap(gl.TEXTURE_2D);\n\t\t\t} else {\n\t\t\t\t// TODO: finish implementing this.\n\t\t\t\tconsole.warn(`Texture ${name} dimensions [${image.width}, ${image.height}] are not power of 2.`);\n\t\t\t\t// // No, it's not a power of 2. Turn off mips and set\n\t\t\t\t// // wrapping to clamp to edge\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t}\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[filter]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[filter]);\n\n\t\t\t// Callback when texture has loaded.\n\t\t\tif (params.onLoad) params.onLoad(texture);\n\t\t};\n\t\timage.onerror = (e) => {\n\t\t\t_errorCallback(`Error loading image ${name}: ${e}`);\n\t\t}\n\t\timage.src = url;\n\n\t\treturn texture;\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t_getVertexShaderWithName(name: PROGRAM_NAME_INTERNAL, programName: string) {\n\t\tconst {\n\t\t\t_errorCallback,\n\t\t\t_vertexShaders,\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t} = this;\n\t\tconst vertexShader = _vertexShaders[name];\n\t\tif (vertexShader.shader === undefined) {\n\t\t\t// Init a vertex shader (this only happens once for each possible vertex shader across all GPUPrograms).\n\t\t\tif (vertexShader.src === '') {\n\t\t\t\tthrow new Error(`Error compiling GPUProgram \"${programName}\": no source for vertex shader with name \"${name}\".`);\n\t\t\t}\n\t\t\tconst preprocessedSrc = preprocessVertexShader(vertexShader.src, glslVersion);\n\t\t\tconst shader = compileShader(\n\t\t\t\tgl,\n\t\t\t\tglslVersion,\n\t\t\t\tintPrecision,\n\t\t\t\tfloatPrecision,\n\t\t\t\tpreprocessedSrc,\n\t\t\t\tgl.VERTEX_SHADER,\n\t\t\t\tprogramName,\n\t\t\t\t_errorCallback,\n\t\t\t\tvertexShader.defines,\n\t\t\t);\n\t\t\tif (!shader) {\n\t\t\t\t_errorCallback(`Unable to compile \"${name}\" vertex shader for GPUProgram \"${programName}\".`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Save the results so this does not have to be repeated.\n\t\t\tvertexShader.shader = shader;\n\t\t}\n\t\treturn vertexShader.shader;\n\t}\n\n\tresize(width: number, height: number) {\n\t\tconst { canvas } = this;\n\t\t// Set correct canvas pixel size.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/By_example/Canvas_size_and_WebGL\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\t// Save dimensions.\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t};\n\n\tprivate _drawSetup(\n\t\tprogram: WebGLProgram,\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer,\n\t) {\n\t\tconst { gl } = this;\n\t\t// Check if we are in an error state.\n\t\tif (!program) {\n\t\t\treturn;\n\t\t}\n\n\t\t// CAUTION: the order of these next few lines is important.\n\n\t\t// Get a shallow copy of current textures.\n\t\t// This line must come before this.setOutput() as it depends on current internal state.\n\t\tconst inputTextures: WebGLTexture[] = [];\n\t\tif (input) {\n\t\t\tif (input.constructor === WebGLTexture) {\n\t\t\t\tinputTextures.push(input as WebGLTexture);\n\t\t\t} else if (input.constructor === GPULayer) {\n\t\t\t\tinputTextures.push((input as GPULayer).currentState);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < (input as (GPULayer | WebGLTexture)[]).length; i++) {\n\t\t\t\t\tconst layer = (input as (GPULayer | WebGLTexture)[])[i];\n\t\t\t\t\tinputTextures.push((layer as GPULayer).currentState ? (layer as GPULayer).currentState : layer as WebGLTexture)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set output framebuffer.\n\t\t// This may modify WebGL internal state.\n\t\tthis._setOutputLayer(fullscreenRender, input, output);\n\n\t\t// Set current program.\n\t\tgl.useProgram(program);\n\n\t\t// Set input textures.\n\t\tfor (let i = 0; i < inputTextures.length; i++) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTextures[i]);\n\t\t}\n\t}\n\n\tprivate _setBlendMode(shouldBlendAlpha?: boolean) {\n\t\tconst { gl } = this;\n\t\tif (shouldBlendAlpha) {\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t}\n\t}\n\n\tprivate _addLayerToInputs(\n\t\tlayer: GPULayer,\n\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t) {\n\t\t// Add layer to end of input if needed.\n\t\tlet _inputLayers = input;\n\t\tif (isArray(_inputLayers)) {\n\t\t\tconst index = (_inputLayers as (GPULayer | WebGLTexture)[]).indexOf(layer);\n\t\t\tif (index < 0) {\n\t\t\t\t(_inputLayers as (GPULayer | WebGLTexture)[]).push(layer);\n\t\t\t} \n\t\t} else {\n\t\t\tif (_inputLayers !== layer) {\n\t\t\t\tconst previous = _inputLayers;\n\t\t\t\t_inputLayers = [];\n\t\t\t\tif (previous) (_inputLayers as (GPULayer | WebGLTexture)[]).push(previous);\n\t\t\t\t(_inputLayers as (GPULayer | WebGLTexture)[]).push(layer);\n\t\t\t} else {\n\t\t\t\t_inputLayers = [_inputLayers];\n\t\t\t}\n\t\t}\n\t\treturn _inputLayers as (GPULayer | WebGLTexture)[];\n\t}\n\n\tprivate _passThroughLayerDataFromInputToOutput(state: GPULayer) {\n\t\t// TODO: figure out the fastest way to copy a texture.\n\t\tconst copyProgram = this._copyProgramForType(state._internalType);\n\t\tthis.step({\n\t\t\tprogram: copyProgram,\n\t\t\tinput: state,\n\t\t\toutput: state,\n\t\t});\n\t}\n\n\tprivate _setOutputLayer(\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t) {\n\t\tconst { gl } = this;\n\n\t\t// Render to screen.\n\t\tif (!output) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t// Resize viewport.\n\t\t\tconst { _width, _height } = this;\n\t\t\tgl.viewport(0, 0, _width, _height);\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if output is same as one of input layers.\n\t\t// TODO: do a better job of checking if input is a texture of same GPULayer as output.\n\t\tif (input && ((input === output) || (isArray(input) && (input as (GPULayer | WebGLTexture)[]).indexOf(output) > -1))) {\n\t\t\tif (output.numBuffers === 1) {\n\t\t\t\tthrow new Error('Cannot use same buffer for input and output of a program. Try increasing the number of buffers in your output layer to at least 2 so you can render to nextState using currentState as an input.');\n\t\t\t}\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render and increment buffer so we are rendering to a different target\n\t\t\t\t// than the input texture.\n\t\t\t\toutput._prepareForWrite(true);\n\t\t\t} else {\n\t\t\t\t// Pass input texture through to output.\n\t\t\t\tthis._passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t// Render to output without incrementing buffer.\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t}\n\t\t} else {\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render to current buffer.\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t} else {\n\t\t\t\t// If we are doing a sneaky thing with a swapped texture and are\n\t\t\t\t// only rendering part of the screen, we may need to add a copy operation.\n\t\t\t\tif (output._usingTextureOverrideForCurrentBuffer()) {\n\t\t\t\t\tthis._passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t}\n\t\t\t\toutput._prepareForWrite(false);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resize viewport.\n\t\tconst { width, height } = output;\n\t\tgl.viewport(0, 0, width, height);\n\t};\n\n\tprivate _setVertexAttribute(program: WebGLProgram, name: string, size: number, programName: string) {\n\t\tconst { gl } = this;\n\t\t// Point attribute to the currently bound VBO.\n\t\tconst location = gl.getAttribLocation(program, name);\n\t\tif (location < 0) {\n\t\t\tthrow new Error(`Unable to find vertex attribute \"${name}\" in program \"${programName}\".`);\n\t\t}\n\t\t// TODO: only float is supported for vertex attributes.\n\t\tgl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\n\t\t// Enable the attribute.\n\t\tgl.enableVertexAttribArray(location);\n\t}\n\n\tprivate _setPositionAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_internal_position', 2, programName);\n\t}\n\n\tprivate _setIndexAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_internal_index', 1, programName);\n\t}\n\n\tprivate _setUVAttribute(program: WebGLProgram, programName: string) {\n\t\tthis._setVertexAttribute(program, 'a_internal_uv', 2, programName);\n\t}\n\n\t// Step for entire fullscreen quad.\n\tstep(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a strip of px along the boundary.\n\tstepBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tsingleEdge?: 'LEFT' | 'RIGHT' | 'TOP' | 'BOTTOM';\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\t// Frame needs to be offset and scaled so that all four sides are in viewport.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 - onePx[0], 1 - onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getBoundaryPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.singleEdge) {\n\t\t\tswitch(params.singleEdge) {\n\t\t\t\tcase 'LEFT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 3, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RIGHT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 1, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TOP':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 2, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BOTTOM':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 0, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unknown boundary edge type: ${params.singleEdge}.`);\n\t\t\t}\n\t\t} else {\n\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program for all but a strip of px along the boundary.\n\tstepNonBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 - 2 * onePx[0], 1 - 2 * onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a circular spot.\n\tstepCircle(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition: [number, number], // Position is in units of pixels.\n\t\t\tradius: number, // Radius is in units of pixels.\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tnumSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _width, _height } = this;\n\t\tconst { program, position, radius, input, output } = params;\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [radius * 2 / _width, radius * 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [2 * position[0] / _width - 1, 2 * position[1] / _height - 1], FLOAT);\n\t\tconst numSegments = params.numSegments ? params.numSegments : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (numSegments < 3) {\n\t\t\tthrow new Error(`numSegments for GPUComposer.stepCircle must be greater than 2, got ${numSegments}.`);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getCirclePositionsBuffer(numSegments));\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\t\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a thickened line segment (rounded end caps available).\n\tstepSegment(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition1: [number, number], // Position is in units of pixels.\n\t\t\tposition2: [number, number], // Position is in units of pixels.\n\t\t\tthickness: number, // Thickness is in units of pixels.\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tendCaps?: boolean,\n\t\t\tnumCapSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { program, position1, position2, thickness, input, output } = params;\n\t\tconst width = output ? output.width : this._width;\n\t\tconst height = output ? output.height : this._height;\n\n\t\tconst glProgram = program._segmentProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_halfThickness', thickness / 2, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tconst diffX = position1[0] - position2[0];\n\t\tconst diffY = position1[1] - position2[1];\n\t\tconst angle = Math.atan2(diffY, diffX);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_rotation', angle, FLOAT);\n\t\tconst centerX = (position1[0] + position2[0]) / 2;\n\t\tconst centerY = (position1[1] + position2[1]) / 2;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [2 * centerX / this._width - 1, 2 * centerY / this._height - 1], FLOAT);\n\t\tconst length = Math.sqrt(diffX * diffX + diffY * diffY);\n\t\t\n\t\tconst numSegments = params.numCapSegments ? params.numCapSegments * 2 : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (params.endCaps) {\n\t\t\tif (numSegments < 6 || numSegments % 6 !== 0) {\n\t\t\t\tthrow new Error(`numSegments for GPUComposer.stepSegment must be divisible by 6, got ${numSegments}.`);\n\t\t\t}\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_internal_length', length - thickness * Math.sin(Math.PI / numSegments), FLOAT);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getCirclePositionsBuffer(numSegments));\n\t\t} else {\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_internal_length', length - thickness, FLOAT);\n\t\t\t// Use a rectangle in case of no caps.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\t}\n\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.endCaps) {\n\t\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\n\t\t} else {\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepPolyline(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: [number, number][],\n\t\t\tthickness: number, // Thickness of line is in units of pixels.\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcloseLoop?: boolean,\n\t\t\tincludeUVs?: boolean,\n\t\t\tincludeNormals?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { program, input, output } = params;\n\t\tconst vertices = params.positions;\n\t\tconst closeLoop = !!params.closeLoop;\n\t\t\n\t\tconst { gl, _width, _height } = this\n\n\t\t// Offset vertices.\n\t\tconst halfThickness = params.thickness / 2;\n\t\tconst numPositions = closeLoop ? vertices.length * 4 + 2 : (vertices.length - 1) * 4;\n\t\tconst positions = new Float32Array(2 * numPositions);\n\t\tconst uvs = params.includeUVs ? new Float32Array(2 * numPositions) : undefined;\n\t\tconst normals = params.includeNormals ? new Float32Array(2 * numPositions) : undefined;\n\n\t\t// tmp arrays.\n\t\tconst s1 = [0, 0];\n\t\tconst s2 = [0, 0];\n\t\tconst n1 = [0, 0];\n\t\tconst n2 = [0, 0];\n\t\tconst n3 = [0, 0];\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tif (!closeLoop && i === vertices.length - 1) continue;\n\t\t\t// Vertices on this segment.\n\t\t\tconst v1 = vertices[i];\n\t\t\tconst v2 = vertices[(i + 1) % vertices.length];\n\t\t\ts1[0] = v2[0] - v1[0];\n\t\t\ts1[1] = v2[1] - v1[1];\n\t\t\tconst length1 = Math.sqrt(s1[0] * s1[0] + s1[1] * s1[1]);\n\t\t\tn1[0] = s1[1] / length1;\n\t\t\tn1[1] = - s1[0] / length1;\n\n\t\t\tconst index = i * 4 + 2;\n\n\t\t\tif (!closeLoop && i === 0) {\n\t\t\t\t// Add starting points to positions array.\n\t\t\t\tpositions[0] = v1[0] + n1[0] * halfThickness;\n\t\t\t\tpositions[1] = v1[1] + n1[1] * halfThickness;\n\t\t\t\tpositions[2] = v1[0] - n1[0] * halfThickness;\n\t\t\t\tpositions[3] = v1[1] - n1[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[0] = 0;\n\t\t\t\t\tuvs[1] = 1;\n\t\t\t\t\tuvs[2] = 0;\n\t\t\t\t\tuvs[3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[0] = n1[0];\n\t\t\t\t\tnormals[1] = n1[1];\n\t\t\t\t\tnormals[2] = n1[0];\n\t\t\t\t\tnormals[3] = n1[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst u = (i + 1) / (vertices.length - 1);\n\n\t\t\t// Offset from v2.\n\t\t\tpositions[2 * index] = v2[0] + n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 1] = v2[1] + n1[1] * halfThickness;\n\t\t\tpositions[2 * index + 2] = v2[0] - n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 3] = v2[1] - n1[1] * halfThickness;\n\t\t\tif (uvs) {\n\t\t\t\tuvs[2 * index] = u;\n\t\t\t\tuvs[2 * index + 1] = 1;\n\t\t\t\tuvs[2 * index + 2] = u;\n\t\t\t\tuvs[2 * index + 3] = 0;\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[2 * index] = n1[0];\n\t\t\t\tnormals[2 * index + 1] = n1[1];\n\t\t\t\tnormals[2 * index + 2] = n1[0];\n\t\t\t\tnormals[2 * index + 3] = n1[1];\n\t\t\t}\n\n\t\t\tif ((i < vertices.length - 2) || closeLoop) {\n\t\t\t\t// Vertices on next segment.\n\t\t\t\tconst v3 = vertices[(i + 1) % vertices.length];\n\t\t\t\tconst v4 = vertices[(i + 2) % vertices.length];\n\t\t\t\ts2[0] = v4[0] - v3[0];\n\t\t\t\ts2[1] = v4[1] - v3[1];\n\t\t\t\tconst length2 = Math.sqrt(s2[0] * s2[0] + s2[1] * s2[1]);\n\t\t\t\tn2[0] = s2[1] / length2;\n\t\t\t\tn2[1] = - s2[0] / length2;\n\n\t\t\t\t// Offset from v3\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = v3[0] + n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = v3[1] + n2[1] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = v3[0] - n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = v3[1] - n2[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length))] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 1] = 1;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 2] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length))] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 1] = n2[1];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 2] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 3] = n2[1];\n\t\t\t\t}\n\n\t\t\t\t// Check the angle between adjacent segments.\n\t\t\t\tconst cross = n1[0] * n2[1] - n1[1] * n2[0];\n\t\t\t\tif (Math.abs(cross) < 1e-6) continue;\n\t\t\t\tn3[0] = n1[0] + n2[0];\n\t\t\t\tn3[1] = n1[1] + n2[1];\n\t\t\t\tconst length3 = Math.sqrt(n3[0] * n3[0] + n3[1] * n3[1]);\n\t\t\t\tn3[0] /= length3;\n\t\t\t\tn3[1] /= length3;\n\t\t\t\t// Make adjustments to positions.\n\t\t\t\tconst angle = Math.acos(n1[0] * n2[0] + n1[1] * n2[1]);\n\t\t\t\tconst offset = halfThickness / Math.cos(angle / 2);\n\t\t\t\tif (cross < 0) {\n\t\t\t\t\tpositions[2 * index] = v2[0] + n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 1] = v2[1] + n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = positions[2 * index];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = positions[2 * index + 1];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[2 * index + 2] = v2[0] - n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 3] = v2[1] - n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = positions[2 * index + 2];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = positions[2 * index + 3];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (closeLoop) {\n\t\t\t// Duplicate starting points to end of positions array.\n\t\t\tpositions[vertices.length * 8] = positions[0];\n\t\t\tpositions[vertices.length * 8 + 1] = positions[1];\n\t\t\tpositions[vertices.length * 8 + 2] = positions[2];\n\t\t\tpositions[vertices.length * 8 + 3] = positions[3];\n\t\t\tif (uvs) {\n\t\t\t\tuvs[vertices.length * 8] = uvs[0];\n\t\t\t\tuvs[vertices.length * 8 + 1] = uvs[1];\n\t\t\t\tuvs[vertices.length * 8 + 2] = uvs[2];\n\t\t\t\tuvs[vertices.length * 8 + 3] = uvs[3];\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[vertices.length * 8] = normals[0];\n\t\t\t\tnormals[vertices.length * 8 + 1] = normals[1];\n\t\t\t\tnormals[vertices.length * 8 + 2] = normals[2];\n\t\t\t\tnormals[vertices.length * 8 + 3] = normals[3];\n\t\t\t}\n\t\t}\n\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, numPositions);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepTriangleStrip(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: Float32Array,\n\t\t\tnormals?: Float32Array,\n\t\t\tuvs?: Float32Array,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcount?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\n\t\tconst { program, input, output, positions, uvs, normals } = params;\n\t\tconst { gl, _width, _height } = this;\n\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\tconst count = params.count ? params.count : positions.length / 2;\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepLines(params: {\n\t\tprogram: GPUProgram,\n\t\tpositions: Float32Array,\n\t\tindices?: Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\tnormals?: Float32Array,\n\t\tuvs?: Float32Array,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\tcount?: number,\n\t\tcloseLoop?: boolean,\n\t\tshouldBlendAlpha?: boolean,\n\t}) {\n\t\tconst { gl, _width, _height } = this;\n\t\tconst { indices, uvs, normals, input, output, program } = params;\n\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && indices) {\n\t\t\tthrow new Error(`GPUComposer.stepLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\t\t\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\tconst count = params.count ? params.count : (indices ? indices.length : (params.positions.length / 2));\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / _width, 2 / _height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\tif (indices) {\n\t\t\t// Reorder positions array to match indices.\n\t\t\tconst positions = new Float32Array(2 * count);\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst index = indices[i];\n\t\t\t\tpositions[2 * i] = params.positions[2 * index];\n\t\t\t\tpositions[2 * i + 1] = params.positions[2 * index + 1];\n\t\t\t}\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(positions)!);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(params.positions)!);\n\t\t}\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(uvs)!);\n\t\t\tthis._setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._initVertexBuffer(normals)!);\n\t\t\tthis._setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsPoints(\n\t\tparams: {\n\t\t\tpositions: GPULayer, // Positions in units of pixels.\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tpointSize?: number,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _pointIndexArray, _width, _height } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Check that numPoints is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsPoints() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\tconst { length } = positions;\n\t\tconst count = params.count || length;\n\t\tif (count > length) {\n\t\t\tthrow new Error(`Invalid count ${count} for position GPULayer of length ${length}.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);\n\t\t\tconst color = params.color || [1, 0, 0]; // Default of red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerPointsProgram!;\n\n\t\t// Add positions to end of input if needed.\n\t\tconst input = this._addLayerToInputs(positions, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positions', input.indexOf(positions), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 / _width, 1 / _height], FLOAT);\n\t\t// Tell whether we are using an absolute position (2 components), or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionWithAccumulation', positions.numComponents === 4, BOOL);\n\t\t// Set default pointSize.\n\t\tconst pointSize = params.pointSize || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_pointSize', pointSize, FLOAT);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapX', !!params.wrapX, BOOL);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapY', !!params.wrapY, BOOL);\n\t\tif (this._pointIndexBuffer === undefined || (_pointIndexArray && _pointIndexArray.length < count)) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\tthis._pointIndexArray = indices;\n\t\t\tthis._pointIndexBuffer = this._initVertexBuffer(indices);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._pointIndexBuffer!);\n\t\tthis._setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.POINTS, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsLines(\n\t\tparams: {\n\t\t\tpositions: GPULayer,\n\t\t\tindices?: Float32Array | Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tcloseLoop?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _width, _height } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Check that positions is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && params.indices) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = params.wrapX || params.wrapY ? this._getWrappedLineColorProgram() : this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerLinesProgram!;\n\n\t\t// Add positionLayer to end of input if needed.\n\t\tconst input = this._addLayerToInputs(positions, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// TODO: cache indexArray if no indices passed in.\n\t\tconst indices = params.indices ? params.indices : initSequentialFloatArray(params.count || positions.length);\n\t\tconst count = params.count ? params.count : indices.length;\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positions', input.indexOf(positions), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 / _width, 1 / _height], FLOAT);\n\t\t// Tell whether we are using an absolute position (2 components), or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionWithAccumulation', positions.numComponents === 4, BOOL);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapX', !!params.wrapX, BOOL);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapY', !!params.wrapY, BOOL);\n\t\tif (this._indexedLinesIndexBuffer === undefined) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tlet floatArray: Float32Array;\n\t\t\tif (indices.constructor !== Float32Array) {\n\t\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\t\tfloatArray = new Float32Array(indices.length);\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\tfloatArray[i] = indices[i];\n\t\t\t\t}\n\t\t\t\tconsole.warn(`Converting indices array of type ${indices.constructor} to Float32Array in GPUComposer.drawIndexedLines for WebGL compatibility, you may want to use a Float32Array to store this information so the conversion is not required.`);\n\t\t\t} else {\n\t\t\t\tfloatArray = indices as Float32Array;\n\t\t\t}\n\t\t\tthis._indexedLinesIndexBuffer = this._initVertexBuffer(floatArray);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._indexedLinesIndexBuffer!);\n\t\t\t// Copy buffer data.\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\t\t}\n\t\tthis._setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsVectorField(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tvectorSpacing?: number,\n\t\t\tvectorScale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, _vectorFieldIndexArray, _width, _height } = this;\n\t\tconst { data, output } = params;\n\n\t\t// Check that field is valid.\n\t\tif (data.numComponents !== 2) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsVectorField() must be passed a fieldLayer with 2 components, got fieldLayer \"${data.name}\" with ${data.numComponents} components.`)\n\t\t}\n\t\t// Check aspect ratio.\n\t\t// const dimensions = [vectorLayer.width, vectorLayer.height];\n\t\t// if (Math.abs(dimensions[0] / dimensions[1] - width / height) > 0.01) {\n\t\t// \tthrow new Error(`Invalid aspect ratio ${(dimensions[0] / dimensions[1]).toFixed(3)} vector GPULayer with dimensions [${dimensions[0]}, ${dimensions[1]}], expected ${(width / height).toFixed(3)}.`);\n\t\t// }\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerVectorFieldProgram!;\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this._addLayerToInputs(data, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_vectors', input.indexOf(data), INT);\n\t\t// Set default scale.\n\t\tconst vectorScale = params.vectorScale || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [vectorScale / _width, vectorScale / _height], FLOAT);\n\t\tconst vectorSpacing = params.vectorSpacing || 10;\n\t\tconst spacedDimensions = [Math.floor(_width / vectorSpacing), Math.floor(_height / vectorSpacing)] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_dimensions', spacedDimensions, FLOAT);\n\t\tconst length = 2 * spacedDimensions[0] * spacedDimensions[1];\n\t\tif (this._vectorFieldIndexBuffer === undefined || (_vectorFieldIndexArray && _vectorFieldIndexArray.length < length)) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\tthis._vectorFieldIndexArray = indices;\n\t\t\tthis._vectorFieldIndexBuffer = this._initVertexBuffer(indices);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._vectorFieldIndexBuffer!);\n\t\tthis._setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.LINES, 0, length);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerMagnitude(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tscale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl } = this;\n\t\tconst { data, output } = params;\n\n\t\tconst program = this._vectorMagnitudeProgramForType(data.type);\n\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\tprogram.setUniform('u_color', color, FLOAT);\n\t\tconst scale = params.scale || 1;\n\t\tprogram.setUniform('u_scale', scale, FLOAT);\n\t\tprogram.setUniform('u_internal_numDimensions', data.numComponents, INT);\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this._addLayerToInputs(data, params.input);\n\t\t// Do setup - this must come first.\n\t\tthis._drawSetup(glProgram, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_data', input.indexOf(data), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._getQuadPositionsBuffer());\n\t\tthis._setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis._setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tresetThreeState() {\n\t\tif (!this._renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer, use GPUComposer.initWithThreeRenderer() to initialize GPUComposer instead.');\n\t\t}\n\t\tconst { gl } = this;\n\t\t// Reset viewport.\n\t\tconst viewport = this._renderer.getViewport(new utils.Vector4() as Vector4);\n\t\tgl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n\t\t// Unbind framebuffer (render to screen).\n\t\tthis._renderer.setRenderTarget(null);\n\t\t// Reset texture bindings.\n\t\tthis._renderer.resetState();\n\t}\n\n\t/**\n\t * Save the current state of the canvas to png.\n\t * @param params - PNG parameters.\n\t * @param params.filename - PNG filename (no extension).\n\t * @param params.dpi - PNG dpi (defaults to 72dpi).\n\t * @param params.callback - Optional callback when Blob is ready, default behavior saves the PNG using FileSaver.js. \n\t*/\n\tsavePNG(params: {\n\t\tfilename?: string,\n\t\tdpi?: number,\n\t\tmultiplier?: number,\n\t\tcallback?: (blob: Blob, filename: string) => void,\n\t} = {}) {\n\t\tconst { canvas } = this;\n\t\tconst filename = params.filename || 'output';\n\t\tconst callback = params.callback || saveAs; // Default to saving the image with FileSaver.\n\t\tcanvas.toBlob((blob) => {\n\t\t\tif (!blob) {\n\t\t\t\tconsole.warn(`Problem saving PNG from GPULayer \"${name}\", unable to init blob.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (params.dpi) {\n\t\t\t\tchangeDpiBlob(blob, params.dpi).then((blob: Blob) =>{\n\t\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t}\n\t\t}, 'image/png');\n\t}\n\n\ttick() {\n\t\tlet { _lastTickTime, _lastTickFPS } = this;\n\t\tconst currentTime = performance.now();\n\t\tthis._lastTickTime = currentTime;\n\t\tif (!_lastTickTime) {\n\t\t\treturn { fps: 0, milliseconds: 0 };\n\t\t}\n\t\tconst currentFPS = 1000 / (currentTime - _lastTickTime);\n\t\tif (!_lastTickFPS) _lastTickFPS = currentFPS;\n\t\t// Use a low pass filter to smooth out fps reading.\n\t\tconst factor = 0.9;\n\t\tconst fps =  Number.parseFloat((factor * _lastTickFPS + (1 - factor) * currentFPS).toFixed(1));\n\t\tthis._lastTickFPS = fps;\n\t\tthis._numTicks += 1;\n\t\treturn {\n\t\t\tfps,\n\t\t\tnumTicks: this._numTicks,\n\t\t}\n\t}\n\t\n\tdispose() {\n\t\tconst {\n\t\t\tgl, verboseLogging,\n\t\t\t_vertexShaders,\n\t\t\t_copyPrograms, _setValuePrograms, _vectorMagnitudePrograms,\n\t\t} = this;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUComposer.`);\n\n\t\t// TODO: delete buffers.\n\n\t\t// Delete vertex shaders.\n\t\tObject.values(_vertexShaders).forEach(vertexShader => {\n\t\t\tif (vertexShader.shader) {\n\t\t\t\tgl.deleteShader(vertexShader.shader);\n\t\t\t\tdelete vertexShader.shader;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Delete fragment shaders.\n\t\tObject.values(_copyPrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_copyPrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _copyPrograms[key];\n\t\t});\n\t\tObject.values(_setValuePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_setValuePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _setValuePrograms[key];\n\t\t});\n\t\tObject.values(_vectorMagnitudePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(_vectorMagnitudePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete _vectorMagnitudePrograms[key];\n\t\t});\n\t\tthis._wrappedLineColorProgram?.dispose();\n\t\tdelete this._wrappedLineColorProgram;\n\n\t\t// @ts-ignore\n\t\tdelete this._renderer;\n\t\t// @ts-ignore\n\t\tdelete this.gl;\n\t\t// @ts-ignore;\n\t\tdelete this.canvas;\n\t\t// GL context will be garbage collected by webgl.\n\t}\n}","import { setFloat16, getFloat16 } from '@petamoriken/float16';\n// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { saveAs } from 'file-saver';\nimport { GPUComposer } from './GPUComposer';\nimport {\n\tisArray,\n\tisNumber,\n\tisObject,\n\tisPositiveInteger,\n\tisValidClearValue,\n\tisValidDataType,\n\tisValidFilter,\n\tisValidWrap,\n} from './checks';\nimport {\n\tHALF_FLOAT,\n\tFLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tNEAREST,\n\tLINEAR,\n\tCLAMP_TO_EDGE,\n\tGPULayerArray,\n\tGPULayerFilter,\n\tGPULayerNumComponents,\n\tGPULayerType,\n\tGPULayerWrap,\n\tGPULayerBuffer,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidDataTypes,\n } from './constants';\nimport {\n\treadyToRead,\n} from './utils';\nimport {\n\tcalcGPULayerSize,\n\tgetGLTextureParameters,\n\tgetGPULayerInternalFilter,\n\tgetGPULayerInternalType,\n\tgetGPULayerInternalWrap,\n\tinitArrayForType,\n\tvalidateGPULayerArray,\n} from './GPULayerHelpers';\nimport { Texture } from 'three';\n\nexport class GPULayer {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly _composer: GPUComposer;\n\n\t/**\n\t * Name of GPULayer, used for error logging.\n\t */\n\treadonly name: string;\n\t/**\n\t * Data type represented by GPULayer.\n\t */\n\treadonly type: GPULayerType; // Input type passed in during setup.\n\t/**\n\t * Number of RGBA elements represented by each pixel in the GPULayer (1-4).\n\t */\n\treadonly numComponents: GPULayerNumComponents;\n\t/**\n\t * Interpolation filter for GPULayer, defaults to LINEAR for 2D FLOAT/HALF_FLOAT GPULayers, otherwise defaults to NEAREST.\n\t */\n\treadonly filter: GPULayerFilter;\n\t/**\n\t * Horizontal wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t */\n\treadonly wrapS: GPULayerWrap;\n\t/**\n\t * Vertical wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t */\n\treadonly wrapT: GPULayerWrap;\n\t/**\n\t * Sets GPULayer as readonly or readwrite, defaults to false.\n\t */\n\treadonly writable: boolean;\n\t// Value to set when clear() is called, defaults to zero.\n\t// Access with GPULayer.clearValue.\n\tprivate _clearValue: number | number[] = 0;\n\n\t// Each GPULayer may contain a number of buffers to store different instances of the state.\n\t// e.g [currentState, previousState]\n\tprivate _bufferIndex = 0;\n\treadonly numBuffers;\n\tprivate readonly _buffers: GPULayerBuffer[] = [];\n\n\t// Texture sizes.\n\tprivate _length?: number; // This is only used for 1D data layers, access with GPULayer.length.\n\tprivate _width: number; // Access with GPULayer.width.\n\tprivate _height: number; // Access with GPULayer.height.\n\n\t// GPULayer settings.\n\t// Due to variable browser support of WebGL features, \"internal\" variables may be different\n\t// from the parameter originally passed in.  These variables are set so that they match the original\n\t// parameter as best as possible, but fragment shader polyfills may be required.\n\t// All \"gl\" variables are used to initialize internal WebGLTexture.\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\t/**\n\t * @private\n\t */\n\treadonly _glInternalFormat: number;\n\t/**\n\t * @private\n\t */\n\treadonly _glFormat: number;\n\n\t// GPULayer.internalType corresponds to GPULayer.glType, may be different from GPULayer.type.\n\t/**\n\t * @private\n\t */\n\treadonly _internalType: GPULayerType;\n\t/**\n\t * @private\n\t */\n\treadonly _glType: number;\n\n\t// Internally, GPULayer.glNumChannels may represent a larger number of channels than GPULayer.numComponents.\n\t// For example, writable RGB textures are not supported in WebGL2, must use RGBA instead.\n\t/**\n\t * @private\n\t */\n\treadonly _glNumChannels: number;\n\n\t// GPULayer.internalFilter corresponds to GPULayer.glFilter, may be different from GPULayer.filter.\n\t/**\n\t * @private\n\t */\n\treadonly _internalFilter: GPULayerFilter;\n\t/**\n\t * @private\n\t */\n\treadonly _glFilter: number;\n\n\t// GPULayer.internalWrapS corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapS.\n\t/**\n\t * @private\n\t */\n\treadonly _internalWrapS: GPULayerWrap;\n\t/**\n\t * @private\n\t */\n\treadonly _glWrapS: number;\n\n\t// GPULayer.internalWrapT corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapT.\n\t/**\n\t * @private\n\t */\n\treadonly _internalWrapT: GPULayerWrap;\n\t/**\n\t * @private\n\t */\n\treadonly _glWrapT: number;\n\t\n\t// Optimizations so that \"copying\" can happen without draw calls.\n\t// TODO: take a second look at this.\n\tprivate _textureOverrides?: (WebGLTexture | undefined)[];\n\n\t/**\n\t * Create a GPULayer.\n\t * @param composer - The current GPUComposer instance.\n\t * @param params  - GPULayer parameters.\n\t * @param params.name - Name of GPULayer, used for error logging.\n \t * @param params.type - Data type represented by GPULayer.\n\t * @param params.numComponents - Number of RGBA elements represented by each pixel in the GPULayer (1-4).\n\t * @param params.dimensions - Dimensions of 1D or 2D GPULayer.\n\t * @param params.filter - Interpolation filter for GPULayer, defaults to LINEAR for 2D FLOAT/HALF_FLOAT GPULayers, otherwise defaults to NEAREST.\n\t * @param params.wrapS - Horizontal wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t * @param params.wrapT - Vertical wrapping style for GPULayer, defaults to CLAMP_TO_EDGE.\n\t * @param params.writable - Sets GPULayer as readonly or readwrite, defaults to false.\n\t * @param params.numBuffers - How may buffers to allocate, defaults to 1.  If you intend to use the current state of this GPULayer as an input to generate a new state, you will need at least 2 buffers.\n\t * @param params.clearValue - Value to write to GPULayer when GPULayer.clear() is called.\n\t * @param params.array - Array to initialize GPULayer.\n\t */\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\ttype: GPULayerType,\n\t\t\tnumComponents: GPULayerNumComponents,\n\t\t\tdimensions: number | [number, number],\n\t\t\tarray?: GPULayerArray | number[],\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\twritable?: boolean,\n\t\t\tnumBuffers?: number,\n\t\t\tclearValue?: number | number[],\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPULayer \"${name}\": must pass GPUComposer instance to GPULayer(composer, params).`);\n\t\t}\n\t\tif (!params) {\n\t\t\tthrow new Error('Error initing GPULayer: must pass params to GPULayer(composer, params).');\n\t\t}\n\t\tif (!isObject(params)) {\n\t\t\tthrow new Error(`Error initing GPULayer: must pass valid params object to GPULayer(composer, params), got ${JSON.stringify(params)}.`);\n\t\t}\n\t\t// Check params keys.\n\t\tconst validKeys = ['name', 'type', 'numComponents', 'dimensions', 'filter', 'wrapS', 'wrapT', 'writable', 'numBuffers', 'clearValue', 'array'];\n\t\tconst requiredKeys = ['name', 'type', 'numComponents', 'dimensions'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPULayer(composer, params) with name \"${params.name}\".  Valid keys are ${JSON.stringify(validKeys)}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPULayer(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { dimensions, type, numComponents } = params;\n\t\tconst { gl } = composer;\n\n\t\t// Save params.\n\t\tthis._composer = composer;\n\t\tthis.name = name;\n\n\t\t// numComponents must be between 1 and 4.\n\t\tif (!isPositiveInteger(numComponents) || numComponents > 4) {\n\t\t\tthrow new Error(`Invalid numComponents: ${JSON.stringify(numComponents)} for GPULayer \"${name}\", must be number in range [1-4].`);\n\t\t}\n\t\tthis.numComponents = numComponents;\n\n\t\t// Writable defaults to false.\n\t\tconst writable = !!params.writable;\n\t\tthis.writable = writable;\n\n\t\t// Set dimensions, may be 1D or 2D.\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, composer.verboseLogging);\n\t\t// We already type checked length, width, and height in calcGPULayerSize.\n\t\tthis._length = length;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\t// Set filtering - if we are processing a 1D array, default to NEAREST filtering.\n\t\t// Else default to LINEAR (interpolation) filtering for float types and NEAREST for integer types.\n\t\tconst defaultFilter = length ? NEAREST : ((type === FLOAT || type == HALF_FLOAT) ? LINEAR : NEAREST);\n\t\tconst filter = params.filter !== undefined ? params.filter : defaultFilter;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${JSON.stringify(filter)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validFilters)}.`);\n\t\t}\n\t\t// Don't allow LINEAR filtering on integer types, it is not supported.\n\t\tif (filter === LINEAR && !(type === FLOAT || type == HALF_FLOAT)) {\n\t\t\tthrow new Error(`LINEAR filtering is not supported on integer types, please use NEAREST filtering for GPULayer \"${name}\" with type: ${type}.`);\n\t\t}\n\t\tthis.filter = filter;\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${JSON.stringify(wrapS)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validWraps)}.`);\n\t\t}\n\t\tthis.wrapS = wrapS;\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${JSON.stringify(wrapT)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validWraps)}.`);\n\t\t}\n\t\tthis.wrapT = wrapT;\n\n\t\t// Set data type.\n\t\tif (!isValidDataType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${JSON.stringify(type)} for GPULayer \"${name}\", must be one of ${JSON.stringify(validDataTypes)}.`);\n\t\t}\n\t\tthis.type = type;\n\t\tconst internalType = getGPULayerInternalType({\n\t\t\tcomposer,\n\t\t\ttype,\n\t\t\twritable,\n\t\t\tname,\n\t\t});\n\t\tthis._internalType = internalType;\n\t\t// Set gl texture parameters.\n\t\tconst {\n\t\t\tglFormat,\n\t\t\tglInternalFormat,\n\t\t\tglType,\n\t\t\tglNumChannels,\n\t\t} = getGLTextureParameters({\n\t\t\tcomposer,\n\t\t\tname,\n\t\t\tnumComponents,\n\t\t\twritable,\n\t\t\tinternalType,\n\t\t});\n\t\tthis._glInternalFormat = glInternalFormat;\n\t\tthis._glFormat = glFormat;\n\t\tthis._glType = glType;\n\t\tthis._glNumChannels = glNumChannels;\n\n\t\t// Set internal filtering/wrap types.\n\t\t// Make sure that we set filter BEFORE setting wrap.\n\t\tconst internalFilter = getGPULayerInternalFilter({ composer, filter, internalType, name });\n\t\tthis._internalFilter = internalFilter;\n\t\tthis._glFilter = gl[internalFilter];\n\t\tthis._internalWrapS = getGPULayerInternalWrap({ composer, wrap: wrapS, internalFilter, internalType, name });\n\t\tthis._glWrapS = gl[this._internalWrapS];\n\t\tthis._internalWrapT = getGPULayerInternalWrap({ composer, wrap: wrapT, internalFilter, internalType, name });\n\t\tthis._glWrapT = gl[this._internalWrapT];\n\t\t\n\n\t\t// Num buffers is the number of states to store for this data.\n\t\tconst numBuffers = params.numBuffers !== undefined ? params.numBuffers : 1;\n\t\tif (!isPositiveInteger(numBuffers)) {\n\t\t\tthrow new Error(`Invalid numBuffers: ${JSON.stringify(numBuffers)} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tthis.numBuffers = numBuffers;\n\n\t\t// Wait until after type has been set to set clearValue.\n\t\tif (params.clearValue !== undefined) {\n\t\t\tthis.clearValue = params.clearValue; // Setter can only be called after this.numComponents has been set.\n\t\t}\n\n\t\tthis._initBuffers(params.array);\n\t}\n\n\t/**\n\t * The width of the GPULayer array.\n\t */\n\t get width() {\n\t\treturn this._width;\n\t}\n\n\t/**\n\t * The height of the GPULayer array.\n\t */\n\tget height() {\n\t\treturn this._height;\n\t}\n\n\t/**\n\t * The length of the GPULayer array (only available to 1D GPULayers).\n\t */\n\tget length() {\n\t\tif (!this._length) {\n\t\t\tthrow new Error(`Cannot access length on 2D GPULayer \"${this.name}\".`);\n\t\t}\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * Returns whether the GPULayer was inited as a 1D array (rather than 2D).\n\t * @returns - true if GPULayer is 1D, else false.\n\t */\n\tis1D() {\n\t\treturn this._length !== undefined;\n\t}\n\n\t/**\n\t * \n\t * @private\n\t */\n\t_usingTextureOverrideForCurrentBuffer() {\n\t\treturn this._textureOverrides && this._textureOverrides[this.bufferIndex];\n\t}\n\n\t// saveCurrentStateToGPULayer(layer: GPULayer) {\n\t// \t// A method for saving a copy of the current state without a draw call.\n\t// \t// Draw calls are expensive, this optimization helps.\n\t// \tif (this.numBuffers < 2) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" with less than 2 buffers.`);\n\t// \t}\n\t// \tif (!this.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on read-only GPULayer \"${this.name}\".`);\n\t// \t}\n\t// \tif (layer.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" using writable GPULayer \"${layer.name}\".`)\n\t// \t}\n\t// \t// Check that texture params are the same.\n\t// \tif (layer.glWrapS !== this.glWrapS || layer.glWrapT !== this.glWrapT ||\n\t// \t\tlayer.wrapS !== this.wrapS || layer.wrapT !== this.wrapT ||\n\t// \t\tlayer.width !== this.width || layer.height !== this.height ||\n\t// \t\tlayer.glFilter !== this.glFilter || layer.filter !== this.filter ||\n\t// \t\tlayer.glNumChannels !== this.glNumChannels || layer.numComponents !== this.numComponents ||\n\t// \t\tlayer.glType !== this.glType || layer.type !== this.type ||\n\t// \t\tlayer.glFormat !== this.glFormat || layer.glInternalFormat !== this.glInternalFormat) {\n\t// \t\t\tthrow new Error(`Incompatible texture params between GPULayers \"${layer.name}\" and \"${this.name}\".`);\n\t// \t}\n\n\t// \t// If we have not already inited overrides array, do so now.\n\t// \tif (!this.textureOverrides) {\n\t// \t\tthis.textureOverrides = [];\n\t// \t\tfor (let i = 0; i < this.numBuffers; i++) {\n\t// \t\t\tthis.textureOverrides.push(undefined);\n\t// \t\t}\n\t// \t}\n\n\t// \t// Check if we already have an override in place.\n\t// \tif (this.textureOverrides[this.bufferIndex]) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\", this GPULayer has not written new state since last call to GPULayer.saveCurrentStateToGPULayer.`);\n\t// \t}\n\t// \tconst { currentState } = this;\n\t// \tthis.textureOverrides[this.bufferIndex] = currentState;\n\t// \t// Swap textures.\n\t// \tthis.buffers[this.bufferIndex].texture = layer.currentState;\n\t// \tlayer._setCurrentStateTexture(currentState);\n\n\t// \t// Bind swapped texture to framebuffer.\n\t// \tconst { gl } = this.composer;\n\t// \tconst { framebuffer, texture } = this.buffers[this.bufferIndex];\n\t// \tif (!framebuffer) throw new Error(`No framebuffer for writable GPULayer \"${this.name}\".`);\n\t// \tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// \t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t// \tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t// \t// Unbind.\n\t// \tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t// }\n\n\t// // This is used internally.\n\t// _setCurrentStateTexture(texture: WebGLTexture) {\n\t// \tif (this.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer._setCurrentStateTexture on writable texture \"${this.name}\".`);\n\t// \t}\n\t// \tthis.buffers[this.bufferIndex].texture = texture;\n\t// }\n\n\t/**\n\t * Init GLTexture/GLFramebuffer pairs for reading/writing GPULayer data.\n\t * @private\n\t */\n\tprivate _initBuffers(\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst {\n\t\t\tname,\n\t\t\tnumBuffers,\n\t\t\t_composer,\n\t\t\t_glInternalFormat,\n\t\t\t_glFormat,\n\t\t\t_glType,\n\t\t\t_glFilter,\n\t\t\t_glWrapS,\n\t\t\t_glWrapT,\n\t\t\twritable,\n\t\t\twidth,\n\t\t\theight,\n\t\t} = this;\n\t\tconst { gl, _errorCallback } = _composer;\n\n\t\tconst validatedArray = array ? validateGPULayerArray(array, this) : undefined;\n\n\t\t// Init a texture for each buffer.\n\t\tfor (let i = 0; i < numBuffers; i++) {\n\t\t\tconst texture = gl.createTexture();\n\t\t\tif (!texture) {\n\t\t\t\t_errorCallback(`Could not init texture for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\t\t// TODO: are there other params to look into:\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, _glWrapS);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, _glWrapT);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, _glFilter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, _glFilter);\n\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, validatedArray ? validatedArray : null);\n\t\t\t\n\t\t\tconst buffer: GPULayerBuffer = {\n\t\t\t\ttexture,\n\t\t\t};\n\n\t\t\tif (writable) {\n\t\t\t\t// Init a framebuffer for this texture so we can write to it.\n\t\t\t\tconst framebuffer = gl.createFramebuffer();\n\t\t\t\tif (!framebuffer) {\n\t\t\t\t\t_errorCallback(`Could not init framebuffer for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\t\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\t\tif(status !== gl.FRAMEBUFFER_COMPLETE){\n\t\t\t\t\t_errorCallback(`Invalid status for framebuffer for GPULayer \"${name}\": ${status}.`);\n\t\t\t\t}\n\n\t\t\t\t// Add framebuffer.\n\t\t\t\tbuffer.framebuffer = framebuffer;\n\t\t\t}\n\t\t\t\n\t\t\t// Save this buffer to the list.\n\t\t\tthis._buffers.push(buffer);\n\t\t}\n\t\t// Unbind.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\t\n\t/**\n\t * Get buffer index of the current state.\n\t */\n\tget bufferIndex() {\n\t\treturn this._bufferIndex;\n\t}\n\n\t/**\n\t * Increment buffer index by 1.\n\t */\n\tincrementBufferIndex() {\n\t\t// Increment bufferIndex.\n\t\tthis._bufferIndex = (this.bufferIndex + 1) % this.numBuffers;\n\t}\n\n\t/**\n\t * Get the current state as a GLTexture.\n\t */\n\tget currentState() {\n\t\treturn this.getStateAtIndex(this.bufferIndex);\n\t}\n\n\t/**\n\t * Get the previous state as a GLTexture (only available for GPULayers with numBuffers > 1).\n\t */\n\tget lastState() {\n\t\tif (this.numBuffers === 1) {\n\t\t\tthrow new Error(`Cannot access lastState on GPULayer \"${this.name}\" with only one buffer.`);\n\t\t}\n\t\treturn this.getStateAtIndex((this.bufferIndex - 1 + this.numBuffers) % this.numBuffers);\n\t}\n\n\t/**\n\t * Get the state at a specified index as a GLTexture.\n\t */\n\tgetStateAtIndex(index: number) {\n\t\tconst { numBuffers, _textureOverrides, _buffers } = this;\n\t\tif (index < 0 && index > -numBuffers) {\n\t\t\tindex += numBuffers; // Slightly negative numbers are ok.\n\t\t}\n\t\tif (index < 0 || index >= numBuffers) {\n\t\t\t// We will allow this number to overflow with warning - likely user error.\n\t\t\tconsole.warn(`Out of range buffer index: ${index} for GPULayer \"${this.name}\" with $.numBuffers} buffer${numBuffers > 1 ? 's' : ''}.  Was this intentional?`);\n\t\t\tif (index < 0) {\n\t\t\t\tindex += numBuffers * Math.ceil(Math.abs(index) / numBuffers);\n\t\t\t} else {\n\t\t\t\tindex = index % numBuffers;\n\t\t\t}\n\t\t}\n\t\tif (_textureOverrides && _textureOverrides[index]) return _textureOverrides[index]!;\n\t\treturn _buffers[index].texture;\n\t}\n\n\t/**\n\t * Binds this GPULayer's current framebuffer as the draw target.\n\t */\n\tprivate _bindFramebuffer() {\n\t\tconst { gl } = this._composer;\n\t\tconst { framebuffer } = this._buffers[this.bufferIndex];\n\t\tif (!framebuffer) {\n\t\t\tthrow new Error(`GPULayer \"${this.name}\" is not writable.`);\n\t\t}\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t}\n\n\t/**\n\t * Increments the buffer index (if needed) and binds next framebuffer as draw target.\n\t * @private\n\t */\n\t_prepareForWrite(\n\t\tincrementBufferIndex: boolean,\n\t) {\n\t\tif (incrementBufferIndex) {\n\t\t\tthis.incrementBufferIndex();\n\t\t}\n\t\tthis._bindFramebuffer();\n\n\t\t// We are going to do a data write, if we have overrides enabled, we can remove them.\n\t\tif (this._textureOverrides) {\n\t\t\tthis._textureOverrides[this.bufferIndex] = undefined;\n\t\t}\n\t}\n\n\tsetFromArray(array: GPULayerArray | number[], applyToAllBuffers = false) {\n\t\tconst { _composer, _glInternalFormat, _glFormat, _glType, numBuffers, width, height, bufferIndex } = this;\n\t\tconst { gl } = _composer;\n\t\tconst validatedArray = validateGPULayerArray(array, this);\n\t\t// TODO: check that this is working.\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tconst texture = this.getStateAtIndex(i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, validatedArray);\n\t\t}\n\t\t// Unbind texture.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tresize(\n\t\tdimensions: number | [number, number],\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst { name, _composer } = this;\n\t\tconst { verboseLogging } = _composer;\n\t\tif (verboseLogging) console.log(`Resizing GPULayer \"${name}\" to ${JSON.stringify(dimensions)}.`);\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, verboseLogging);\n\t\tthis._length = length;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._destroyBuffers();\n\t\tthis._initBuffers(array);\n\t}\n\n\t/**\n\t * Set the clearValue of the GPULayer, which is applied during GPULayer.clear().\n\t */\n\tset clearValue(clearValue: number | number[]) {\n\t\tconst { numComponents, type } = this;\n\t\tif (!isValidClearValue(clearValue, numComponents, type)) {\n\t\t\tthrow new Error(`Invalid clearValue: ${JSON.stringify(clearValue)} for GPULayer \"${this.name}\", expected ${type} or array of ${type} of length ${numComponents}.`);\n\t\t}\n\t\t// Make deep copy if needed.\n\t\tthis._clearValue = isArray(clearValue) ? (clearValue as number[]).slice() : clearValue;\n\t}\n\n\t/**\n\t * Get the clearValue of the GPULayer.\n\t */\n\tget clearValue() {\n\t\treturn this._clearValue;\n\t}\n\n\t/**\n\t * Clear all data in GPULayer to GPULayer.clearValue.\n\t * @param applyToAllBuffers - Flag to apply to all buffers of GPULayer, or just the current output buffer.\n\t */\n\tclear(applyToAllBuffers = false) {\n\t\tconst { name, _composer, clearValue, numBuffers, bufferIndex, type } = this;\n\t\tconst { verboseLogging } = _composer;\n\t\tif (verboseLogging) console.log(`Clearing GPULayer \"${name}\".`);\n\n\t\tconst value: number[] = [];\n\t\tif (isNumber(clearValue)) {\n\t\t\tvalue.push(clearValue as number, clearValue as number, clearValue as number, clearValue as number);\n\t\t} else {\n\t\t\tvalue.push(...clearValue as number[]);\n\t\t\tfor (let j = value.length; j < 4; j++) {\n\t\t\t\tvalue.push(0);\n\t\t\t}\n\t\t}\n\t\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tif (this.writable) {\n\t\t\tconst program = _composer._setValueProgramForType(type);\n\t\t\tprogram.setUniform('u_value', value as [number, number, number, number]);\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t// Write clear value to buffers.\n\t\t\t\t_composer.step({\n\t\t\t\t\tprogram,\n\t\t\t\t\toutput: this,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// Init a typed array containing clearValue and pass to buffers.\n\t\t\tconst {\n\t\t\t\twidth, height, _glNumChannels, _internalType,\n\t\t\t\t_glInternalFormat, _glFormat, _glType,\n\t\t\t} = this;\n\t\t\tconst { gl } = _composer;\n\t\t\tconst fillLength = this._length ? this._length : width * height;\n\t\t\tconst array = initArrayForType(_internalType, width * height * _glNumChannels);\n\t\t\tconst float16View = _internalType === HALF_FLOAT ? new DataView(array.buffer) : null;\n\t\t\tfor (let j = 0; j < fillLength; j++) {\n\t\t\t\tfor (let k = 0; k < _glNumChannels; k++) {\n\t\t\t\t\tconst index = j * _glNumChannels + k;\n\t\t\t\t\tif (_internalType === HALF_FLOAT) {\n\t\t\t\t\t\t// Float16 needs to be handled separately.\n\t\t\t\t\t\tsetFloat16(float16View!, 2 * index, value[k], true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray[index] = value[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst texture = this.getStateAtIndex(i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, _glInternalFormat, width, height, 0, _glFormat, _glType, array);\n\t\t\t}\n\t\t\t// Unbind texture.\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t}\n\t}\n\n\t// TODO: this does not work on non-writable GPULayers, change this?\n\t/**\n\t * Returns the current values of the GPULayer as a TypedArray.\n\t * @returns - A TypedArray containing current state of GPULayer.\n\t */\n\tgetValues() {\n\t\tconst { width, height, _composer, numComponents, type } = this;\n\t\tconst { gl } = _composer;\n\n\t\t// In case GPULayer was not the last output written to.\n\t\tthis._bindFramebuffer();\n\n\t\tlet { _glNumChannels, _glType, _glFormat, _internalType } = this;\n\t\tlet values;\n\t\tswitch (_internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tif (gl.FLOAT !== undefined) {\n\t\t\t\t\t// Firefox requires that RGBA/FLOAT is used for readPixels of float16 types.\n\t\t\t\t\t_glNumChannels = 4;\n\t\t\t\t\t_glFormat = gl.RGBA;\n\t\t\t\t\t_glType = gl.FLOAT;\n\t\t\t\t\tvalues = new Float32Array(width * height * _glNumChannels);\n\t\t\t\t} else {\n\t\t\t\t\tvalues = new Uint16Array(width * height * _glNumChannels);\n\t\t\t\t}\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak\n\t\t\tcase FLOAT:\n\t\t\t\t// Chrome and Firefox require that RGBA/FLOAT is used for readPixels of float32 types.\n\t\t\t\t// https://github.com/KhronosGroup/WebGL/issues/2747\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = gl.RGBA;\n\t\t\t\tvalues = new Float32Array(width * height * _glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\t// We never hit glslVersion === GLSL1 anymore, see GPULayerHelpers.shouldCastIntTypeAsFloat for more info.\n\t\t\t\t// if (glslVersion === GLSL1) {\n\t\t\t\t// \t// Firefox requires that RGBA/UNSIGNED_BYTE is used for readPixels of unsigned byte types.\n\t\t\t\t// \t_glNumChannels = 4;\n\t\t\t\t// \t_glFormat = gl.RGBA;\n\t\t\t\t// \tvalues = new Uint8Array(width * height * _glNumChannels);\n\t\t\t\t// \tbreak;\n\t\t\t\t// }\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Uint32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t_glType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\t_glNumChannels = 4;\n\t\t\t\t_glFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Int32Array(width * height * _glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported internalType ${_internalType} for getValues().`);\n\t\t}\n\n\t\tif (readyToRead(gl)) {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\n\t\t\tgl.readPixels(0, 0, width, height, _glFormat, _glType, values);\n\t\t\tconst OUTPUT_LENGTH = (this._length ? this._length : width * height) * numComponents;\n\n\t\t\t// Convert uint16 to float32 if needed.\n\t\t\tconst handleFloat16Conversion = _internalType === HALF_FLOAT && values.constructor === Uint16Array;\n\t\t\t// @ts-ignore\n\t\t\tconst view = handleFloat16Conversion ? new DataView((values as Uint16Array).buffer) : undefined;\n\n\t\t\t// We may use a different internal type than the assigned type of the GPULayer.\n\t\t\tlet output: GPULayerArray = _internalType === type ? values : initArrayForType(type, OUTPUT_LENGTH, true);\n\n\t\t\t// In some cases glNumChannels may be > numComponents.\n\t\t\tif (view || output !== values || numComponents !== _glNumChannels) {\n\t\t\t\tfor (let i = 0, length = width * height; i < length; i++) {\n\t\t\t\t\tconst index1 = i * _glNumChannels;\n\t\t\t\t\tconst index2 = i * numComponents;\n\t\t\t\t\tif (index2 >= OUTPUT_LENGTH) break;\n\t\t\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\t\t\tif (view) {\n\t\t\t\t\t\t\toutput[index2 + j] = getFloat16(view, 2 * (index1 + j), true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toutput[index2 + j] = values[index1 + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (output.length !== OUTPUT_LENGTH) {\n\t\t\t\toutput = output.slice(0, OUTPUT_LENGTH);\n\t\t\t}\n\t\t\treturn output;\n\t\t} else {\n\t\t\tthrow new Error(`Unable to read values from Buffer with status: ${gl.checkFramebufferStatus(gl.FRAMEBUFFER)}.`);\n\t\t}\n\t}\n\n\t// TODO: this does not work on non-writable GPULayers, change this?\n\t/**\n\t * Save the current state of this GPULayer to png.\n\t * @param params - PNG parameters.\n\t * @param params.filename - PNG filename (no extension, defaults to the name of the GPULayer).\n\t * @param params.dpi - PNG dpi (defaults to 72dpi).\n\t * @param params.multiplier - Multiplier to apply to data before saving PNG (defaults to 255 for FLOAT and HALF_FLOAT types, else 1).\n\t * @param params.callback - Optional callback when Blob is ready, default behavior saves the PNG using FileSaver.js. \n\t*/\n\tsavePNG(params: {\n\t\tfilename?: string,\n\t\tdpi?: number,\n\t\tmultiplier?: number,\n\t\tcallback?: (blob: Blob, filename: string) => void,\n\t} = {}) {\n\t\tconst values = this.getValues();\n\t\tconst { width, height, type, name, numComponents } = this;\n\t\tconst callback = params.callback || saveAs; // Default to saving the image with FileSaver.\n\t\tconst filename = params.filename || name; // Default to the name of this layer.\n\t\tconst multiplier = params.multiplier ||\n\t\t\t((type === FLOAT || type === HALF_FLOAT) ? 255 : 1);\n\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n    \tcanvas.height = height;\n\t\tconst context = canvas.getContext('2d')!;\n\t\tconst imageData = context.getImageData(0, 0, width, height);\n\t\tconst buffer = imageData.data;\n\t\t// Have to flip the y axis since PNGs are written top to bottom.\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tconst index = y * width + x;\n\t\t\t\tconst indexFlipped = (height - 1 - y) * width + x;\n\t\t\t\tfor (let i = 0; i < numComponents; i++) {\n\t\t\t\t\tbuffer[4 * indexFlipped + i] = values[numComponents * index + i] * multiplier;\n\t\t\t\t}\n\t\t\t\tif (numComponents === 1) {\n\t\t\t\t\t// Make monochrome.\n\t\t\t\t\tbuffer[4 * indexFlipped + 1] = buffer[4 * indexFlipped];\n\t\t\t\t\tbuffer[4 * indexFlipped + 2] = buffer[4 * indexFlipped];\n\t\t\t\t}\n\t\t\t\tif (numComponents < 4) {\n\t\t\t\t\tbuffer[4 * indexFlipped + 3] = 255; // Set alpha channel to 255.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcontext.putImageData(imageData, 0, 0);\n\n\t\tcanvas.toBlob((blob) => {\n\t\t\tif (!blob) {\n\t\t\t\tconsole.warn(`Problem saving PNG from GPULayer \"${name}\", unable to init blob.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (params.dpi) {\n\t\t\t\tchangeDpiBlob(blob, params.dpi).then((blob: Blob) =>{\n\t\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t}\n\t\t}, 'image/png');\n\t}\n\n\t/**\n\t * Attach the output buffer of this GPULayer to a Threejs Texture object.\n\t * @param {Texture} texture - Threejs texture object.\n\t */\n\tattachToThreeTexture(texture: Texture) {\n\t\tconst { _composer, numBuffers, currentState, name } = this;\n\t\tconst { _renderer } = _composer;\n\t\tif (!_renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer.');\n\t\t}\n\t\t// Link webgl texture to threejs object.\n\t\t// This is not officially supported.\n\t\tif (numBuffers > 1) {\n\t\t\tthrow new Error(`GPULayer \"${name}\" contains multiple WebGL textures (one for each buffer) that are flip-flopped during compute cycles, please choose a GPULayer with one buffer.`);\n\t\t}\n\t\tconst offsetTextureProperties = _renderer.properties.get(texture);\n\t\toffsetTextureProperties.__webglTexture = currentState;\n\t\toffsetTextureProperties.__webglInit = true;\n\t}\n\n\t/**\n\t * Delete this GPULayer's framebuffers and textures.\n\t * @private\n\t */\n\tprivate _destroyBuffers() {\n\t\tconst { _composer, _buffers } = this;\n\t\tconst { gl } = _composer;\n\t\t_buffers.forEach(buffer => {\n\t\t\tconst { framebuffer, texture } = buffer;\n\t\t\tgl.deleteTexture(texture);\n\t\t\tif (framebuffer) {\n\t\t\t\tgl.deleteFramebuffer(framebuffer);\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tdelete buffer.texture;\n\t\t\tdelete buffer.framebuffer;\n\t\t});\n\t\t_buffers.length = 0;\n\n\t\t// These are technically owned by another GPULayer,\n\t\t// so we are not responsible for deleting them from gl context.\n\t\tdelete this._textureOverrides;\n\t}\n\n\t/**\n\t * Create a deep copy of GPULayer with current state copied over.\n\t * @param name - Name of new GPULayer as string.\n\t * @returns - Deep copy of GPULayer.\n\t */\n\tclone(name?: string) {\n\t\t// Make a deep copy.\n\t\treturn this._composer._cloneGPULayer(this, name);\n\t}\n\n\t/**\n\t * Deallocate GPULayer instance and associated WebGL properties.\n\t */\n\tdispose() {\n\t\tconst { name, _composer } = this;\n\t\tconst { gl, verboseLogging } = _composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPULayer \"${name}\".`);\n\n\t\tif (!gl) throw new Error(`Must call dispose() on all GPULayers before calling dispose() on GPUComposer.`);\n\t\n\t\tthis._destroyBuffers();\n\t\t// @ts-ignore\n\t\tdelete this._buffers;\n\t\t// @ts-ignore\n\t\tdelete this._composer;\n\t}\n}","import { setFloat16 } from '@petamoriken/float16';\nimport {\n\tisNumber,\n\tisPositiveInteger,\n} from './checks';\nimport {\n\tBYTE,\n\tCLAMP_TO_EDGE,\n\tFLOAT,\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tHALF_FLOAT,\n\tINT,\n\tNEAREST,\n\tSHORT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_INT,\n\tUNSIGNED_SHORT,\n\tGLSL3,\n\tGPULayerNumComponents,\n\tGLSL1,\n\tGPULayerArray,\n\tvalidArrayTypes,\n\tMIN_UNSIGNED_BYTE,\n\tMAX_UNSIGNED_BYTE,\n\tMIN_BYTE,\n\tMAX_BYTE,\n\tMIN_UNSIGNED_SHORT,\n\tMAX_UNSIGNED_SHORT,\n\tMIN_SHORT,\n\tMAX_SHORT,\n\tMIN_UNSIGNED_INT,\n\tMAX_UNSIGNED_INT,\n\tMIN_INT,\n\tMAX_INT,\n\tLINEAR,\n} from './constants';\nimport {\n\tEXT_COLOR_BUFFER_FLOAT,\n\tEXT_COLOR_BUFFER_HALF_FLOAT,\n\tgetExtension,\n\tOES_TEXTURE_FLOAT,\n\tOES_TEXTURE_FLOAT_LINEAR,\n\tOES_TEXTURE_HALF_FLOAT,\n\tOES_TEXTURE_HAlF_FLOAT_LINEAR,\n} from './extensions';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport { GPUProgram } from './GPUProgram';\nimport { isIntType, isUnsignedIntType, isWebGL2 } from './utils';\n\n// Memoize results.\nconst results = {\n\tframebufferWriteSupport: {} as { [key: string]: boolean },\n\tfilterWrapSupport: {} as { [key: string]: boolean },\n}\n\n/**\n * Init empty typed array for type, optionally use Float32Array for HALF_FLOAT.\n * @private\n */\nexport function initArrayForType(\n\ttype: GPULayerType,\n\tlength: number,\n\thalfFloatsAsFloats = false,\n) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\t\tif (halfFloatsAsFloats) return new Float32Array(length);\n\t\t\treturn new Uint16Array(length);\n\t\tcase FLOAT:\n\t\t\treturn new Float32Array(length);\n\t\tcase UNSIGNED_BYTE:\n\t\t\treturn new Uint8Array(length);\n\t\tcase BYTE:\n\t\t\treturn new Int8Array(length);\n\t\tcase UNSIGNED_SHORT:\n\t\t\treturn new Uint16Array(length);\n\t\tcase SHORT:\n\t\t\treturn new Int16Array(length);\n\t\tcase UNSIGNED_INT:\n\t\t\treturn new Uint32Array(length);\n\t\tcase INT:\n\t\t\treturn new Int32Array(length);\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported type: \"${type}\".`);\n\t}\n}\n\n/**\n * Calc 2D size [width, height] for GPU layer given a 1D or 2D size parameter.\n * If 1D size supplied, nearest power of 2 width/height is generated.\n * Also checks that size elements are valid.\n * @private\n */\n// TODO: should we relax adherence to power of 2?\nexport function calcGPULayerSize(\n\tsize: number | [number, number],\n\tname: string,\n\tverboseLogging: boolean,\n) {\n\tif (isNumber(size as number)) {\n\t\tif (!isPositiveInteger(size)) {\n\t\t\tthrow new Error(`Invalid length: ${JSON.stringify(size)} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tconst length = size as number;\n\t\t// Calc power of two width and height for length.\n\t\tlet exp = 1;\n\t\tlet remainder = length;\n\t\twhile (remainder > 2) {\n\t\t\texp++;\n\t\t\tremainder /= 2;\n\t\t}\n\t\tconst width = Math.pow(2, Math.floor(exp / 2) + exp % 2);\n\t\tconst height = Math.pow(2, Math.floor(exp/2));\n\t\tif (verboseLogging) console.log(`Using [${width}, ${height}] for 1D array of length ${size} in GPULayer \"${name}\".`);\n\t\treturn { width, height, length };\n\t}\n\tconst width = (size as [number, number])[0];\n\tif (!isPositiveInteger(width)) {\n\t\tthrow new Error(`Invalid width: ${JSON.stringify(width)} for GPULayer \"${name}\", must be positive integer.`);\n\t}\n\tconst height = (size as [number, number])[1];\n\tif (!isPositiveInteger(height)) {\n\t\tthrow new Error(`Invalid height: ${JSON.stringify(height)} for GPULayer \"${name}\", must be positive integer.`);\n\t}\n\treturn { width, height };\n}\n\n/**\n * Get the GL wrap type to use internally in GPULayer, based on browser support.\n * @private\n */\nexport function getGPULayerInternalWrap(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\twrap: GPULayerWrap,\n\t\tinternalFilter: GPULayerFilter,\n\t\tinternalType: GPULayerType,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, wrap, internalFilter, internalType } = params;\n\n\t// CLAMP_TO_EDGE is always supported.\n\tif (wrap === CLAMP_TO_EDGE) {\n\t\treturn wrap;\n\t}\n\n\t// Test if wrap/filter combo is actually supported by running some numbers through.\n\tif (testFilterWrap(composer, internalType, internalFilter, wrap)) {\n\t\treturn wrap;\n\t}\n\t// If not, convert to CLAMP_TO_EDGE and polyfill in fragment shader.\n\treturn CLAMP_TO_EDGE;\n\t// REPEAT and MIRROR_REPEAT wrap not supported for non-power of 2 textures in safari.\n\t// I've tested this and it seems that some power of 2 textures will work (512 x 512),\n\t// but not others (1024x1024), so let's just change all WebGL 1.0 to CLAMP.\n\t// Without this, we currently get an error at drawArrays():\n\t// \"WebGL: drawArrays: texture bound to texture unit 0 is not renderable.\n\t// It maybe non-power-of-2 and have incompatible texture filtering or is not\n\t// 'texture complete', or it is a float/half-float type with linear filtering and\n\t// without the relevant float/half-float linear extension enabled.\"\n}\n\n/**\n * Get the GL filter type to use internally in GPULayer, based on browser support.\n * @private\n */\nexport function getGPULayerInternalFilter(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tfilter: GPULayerFilter,\n\t\tinternalType: GPULayerType,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, internalType, name } = params;\n\tlet { filter } = params;\n\tif (filter === NEAREST) {\n\t\t// NEAREST filtering is always supported.\n\t\treturn filter;\n\t}\n\n\tif (internalType === HALF_FLOAT) {\n\t\tconst extension = getExtension(composer, OES_TEXTURE_HAlF_FLOAT_LINEAR, true)\n\t\t\t|| getExtension(composer, OES_TEXTURE_FLOAT_LINEAR, true);\n\t\tif (!extension || !testFilterWrap(composer, internalType, LINEAR, CLAMP_TO_EDGE)) {\n\t\t\tconsole.warn(`Falling back to NEAREST filter for GPULayer \"${name}\".`);\n\t\t\tfilter = NEAREST; // Polyfill in fragment shader.\n\t\t}\n\t} if (internalType === FLOAT) {\n\t\tconst extension = getExtension(composer, OES_TEXTURE_FLOAT_LINEAR, true);\n\t\tif (!extension || !testFilterWrap(composer, internalType, LINEAR, CLAMP_TO_EDGE)) {\n\t\t\tconsole.warn(`Falling back to NEAREST filter for GPULayer \"${name}\".`);\n\t\t\tfilter = NEAREST; // Polyfill in fragment shader.\n\t\t}\n\t}\n\treturn filter;\n}\n\n/**\n * Returns whether to cast int type as floats, as needed by browser.\n * @private\n */\nexport function shouldCastIntTypeAsFloat(\n\tcomposer: GPUComposer,\n\ttype: GPULayerType,\n) {\n\tconst { gl, glslVersion } = composer;\n\t// All types are supported by WebGL2 + glsl3.\n\tif (glslVersion === GLSL3 && isWebGL2(gl)) return false;\n\t// Int textures (other than UNSIGNED_BYTE) are not supported by WebGL1.0 or glsl1.x.\n\t// https://stackoverflow.com/questions/55803017/how-to-select-webgl-glsl-sampler-type-from-texture-format-properties\n\t// Use HALF_FLOAT/FLOAT instead.\n\t// Some large values of INT and UNSIGNED_INT are not supported unfortunately.\n\t// See tests for more information.\n\t// Update: Even UNSIGNED_BYTE should be cast as float in GLSL1.  I noticed some strange behavior in test:\n\t// setUniform>'should cast/handle uint uniforms for UNSIGNED_BYTE GPULayers' in tests/mocha/GPUProgram and \n\t// getValues>'should return correct values for UNSIGNED_BYTE GPULayer' in tests/mocha/GPULayer\n\treturn type === UNSIGNED_BYTE || type === BYTE || type === SHORT || type === INT || type === UNSIGNED_SHORT || type === UNSIGNED_INT;\n}\n\n/**\n * Returns GLTexture parameters for GPULayer, based on browser support.\n * @private\n */\nexport function getGLTextureParameters(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tname: string,\n\t\tnumComponents: GPULayerNumComponents,\n\t\tinternalType: GPULayerType,\n\t\twritable: boolean,\n\t}\n) {\n\tconst { composer, name, numComponents, internalType, writable } = params;\n\tconst { gl, glslVersion } = composer;\n\t// https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\n\tlet glType: number | undefined,\n\t\tglFormat: number | undefined,\n\t\tglInternalFormat: number | undefined,\n\t\tglNumChannels: number | undefined;\n\n\tif (isWebGL2(gl)) {\n\t\tglNumChannels = numComponents;\n\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t\t// The sized internal format RGBxxx are not color-renderable for some reason.\n\t\t// If numComponents == 3 for a writable texture, use RGBA instead.\n\t\t// Page 5 of https://www.khronos.org/files/webgl20-reference-guide.pdf\n\t\tif (numComponents === 3 && writable) {\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\tif (internalType === FLOAT || internalType === HALF_FLOAT) {\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = gl.RGB;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t// The following lines of code are not hit now that we have cast UNSIGNED_BYTE types to HALF_FLOAT.\n\t\t// See comments in shouldCastIntTypeAsFloat for more information.\n\t\t// } else if (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t// \t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\t// \tif (writable) {\n\t\t// \t\t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGBA.\n\t\t// \t\tglNumChannels = 4;\n\t\t// \t}\n\t\t// \t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGB/RGBA.\n\t\t// \tswitch (glNumChannels) {\n\t\t// \t\tcase 1:\n\t\t// \t\tcase 2:\n\t\t// \t\tcase 3:\n\t\t// \t\t\tglFormat = gl.RGB;\n\t\t// \t\t\tglNumChannels = 3;\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase 4:\n\t\t// \t\t\tglFormat = gl.RGBA;\n\t\t// \t\t\tglNumChannels = 4;\n\t\t// \t\t\tbreak;\n\t\t// \t\tdefault:\n\t\t// \t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t// \t}\n\t\t} else {\n\t\t\t// This case will only be hit by GLSL 3.\n\t\t\t// Int textures are not supported in GLSL1.\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGB_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tif (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t\t\t\tglInternalFormat = glFormat;\n\t\t\t\t} else {\n\t\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\tglType = gl.BYTE;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\tglType = gl.SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\tglType = gl.UNSIGNED_SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\tglType = gl.INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: \"${internalType}\" for GPULayer \"${name}\".`);\n\t\t}\n\t} else {\n\t\t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\tglNumChannels = numComponents;\n\t\tif (writable) {\n\t\t\t// For writable textures in WebGL 1, use RGBA.\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\t// For read only textures in WebGL 1, use RGB/RGBA.\n\t\tswitch (glNumChannels) {\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\t\tglFormat = gl.RGB;\n\t\t\t\tglInternalFormat = gl.RGB;\n\t\t\t\tglNumChannels = 3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\tglInternalFormat = gl.RGBA;\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase FLOAT:\n\t\t\t\tglType = gl.FLOAT;\n\t\t\t\tbreak;\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT || getExtension(composer, OES_TEXTURE_HALF_FLOAT).HALF_FLOAT_OES as number;\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tbreak;\n\t\t\t// No other types are supported in WebGL1.\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: \"${internalType}\" in WebGL 1.0 for GPULayer \"${name}\".`);\n\t\t}\n\t}\n\n\t// Check for missing params.\n\tif (glType === undefined || glFormat === undefined || glInternalFormat === undefined) {\n\t\tconst missingParams = [];\n\t\tif (glType === undefined) missingParams.push('glType');\n\t\tif (glFormat === undefined) missingParams.push('glFormat');\n\t\tif (glInternalFormat === undefined) missingParams.push('glInternalFormat');\n\t\tthrow new Error(`Invalid type: ${internalType} for numComponents: ${numComponents}, unable to init parameter${missingParams.length > 1 ? 's' : ''} ${missingParams.join(', ')} for GPULayer \"${name}\".`);\n\t}\n\tif (glNumChannels === undefined || numComponents < 1 || numComponents > 4 || glNumChannels < numComponents) {\n\t\tthrow new Error(`Invalid numChannels: ${glNumChannels} for numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t}\n\n\treturn {\n\t\tglFormat,\n\t\tglInternalFormat,\n\t\tglType,\n\t\tglNumChannels,\n\t};\n}\n\n/**\n * Rigorous method for testing FLOAT and HALF_FLOAT texture support by attaching texture to framebuffer.\n * @private\n */\nexport function testFramebufferAttachment(\n\tcomposer: GPUComposer,\n\tinternalType: GPULayerType,\n) {\n\tconst { gl, glslVersion } = composer;\n\n\t// Memoize results for a given set of inputs.\n\tconst key = `${isWebGL2(gl)},${internalType},${glslVersion === GLSL3 ? '3' : '1'}`;\n\tif (results.framebufferWriteSupport[key] !== undefined) {\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\n\tconst texture = gl.createTexture();\n\tif (!texture) {\n\t\tresults.framebufferWriteSupport[key] = false;\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t// Default to most widely supported settings.\n\tconst wrap = gl[CLAMP_TO_EDGE];\n\tconst filter = gl[NEAREST];\n\t// Use non-power of two dimensions to check for more universal support.\n\t// (In case size of GPULayer is changed at a later point).\n\tconst width = 10;\n\tconst height = 10;\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\n\tconst { glInternalFormat, glFormat, glType } = getGLTextureParameters({\n\t\tcomposer,\n\t\tname: 'testFramebufferAttachment',\n\t\tnumComponents: 1,\n\t\twritable: true,\n\t\tinternalType,\n\t});\n\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, null);\n\n\t// Init a framebuffer for this texture so we can write to it.\n\tconst framebuffer = gl.createFramebuffer();\n\tif (!framebuffer) {\n\t\t// Clear out allocated memory.\n\t\tgl.deleteTexture(texture);\n\t\tresults.framebufferWriteSupport[key] = false;\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\tconst validStatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n\n\t// Clear out allocated memory.\n\tgl.deleteTexture(texture);\n\tgl.deleteFramebuffer(framebuffer);\n\n\tresults.framebufferWriteSupport[key] = validStatus;\n\treturn results.framebufferWriteSupport[key];\n}\n\n/**\n * Rigorous method for testing whether a filter/wrap combination is supported\n * by the current browser.  I found that some versions of WebGL2 mobile safari\n * may support the OES_texture_float_linear and EXT_color_buffer_float, but still\n * do not linearly interpolate float textures or wrap only for power-of-two textures.\n * @private\n */\nexport function testFilterWrap(\n\tcomposer: GPUComposer,\n\tinternalType: GPULayerType,\n\tfilter: GPULayerFilter,\n\twrap: GPULayerWrap,\n) {\n\tconst { gl, glslVersion } = composer;\n\n\t// Memoize results for a given set of inputs.\n\tconst key = `${isWebGL2(gl)},${internalType},${filter},${wrap},${glslVersion === GLSL3 ? '3' : '1'}`;\n\tif (results.filterWrapSupport[key] !== undefined) {\n\t\treturn results.filterWrapSupport[key];\n\t}\n\n\tconst texture = gl.createTexture();\n\tif (!texture) {\n\t\tresults.filterWrapSupport[key] = false;\n\t\treturn results.filterWrapSupport[key];\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\tconst glWrap = gl[wrap];\n\tconst glFilter = gl[filter];\n\t// Use non power of two dimensions to check for more universal support.\n\tconst width = 3;\n\tconst height = 3;\n\tconst numComponents = 1;\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, glWrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, glWrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glFilter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glFilter);\n\n\tconst { glInternalFormat, glFormat, glType, glNumChannels } = getGLTextureParameters({\n\t\tcomposer,\n\t\tname: 'testFloatLinearFiltering',\n\t\tnumComponents,\n\t\tinternalType,\n\t\twritable: true,\n\t});\n\t// Init texture with values.\n\tconst values = [3, 56.5, 834, -53.6, 0.003, 96.2, 23, 90.2, 32];\n\tlet valuesTyped = initArrayForType(internalType, values.length * glNumChannels, true);\n\tfor (let i = 0; i < values.length; i++) {\n\t\tvaluesTyped[i * glNumChannels] = values[i];\n\t\tvalues[i] = valuesTyped[i * glNumChannels]; // Cast as int/uint if needed.\n\t}\n\tif (internalType === HALF_FLOAT) {\n\t\t// Cast values as Uint16Array for HALF_FLOAT.\n\t\tconst valuesTyped16 = new Uint16Array(valuesTyped.length);\n\t\tconst float16View =  new DataView(valuesTyped16.buffer);\n\t\tfor (let i = 0; i < valuesTyped.length; i++) {\n\t\t\tsetFloat16(float16View, 2 * i, valuesTyped[i], true);\n\t\t}\n\t\tvaluesTyped = valuesTyped16;\n\t}\n\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, valuesTyped);\n\n\t// Init a GPULayer to write to.\n\t// Must use CLAMP_TO_EDGE/NEAREST on this GPULayer to avoid infinite loop.\n\tconst output = new GPULayer(composer, {\n\t\tname: 'testFloatLinearFiltering-output',\n\t\ttype: internalType,\n\t\tnumComponents,\n\t\tdimensions: [width, height],\n\t\twrapS: CLAMP_TO_EDGE,\n\t\twrapT: CLAMP_TO_EDGE,\n\t\tfilter: NEAREST,\n\t\twritable: true,\n\t});\n\n\tconst offset = filter === LINEAR ? 0.5 : 1;\n\t// Run program to perform linear filter.\n\tconst program = new GPUProgram(composer, {\n\t\tname: 'testFloatLinearFiltering',\n\t\tfragmentShader: `\n\t\t\tin vec2 v_UV;\n\t\t\tuniform vec2 u_offset;\n\t\t\t#ifdef GPUIO_INT\n\t\t\t\tuniform isampler2D u_input;\n\t\t\t\tout int out_fragColor;\n\t\t\t#endif\n\t\t\t#ifdef GPUIO_UINT\n\t\t\t\tuniform usampler2D u_input;\n\t\t\t\tout uint out_fragColor;\n\t\t\t#endif\n\t\t\t#ifdef GPUIO_FLOAT\n\t\t\t\tuniform sampler2D u_input;\n\t\t\t\tout float out_fragColor;\n\t\t\t#endif\n\t\t\tvoid main() {\n\t\t\t\tout_fragColor = texture(u_input, v_UV + u_offset).x;\n\t\t\t}`,\n\t\tuniforms: [\n\t\t\t{\n\t\t\t\tname: 'u_offset',\n\t\t\t\tvalue: [offset / width, offset / height],\n\t\t\t\ttype: FLOAT,\n\t\t\t},\n\t\t],\n\t\tdefines: {\n\t\t\t[isUnsignedIntType(internalType) ? 'GPUIO_UINT' : (isIntType(internalType) ? 'GPUIO_INT': 'GPUIO_FLOAT')]: '1',\n\t\t}\n\t});\n\n\tcomposer.resize(width, height);\n\tcomposer.step({\n\t\tprogram,\n\t\tinput: texture,\n\t\toutput,\n\t});\n\n\tconst filtered = output.getValues();\n\tlet supported = true;\n\tconst tol = isIntType(internalType) ? 0 : (internalType === HALF_FLOAT ? 1e-2 : 1e-4);\n\tfunction wrapValue(val: number, max: number) {\n\t\tif (wrap === CLAMP_TO_EDGE) return Math.max(0, Math.min(max - 1, val));\n\t\treturn (val + max) % max;\n\t}\n\tfor (let x = 0; x < width; x++) {\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\tlet expected;\n\t\t\tif (filter === LINEAR) {\n\t\t\t\texpected = (values[y * width + x] +\n\t\t\t\t\tvalues[y * width + wrapValue(x + 1, width)] +\n\t\t\t\t\tvalues[wrapValue(y + 1, height) * width + x] +\n\t\t\t\t\tvalues[wrapValue(y + 1, height) * width + wrapValue(x + 1, width)]) / 4;\n\t\t\t} else {\n\t\t\t\tconst _x = wrapValue(x + offset, width);\n\t\t\t\tconst _y = wrapValue(y + offset, height);\n\t\t\t\texpected = values[_y * width + _x];\n\t\t\t}\n\t\t\tconst i = y * width + x;\n\t\t\tif (Math.abs((expected - filtered[i]) / expected) > tol) {\n\t\t\t\tsupported = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Clear out allocated memory.\n\tprogram.dispose();\n\toutput.dispose();\n\tgl.deleteTexture(texture);\n\n\tresults.filterWrapSupport[key] = supported;\n\treturn results.filterWrapSupport[key];\n}\n\n/**\n * Get the GL type to use internally in GPULayer, based on browser support.\n * @private\n * Exported here for testing purposes.\n */\nexport function getGPULayerInternalType(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\ttype: GPULayerType,\n\t\twritable: boolean,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, writable, name } = params;\n\tconst { gl, _errorCallback } = composer;\n\tconst { type } = params;\n\tlet internalType = type;\n\t// Check if int types are supported.\n\tconst intCast = shouldCastIntTypeAsFloat(composer, type);\n\tif (intCast) {\n\t\tif (internalType === UNSIGNED_BYTE || internalType === BYTE) {\n\t\t\t// Integers between -2048 and +2048 can be exactly represented by half float.\n\t\t\tinternalType = HALF_FLOAT;\n\t\t} else {\n\t\t\t// Integers between 0 and 16777216 can be exactly represented by float32 (also applies for negative integers between −16777216 and 0)\n\t\t\t// This is sufficient for UNSIGNED_SHORT and SHORT types.\n\t\t\t// Large UNSIGNED_INT and INT cannot be represented by FLOAT type.\n\t\t\tconsole.warn(`Falling back ${internalType} type to FLOAT type for glsl1.x support for GPULayer \"${name}\".\nLarge UNSIGNED_INT or INT with absolute value > 16,777,216 are not supported, on mobile UNSIGNED_INT, INT, UNSIGNED_SHORT, and SHORT with absolute value > 2,048 may not be supported.`);\n\t\t\tinternalType = FLOAT;\n\t\t}\n\t}\n\n\t// Check if float textures supported.\n\tif (!isWebGL2(gl)) {\n\t\tif (internalType === FLOAT) {\n\t\t\t// The OES_texture_float extension implicitly enables WEBGL_color_buffer_float extension (for writing).\n\t\t\tconst extension = getExtension(composer, OES_TEXTURE_FLOAT, true);\n\t\t\tif (!extension) {\n\t\t\t\tconsole.warn(`FLOAT not supported, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t// https://stackoverflow.com/questions/17476632/webgl-extension-support-across-browsers\n\t\t\t// Rendering to a floating-point texture may not be supported, even if the OES_texture_float extension\n\t\t\t// is supported. Typically, this fails on mobile hardware. To check if this is supported, you have to\n\t\t\t// call the WebGL checkFramebufferStatus() function after attempting to attach texture to framebuffer.\n\t\t\t} else if (writable) {\n\t\t\t\tconst valid = testFramebufferAttachment(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\tconsole.warn(`FLOAT not supported for writing operations, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Must support at least half float if using a float type.\n\t\tif (internalType === HALF_FLOAT) {\n\t\t\t// The OES_texture_half_float extension implicitly enables EXT_color_buffer_half_float extension (for writing).\n\t\t\tgetExtension(composer, OES_TEXTURE_HALF_FLOAT);\n\t\t\t// TODO: https://stackoverflow.com/questions/54248633/cannot-create-half-float-oes-texture-from-uint16array-on-ipad\n\t\t\tif (writable) {\n\t\t\t\tconst valid = testFramebufferAttachment(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\t_errorCallback(`This browser does not support rendering to HALF_FLOAT textures.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (writable) {\n\t\t// For writable webGL2 contexts, load EXT_color_buffer_float/EXT_color_buffer_half_float extension.\n\t\tif (internalType === FLOAT) {\n\t\t\tconst extension = getExtension(composer, EXT_COLOR_BUFFER_FLOAT, true);\n\t\t\tif (!extension) {\n\t\t\t\tconsole.warn(`FLOAT not supported, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t} else {\n\t\t\t\t// Test attaching texture to framebuffer to be sure float writing is supported.\n\t\t\t\tconst valid = testFramebufferAttachment(composer, internalType);\n\t\t\t\tif (!valid) {\n\t\t\t\t\tconsole.warn(`FLOAT not supported for writing operations, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (internalType === HALF_FLOAT) {\n\t\t\t// On WebGL 2, EXT_color_buffer_half_float is an alternative to using the EXT_color_buffer_float extension\n\t\t\t// on platforms that support 16-bit floating point render targets but not 32-bit floating point render targets.\n\t\t\tconst halfFloatExt = getExtension(composer, EXT_COLOR_BUFFER_HALF_FLOAT, true);\n\t\t\tif (!halfFloatExt) {\n\t\t\t\t// Some versions of Firefox (e.g. Firefox v104 on Mac) do not support EXT_COLOR_BUFFER_HALF_FLOAT,\n\t\t\t\t// but EXT_COLOR_BUFFER_FLOAT will work instead.\n\t\t\t\tgetExtension(composer, EXT_COLOR_BUFFER_FLOAT);\n\t\t\t}\n\t\t\t// Test attaching texture to framebuffer to be sure half float writing is supported.\n\t\t\tconst valid = testFramebufferAttachment(composer, internalType);\n\t\t\tif (!valid) {\n\t\t\t\t_errorCallback(`This browser does not support rendering to HALF_FLOAT textures.`);\n\t\t\t}\n\t\t}\n\t}\n\treturn internalType;\n}\n\n/**\n * Min and max values for types.\n * @private\n */\nexport function minMaxValuesForType(type: GPULayerType) {\n\t// Get min and max values for int types.\n\tlet min = -Infinity;\n\tlet max = Infinity;\n\tswitch(type) {\n\t\t// TODO: handle float types?\n\t\tcase UNSIGNED_BYTE:\n\t\t\tmin = MIN_UNSIGNED_BYTE;\n\t\t\tmax = MAX_UNSIGNED_BYTE;\n\t\t\tbreak;\n\t\tcase BYTE:\n\t\t\tmin = MIN_BYTE;\n\t\t\tmax = MAX_BYTE;\n\t\t\tbreak;\n\t\tcase UNSIGNED_SHORT:\n\t\t\tmin = MIN_UNSIGNED_SHORT;\n\t\t\tmax = MAX_UNSIGNED_SHORT;\n\t\t\tbreak;\n\t\tcase SHORT:\n\t\t\tmin = MIN_SHORT;\n\t\t\tmax = MAX_SHORT;\n\t\t\tbreak;\n\t\tcase UNSIGNED_INT:\n\t\t\tmin = MIN_UNSIGNED_INT;\n\t\t\tmax = MAX_UNSIGNED_INT;\n\t\t\tbreak;\n\t\tcase INT:\n\t\t\tmin = MIN_INT;\n\t\t\tmax = MAX_INT;\n\t\t\tbreak;\n\t}\n\treturn {\n\t\tmin, max,\n\t};\n}\n\n/**\n * Recasts typed array to match GPULayer.internalType.\n * @private\n */\nexport function validateGPULayerArray(array: GPULayerArray | number[], layer: GPULayer) {\n\tconst { numComponents, width, height, name } = layer;\n\tconst glNumChannels = layer._glNumChannels;\n\tconst internalType = layer._internalType;\n\tconst length = layer.is1D() ? layer.length : null;\n\n\t// Check that data is correct length (user error).\n\tif (array.length !== width * height * numComponents) { // Either the correct length for WebGLTexture size\n\t\tif (!length || (length &&  array.length !== length * numComponents)) { // Of the correct length for 1D array.\n\t\t\tthrow new Error(`Invalid data length: ${array.length} for GPULayer \"${name}\" of ${length ? `length ${length} and ` : ''}dimensions: [${width}, ${height}] and numComponents: ${numComponents}.`);\n\t\t}\n\t}\n\n\t// Get array type to figure out if we need to type cast.\n\t// For webgl1.0 we may need to cast an int type to a FLOAT or HALF_FLOAT.\n\tlet shouldTypeCast = false;\n\tswitch(array.constructor) {\n\t\tcase Array:\n\t\t\tshouldTypeCast = true;\n\t\t\tbreak;\n\t\tcase Float32Array:\n\t\t\tshouldTypeCast = internalType !== FLOAT;\n\t\t\tbreak;\n\t\tcase Uint8Array:\n\t\t\tshouldTypeCast = internalType !== UNSIGNED_BYTE;\n\t\t\tbreak;\n\t\tcase Int8Array:\n\t\t\tshouldTypeCast = internalType !== BYTE;\n\t\t\tbreak;\n\t\tcase Uint16Array:\n\t\t\t// User may have converted to HALF_FLOAT already.\n\t\t\t// We need to add this check in case type is UNSIGNED_SHORT and internal type is HALF_FLOAT.\n\t\t\t// (This can happen for some WebGL1 contexts.)\n\t\t\t// if (type === HALF_FLOAT) {\n\t\t\t// \tshouldTypeCast = internalType !== HALF_FLOAT;\n\t\t\t// \t// In order to complete this, we will also need to handle converting from Uint16Array to some other type.\n\t\t\t// \t// Are there cases where HALF_FLOAT is not supported?\n\t\t\t// } else {\n\t\t\t\tshouldTypeCast = internalType !== UNSIGNED_SHORT\n\t\t\t// }\n\t\t\tbreak;\n\t\tcase Int16Array:\n\t\t\tshouldTypeCast = internalType !== SHORT;\n\t\t\tbreak;\n\t\tcase Uint32Array:\n\t\t\tshouldTypeCast = internalType !== UNSIGNED_INT;\n\t\t\tbreak;\n\t\tcase Int32Array:\n\t\t\tshouldTypeCast = internalType !== INT;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(`Invalid array type: ${array.constructor.name} for GPULayer \"${name}\", please use one of [${validArrayTypes.map(constructor => constructor.name).join(', ')}].`);\n\t}\n\n\t// Get min and max values for internalType.\n\tconst { min, max } = minMaxValuesForType(internalType);\n\n\t// Then check if array needs to be lengthened.\n\t// This could be because glNumChannels !== numComponents or because length !== width * height.\n\tconst arrayLength = width * height * glNumChannels;\n\tconst shouldResize = array.length !== arrayLength;\n\t\t\n\tlet validatedArray = array as GPULayerArray;\n\tif (shouldTypeCast || shouldResize) {\n\t\tvalidatedArray = initArrayForType(internalType, arrayLength);\n\t\t// Fill new data array with old data.\n\t\t// We have to handle the case of Float16 specially by converting data to Uint16Array.\n\t\tconst view = (internalType === HALF_FLOAT && shouldTypeCast) ? new DataView(validatedArray.buffer) : null;\n\t\tfor (let i = 0, _len = array.length / numComponents; i < _len; i++) {\n\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\tconst origValue = array[i * numComponents + j];\n\t\t\t\tlet value = origValue;\n\t\t\t\tlet clipped = false;\n\t\t\t\tif (value < min) {\n\t\t\t\t\tvalue = min;\n\t\t\t\t\tclipped = true;\n\t\t\t\t} else if (value > max) {\n\t\t\t\t\tvalue = max;\n\t\t\t\t\tclipped = true;\n\t\t\t\t}\n\t\t\t\tif (clipped) {\n\t\t\t\t\tconsole.warn(`Clipping out of range value ${origValue} to ${value} for GPULayer \"${name}\" with internal type ${internalType}.`);\n\t\t\t\t}\n\t\t\t\tconst index = i * glNumChannels + j;\n\t\t\t\tif (view) {\n\t\t\t\t\tsetFloat16(view, 2 * index, value, true);\n\t\t\t\t} else {\n\t\t\t\t\tvalidatedArray[index] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn validatedArray;\n}","import { GPUComposer } from './GPUComposer';\nimport {\n\tisArray,\n\tisBoolean,\n\tisInteger,\n\tisNonNegativeInteger,\n\tisNumber,\n\tisObject,\n\tisString,\n} from './checks';\nimport {\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tUniform,\n\tUniformType,\n\tUniformInternalType,\n\tUniformValue,\n\tCompileTimeVars,\n\tPROGRAM_NAME_INTERNAL,\n\tDEFAULT_PROGRAM_NAME,\n\tDEFAULT_W_UV_PROGRAM_NAME,\n\tDEFAULT_W_NORMAL_PROGRAM_NAME,\n\tDEFAULT_W_UV_NORMAL_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tLAYER_POINTS_PROGRAM_NAME,\n\tLAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tLAYER_LINES_PROGRAM_NAME,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n\tUniformParams,\n\tBOOL_1D_UNIFORM,\n\tBOOL_2D_UNIFORM,\n\tBOOL_3D_UNIFORM,\n\tBOOL_4D_UNIFORM,\n\tGLSL3,\n} from './constants';\nimport {\n\tcompileShader,\n\tpreprocessFragmentShader,\n\tinitGLProgram,\n\tuniformInternalTypeForValue,\n} from './utils';\n\nexport class GPUProgram {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly _composer: GPUComposer;\n\n\t/**\n\t * Name of GPUProgram, used for error logging.\n\t */\n\treadonly name: string;\n\n\t// Compiled fragment shader.\n\tprivate _fragmentShader!: WebGLShader;\n\t// Source code for fragment shader.\n\t// Hold onto this in case we need to recompile with different #defines.\n\tprivate readonly _fragmentShaderSource: string;\n\t// #define variables for fragment shader program.\n\tprivate readonly _defines: CompileTimeVars = {};\n\t// Uniform locations, values, and types.\n\tprivate readonly _uniforms: { [ key: string]: Uniform } = {};\n\n\t// Store WebGLProgram's - we need to compile several WebGLPrograms of GPUProgram.fragmentShader + various vertex shaders.\n\t// Each combination of vertex + fragment shader requires a separate WebGLProgram.\n\t// These programs are compiled on the fly as needed.\n\tprivate readonly _programs: {[key in PROGRAM_NAME_INTERNAL]?: WebGLProgram } = {};\n\n\t/**\n     * Create a GPUProgram.\n     * @param composer - The current GPUComposer instance.\n     * @param params - GPUProgram parameters.\n\t * @param params.name - Name of GPUProgram, used for error logging.\n\t * @param params.fragmentShader - Fragment shader source or array of sources to be joined.\n\t * @param params.uniforms - Array of uniforms to initialize with GPUProgram.  More uniforms can be added later with GPUProgram.setUniform().\n\t * @param params.defines - Compile-time #define variables to include with fragment shader.\n     */\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\t// We may want to pass in an array of shader string sources, if split across several files.\n\t\t\tfragmentShader: string | string[],\n\t\t\tuniforms?: UniformParams[],\n\t\t\t// We'll allow some compile-time variables to be passed in as #define to the preprocessor for the fragment shader.\n\t\t\tdefines?: CompileTimeVars,\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPUProgram \"${name}\": must pass GPUComposer instance to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!params) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass params to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!isObject(params)) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass valid params object to GPUProgram(composer, params), got ${JSON.stringify(params)}.`);\n\t\t}\n\t\t// Check params keys.\n\t\tconst validKeys = ['name', 'fragmentShader', 'uniforms', 'defines'];\n\t\tconst requiredKeys = ['name', 'fragmentShader'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPUProgram(composer, params) with name \"${name}\".  Valid keys are ${JSON.stringify(validKeys)}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPUProgram(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { fragmentShader, uniforms, defines } = params;\n\n\t\t// Save arguments.\n\t\tthis._composer = composer;\n\t\tthis.name = name;\n\n\t\t// Compile fragment shader.\n\t\tconst fragmentShaderSource = isString(fragmentShader) ?\n\t\t\tfragmentShader as string :\n\t\t\t(fragmentShader as string[]).join('\\n');\n\t\tthis._fragmentShaderSource = preprocessFragmentShader(\n\t\t\tfragmentShaderSource, composer.glslVersion, name,\n\t\t);\n\t\tthis._compile(defines); // Compiling also saves defines.\n\n\t\t// Set program uniforms.\n\t\tif (uniforms) {\n\t\t\tfor (let i = 0; i < uniforms.length; i++) {\n\t\t\t\tconst { name, value, type } = uniforms[i];\n\t\t\t\tthis.setUniform(name, value, type);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Compile fragment shader for GPUProgram.\n\t * Used internally, called only one.\n\t * @private\n\t */\n\tprivate _compile(defines?: CompileTimeVars) {\n\t\tconst { _composer, name, _fragmentShaderSource, _fragmentShader, _defines } = this;\n\t\tconst {\n\t\t\tgl,\n\t\t\t_errorCallback,\n\t\t\tverboseLogging,\n\t\t\tglslVersion,\n\t\t\tfloatPrecision,\n\t\t\tintPrecision,\n\t\t} = _composer;\n\n\t\t// Update this.defines if needed.\n\t\t// Passed in defines param may only be a partial list.\n\t\tlet definesNeedUpdate = false;\n\t\tif (defines) {\n\t\t\tconst keys = Object.keys(defines);\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tif (_defines[key] !== defines[key]) {\n\t\t\t\t\tdefinesNeedUpdate = true;\n\t\t\t\t\t_defines[key] = defines[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (_fragmentShader && !definesNeedUpdate) {\n\t\t\t// No need to recompile.\n\t\t\treturn;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Compiling fragment shader for GPUProgram \"${name}\" with defines: ${JSON.stringify(_defines)}`);\n\t\tconst shader = compileShader(\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t\t_fragmentShaderSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\tname,\n\t\t\t_errorCallback,\n\t\t\t_defines,\n\t\t);\n\t\tif (!shader) {\n\t\t\t_errorCallback(`Unable to compile fragment shader for GPUProgram \"${name}\".`);\n\t\t\treturn;\n\t\t}\n\t\tthis._fragmentShader = shader;\n\t\t\n\t\t// If we decided to call this multiple times, we will need to attach the shader to all existing programs.\n\t}\n\n\t/**\n\t * Get GLProgram associated with a specific vertex shader.\n\t * @private\n\t */\n\tprivate _getProgramWithName(name: PROGRAM_NAME_INTERNAL) {\n\t\t// Check if we've already compiled program.\n\t\tif (this._programs[name]) return this._programs[name];\n\n\t\t// Otherwise, we need to compile a new program on the fly.\n\t\tconst { _composer, _uniforms, _fragmentShader, _programs } = this;\n\t\tconst { gl, _errorCallback } = _composer;\n\n\t\tconst vertexShader = _composer._getVertexShaderWithName(name, this.name);\n\t\tif (vertexShader === undefined) {\n\t\t\t_errorCallback(`Unable to init vertex shader \"${name}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst program = initGLProgram(gl, vertexShader, _fragmentShader, this.name, _errorCallback);\n\t\tif (program === undefined) {\n\t\t\t_errorCallback(`Unable to init program \"${name}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\t// If we have any uniforms set for this GPUProgram, add those to WebGLProgram we just inited.\n\t\tconst uniformNames = Object.keys(_uniforms);\n\t\tfor (let i = 0; i < uniformNames.length; i++) {\n\t\t\tconst uniformName = uniformNames[i];\n\t\t\tconst uniform = _uniforms[uniformName];\n\t\t\tconst { value, type } = uniform;\n\t\t\tthis._setProgramUniform(program, name, uniformName, value, type);\n\t\t}\n\n\t\t_programs[name] = program;\n\t\treturn program;\n\t}\n\t/**\n\t * @private\n\t */\n\tget _defaultProgram() {\n\t\treturn this._getProgramWithName(DEFAULT_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _defaultProgramWithUV() {\n\t\treturn this._getProgramWithName(DEFAULT_W_UV_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _defaultProgramWithNormal() {\n\t\treturn this._getProgramWithName(DEFAULT_W_NORMAL_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _defaultProgramWithUVNormal() {\n\t\treturn this._getProgramWithName(DEFAULT_W_UV_NORMAL_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _segmentProgram() {\n\t\treturn this._getProgramWithName(SEGMENT_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _layerPointsProgram() {\n\t\treturn this._getProgramWithName(LAYER_POINTS_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _layerVectorFieldProgram() {\n\t\treturn this._getProgramWithName(LAYER_VECTOR_FIELD_PROGRAM_NAME);\n\t}\n\t/**\n\t * @private\n\t */\n\tget _layerLinesProgram() {\n\t\treturn this._getProgramWithName(LAYER_LINES_PROGRAM_NAME);\n\t}\n\n\t/**\n\t * Set uniform for GLProgram.\n\t * @private\n\t */\n\tprivate _setProgramUniform(\n\t\tprogram: WebGLProgram,\n\t\tprogramName: string,\n\t\tuniformName: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformInternalType,\n\t) {\n\t\tconst { _composer, _uniforms } = this;\n\t\tconst { gl, _errorCallback, glslVersion } = _composer;\n\t\t// Set active program.\n\t\tgl.useProgram(program);\n\n\t\tconst isGLSL3 = glslVersion === GLSL3;\n\n\t\tlet location = _uniforms[uniformName]?.location[programName];\n\t\t// Init a location for WebGLProgram if needed (only do this once).\n\t\tif (location === undefined) {\n\t\t\tconst _location = gl.getUniformLocation(program, uniformName);\n\t\t\tif (!_location) {\n\t\t\t\t_errorCallback(`Could not init uniform \"${uniformName}\" for program \"${this.name}\". Check that uniform is present in shader code, unused uniforms may be removed by compiler. Also check that uniform type in shader code matches type ${type}. Error code: ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocation = _location;\n\t\t\t// Save location for future use.\n\t\t\tif (_uniforms[uniformName]) {\n\t\t\t\t_uniforms[uniformName].location[programName] = location;\n\t\t\t}\n\n\t\t\t// Since this is the first time we are initing the uniform, check that type is correct.\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniform\n\t\t\tconst uniform = gl.getUniform(program, location);\n\t\t\tlet badType = false;\n\t\t\tif (type === BOOL_1D_UNIFORM || type === BOOL_2D_UNIFORM || type === BOOL_3D_UNIFORM || type === BOOL_4D_UNIFORM) {\n\t\t\t\tif (!isBoolean(uniform) && uniform.constructor !== Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else \n\t\t\tif (type === FLOAT_1D_UNIFORM || type === FLOAT_2D_UNIFORM || type === FLOAT_3D_UNIFORM || type === FLOAT_4D_UNIFORM) {\n\t\t\t\tif (!isNumber(uniform) && uniform.constructor !== Float32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else if (type === INT_1D_UNIFORM || type === INT_2D_UNIFORM || type === INT_3D_UNIFORM || type === INT_4D_UNIFORM) {\n\t\t\t\tif (!isInteger(uniform) && uniform.constructor !== Int32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t} else if (type === UINT_1D_UNIFORM || type === UINT_2D_UNIFORM || type === UINT_3D_UNIFORM || type === UINT_4D_UNIFORM) {\n\t\t\t\tif (!isGLSL3) {\n\t\t\t\t\t// GLSL1 does not have uint type, expect int instead.\n\t\t\t\t\tif (!isNonNegativeInteger(uniform) && uniform.constructor !== Int32Array) {\n\t\t\t\t\t\tbadType = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!isNonNegativeInteger(uniform) && uniform.constructor !== Uint32Array) {\n\t\t\t\t\tbadType = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (badType) {\n\t\t\t\t_errorCallback(`Invalid uniform \"${uniformName}\" for program \"${this.name}\". Check that uniform type in shader code matches type ${type}, gl.getUniform(program, location) returned type: ${uniform.constructor.name}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Set uniform.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform\n\t\tswitch (type) {\n\t\t\t// We are setting boolean uniforms with uniform[1234]i.\n\t\t\t// This suggest floats work as well, but ints seem more natural:\n\t\t\t// https://github.com/KhronosGroup/WebGL/blob/main/sdk/tests/conformance/uniforms/gl-uniform-bool.html\n\t\t\tcase BOOL_1D_UNIFORM:\n\t\t\t\tgl.uniform1i(location, value ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_2D_UNIFORM:\n\t\t\t\tgl.uniform2i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_3D_UNIFORM:\n\t\t\t\tgl.uniform3i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0, (value as number[])[2] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase BOOL_4D_UNIFORM:\n\t\t\t\tgl.uniform4i(location, (value as number[])[0] ? 1 : 0, (value as number[])[1] ? 1 : 0, (value as number[])[2] ? 1 : 0, (value as number[])[3] ? 1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_1D_UNIFORM:\n\t\t\t\tgl.uniform1f(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_2D_UNIFORM:\n\t\t\t\tgl.uniform2fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_3D_UNIFORM:\n\t\t\t\tgl.uniform3fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_4D_UNIFORM:\n\t\t\t\tgl.uniform4fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_1D_UNIFORM:\n\t\t\t\tgl.uniform1i(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase INT_2D_UNIFORM:\n\t\t\t\tgl.uniform2iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_3D_UNIFORM:\n\t\t\t\tgl.uniform3iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_4D_UNIFORM:\n\t\t\t\tgl.uniform4iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\t// Uint not supported in GLSL1, use int instead.\n\t\t\tcase UINT_1D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform1ui(location, value as number);\n\t\t\t\telse gl.uniform1i(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase UINT_2D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform2uiv(location, value as number[]);\n\t\t\t\telse gl.uniform2iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_3D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform3uiv(location, value as number[]);\n\t\t\t\telse gl.uniform3iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_4D_UNIFORM:\n\t\t\t\tif (isGLSL3) (gl as WebGL2RenderingContext).uniform4uiv(location, value as number[]);\n\t\t\t\telse gl.uniform4iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown uniform type ${type} for GPUProgram \"${this.name}\".`);\n\t\t}\n\t}\n\n\t/**\n\t * Set fragment shader uniform for GPUProgram.\n\t * @param name - Uniform name as it appears in fragment shader.\n\t * @param value - Uniform value.\n\t * @param type - Uniform type (this only needs to be set once).\n\t */\n\tsetUniform(\n\t\tname: string,\n\t\tvalue: UniformValue,\n\t\ttype?: UniformType,\n\t) {\n\t\tconst { _programs, _uniforms, _composer } = this;\n\t\tconst { verboseLogging } = _composer;\n\n\t\t// Check that length of value is correct.\n\t\tif (isArray(value)) {\n\t\t\tconst length = (value as number[]).length;\n\t\t\tif (length > 4) throw new Error(`Invalid uniform value: [${(value as number[]).join(', ')}] passed to GPUProgram \"${this.name}, uniforms must be of type number[] with length <= 4, number, or boolean.\"`)\n\t\t}\n\n\t\tlet currentType = _uniforms[name]?.type;\n\t\tif (type) {\n\t\t\tconst internalType = uniformInternalTypeForValue(value, type, name, this.name);\n\t\t\tif (currentType === undefined) currentType = internalType;\n\t\t\telse {\n\t\t\t\t// console.warn(`Don't need to pass in type to GPUProgram.setUniform for previously inited uniform \"${uniformName}\"`);\n\t\t\t\t// Check that types match previously set uniform.\n\t\t\t\tif (currentType !== internalType) {\n\t\t\t\t\tthrow new Error(`Uniform \"${name}\" for GPUProgram \"${this.name}\" cannot change from type ${currentType} to type ${internalType}.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (currentType === undefined) {\n\t\t\tthrow new Error(`Unknown type for uniform \"${name}\", please pass in type to GPUProgram.setUniform(name, value, type) when initing a new uniform.`);\n\t\t}\n\n\t\tif (!_uniforms[name]) {\n\t\t\t// Init uniform if needed.\n\t\t\t_uniforms[name] = { type: currentType, location: {}, value };\n\t\t} else {\n\t\t\t// Deep check is value has changed.\n\t\t\tif (isArray(value)) {\n\t\t\t\tlet isChanged = true;\n\t\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\t\tif (_uniforms[name].value !== value) {\n\t\t\t\t\t\tisChanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isChanged) return; // No change.\n\t\t\t} else if (_uniforms[name].value === value) {\n\t\t\t\treturn; // No change.\n\t\t\t}\n\t\t\t// Update value.\n\t\t\t_uniforms[name].value = value;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Setting uniform \"${name}\" for program \"${this.name}\" to value ${JSON.stringify(value)} with type ${currentType}.`)\n\n\t\t// Update any active programs.\n\t\tconst keys = Object.keys(_programs);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst programName = keys[i] as PROGRAM_NAME_INTERNAL;\n\t\t\tthis._setProgramUniform(_programs[programName]!, programName, name, value, currentType);\n\t\t}\n\t};\n\n\t/**\n\t * Set vertex shader uniform for GPUProgram.\n\t * @private\n\t */\n\t_setVertexUniform(\n\t\tprogram: WebGLProgram,\n\t\tuniformName: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformType,\n\t) {\n\t\tif (!program) {\n\t\t\tthrow new Error('Must pass in valid WebGLProgram to setVertexUniform, got undefined.');\n\t\t}\n\t\tconst programName = Object.keys(this._programs).find(key => this._programs[key as PROGRAM_NAME_INTERNAL] === program);\n\t\tif (!programName) {\n\t\t\tthrow new Error(`Could not find valid vertex programName for WebGLProgram in GPUProgram \"${this.name}\".`);\n\t\t}\n\t\tconst internalType = uniformInternalTypeForValue(value, type, uniformName, this.name);\n\t\tthis._setProgramUniform(program, programName, uniformName, value, internalType);\n\t}\n\n\t/**\n\t * Deallocate GPUProgram instance and associated WebGL properties.\n\t */\n\tdispose() {\n\t\tconst { _composer, _fragmentShader, _programs } = this;\n\t\tconst { gl, verboseLogging } = _composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUProgram \"${this.name}\".`);\n\t\tif (!gl) throw new Error(`Must call dispose() on all GPUPrograms before calling dispose() on GPUComposer.`);\n\n\t\t// Unbind all gl data before deleting.\n\t\tObject.values(_programs).forEach(program => {\n\t\t\tif (program) gl.deleteProgram(program);\n\t\t});\n\t\tObject.keys(_programs).forEach(key => {\n\t\t\tdelete this._programs[key as PROGRAM_NAME_INTERNAL];\n\t\t});\n\n\t\t// Delete fragment shader.\n\t\tgl.deleteShader(_fragmentShader);\n\t\t// @ts-ignore\n\t\tdelete this._fragmentShader;\n\t\t// Vertex shaders are owned by GPUComposer and shared across many GPUPrograms.\n\n\t\t// Delete all references.\n\t\t// @ts-ignore\n\t\tdelete this._composer;\n\t\t// @ts-ignore\n\t\tdelete this.name;\n\t\t// @ts-ignore\n\t\tdelete this._fragmentShaderSource;\n\t\t// @ts-ignore\n\t\tdelete this._defines;\n\t\t// @ts-ignore\n\t\tdelete this._uniforms;\n\t\t// @ts-ignore\n\t\tdelete this._programs;\n\t}\n}\n","/**\n * These are the parts of threejs Vector4 that we need.\n * Used internally.\n * @private\n */\nexport class Vector4 {\n\tx: number;\n\ty: number;\n\tz: number;\n\tw: number;\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\tget width() {\n\t\treturn this.z;\n\t}\n\tget height() {\n\t\treturn this.w;\n\t}\n\tcopy(v: Vector4) {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t\treturn this;\n\t}\n}","import {\n\tvalidDataTypes,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tGPULayerType,\n\tHALF_FLOAT,\n\tFLOAT,\n\tBYTE,\n\tSHORT,\n\tINT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_SHORT,\n\tUNSIGNED_INT,\n} from './constants';\n\n/**\n * Checks if type is valid GPULayer data type.\n * @private\n */\nexport function isValidDataType(type: string) {\n\treturn validDataTypes.indexOf(type) > -1;\n}\n\n/**\n * Checks if filter is valid GPULayer filter type.\n * @private\n */\nexport function isValidFilter(type: string) {\n\treturn validFilters.indexOf(type) > -1;\n}\n\n/**\n * Checks if wrap is valid GPULayer wrap type.\n * @private\n */\nexport function isValidWrap(type: string) {\n\treturn validWraps.indexOf(type) > -1;\n}\n\n// For image urls that are passed in and inited as textures.\n// TODO: add docs\nexport function isValidTextureFormat(type: string) {\n\treturn validTextureFormats.indexOf(type) > -1;\n}\n// TODO: add docs\nexport function isValidTextureType(type: string) {\n\treturn validTextureTypes.indexOf(type) > -1;\n}\n\n/**\n * Checks if value is valid GPULayer clear value for numComponents and type.\n * @private\n */\nexport function isValidClearValue(clearValue: number | number[], numComponents: number, type: GPULayerType) {\n\tif (isArray(clearValue)) {\n\t\t// Length of clearValue must match numComponents.\n\t\tif ((clearValue as number[]).length !== numComponents) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < (clearValue as number[]).length; i++) {\n\t\t\tif (!isNumberOfType((clearValue as number[])[i], type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (!isNumberOfType(clearValue, type)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Checks if value is valid number for a given GPULayer type.\n * Checks extrema values.\n * @private\n */\nexport function isNumberOfType(value: any, type: GPULayerType) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\tcase FLOAT:\n\t\t\treturn isNumber(value);\n\t\tcase BYTE:\n\t\t\t// -(2 ** 7)\n\t\t\tif (value < -128) return false;\n\t\t\t// 2 ** 7 - 1\n\t\t\tif (value > 127) return false;\n\t\t\treturn isInteger(value);\n\t\tcase SHORT:\n\t\t\t// -(2 ** 15)\n\t\t\tif (value < -32768) return false;\n\t\t\t// 2 ** 15 - 1\n\t\t\tif (value > 32767) return false;\n\t\t\treturn isInteger(value);\n\t\tcase INT:\n\t\t\t// -(2 ** 31)\n\t\t\tif (value < -2147483648) return false;\n\t\t\t// 2 ** 31 - 1\n\t\t\tif (value > 2147483647) return false;\n\t\t\treturn isInteger(value);\n\t\tcase UNSIGNED_BYTE:\n\t\t\t// 2 ** 8 - 1\n\t\t\tif (value > 255) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_SHORT:\n\t\t\t// 2 ** 16 - 1\n\t\t\tif (value > 65535) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_INT:\n\t\t\t// 2 ** 32 - 1\n\t\t\tif (value > 4294967295) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown type ${type}`);\n\t}\n}\n\n/**\n * Checks if value is finite number.\n * @private\n */\nexport function isNumber(value: any) {\n\treturn !Number.isNaN(value) && typeof value === 'number' && Number.isFinite(value);\n}\n\n/**\n * Checks if value is finite integer.\n * @private\n */\nexport function isInteger(value: any) {\n\treturn isNumber(value) && (value % 1 === 0);\n}\n\n/**\n * Checks if value is finite positive integer (> 0).\n * @private\n */\nexport function isPositiveInteger(value: any) {\n\treturn isInteger(value) && value > 0;\n}\n\n/**\n * Checks if value is finite non-negative integer (>= 0).\n * @private\n */\nexport function isNonNegativeInteger(value: any) {\n\treturn isInteger(value) &&  value >= 0;\n}\n\n/**\n * Checks if value is string.\n * @private\n */\nexport function isString(value: any){\n\treturn typeof value === 'string';\n}\n\n/**\n * Checks if value is array.\n * @private\n */\nexport function isArray(value: any) {\n\treturn Array.isArray(value);\n}\n\n/**\n * Checks if value is Javascript object.\n * @private\n */\nexport function isObject(value: any) {\n\treturn typeof value === 'object' && !isArray(value) && value !== null;\n}\n\n/**\n * Checks if value is boolean.\n * @private\n */\nexport function isBoolean(value: any) {\n\treturn typeof value === 'boolean';\n}","// Data types.\n/**\n * Half float data type.\n */\nexport const HALF_FLOAT = 'HALF_FLOAT';\n/**\n * Float data type.\n */\nexport const FLOAT = 'FLOAT';\n/**\n * Unsigned byte data type.\n */\nexport const UNSIGNED_BYTE = 'UNSIGNED_BYTE';\n/**\n * Byte data type.\n */\nexport const BYTE = 'BYTE';\n/**\n * Unsigned short data type.\n */\nexport const UNSIGNED_SHORT = 'UNSIGNED_SHORT';\n/**\n * Short data type.\n */\nexport const SHORT = 'SHORT';\n/**\n * Unsigned int data type.\n */\nexport const UNSIGNED_INT = 'UNSIGNED_INT';\n/**\n * Int data type.\n */\nexport const INT = 'INT';\n/**\n * Boolean data type (GPUProgram uniforms only).\n */\nexport const BOOL = 'BOOL';\n/**\n * Unsigned int data type (GPUProgram uniforms only).\n */\nexport const UINT = 'UINT';\n\n// Filter types.\n/**\n * Nearest texture filtering.\n */\nexport const NEAREST = 'NEAREST';\n/**\n * Linear texture filtering.\n */\nexport const LINEAR = 'LINEAR';\n\n// Wrap types.\n/**\n * Clamp to edge wrapping (no wrapping).\n */\nexport const CLAMP_TO_EDGE = 'CLAMP_TO_EDGE';\n/**\n * Repeat/periodic wrapping.\n */\nexport const REPEAT = 'REPEAT';\n// export const MIRRORED_REPEAT = 'MIRRORED_REPEAT';\n\n// GPULayer parameter types.\n/**\n * GPULayer array types.\n */\nexport type GPULayerArray =  Float32Array | Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array;\n/**\n * @private\n */\nexport const validArrayTypes = [Float32Array, Uint8Array, Int8Array, Uint16Array, Int16Array, Uint32Array, Int32Array, Array];\n/**\n * GPULayer data types.\n */\nexport type GPULayerType = typeof HALF_FLOAT | typeof FLOAT | typeof UNSIGNED_BYTE | typeof BYTE | typeof UNSIGNED_SHORT | typeof SHORT | typeof UNSIGNED_INT | typeof INT;\n/**\n * @private\n */\nexport const validDataTypes = [HALF_FLOAT, FLOAT, UNSIGNED_BYTE, BYTE, UNSIGNED_SHORT, SHORT, UNSIGNED_INT, INT];\n/**\n * GPULayer numComponents options.\n */\nexport type GPULayerNumComponents = 1 | 2 | 3 | 4;\n/**\n * GPULayer filter/interpolation types.\n */\nexport type GPULayerFilter = typeof LINEAR | typeof NEAREST;\n/**\n * @private\n */\nexport const validFilters = [NEAREST, LINEAR];\n/**\n * @private\n */\n/**\n * GPULayer wrap types.\n */\nexport type GPULayerWrap = typeof REPEAT | typeof CLAMP_TO_EDGE;// | typeof MIRRORED_REPEAT;\n/**\n * @private\n */\nexport const validWraps = [CLAMP_TO_EDGE, REPEAT]; // MIRRORED_REPEAT\n\n\n// TODO: change this?\n// For image urls that are passed in and inited as textures.\n/**\n * @private\n */\nexport const RGB = 'RGB';\n/**\n * @private\n */\nexport const RGBA = 'RGBA';\n/**\n * @private\n */\nexport type TextureFormat = typeof RGB | typeof RGBA;\n/**\n * @private\n */\nexport const validTextureFormats = [RGB, RGBA];\n/**\n * @private\n */\nexport type TextureType = typeof UNSIGNED_BYTE;\n/**\n * @private\n */\nexport const validTextureTypes = [UNSIGNED_BYTE];\n\n// GLSL versions.\n/**\n * GLSL version 300 (WebGL2 only).\n */\nexport const GLSL3 = '300 es';\n/**\n * GLSL version 100 (WebGL1 and WebGL2).\n */\nexport const GLSL1 = '100';\n/**\n * GLSL available versions.\n */\nexport type GLSLVersion = typeof GLSL1 | typeof GLSL3;\n\n// WebGL versions.\n/**\n * WebGL2 context ID.\n */\nexport const WEBGL2 = 'webgl2';\n/**\n * WebGL1 context ID.\n */\nexport const WEBGL1 = 'webgl';\n/**\n * Experimental WebGL context ID.\n */\nexport const EXPERIMENTAL_WEBGL = 'experimental-webgl';\n\n// Precision declarations.\n/**\n * GLSL lowp precision declaration.\n */\nexport const PRECISION_LOW_P = 'lowp';\n/**\n * GLSL mediump precision declaration.\n */\nexport const PRECISION_MEDIUM_P = 'mediump';\n/**\n * GLSL highp precision declaration.\n */\nexport const PRECISION_HIGH_P = 'highp';\n/**\n * GLSL available precision declarations.\n */\nexport type GLSLPrecision = typeof PRECISION_LOW_P | typeof PRECISION_MEDIUM_P | typeof PRECISION_HIGH_P;\n\n// Uniform types.\n/**\n * @private\n */\nexport const FLOAT_1D_UNIFORM = 'FLOAT_1D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_2D_UNIFORM = 'FLOAT_2D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_3D_UNIFORM = 'FLOAT_3D_UNIFORM';\n/**\n * @private\n */\nexport const FLOAT_4D_UNIFORM = 'FLOAT_4D_UNIFORM';\n/**\n * @private\n */\nexport const INT_1D_UNIFORM = 'INT_1D_UNIFORM';\n/**\n * @private\n */\nexport const INT_2D_UNIFORM = 'INT_2D_UNIFORM';\n/**\n * @private\n */\nexport const INT_3D_UNIFORM = 'INT_3D_UNIFORM';\n/**\n * @private\n */\nexport const INT_4D_UNIFORM = 'INT_4D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_1D_UNIFORM = 'UINT_1D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_2D_UNIFORM = 'UINT_2D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_3D_UNIFORM = 'UINT_3D_UNIFORM';\n/**\n * @private\n */\nexport const UINT_4D_UNIFORM = 'UINT_4D_UNIFORM';\n/**\n * @private\n */\n export const BOOL_1D_UNIFORM = 'BOOL_1D_UNIFORM';\n /**\n * @private\n */\n  export const BOOL_2D_UNIFORM = 'BOOL_2D_UNIFORM';\n  /**\n * @private\n */\n export const BOOL_3D_UNIFORM = 'BOOL_3D_UNIFORM';\n /**\n * @private\n */\n  export const BOOL_4D_UNIFORM = 'BOOL_4D_UNIFORM';\n\n// Uniform types and values.\n/**\n * GPUProgram uniform types.\n */\nexport type UniformType = typeof FLOAT | typeof INT | typeof UINT | typeof BOOL;\n/**\n * @private\n */\nexport type UniformInternalType = \n\ttypeof BOOL_1D_UNIFORM |\n\ttypeof BOOL_2D_UNIFORM |\n\ttypeof BOOL_3D_UNIFORM |\n\ttypeof BOOL_4D_UNIFORM |\n\ttypeof FLOAT_1D_UNIFORM |\n\ttypeof FLOAT_2D_UNIFORM |\n\ttypeof FLOAT_3D_UNIFORM |\n\ttypeof FLOAT_4D_UNIFORM |\n\ttypeof INT_1D_UNIFORM |\n\ttypeof INT_2D_UNIFORM |\n\ttypeof INT_3D_UNIFORM |\n\ttypeof INT_4D_UNIFORM |\n\ttypeof UINT_1D_UNIFORM |\n\ttypeof UINT_2D_UNIFORM |\n\ttypeof UINT_3D_UNIFORM |\n\ttypeof UINT_4D_UNIFORM;\n/**\n * GPUProgram uniform values.\n */\nexport type UniformValue = boolean | boolean[] | number | number[];\n/**\n * GPUProgram uniform parameters.\n */\nexport type UniformParams = {\n\tname: string,\n\tvalue: UniformValue,\n\ttype: UniformType,\n};\n/**\n * @private\n */\nexport type Uniform = { \n\tlocation: { [key: string]: WebGLUniformLocation },\n\ttype: UniformInternalType,\n\tvalue: UniformValue,\n};\n\n// Vertex shader types.\n/**\n * @private\n */\nexport const DEFAULT_PROGRAM_NAME = 'DEFAULT';\n/**\n * @private\n */\nexport const DEFAULT_W_UV_PROGRAM_NAME = 'DEFAULT_W_UV';\n/**\n * @private\n */\nexport const DEFAULT_W_NORMAL_PROGRAM_NAME = 'DEFAULT_W_NORMAL';\n/**\n * @private\n */\nexport const DEFAULT_W_UV_NORMAL_PROGRAM_NAME = 'DEFAULT_W_UV_NORMAL';\n/**\n * @private\n */\nexport const SEGMENT_PROGRAM_NAME = 'SEGMENT';\n/**\n * @private\n */\nexport const LAYER_POINTS_PROGRAM_NAME = 'LAYER_POINTS';\n/**\n * @private\n */\nexport const LAYER_LINES_PROGRAM_NAME = 'LAYER_LINES';\n/**\n * @private\n */\nexport const LAYER_VECTOR_FIELD_PROGRAM_NAME = 'LAYER_VECTOR_FIELD';\n/**\n * @private\n */\nexport type PROGRAM_NAME_INTERNAL =\n\ttypeof DEFAULT_PROGRAM_NAME |\n\ttypeof DEFAULT_W_UV_PROGRAM_NAME |\n\ttypeof DEFAULT_W_NORMAL_PROGRAM_NAME |\n\ttypeof DEFAULT_W_UV_NORMAL_PROGRAM_NAME |\n\ttypeof SEGMENT_PROGRAM_NAME |\n\ttypeof LAYER_POINTS_PROGRAM_NAME |\n\ttypeof LAYER_LINES_PROGRAM_NAME |\n\ttypeof LAYER_VECTOR_FIELD_PROGRAM_NAME;\n\n// Pass in #defines as strings to make it easier to control float vs int.\n/**\n * Object containing compile-time #define variables for GPUProgram fragment shader.\n */\nexport type CompileTimeVars = { [key: string]: string };\n\n// Each buffer in GPULayer contains a WebGLTexture and WebGLFramebuffer.\n/**\n * @private\n */\nexport type GPULayerBuffer = {\n\ttexture: WebGLTexture,\n\tframebuffer?: WebGLFramebuffer,\n}\n\n// Error callback, defaults to throwing an error.\nexport type ErrorCallback = (message: string) => void;\n/**\n * @private\n */\nexport const DEFAULT_ERROR_CALLBACK = (message: string) => { throw new Error(message); };\n\n// For stepCircle() and stepSegment() (with end caps).\n/**\n * @private\n */\nexport const DEFAULT_CIRCLE_NUM_SEGMENTS = 18;// Must be divisible by 6 to work with stepSegment().\n\n// Extrema values.\n/**\n * @private\n */\nexport const MIN_UNSIGNED_BYTE = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_BYTE = 2 ** 8 - 1;\n/**\n * @private\n */\nexport const MIN_BYTE = -(2 ** 7);\n/**\n * @private\n */\nexport const MAX_BYTE = 2 ** 7 - 1;\n/**\n * @private\n */\nexport const MIN_UNSIGNED_SHORT = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_SHORT = 2 ** 16 - 1;\n/**\n * @private\n */\nexport const MIN_SHORT = -(2 ** 15);\n/**\n * @private\n */\nexport const MAX_SHORT = 2 ** 15 - 1;\n/**\n * @private\n */\nexport const MIN_UNSIGNED_INT = 0;\n/**\n * @private\n */\nexport const MAX_UNSIGNED_INT = 2 ** 32 - 1;\n/**\n * @private\n */\nexport const MIN_INT = -(2 ** 31);\n/**\n * @private\n */\nexport const MAX_INT = 2 ** 31 - 1;\n// There are larger HALF_FLOAT and FLOAT ints, but they may be spaced out by > 1.\n/**\n * @private\n */\nexport const MIN_HALF_FLOAT_INT = -2048;\n/**\n * @private\n */\nexport const MAX_HALF_FLOAT_INT = 2048;\n/**\n * @private\n */\nexport const MIN_FLOAT_INT = -16777216;\n/**\n * @private\n */\nexport const MAX_FLOAT_INT = 16777216;","import { GPUComposer } from './GPUComposer';\n\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float\n// Float is provided by default in WebGL2 contexts.\n// This extension implicitly enables the WEBGL_color_buffer_float extension (if supported), which allows rendering to 32-bit floating-point color buffers.\nexport const OES_TEXTURE_FLOAT = 'OES_texture_float';\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_half_float\n// Half float is supported by modern mobile browsers, float not yet supported.\n// Half float is provided by default for Webgl2 contexts.\n// This extension implicitly enables the EXT_color_buffer_half_float extension (if supported), which allows rendering to 16-bit floating point formats.\nexport const OES_TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n// TODO: Seems like linear filtering of floats may be supported in some browsers without these extensions?\n// https://www.khronos.org/registry/OpenGL/extensions/OES/OES_texture_float_linear.txt\nexport const OES_TEXTURE_FLOAT_LINEAR = 'OES_texture_float_linear';\nexport const OES_TEXTURE_HAlF_FLOAT_LINEAR = 'OES_texture_half_float_linear';\n// https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n// Adds gl.UNSIGNED_SHORT, gl.UNSIGNED_INT types to textImage2D in WebGL1.0\nexport const WEBGL_DEPTH_TEXTURE = 'WEBGL_depth_texture';\n// EXT_COLOR_BUFFER_FLOAT adds ability to render to a variety of floating pt textures.\n// This is needed for the WebGL2 contexts that do not support OES_TEXTURE_FLOAT / OES_TEXTURE_HALF_FLOAT extensions.\n// https://developer.mozilla.org/en-US/docs/Web/API/EXT_color_buffer_float\n// https://stackoverflow.com/questions/34262493/framebuffer-incomplete-attachment-for-texture-with-internal-format\n// https://stackoverflow.com/questions/36109347/framebuffer-incomplete-attachment-only-happens-on-android-w-firefox\nexport const EXT_COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n// On WebGL 2, EXT_COLOR_BUFFER_HALF_FLOAT is an alternative to using the EXT_color_buffer_float extension on platforms\n// that support 16-bit floating point render targets but not 32-bit floating point render targets.\nexport const EXT_COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n\nexport function getExtension(\n\tcomposer: GPUComposer,\n\textensionName: string,\n\toptional = false,\n) {\n\t// Check if we've already loaded the extension.\n\tif (composer._extensions[extensionName] !== undefined) return composer._extensions[extensionName];\n\n\tconst { gl, _errorCallback, _extensions, verboseLogging } = composer;\n\tlet extension;\n\ttry {\n\t\textension = gl.getExtension(extensionName);\n\t} catch (e) {}\n\tif (extension) {\n\t\t// Cache this extension.\n\t\t_extensions[extensionName] = extension;\n\t\tif (composer.verboseLogging) console.log(`Loaded extension: ${extensionName}.`);\n\t} else {\n\t\t_extensions[extensionName] = false; // Cache the bad extension lookup.\n\t\tif (composer.verboseLogging) console.log(`Unsupported ${optional ? 'optional ' : ''}extension: ${extensionName}.`);\n\t}\n\t// If the extension is not optional, throw error.\n\tif (!extension && !optional) {\n\t\t_errorCallback(`Required extension unsupported by this device / browser: ${extensionName}.`);\n\t}\n\treturn extension;\n}","import * as utils from './utils';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport { GPUProgram } from './GPUProgram';\nimport * as checks from './checks';\nimport * as GPULayerHelpers from './GPULayerHelpers';\nimport * as regex from './regex';\nimport * as extensions from './extensions';\n\n// These exports are only used for testing.\n/**\n * @private\n */\nconst _testing = {\n\tisFloatType: utils.isFloatType,\n\tisUnsignedIntType: utils.isUnsignedIntType,\n\tisSignedIntType: utils.isSignedIntType,\n\tisIntType: utils.isIntType,\n\tmakeShaderHeader: utils.makeShaderHeader,\n\tcompileShader: utils.compileShader,\n\tinitGLProgram: utils.initGLProgram,\n\treadyToRead: utils.readyToRead,\n\tpreprocessVertexShader: utils.preprocessVertexShader,\n\tpreprocessFragmentShader: utils.preprocessFragmentShader,\n\tisPowerOf2: utils.isPowerOf2,\n\tinitSequentialFloatArray: utils.initSequentialFloatArray,\n\tuniformInternalTypeForValue: utils.uniformInternalTypeForValue,\n\t...extensions,\n\t...regex,\n\t...checks,\n\t...GPULayerHelpers,\n}\n\n// Named exports.\nexport * from './constants';\nconst {\n\tisWebGL2,\n\tisWebGL2Supported,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n} = utils;\nexport {\n\tGPUComposer,\n\tGPULayer,\n\tGPUProgram,\n\tisWebGL2,\n\tisWebGL2Supported,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n\t_testing,\n}","import { GLSLVersion, GLSL3 } from './constants';\n\n/**\n * Helper functions for converting GLSL3 to GLSL1 and checking for valid shader code.\n * Note: there is no positive lookbehind support in some browsers, use capturing parens instead.\n * https://stackoverflow.com/questions/3569104/positive-look-behind-in-javascript-regular-expression/3569116#3569116\n */\n\nfunction escapeRegExp(string: string){\n\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\n/**\n * Typecast variable assignment.\n * This is used in cases when e.g. varyings have to be converted to float in GLSL1.\n * @private\n */\nexport function typecastVariable(shaderSource: string, variableName: string, type: string) {\n\t// \"s\" makes this work for multiline values.\n\t// Do this without lookbehind to support older browsers.\n\t// const regexMatch = new RegExp(`(?<=\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*)\\\\S[^;]*(?=;)`, 'sg');\n\tconst regexMatch = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*\\\\S[^;]*;`, 'sg');\n\tconst assignmentExpressions = shaderSource.match(regexMatch);\n\tif (assignmentExpressions) {\n\t\t// Loop through all places where variable is assigned and typecast.\n\t\tfor (let i = 0; i < assignmentExpressions.length; i++) {\n\t\t\tconst regexValueMatch = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*(\\\\S[^;]*);`, 's');\n\t\t\tconst value = assignmentExpressions[i].match(regexValueMatch);\n\t\t\tif (value && value[1]) {\n\t\t\t\tconst regexReplace = new RegExp(`\\\\b${escapeRegExp(variableName)}\\\\s*=\\\\s*${escapeRegExp(value[1])}\\\\s*;`, 's');\n\t\t\t\tshaderSource = shaderSource.replace(regexReplace, `${variableName} = ${type}(${value[1]});`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`Could not find value in expression: \"${assignmentExpressions[i]}\"`);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconsole.warn(`No assignment found for shader variable ${variableName}.`);\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader \"in\" to \"attribute\".\n * @private\n */\nexport function glsl1VertexIn(shaderSource: string) {\n\treturn shaderSource.replace(/\\bin\\b/g, 'attribute');\n}\n\n/**\n * Convert int varyings to float types.\n * Also update any variable assignments so that they are cast to float.\n * @private\n */\nfunction _castVaryingToFloat(shaderSource: string, regexString: string, type: string) {\n\t// Do this without lookbehind to support older browsers.\n\t// const regexMatch = new RegExp(`(?<=${regexString}\\\\s+)\\\\S[^;]*(?=;)`, 'g');\n\tconst regexMatch = new RegExp(`${regexString}\\\\s+\\\\S[^;]*;`, 'g');\n\tconst castToFloatExpressions = shaderSource.match(regexMatch);\n\tif (castToFloatExpressions) {\n\t\t// Replace all with new type.\n\t\tconst regexReplace = new RegExp(`${regexString}\\\\b`, 'g');\n\t\tshaderSource = shaderSource.replace(regexReplace, `varying ${type}`);\n\t\t// Loop through each expression, grab variable name, and cast all assignments.\n\t\tfor (let i = 0; i < castToFloatExpressions.length; i++) {\n\t\t\tconst regexVariableMatch = new RegExp(`${regexString}\\\\s+(\\\\S[^;]*);`);\n\t\t\tconst variable = castToFloatExpressions[i].match(regexVariableMatch);\n\t\t\tif (variable && variable[2]) {\n\t\t\t\tshaderSource = typecastVariable(shaderSource, variable[2], type);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`Could not find variable name in expression: \"${castToFloatExpressions[i]}\"`);\n\t\t\t}\n\t\t}\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Convert int varyings to float types.\n * Only exported for testing.\n * @private\n */\nexport function castVaryingToFloat(shaderSource: string) {\n\t// Need to init all expressions with the same number of capturing groups\n\t// so that this will work in _castVaryingToFloat.\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(u)?int', 'float'); // '\\\\bvarying\\\\s+u?int'\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec2', 'vec2');\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec3', 'vec3');\n\tshaderSource = _castVaryingToFloat(shaderSource, '\\\\bvarying\\\\s+(i|u)vec4', 'vec4');\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader \"out\" to \"varying\".\n * Also remove \"flat\" if necessary.\n * Also cast as float if necessary.\n * @private\n */\nexport function glsl1VertexOut(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/(\\bflat\\s+)?\\bout\\b/g, 'varying');\n\tshaderSource = castVaryingToFloat(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert fragment shader \"in\" to \"varying\".\n * Also remove \"flat\" if necessary.\n * Also cast as float if necessary.\n * @private\n */\nexport function glsl1FragmentIn(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/(\\bflat\\s+)?\\bin\\b/g, 'varying');\n\tshaderSource = castVaryingToFloat(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Contains out_fragColor.\n * @private\n */\nfunction containsOutFragColor(shaderSource: string) {\n\treturn !!shaderSource.match(/\\bout_fragColor\\b/);\n}\n\n/**\n * Contains gl_FragColor.\n * @private\n */\nfunction containsGLFragColor(shaderSource: string) {\n\treturn !!shaderSource.match(/\\bgl_FragColor\\b/);\n}\n\n/**\n * Get type (int, float, vec3, etc) of fragment out.\n * Only exported for testing.\n * @private\n */\nexport function getFragmentOutType(shaderSource: string, name: string) {\n\t// Do this without lookbehind to support older browsers.\n\t// const type = shaderSource.match(/(?<=\\bout\\s+((lowp|mediump|highp)\\s+)?)(float|int|((i|u)?vec(2|3|4)))(?=\\s+out_fragColor;)/);\n\tconst type = shaderSource.match(/\\bout\\s+((lowp|mediump|highp)\\s+)?((float|int|((i|u)?vec(2|3|4))))\\s+out_fragColor;/);\n\tif (!type || !type[3]) {\n\t\tthrow new Error(`No type found in out_fragColor declaration for GPUProgram \"${name}\".`);\n\t}\n\treturn type[3] as 'float' | 'int' | 'vec2' | 'vec3' | 'vec4' | 'ivec2' | 'ivec3' | 'ivec4' | 'uvec2' | 'uvec3' | 'uvec4';\n}\n\n/**\n * Convert out_fragColor to gl_FragColor.\n * @private\n */\nexport function glsl1FragmentOut(shaderSource: string, name: string) {\n\tif (containsOutFragColor(shaderSource)) {\n\t\tconst type = getFragmentOutType(shaderSource, name);\n\t\t// Remove out_fragColor declaration.\n\t\tshaderSource = shaderSource.replace(/\\bout\\s+((lowp|mediump|highp)\\s+)?\\w+\\s+out_fragColor\\s*;/g, '');\n\t\tlet assignmentFound = false;\n\t\twhile (true) {\n\t\t\t// Replace each instance of out_fragColor = with gl_FragColor = and cast to vec4.\n\t\t\t// Do this without lookbehind to support older browsers.\n\t\t\t// const output = shaderSource.match(/(?<=\\bout_fragColor\\s*=\\s*)\\S.*(?=;)/s); // /s makes this work for multiline.\n\t\t\tconst output = shaderSource.match(/\\bout_fragColor\\s*=\\s*(\\S.*);/s); // /s makes this work for multiline.\n\t\t\tif (output && output[1]) {\n\t\t\t\tassignmentFound = true;\n\t\t\t\tlet filler = '';\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'float':\n\t\t\t\t\tcase 'int':\n\t\t\t\t\t\tfiller = ', 0, 0, 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vec2':\n\t\t\t\t\tcase 'ivec2':\n\t\t\t\t\tcase 'uvec2':\n\t\t\t\t\t\tfiller = ', 0, 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vec3':\n\t\t\t\t\tcase 'ivec3':\n\t\t\t\t\tcase 'uvec3':\n\t\t\t\t\t\tfiller = ', 0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tshaderSource = shaderSource.replace(/\\bout_fragColor\\s*=\\s*.+;/s, `gl_FragColor = vec4(${output[1]}${filler});`);\n\t\t\t} else {\n\t\t\t\tif (!assignmentFound) throw new Error(`No assignment found for out_fragColor in GPUProgram \"${name}\".`);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Check that out_fragColor or gl_FragColor is present in fragment shader source.\n * @private \n */\n export function checkFragmentShaderForFragColor(shaderSource: string, glslVersion: GLSLVersion, name: string) {\n\tconst gl_FragColor = containsGLFragColor(shaderSource);\n\tconst out_fragColor = containsOutFragColor(shaderSource);\n\tif (glslVersion === GLSL3) {\n\t\t// Check that fragment shader source DOES NOT contain gl_FragColor\n\t\tif (gl_FragColor) {\n\t\t\tthrow new Error(`Found \"gl_FragColor\" declaration in fragment shader for GPUProgram \"${name}\": either init GPUComposer with glslVersion = GLSL1 or use GLSL3 syntax in your fragment shader.`);\n\t\t}\n\t\t// Check that fragment shader source DOES contain out_fragColor.\n\t\tif (!out_fragColor) {\n\t\t\tthrow new Error(`Found no \"out_fragColor\" (GLSL3) or \"gl_FragColor\" (GLSL1) declarations or  in fragment shader for GPUProgram \"${name}\".`);\n\t\t}\n\t} else {\n\t\t// Check that fragment shader source DOES contain either gl_FragColor or out_fragColor.\n\t\tif (!gl_FragColor && !out_fragColor) {\n\t\t\tthrow new Error(`Found no \"out_fragColor\" (GLSL3) or \"gl_FragColor\" (GLSL1) declarations or  in fragment shader for GPUProgram \"${name}\".`);\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Convert texture to texture2D.\n * TODO: add polyfills.\n * @private\n */\nexport function glsl1Texture(shaderSource: string) {\n\treturn shaderSource.replace(/\\btexture\\(/g, 'texture2D(');\n}\n\n/**\n * Convert isampler2D and usampler2D to sampler2D.\n * @private\n */\nexport function glsl1Sampler2D(shaderSource: string) {\n\treturn shaderSource.replace(/\\b(i|u)sampler2D\\b/g, 'sampler2D');\n}\n\n/**\n * Unsigned int types are not supported, use int types instead.\n * @private\n */\nexport function glsl1Uint(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/\\buint\\b/g, 'int');\n\tshaderSource = shaderSource.replace(/\\buvec2\\b/g, 'ivec2');\n\tshaderSource = shaderSource.replace(/\\buvec3\\b/g, 'ivec3');\n\tshaderSource = shaderSource.replace(/\\buvec4\\b/g, 'ivec4');\n\tshaderSource = shaderSource.replace(/\\buint\\(/g, 'int(');\n\tshaderSource = shaderSource.replace(/\\buvec2\\(/g, 'ivec2(');\n\tshaderSource = shaderSource.replace(/\\buvec3\\(/g, 'ivec3(');\n\tshaderSource = shaderSource.replace(/\\buvec4\\(/g, 'ivec4(');\n\treturn shaderSource;\n}\n\n/**\n * Replace all highp with mediump.\n * @private\n */\nexport function highpToMediump(shaderSource: string) {\n\treturn shaderSource.replace(/\\bhighp\\b/, 'mediump');\n}\n\n/**\n * Strip out any version numbers.\n * https://github.com/Jam3/glsl-version-regex\n * @private\n */\nexport function stripVersion(shaderSource: string) {\n\tconst origLength = shaderSource.length;\n\tshaderSource = shaderSource.replace(/^\\s*\\#version\\s+([0-9]+(\\s+(es)+)?)\\s*/, '');\n\tif (shaderSource.length !== origLength) {\n\t\tconsole.warn('GPUIO expects shader source that does not contain #version declarations, removing....');\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Strip out any precision declarations.\n * @private\n */\nexport function stripPrecision(shaderSource: string) {\n\tconst origLength = shaderSource.length;\n\tshaderSource = shaderSource.replace(/\\s*precision\\s+((highp)|(mediump)|(lowp))\\s+[a-zA-Z0-9]+\\s*;/g, '');\n\tif (shaderSource.length !== origLength) {\n\t\tconsole.warn('GPUIO expects shader source that does not contain precision declarations, removing....');\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Strip out comments from shader code.\n * @private\n */\nexport function stripComments(shaderSource: string) {\n\tshaderSource = shaderSource.replace(/\\s?\\/\\/.*\\n/g, ''); // Remove single-line comments.\n\t// ? puts this in lazy mode (match shortest strings).\n\tshaderSource = shaderSource.replace(/\\/\\*.*?\\*\\//gs, ''); /* Remove multi-line comments */\n\treturn shaderSource;\n}","import {\n\tisArray,\n\tisBoolean,\n\tisInteger,\n\tisNonNegativeInteger,\n\tisNumber,\n\tisString,\n} from './checks';\nimport {\n\tBOOL,\n\tBOOL_1D_UNIFORM,\n\tBOOL_2D_UNIFORM,\n\tBOOL_3D_UNIFORM,\n\tBOOL_4D_UNIFORM,\n\tBYTE,\n\tCompileTimeVars,\n\tDEFAULT_ERROR_CALLBACK,\n\tErrorCallback,\n\tFLOAT,\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tGLSL1,\n\tGLSL3,\n\tGLSLPrecision,\n\tGLSLVersion,\n\tGPULayerType,\n\tHALF_FLOAT,\n\tINT,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tPRECISION_HIGH_P,\n\tPRECISION_LOW_P,\n\tPRECISION_MEDIUM_P,\n\tSHORT,\n\tUINT,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n\tUniformType,\n\tUniformValue,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_INT,\n\tUNSIGNED_SHORT,\n\tWEBGL1,\n\tWEBGL2,\n} from './constants';\nimport {\n\tcheckFragmentShaderForFragColor,\n\tglsl1FragmentIn,\n\tglsl1FragmentOut,\n\tglsl1Sampler2D,\n\tglsl1Texture,\n\tglsl1Uint,\n\tglsl1VertexIn,\n\tglsl1VertexOut,\n\thighpToMediump,\n\tstripComments,\n\tstripPrecision,\n\tstripVersion,\n} from './regex';\nconst precisionSource = require('./glsl/common/precision.glsl');\n\n/**\n * Memoize results of more complex WebGL tests (that require allocations/deallocations).\n * @private\n */\nconst results = {\n\tsupportsWebGL2: undefined as undefined | boolean,\n\tsupportsHighpVertex: undefined as  undefined | boolean,\n\tsupportsHighpFragment: undefined as undefined | boolean,\n\tmediumpVertexPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n\tmediumpFragmentPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n}\n\n/**\n * Test whether a GPULayer type is a float type.\n * @private\n */\nexport function isFloatType(type: GPULayerType) {\n\treturn type === FLOAT || type === HALF_FLOAT;\n}\n\n/**\n * Test whether a GPULayer type is an unsigned int type.\n * @private\n */\n export function isUnsignedIntType(type: GPULayerType) {\n\treturn type === UNSIGNED_BYTE || type === UNSIGNED_SHORT || type === UNSIGNED_INT;\n}\n\n/**\n * Test whether a GPULayer type is a signed int type.\n * @private\n */\n export function isSignedIntType(type: GPULayerType) {\n\treturn type === BYTE || type === SHORT || type === INT;\n}\n\n/**\n * Test whether a GPULayer type is a int type.\n * @private\n */\n export function isIntType(type: GPULayerType) {\n\treturn isUnsignedIntType(type) || isSignedIntType(type);\n}\n\n/**\n * Enum for precision values.\n * See src/glsl/common/precision.glsl for more info.\n * @private\n */\nfunction intForPrecision(precision: GLSLPrecision) {\n\tif (precision === PRECISION_HIGH_P) return 2;\n\tif (precision === PRECISION_MEDIUM_P) return 1;\n\tif (precision === PRECISION_LOW_P) return 0;\n\tthrow new Error(`Unknown shader precision value: ${JSON.stringify(precision)}.`);\n}\n\n/**\n * Create a string to pass defines into shader.\n * @private\n */\nfunction convertDefinesToString(defines: CompileTimeVars) {\n\tlet definesSource = '';\n\tconst keys = Object.keys(defines);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\t// Check that define is passed in as a string.\n\t\tif (!isString(key) || !isString(defines[key])) {\n\t\t\tthrow new Error(`GPUProgram defines must be passed in as key value pairs that are both strings, got key value pair of type [${typeof key} : ${typeof defines[key]}] for key ${key}.`)\n\t\t}\n\t\tdefinesSource += `#define ${key} ${defines[key]}\\n`;\n\t}\n\treturn definesSource;\n}\n\n/**\n * Create header string for fragment and vertex shaders.\n * Export this for testing purposes.\n * @private\n */\nexport function makeShaderHeader(\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tdefines?: CompileTimeVars,\n) {\n\tconst versionSource = glslVersion === GLSL3 ? `#version ${GLSL3}\\n` : '';\n\tconst definesSource = defines ? convertDefinesToString(defines) : '';\n\tconst precisionDefinesSource = convertDefinesToString({\n\t\tGPUIO_INT_PRECISION: `${intForPrecision(intPrecision)}`,\n\t\tGPUIO_FLOAT_PRECISION: `${intForPrecision(floatPrecision)}`,\n\t});\n\treturn `${versionSource}${definesSource}${precisionDefinesSource}${precisionSource}`;\n}\n\n/**\n * Compile vertex or fragment shaders.\n * Fragment shaders may be compiled on the fly, so keep this efficient.\n * Copied from http://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html\n * @private\n */\nexport function compileShader(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tshaderSource: string,\n\tshaderType: number,\n\tprogramName: string,\n\terrorCallback: ErrorCallback,\n\tdefines?: CompileTimeVars,\n) {\n\t// Create the shader object\n\tconst shader = gl.createShader(shaderType);\n\tif (!shader) {\n\t\terrorCallback('Unable to init gl shader.');\n\t\treturn null;\n\t}\n\n\t// Set the shader source code.\n\tconst shaderHeader = makeShaderHeader(\n\t\tglslVersion,\n\t\tintPrecision,\n\t\tfloatPrecision,\n\t\tdefines,\n\t);\n\tgl.shaderSource(shader, `${shaderHeader}${shaderSource}`);\n\n\t// Compile the shader\n\tgl.compileShader(shader);\n\n\t// Check if it compiled\n\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\tif (!success) {\n\t\t// Something went wrong during compilation - print the error.\n\t\tconsole.log('shader source:', shaderSource);\n\t\terrorCallback(`Could not compile ${shaderType === gl.FRAGMENT_SHADER ? 'fragment' : 'vertex'} shader for program \"${programName}\": ${gl.getShaderInfoLog(shader)}.`);\n\t\treturn null;\n\t}\n\treturn shader;\n}\n\n/**\n * Init a WebGL program from vertex and fragment shaders.\n * GLPrograms may be inited on the fly, so keep this efficient.\n * @private\n */\nexport function initGLProgram(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tvertexShader: WebGLShader,\n\tfragmentShader: WebGLShader,\n\tname: string,\n\terrorCallback: ErrorCallback,\n) {\n\t// Create a program.\n\tconst program = gl.createProgram();\n\tif (!program) {\n\t\terrorCallback(`Unable to init GL program for GPUProgram \"${name}\", gl.createProgram() has failed.`);\n\t\treturn;\n\t}\n\t// Link the program.\n\tgl.attachShader(program, vertexShader);\n\tgl.attachShader(program, fragmentShader);\n\tgl.linkProgram(program);\n\t// Check if it linked.\n\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\tif (!success) {\n\t\t// Something went wrong with the link.\n\t\terrorCallback(`GPUProgram \"${name}\" failed to link: ${gl.getProgramInfoLog(program)}`);\n\t\treturn;\n\t}\n\treturn program;\n}\n\n/**\n * Returns whether a WebGL context is WebGL2.\n * This code is pulled from https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLCapabilities.js\n * @param gl - WebGL context to test.\n * @returns - true if WebGL2 context, else false.\n */\nexport function isWebGL2(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\t// @ts-ignore\n\treturn (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) || (typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext);\n}\n\n/**\n * Returns whether WebGL2 is supported by the current browser.\n * @returns - true if WebGL2 is supported, else false.\n*/\nexport function isWebGL2Supported() {\n\tif (results.supportsWebGL2 === undefined) {\n\t\tconst gl = document.createElement('canvas').getContext(WEBGL2);\n\t\t// GL context and canvas will be garbage collected.\n\t\tresults.supportsWebGL2 = isWebGL2(gl!); // Will return false in case of gl = null.\n\t}\n\treturn results.supportsWebGL2;\n}\n\n/**\n * Checks if the framebuffer is ready to read.\n * @private\n */\nexport function readyToRead(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\treturn gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n};\n\n/**\n * Detects whether highp is supported by this browser.\n * This is supposed to be relatively easy. You call gl.getShaderPrecisionFormat, you pass in the shader type,\n * VERTEX_SHADER or FRAGMENT_SHADER and you pass in one of LOW_FLOAT, MEDIUM_FLOAT, HIGH_FLOAT, LOW_INT, MEDIUM_INT, HIGH_INT,\n * and it returns the precision info.\n * Unfortunately Safari has a bug here which means checking this way will fail on iPhone, at least as of April 2020.\n * https://webglfundamentals.org/webgl/webgl-precision-lowp-mediump-highp.html\n * @private\n */\nfunction isHighpSupported(vsSource: string, fsSource: string) {\n\tconst gl = document.createElement('canvas').getContext(WEBGL1);\n\tif (!gl) {\n\t\tthrow new Error(`Unable to init webgl context.`);\n\t}\n\ttry {\n\t\tconst vs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tvsSource,\n\t\t\tgl.VERTEX_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst fs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tfsSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst program = initGLProgram(gl, vs, fs, 'highpFragmentTest', DEFAULT_ERROR_CALLBACK)!;\n\t\t// Deallocate everything.\n\t\tgl.deleteProgram(program);\n\t\tgl.deleteShader(vs);\n\t\tgl.deleteShader(fs);\n\t\t// GL context and canvas will be garbage collected.\n\t} catch {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/**\n * Detects whether highp precision is supported in vertex shaders in the current browser.\n * @returns - true is highp is supported in vertex shaders, else false.\n */\nexport function isHighpSupportedInVertexShader() {\n\tif (results.supportsHighpVertex === undefined) {\n\t\tconst vertexSupport = isHighpSupported(\n\t\t\t'void main() { highp float test = 0.524; gl_Position = vec4(test, test, 0, 1); }',\n\t\t\t'void main() { gl_FragColor = vec4(0); }',\n\t\t);\n\t\tresults.supportsHighpVertex = vertexSupport;\n\t}\n\treturn results.supportsHighpVertex;\n}\n\n/**\n * Detects whether highp precision is supported in fragment shaders in the current browser.\n * @returns - true is highp is supported in fragment shaders, else false.\n */\nexport function isHighpSupportedInFragmentShader() {\n\tif (results.supportsHighpFragment === undefined) {\n\t\tconst fragmentSupport = isHighpSupported(\n\t\t\t'void main() { gl_Position = vec4(0.5, 0.5, 0, 1); }',\n\t\t\t'void main() { highp float test = 1.35; gl_FragColor = vec4(test); }',\n\t\t);\n\t\tresults.supportsHighpFragment = fragmentSupport;\n\t}\n\treturn results.supportsHighpFragment;\n}\n\n/**\n * Helper function to perform a 1px math calculation in order to determine WebGL capabilities.\n * From https://webglfundamentals.org/\n * @private\n */\nfunction test1PxCalc(\n\tname: string,\n\tgl: WebGL2RenderingContext | WebGLRenderingContext,\n\tfs: WebGLShader,\n\tvs: WebGLShader,\n\taddUniforms: (program: WebGLProgram) => void,\n) {\n\tconst program = initGLProgram(gl, vs, fs, name, DEFAULT_ERROR_CALLBACK);\n\tif (!program) {\n\t\tthrow new Error(`Unable to init WebGLProgram.`);\n\t}\n\tconst positionLocation = gl.getAttribLocation(program, 'position');\n\n\t// create a buffer and setup an attribute\n\t// We wouldn't need this except for a bug in Safari.\n\t// See https://webglfundamentals.org/webgl/lessons/webgl-smallest-programs.html\n\t// and https://bugs.webkit.org/show_bug.cgi?id=197592\n\tconst buffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ARRAY_BUFFER, 1, gl.STATIC_DRAW);\n\tgl.enableVertexAttribArray(positionLocation);\n\tgl.vertexAttribPointer(\n\t\tpositionLocation,\n\t\t1,                // pull 1 value per vertex shader iteration from buffer\n\t\tgl.UNSIGNED_BYTE, // type of data in buffer,\n\t\tfalse,            // don't normalize\n\t\t0,                // bytes to advance per iteration (0 = compute from size and type)\n\t\t0,                // offset into buffer\n\t);\n\n\tgl.viewport(0, 0, 1, 1);\n\tgl.useProgram(program);\n\n\taddUniforms(program);\n\t\n\tgl.drawArrays(\n\t\tgl.POINTS,\n\t\t0, // offset\n\t\t1, // number of vertices to process\n\t);\n\n\tconst pixel = new Uint8Array(4);\n\tgl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n\n\t// Deallocate everything.\n\tgl.deleteProgram(program);\n\tgl.deleteShader(vs);\n\tgl.deleteShader(fs);\n\tgl.deleteBuffer(buffer);\n\t// GL context and canvas will be garbage collected.\n\n\treturn pixel;\n}\n\n/**\n * Returns the actual precision of mediump inside vertex shader.\n * From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n * @returns - Vertex shader mediump precision.\n */\nexport function getVertexShaderMediumpPrecision() {\n\tif (results.mediumpVertexPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\t/** @type {HTMLCanvasElement} */\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tuniform mediump vec3 v;\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t\tv_result = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_FragColor = v_result;\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionVertexTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpVertexPrecision = mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpVertexPrecision;\n}\n\n/**\n * Returns the actual precision of mediump inside fragment shader.\n * From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n * @returns - Fragment shader supported mediump precision.\n */\nexport function getFragmentShaderMediumpPrecision() {\n\tif (results.mediumpFragmentPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P,`\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tuniform mediump vec3 v;\n\tvoid main() {\n\t\tgl_FragColor = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionFragmentTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpFragmentPrecision =  mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpFragmentPrecision;\n}\n\n/**\n * Returns whether a number is a power of 2.\n * @private\n */\nexport function isPowerOf2(value: number) {\n\t// Use bitwise operation to evaluate this.\n\treturn value > 0 && (value & (value - 1)) == 0;\n}\n\n/**\n * Returns a Float32 array with sequential values [0, 1, 2, 3...].\n * @private\n */\nexport function initSequentialFloatArray(length: number) {\n\tconst array = new Float32Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tarray[i] = i;\n\t}\n\treturn array;\n}\n\n/**\n * Strip out any unnecessary elements in shader source, e.g. #version and precision declarations.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction preprocessShader(shaderSource: string) {\n\t// Strip out any version numbers.\n\tshaderSource = stripVersion(shaderSource);\n\t// Strip out any precision declarations.\n\tshaderSource = stripPrecision(shaderSource);\n\t// Strip out comments.\n\tshaderSource = stripComments(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Common code for converting vertex/fragment shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction convertShaderToGLSL1(shaderSource: string) {\n\t// TODO: there are probably more to add here.\n\t// No isampler2D or usampler2D.\n\tshaderSource = glsl1Sampler2D(shaderSource);\n\t// Unsigned int types are not supported, use int types instead.\n\tshaderSource = glsl1Uint(shaderSource);\n\t// Convert texture to texture2D.\n\tshaderSource = glsl1Texture(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction convertVertexShaderToGLSL1(shaderSource: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to attribute.\n\tshaderSource = glsl1VertexIn(shaderSource);\n\t// Convert out to varying.\n\tshaderSource = glsl1VertexOut(shaderSource);\n\treturn shaderSource;\n}\n\n/**\n * Convert fragment shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nfunction convertFragmentShaderToGLSL1(shaderSource: string, name: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to varying.\n\tshaderSource = glsl1FragmentIn(shaderSource);\n\t// Convert out_fragColor to gl_FragColor.\n\tshaderSource = glsl1FragmentOut(shaderSource, name);\n\treturn shaderSource;\n}\n\n/**\n * Preprocess vertex shader for glslVersion and browser capabilities.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * @private\n */\nexport function preprocessVertexShader(shaderSource: string, glslVersion: GLSLVersion) {\n\tshaderSource = preprocessShader(shaderSource);\n\t// Check if highp supported in vertex shaders.\n\tif (!isHighpSupportedInVertexShader()) {\n\t\tconsole.warn('highp not supported in vertex shader, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = highpToMediump(shaderSource);\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertVertexShaderToGLSL1(shaderSource);\n}\n\n\n\n/**\n * Preprocess fragment shader for glslVersion and browser capabilities.\n * This is called once on initialization of GPUProgram, so doesn't need to be extremely efficient.\n * @private\n */\nexport function preprocessFragmentShader(shaderSource: string, glslVersion: GLSLVersion, name: string) {\n\tshaderSource = preprocessShader(shaderSource);\n\tcheckFragmentShaderForFragColor(shaderSource, glslVersion, name);\n\t// Check if highp supported in fragment shaders.\n\tif (!isHighpSupportedInFragmentShader()) {\n\t\tconsole.warn('highp not supported in fragment shader, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = highpToMediump(shaderSource);\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertFragmentShaderToGLSL1(shaderSource, name);\n}\n\n/**\n * Check uniforms and return internal WebGL type (e.g. [1234][u]?[if])\n * @private\n */\nexport function uniformInternalTypeForValue(\n\tvalue: UniformValue,\n\ttype: UniformType,\n\tuniformName: string,\n\tprogramName: string,\n) {\n\tif (type === FLOAT) {\n\t\t// Check that we are dealing with a number.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNumber((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNumber(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn FLOAT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn FLOAT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn FLOAT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn FLOAT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t} else if (type === INT) {\n\t\t// Check that we are dealing with an int.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn INT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn INT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn INT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn INT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t} else if (type === UINT) {\n\t\t// Check that we are dealing with a uint.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNonNegativeInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNonNegativeInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn UINT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn UINT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn UINT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn UINT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t} else if (type === BOOL) {\n\t\t// Check that we are dealing with a boolean.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as boolean[]).length; i++) {\n\t\t\t\tif (!isBoolean((value as boolean[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected bool or bool[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isBoolean(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected bool or bool[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn BOOL_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn BOOL_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn BOOL_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn BOOL_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected boolean.`);\n\t} else {\n\t\tthrow new Error(`Invalid type \"${type}\" for uniform \"${uniformName}\" in program \"${programName}\", expected ${FLOAT} or ${INT} or ${BOOL}.`);\n\t}\n}","module.exports = \"#if (GPUIO_INT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp int;\\n#if (__VERSION__ == 300)\\nprecision highp isampler2D;precision highp usampler2D;\\n#endif\\n#else\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#endif\\n#if (GPUIO_INT_PRECISION == 1)\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#if (GPUIO_INT_PRECISION == 0)\\nprecision lowp int;\\n#if (__VERSION__ == 300)\\nprecision lowp isampler2D;precision lowp usampler2D;\\n#endif\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;precision highp sampler2D;\\n#else\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 1)\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#if (GPUIO_FLOAT_PRECISION == 0)\\nprecision lowp float;precision lowp sampler2D;\\n#endif\\n\"","module.exports = \"in vec2 v_UV;\\n#ifdef GPUIO_FLOAT\\nuniform sampler2D u_state;\\n#endif\\n#ifdef GPUIO_INT\\nuniform isampler2D u_state;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform usampler2D u_state;\\n#endif\\n#ifdef GPUIO_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=texture(u_state,v_UV);}\"","module.exports = \"#ifdef GPUIO_FLOAT\\nuniform vec4 u_value;\\n#endif\\n#ifdef GPUIO_INT\\nuniform ivec4 u_value;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform uvec4 u_value;\\n#endif\\n#ifdef GPUIO_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef GPUIO_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=u_value;}\"","module.exports = \"in vec2 v_UV;uniform vec3 u_color;uniform float u_scale;\\n#ifdef GPUIO_FLOAT\\nuniform sampler2D u_internal_data;\\n#endif\\n#ifdef GPUIO_INT\\nuniform isampler2D u_internal_data;\\n#endif\\n#ifdef GPUIO_UINT\\nuniform usampler2D u_internal_data;\\n#endif\\nout vec4 out_fragColor;void main(){uvec4 value=texture(u_internal_data,v_UV);float mag=length(value);out_fragColor=vec4(mag*u_scale*u_color,1);}\"","module.exports = \"in vec2 v_lineWrapping;uniform vec4 u_value;out vec4 out_fragColor;void main(){if((v_lineWrapping.x!=0.&&v_lineWrapping.x!=1.)||(v_lineWrapping.y!=0.&&v_lineWrapping.y!=1.)){discard;return;}out_fragColor=vec4(u_value);}\"","module.exports = \"in vec2 a_internal_position;\\n#ifdef GPUIO_UV_ATTRIBUTE\\nin vec2 a_internal_uv;\\n#endif\\n#ifdef GPUIO_NORMAL_ATTRIBUTE\\nin vec2 a_internal_normal;\\n#endif\\nuniform vec2 u_internal_scale;uniform vec2 u_internal_translation;out vec2 v_UV;out vec2 v_UV_local;\\n#ifdef GPUIO_NORMAL_ATTRIBUTE\\nout vec2 v_normal;\\n#endif\\nvoid main(){\\n#ifdef GPUIO_UV_ATTRIBUTE\\nv_UV_local=a_internal_uv;\\n#else\\nv_UV_local=a_internal_position;\\n#endif\\n#ifdef GPUIO_NORMAL_ATTRIBUTE\\nv_normal=a_internal_normal;\\n#endif\\nvec2 position=u_internal_scale*a_internal_position+u_internal_translation;v_UV=0.5*(position+1.);gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_positions;uniform vec2 u_internal_positionsDimensions;uniform vec2 u_internal_scale;uniform bool u_internal_positionWithAccumulation;uniform bool u_internal_wrapX;uniform bool u_internal_wrapY;out vec2 v_UV;out vec2 v_lineWrapping;out float v_index;void main(){vec2 particleUV=vec2(modI(a_internal_index,u_internal_positionsDimensions.x),floor(floor(a_internal_index+0.5)/u_internal_positionsDimensions.x))/u_internal_positionsDimensions;vec4 positionData=texture(u_internal_positions,particleUV);vec2 positionAbsolute=positionData.rg;if(u_internal_positionWithAccumulation)positionAbsolute+=positionData.ba;v_UV=positionAbsolute*u_internal_scale;v_lineWrapping=vec2(0.);if(u_internal_wrapX){if(v_UV.x<0.){v_UV.x+=1.;v_lineWrapping.x=1.;}else if(v_UV.x>1.){v_UV.x-=1.;v_lineWrapping.x=1.;}}if(u_internal_wrapY){if(v_UV.y<0.){v_UV.y+=1.;v_lineWrapping.y=1.;}else if(v_UV.y>1.){v_UV.y-=1.;v_lineWrapping.y=1.;}}vec2 position=v_UV*2.-1.;v_index=a_internal_index;gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_positions;uniform vec2 u_internal_positionsDimensions;uniform vec2 u_internal_scale;uniform float u_internal_pointSize;uniform bool u_internal_positionWithAccumulation;uniform bool u_internal_wrapX;uniform bool u_internal_wrapY;out vec2 v_UV;flat out int v_index;void main(){vec2 particleUV=vec2(modI(a_internal_index,u_internal_positionsDimensions.x),floor(floor(a_internal_index+0.5)/u_internal_positionsDimensions.x))/u_internal_positionsDimensions;vec4 positionData=texture(u_internal_positions,particleUV);vec2 positionAbsolute=positionData.rg;if(u_internal_positionWithAccumulation)positionAbsolute+=positionData.ba;v_UV=positionAbsolute*u_internal_scale;if(u_internal_wrapX){if(v_UV.x<0.)v_UV.x+=1.;if(v_UV.x>1.)v_UV.x-=1.;}if(u_internal_wrapY){if(v_UV.y<0.)v_UV.y+=1.;if(v_UV.y>1.)v_UV.y-=1.;}vec2 position=v_UV*2.-1.;v_index=int(a_internal_index);gl_PointSize=u_internal_pointSize;gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_vectors;uniform vec2 u_internal_dimensions;uniform vec2 u_internal_scale;out vec2 v_UV;out float v_index;void main(){float index=floor((a_internal_index+0.5)/2.);v_UV=vec2(modI(index,u_internal_dimensions.x),floor(floor(index+0.5)/u_internal_dimensions.x))/u_internal_dimensions;if(modI(a_internal_index,2.)>0.){vec2 vectorData=texture(u_internal_vectors,v_UV).xy;v_UV+=vectorData*u_internal_scale;}vec2 position=v_UV*2.-1.;v_index=a_internal_index;gl_Position=vec4(position,0,1);}\"","module.exports = \"in vec2 a_internal_position;uniform float u_internal_halfThickness;uniform vec2 u_internal_scale;uniform float u_internal_length;uniform float u_internal_rotation;uniform vec2 u_internal_translation;out vec2 v_UV_local;out vec2 v_UV;mat2 rotate2d(float _angle){return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));}void main(){v_UV_local=0.5*(a_internal_position+1.);vec2 position=a_internal_position;position*=u_internal_halfThickness;if(position.x<0.){position.x-=u_internal_length/2.;v_UV_local.x=0.;}else if(position.x>0.){position.x+=u_internal_length/2.;v_UV_local.x=1.;}position=u_internal_scale*(rotate2d(-u_internal_rotation)*position)+u_internal_translation;v_UV=0.5*(position+1.);gl_Position=vec4(position,0,1);}\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"sourceRoot":""}
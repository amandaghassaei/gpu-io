{"version":3,"sources":["webpack://WebGLCompute/webpack/universalModuleDefinition","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/lib.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/hfround.js","webpack://WebGLCompute/./node_modules/lodash-es/_root.js","webpack://WebGLCompute/./node_modules/lodash-es/_Symbol.js","webpack://WebGLCompute/./node_modules/lodash-es/_getRawTag.js","webpack://WebGLCompute/./node_modules/lodash-es/_objectToString.js","webpack://WebGLCompute/./node_modules/lodash-es/_baseGetTag.js","webpack://WebGLCompute/./node_modules/lodash-es/isObject.js","webpack://WebGLCompute/./node_modules/lodash-es/isFunction.js","webpack://WebGLCompute/./node_modules/lodash-es/_coreJsData.js","webpack://WebGLCompute/./node_modules/lodash-es/_isMasked.js","webpack://WebGLCompute/./node_modules/lodash-es/_toSource.js","webpack://WebGLCompute/./node_modules/lodash-es/_baseIsNative.js","webpack://WebGLCompute/./node_modules/lodash-es/_getValue.js","webpack://WebGLCompute/./node_modules/lodash-es/_getNative.js","webpack://WebGLCompute/./node_modules/lodash-es/_nativeCreate.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashClear.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashDelete.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashGet.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashHas.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashSet.js","webpack://WebGLCompute/./node_modules/lodash-es/_Hash.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheClear.js","webpack://WebGLCompute/./node_modules/lodash-es/eq.js","webpack://WebGLCompute/./node_modules/lodash-es/_assocIndexOf.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheDelete.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheGet.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheHas.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheSet.js","webpack://WebGLCompute/./node_modules/lodash-es/_ListCache.js","webpack://WebGLCompute/./node_modules/lodash-es/_Map.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheClear.js","webpack://WebGLCompute/./node_modules/lodash-es/_isKeyable.js","webpack://WebGLCompute/./node_modules/lodash-es/_getMapData.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheDelete.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheGet.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheHas.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheSet.js","webpack://WebGLCompute/./node_modules/lodash-es/_MapCache.js","webpack://WebGLCompute/./node_modules/lodash-es/memoize.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/bug.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/spec.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/is.js","webpack://WebGLCompute/./node_modules/lodash-es/isObjectLike.js","webpack://WebGLCompute/./node_modules/lodash-es/_baseIsArrayBuffer.js","webpack://WebGLCompute/./node_modules/lodash-es/_baseUnary.js","webpack://WebGLCompute/./node_modules/lodash-es/isArrayBuffer.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/Float16Array.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/private.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/dataView.js","webpack://WebGLCompute/./node_modules/changedpi/dist/index.js","webpack://WebGLCompute/./node_modules/file-saver/dist/FileSaver.min.js","webpack://WebGLCompute/./node_modules/lodash-es/_freeGlobal.js","webpack://WebGLCompute/./node_modules/lodash-es/_nodeUtil.js","webpack://WebGLCompute/./src/GPUComposer.ts","webpack://WebGLCompute/./src/GPULayer.ts","webpack://WebGLCompute/./src/GPULayerHelpers.ts","webpack://WebGLCompute/./src/GPUProgram.ts","webpack://WebGLCompute/./src/Vector4.ts","webpack://WebGLCompute/./src/checks.ts","webpack://WebGLCompute/./src/constants.ts","webpack://WebGLCompute/./src/extensions.ts","webpack://WebGLCompute/./src/index.ts","webpack://WebGLCompute/./src/utils.ts","webpack://WebGLCompute/./src/glsl/common/precision.glsl","webpack://WebGLCompute/./src/glsl/frag/CopyFragShader.glsl","webpack://WebGLCompute/./src/glsl/frag/SetValueFragShader.glsl","webpack://WebGLCompute/./src/glsl/frag/VectorMagnitudeFragShader.glsl","webpack://WebGLCompute/./src/glsl/frag/WrappedLineColorFragShader.glsl","webpack://WebGLCompute/./src/glsl/vert/DefaultVertShader.glsl","webpack://WebGLCompute/./src/glsl/vert/GPULayerLinesVertShader.glsl","webpack://WebGLCompute/./src/glsl/vert/GPULayerPointsVertShader.glsl","webpack://WebGLCompute/./src/glsl/vert/GPULayerVectorFieldVertShader.glsl","webpack://WebGLCompute/./src/glsl/vert/SegmentVertShader.glsl","webpack://WebGLCompute/webpack/bootstrap","webpack://WebGLCompute/webpack/runtime/define property getters","webpack://WebGLCompute/webpack/runtime/global","webpack://WebGLCompute/webpack/runtime/harmony module decorator","webpack://WebGLCompute/webpack/runtime/hasOwnProperty shorthand","webpack://WebGLCompute/webpack/runtime/make namespace object","webpack://WebGLCompute/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","buffer","ArrayBuffer","floatView","Float32Array","uint32View","Uint32Array","baseTable","shiftTable","i","e","roundToFloat16Bits","num","f","mantissaTable","exponentTable","offsetTable","m","convertToNumber","float16bits","hfround","Number","isFinite","freeSelf","Object","Function","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","undefined","value","isOwn","call","tag","unmasked","result","type","uid","maskSrcKey","exec","func","funcToString","reIsHostCtor","reIsNative","RegExp","replace","test","object","key","this","__data__","size","has","data","Hash","entries","index","length","clear","entry","set","get","other","array","splice","Array","pop","push","ListCache","map","MapCache","memoize","resolver","TypeError","memoized","args","arguments","apply","cache","Cache","isTypedArrayIndexedPropertyWritable","getOwnPropertyDescriptor","Uint8Array","writable","ToInteger","target","number","isNaN","Math","trunc","defaultCompareFunction","x","y","isNaN_x","isNaN_y","isPlusZero_x","isPlusZero_y","is","isDataView","view","DataView","isStringNumberKey","nodeIsArrayBuffer","_","wm","WeakMap","obj","create","createPrivateStorage","isFloat16Array","Float16Array","assertFloat16Array","copyToArray","applyHandler","thisArg","defaultFloat16ArrayMethods","Reflect","handler","wrapper","ret","proxy","Proxy","isFrozen","getPrototypeOf","setPrototypeOf","defineProperty","descriptor","deleteProperty","isExtensible","preventExtensions","ownKeys","Uint16Array","input","byteOffset","super","arrayLike","Symbol","iterator","src","opts","from","mapFunc","val","keys","values","callback","l","start","offset","reverse","fill","copyWithin","compareFunction","_convertToNumber","sort","slice","subarray","element","join","toLocaleString","toStringTag","Float16Array$prototype","WeakSet","add","getFloat16","dataView","getUint16","setFloat16","setUint16","calcCrc","buf","c","pngDataTable","crcTable","Int32Array","n","k","createPngDataTable","changeDpiBlob","blob","dpi","headerChunk","Promise","resolve","reject","fileReader","FileReader","onload","dataArray","tail","changedArray","changeDpiOnArray","Blob","readAsArrayBuffer","changeDpiDataUrl","base64Image","dataSplitted","split","format","body","headerLength","overwritepHYs","indexOf","PNG","b64Index","b64index","b64PhysSignature1","b64PhysSignature2","b64PhysSignature3","detectPhysChunkFromDataUrl","ceil","JPEG","stringHeader","substring","restOfData","headerBytes","atob","charCodeAt","finalArray","base64Header","btoa","String","fromCharCode","arr","isArray","arr2","_toConsumableArray","_P","_H","_Y","_S","physChunk","crc","crcChunk","startingIndex","searchStartOfPhys","chunkLength","finalHeader","b","a","autoBom","console","warn","d","XMLHttpRequest","open","responseType","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","global","navigator","userAgent","saveAs","HTMLAnchorElement","h","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","innerText","HTMLElement","safari","onloadend","readAsDataURL","freeExports","nodeType","freeModule","freeProcess","types","require","binding","defaultVertexShaderSource","params","errorState","_circlePositionsBuffer","copyPrograms","setValuePrograms","vectorMagnitudePrograms","_vertexShaders","DEFAULT_PROGRAM_NAME","DEFAULT_W_UV_PROGRAM_NAME","defines","DEFAULT_W_NORMAL_PROGRAM_NAME","DEFAULT_W_UV_NORMAL_PROGRAM_NAME","SEGMENT_PROGRAM_NAME","DATA_LAYER_POINTS_PROGRAM_NAME","DATA_LAYER_VECTOR_FIELD_PROGRAM_NAME","DATA_LAYER_LINES_PROGRAM_NAME","verboseLogging","validKeys","forEach","Error","_errorCallback","message","errorCallback","DEFAULT_ERROR_CALLBACK","canvas","gl","context","contextID","getContext","contextOptions","WEBGL2","WEBGL1","EXPERIMENTAL_WEBGL","isWebGL2","log","glslVersion","GLSL3","GLSL1","intPrecision","PRECISION_HIGH_P","floatPrecision","disable","DEPTH_TEST","pixelStorei","UNPACK_ALIGNMENT","bindBuffer","ARRAY_BUFFER","onResize","maxNumTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","initWithThreeRenderer","renderer","composer","GPUComposer","capabilities","precision","domElement","glslKeyForType","FLOAT","HALF_FLOAT","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","UINT","BYTE","SHORT","INT","_setValueProgramForType","program","GPUProgram","fragmentShader","uniforms","copyProgramForType","_wrappedLineColorProgram","vectorMagnitudeProgramForType","_quadPositionsBuffer","fsQuadPositions","initVertexBuffer","_boundaryPositionsBuffer","boundaryPositions","getCirclePositionsBuffer","numSegments","unitCirclePoints","cos","PI","sin","circlePositions","createBuffer","bufferData","STATIC_DRAW","_cloneGPULayer","gpuLayer","dimensions","width","height","getValues","clone","GPULayer","numComponents","filter","wrapS","wrapT","numBuffers","step","getStateAtIndex","bufferIndex","output","currentState","initTexture","url","isString","NEAREST","isValidFilter","validFilters","CLAMP_TO_EDGE","isValidWrap","validWraps","RGBA","isValidTextureFormat","validTextureFormats","isValidTextureType","validTextureTypes","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","srcFormat","srcType","pixel","texImage2D","image","Image","isPowerOf2","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","onLoad","clientWidth","clientHeight","drawSetup","fullscreenRender","inputTextures","constructor","WebGLTexture","layer","setOutputLayer","useProgram","activeTexture","TEXTURE0","setBlendMode","shouldBlendAlpha","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","addLayerToInputs","_inputLayers","previous","passThroughLayerDataFromInputToOutput","state","copyProgram","internalType","_bindOutputBufferForWrite","_usingTextureOverrideForCurrentBuffer","viewport","bindFramebuffer","FRAMEBUFFER","setVertexAttribute","programName","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","setPositionAttribute","setIndexAttribute","setUVAttribute","quadPositionsBuffer","glProgram","_defaultProgram","_setVertexUniform","drawArrays","TRIANGLE_STRIP","stepBoundary","boundaryPositionsBuffer","onePx","singleEdge","LINES","LINE_LOOP","stepNonBoundary","stepCircle","position","radius","DEFAULT_CIRCLE_NUM_SEGMENTS","TRIANGLE_FAN","stepSegment","position1","position2","thickness","_segmentProgram","diffX","diffY","angle","atan2","centerX","centerY","sqrt","numCapSegments","endCaps","stepPolyline","vertices","positions","closeLoop","halfThickness","numPositions","uvs","includeUVs","normals","includeNormals","s1","s2","n1","n2","n3","v1","v2","length1","u","v3","v4","length2","cross","abs","length3","acos","_defaultProgramWithUVNormal","_defaultProgramWithUV","_defaultProgramWithNormal","stepTriangleStrip","count","stepLines","indices","LINE_STRIP","drawLayerAsPoints","pointIndexArray","color","setUniform","_GPULayerPointsProgram","pointSize","positionLayerDimensions","wrapX","wrapY","pointIndexBuffer","initSequentialFloatArray","POINTS","drawLayerAsLines","wrappedLineColorProgram","_GPULayerLinesProgram","indexedLinesIndexBuffer","floatArray","drawLayerAsVectorField","vectorFieldIndexArray","_GPULayerVectorFieldProgram","vectorScale","vectorSpacing","spacedDimensions","floor","vectorFieldIndexBuffer","drawLayerMagnitude","scale","attachGPULayerToThreeTexture","offsetTextureProperties","properties","__webglTexture","__webglInit","resetThreeState","getViewport","utils","Vector4","setRenderTarget","resetState","dispose","vertexShader","shader","deleteShader","_bufferIndex","buffers","isPositiveInteger","calcGPULayerSize","_length","_width","_height","defaultFilter","LINEAR","isValidDataType","validDataTypes","getGPULayerInternalType","getGLTextureParameters","glFormat","glInternalFormat","glType","glNumChannels","internalFilter","getGPULayerInternalFilter","glFilter","internalWrapS","getGPULayerInternalWrap","wrap","glWrapS","internalWrapT","glWrapT","clearValue","initBuffers","saveCurrentStateToGPULayer","textureOverrides","_setCurrentStateTexture","framebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","validateDataArray","shouldTypeCast","Int8Array","Int16Array","validArrayTypes","imageSize","incorrectSize","handleFloat16","validatedArray","initArrayForType","_len","getError","createFramebuffer","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","incrementBufferIndex","_bindOutputBuffer","setFromArray","applyToAllBuffers","endIndex","resize","JSON","stringify","destroyBuffers","_clearValue","isValidClearValue","isNumber","startIndex","fillLength","float16View","RGBA_INTEGER","readyToRead","readPixels","OUTPUT_LENGTH","handleFloat16Conversion","index1","index2","savePNG","filename","multiplier","imageData","getImageData","indexFlipped","putImageData","toBlob","then","deleteTexture","deleteFramebuffer","results","framebufferWriteSupport","RED","RG","RGB","RED_INTEGER","RG_INTEGER","RGB_INTEGER","R16F","RG16F","RGB16F","RGBA16F","R32F","RG32F","RGB32F","RGBA32F","R8UI","RG8UI","RGB8UI","RGBA8UI","R8I","RG8I","RGB8I","RGBA8I","R16I","RG16I","RGB16I","RGBA16I","R16UI","RG16UI","RGB16UI","RGBA16UI","R32I","RG32I","RGB32I","RGBA32I","R32UI","RG32UI","RGB32UI","RGBA32UI","getExtension","OES_TEXTURE_HALF_FLOAT","HALF_FLOAT_OES","missingParams","testFramebufferWrite","validStatus","halfFloatsAsFloats","exp","remainder","pow","OES_TEXTURE_HAlF_FLOAT_LINEAR","OES_TEXTURE_FLOAT_LINEAR","shouldCastIntTypeAsFloat","OES_TEXTURE_FLOAT","EXT_COLOR_BUFFER_FLOAT","programs","isObject","fragmentShaderSource","preprocessFragmentShader","recompile","definesNeedUpdate","compileShader","FRAGMENT_SHADER","getProgramWithName","vertexShaderSource","preprocessVertexShader","VERTEX_SHADER","initGLProgram","uniformNames","uniformName","uniform","setProgramUniform","_location","getUniformLocation","FLOAT_1D_UNIFORM","uniform1f","FLOAT_2D_UNIFORM","uniform2fv","FLOAT_3D_UNIFORM","uniform3fv","FLOAT_4D_UNIFORM","uniform4fv","INT_1D_UNIFORM","isBoolean","uniform1i","INT_2D_UNIFORM","uniform2iv","INT_3D_UNIFORM","uniform3iv","INT_4D_UNIFORM","uniform4iv","UINT_1D_UNIFORM","uniform1ui","UINT_2D_UNIFORM","uniform2uiv","UINT_3D_UNIFORM","uniform3uiv","UINT_4D_UNIFORM","uniform4uiv","currentType","uniformInternalTypeForValue","isChanged","find","deleteProgram","z","w","copy","v","isNumberOfType","isInteger","isNonNegativeInteger","BOOL","REPEAT","PRECISION_LOW_P","PRECISION_MEDIUM_P","msg","extensions","WEBGL_DEPTH_TEXTURE","extensionName","optional","extension","isWebGL2Supported","isHighpSupportedInVertexShader","isHighpSupportedInFragmentShader","getVertexShaderMediumpPrecision","getFragmentShaderMediumpPrecision","_testing","makeShaderHeader","checks","precisionSource","supportsWebGL2","supportsHighpVertex","supportsHighpFragment","mediumpVertexPrecision","mediumpFragmentPrecision","intForPrecision","convertDefinesToString","definesSource","WEBGLCOMPUTE_INT_PRECISION","WEBGLCOMPUTE_FLOAT_PRECISION","shaderSource","shaderType","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","isHighpSupported","vsSource","fsSource","vs","fs","vertexSupport","fragmentSupport","test1PxCalc","addUniforms","positionLocation","deleteBuffer","preprocessShader","origSrc","convertShaderToGLSL1","WebGL2RenderingContext","WebGL2ComputeRenderingContext","expected","vLocation","uniform3f","mediumpPrecision","convertVertexShaderToGLSL1","convertFragmentShaderToGLSL1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","definition","o","enumerable","globalThis","hmd","children","prop","r"],"mappings":"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","file":"webgl-compute.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebGLCompute\"] = factory();\n\telse\n\t\troot[\"WebGLCompute\"] = factory();\n})(self, function() {\nreturn ","// algorithm: ftp://ftp.fox-toolkit.org/pub/fasthalffloatconversion.pdf\n\nconst buffer = new ArrayBuffer(4);\nconst floatView = new Float32Array(buffer);\nconst uint32View = new Uint32Array(buffer);\n\n\nconst baseTable = new Uint32Array(512);\nconst shiftTable = new Uint32Array(512);\n\nfor(let i = 0; i < 256; ++i) {\n    const e = i - 127;\n\n    // very small number (0, -0)\n    if (e < -27) {\n        baseTable[i | 0x000] = 0x0000;\n        baseTable[i | 0x100] = 0x8000;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // small number (denorm)\n    } else if (e < -14) {\n        baseTable[i | 0x000] =  0x0400 >> (-e - 14);\n        baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n        shiftTable[i | 0x000] = -e - 1;\n        shiftTable[i | 0x100] = -e - 1;\n\n    // normal number\n    } else if (e <= 15) {\n        baseTable[i | 0x000] =  (e + 15) << 10;\n        baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n\n    // large number (Infinity, -Infinity)\n    } else if (e < 128) {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // stay (NaN, Infinity, -Infinity)\n    } else {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n    }\n}\n\n/**\n * round a number to a half float number bits.\n * @param {number} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n    floatView[0] = num;\n\n    const f = uint32View[0];\n    const e = (f >> 23) & 0x1ff;\n    return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\n\nconst mantissaTable = new Uint32Array(2048);\nconst exponentTable = new Uint32Array(64);\nconst offsetTable = new Uint32Array(64);\n\nmantissaTable[0] = 0;\nfor(let i = 1; i < 1024; ++i) {\n    let m = i << 13;    // zero pad mantissa bits\n    let e = 0;          // zero exponent\n\n    // normalized\n    while((m & 0x00800000) === 0) {\n        e -= 0x00800000;    // decrement exponent\n        m <<= 1;\n    }\n\n    m &= ~0x00800000;   // clear leading 1 bit\n    e += 0x38800000;    // adjust bias\n\n    mantissaTable[i] = m | e;\n}\nfor(let i = 1024; i < 2048; ++i) {\n    mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nexponentTable[0] = 0;\nfor(let i = 1; i < 31; ++i) {\n    exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor(let i = 33; i < 63; ++i) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\noffsetTable[0] = 0;\nfor(let i = 1; i < 64; ++i) {\n    if (i === 32) {\n        offsetTable[i] = 0;\n    } else {\n        offsetTable[i] = 1024;\n    }\n}\n\n/**\n * convert a half float number bits to a number.\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n    const m = float16bits >> 10;\n    uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n    return floatView[0];\n}\n","import { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns the nearest half precision float representation of a number.\n * @param {number} num\n * @returns {number}\n */\nexport default function hfround(num) {\n    num = Number(num);\n\n    // for optimization\n    if (!Number.isFinite(num) || num === 0) {\n        return num;\n    }\n\n    const x16 = roundToFloat16Bits(num);\n    return convertToNumber(x16);\n}\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","/**\n * JavaScriptCore <= 12 bug\n * @see https://bugs.webkit.org/show_bug.cgi?id=171606\n */\nexport const isTypedArrayIndexedPropertyWritable = Object.getOwnPropertyDescriptor(new Uint8Array(1), 0).writable;\n","/**\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToInteger(target) {\n    let number = typeof target !== \"number\" ? Number(target) : target;\n    if (Number.isNaN(number)) {\n        number = 0;\n    }\n    return Math.trunc(number);\n}\n\n/**\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompareFunction(x, y) {\n    const [isNaN_x, isNaN_y] = [Number.isNaN(x), Number.isNaN(y)];\n\n    if (isNaN_x && isNaN_y) {\n        return 0;\n    }\n\n    if (isNaN_x) {\n        return 1;\n    }\n\n    if (isNaN_y) {\n        return -1;\n    }\n\n    if (x < y) {\n        return -1;\n    }\n\n    if (x > y) {\n        return 1;\n    }\n\n    if (x === 0 && y === 0) {\n        const [isPlusZero_x, isPlusZero_y] = [Object.is(x, 0), Object.is(y, 0)];\n\n        if (!isPlusZero_x && isPlusZero_y) {\n            return -1;\n        }\n\n        if (isPlusZero_x && !isPlusZero_y) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n","import { ToInteger } from \"./spec\";\n\nexport { default as isArrayBuffer } from \"lodash-es/isArrayBuffer\";\n\n/**\n * @param {unknown} view\n * @returns {boolean}\n */\nexport function isDataView(view) {\n    return view instanceof DataView;\n}\n\n/**\n * @param {unknown} key\n * @returns {boolean}\n */\nexport function isStringNumberKey(key) {\n    return typeof key === \"string\" && key === ToInteger(key) + \"\";\n}\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/**\n * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n */\nfunction baseIsArrayBuffer(value) {\n  return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n}\n\nexport default baseIsArrayBuffer;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\n\n/**\n * Checks if `value` is classified as an `ArrayBuffer` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n * @example\n *\n * _.isArrayBuffer(new ArrayBuffer(2));\n * // => true\n *\n * _.isArrayBuffer(new Array(2));\n * // => false\n */\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\nexport default isArrayBuffer;\n","import memoize from \"lodash-es/memoize\";\nimport { isTypedArrayIndexedPropertyWritable } from \"./bug\";\nimport { isArrayBuffer, isStringNumberKey } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\nimport { createPrivateStorage } from \"./private\";\nimport { ToInteger, defaultCompareFunction } from \"./spec\";\n\nconst _ = createPrivateStorage();\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isFloat16Array(target) {\n    return target instanceof Float16Array;\n}\n\n/**\n * @param {unknown} target\n * @throws {TypeError}\n */\nfunction assertFloat16Array(target) {\n    if (!isFloat16Array(target)) {\n        throw new TypeError(\"This is not a Float16Array\");\n    }\n}\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isDefaultFloat16ArrayMethods(target) {\n    return typeof target === \"function\" && defaultFloat16ArrayMethods.has(target);\n}\n\n/**\n * @param {Float16Array} float16bits\n * @return {number[]}\n */\nfunction copyToArray(float16bits) {\n    const length = float16bits.length;\n\n    const array = new Array(length);\n    for(let i = 0; i < length; ++i) {\n        array[i] = convertToNumber(float16bits[i]);\n    }\n\n    return array;\n}\n\n/** @type {ProxyHandler<Function>} */\nconst applyHandler = {\n    apply(func, thisArg, args) {\n        // peel off proxy\n        if (isFloat16Array(thisArg) && isDefaultFloat16ArrayMethods(func)) {\n            return Reflect.apply(func, _(thisArg).target ,args);\n        }\n\n        return Reflect.apply(func, thisArg, args);\n    },\n};\n\n/** @type {ProxyHandler<Float16Array>} */\nconst handler = {\n    get(target, key) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.has(target, key) ? convertToNumber(Reflect.get(target, key)) : undefined;\n        } else {\n            const ret = wrapper !== null && Reflect.has(wrapper, key) ? Reflect.get(wrapper, key) : Reflect.get(target, key);\n\n            if (typeof ret !== \"function\") {\n                return ret;\n            }\n\n            // TypedArray methods can't be called by Proxy Object\n            let proxy = _(ret).proxy;\n\n            if (proxy === undefined) {\n                proxy = _(ret).proxy = new Proxy(ret, applyHandler);\n            }\n\n            return proxy;\n        }\n    },\n\n    set(target, key, value) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.set(target, key, roundToFloat16Bits(value));\n        } else {\n            // frozen object can't change prototype property\n            if (wrapper !== null && (!Reflect.has(target, key) || Object.isFrozen(wrapper))) {\n                return Reflect.set(wrapper, key, value);\n            } else {\n                return Reflect.set(target, key, value);\n            }\n        }\n    },\n};\n\nif (!isTypedArrayIndexedPropertyWritable) {\n    handler.getPrototypeOf = (wrapper) => { return Reflect.getPrototypeOf(_(wrapper).target); };\n    handler.setPrototypeOf = (wrapper, prototype) => { return Reflect.setPrototypeOf(_(wrapper).target, prototype); };\n\n    handler.defineProperty = (wrapper, key, descriptor) => {\n        const target = _(wrapper).target;\n        return !Reflect.has(target, key) || Object.isFrozen(wrapper) ? Reflect.defineProperty(wrapper, key, descriptor) : Reflect.defineProperty(target, key, descriptor);\n    };\n    handler.deleteProperty = (wrapper, key) => {\n        const target = _(wrapper).target;\n        return Reflect.has(wrapper, key) ? Reflect.deleteProperty(wrapper, key) : Reflect.deleteProperty(target, key);\n    };\n\n    handler.has = (wrapper, key) => { return Reflect.has(wrapper, key) || Reflect.has(_(wrapper).target, key); };\n\n    handler.isExtensible = (wrapper) => { return Reflect.isExtensible(wrapper); };\n    handler.preventExtensions = (wrapper) => { return Reflect.preventExtensions(wrapper); };\n\n    handler.getOwnPropertyDescriptor = (wrapper, key) => { return Reflect.getOwnPropertyDescriptor(wrapper, key); };\n    handler.ownKeys = (wrapper) => { return Reflect.ownKeys(wrapper); };\n}\n\nexport default class Float16Array extends Uint16Array {\n\n    constructor(input, byteOffset, length) {\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            super(_(input).target);\n\n        // 22.2.1.3, 22.2.1.4 TypedArray, Array, ArrayLike, Iterable\n        } else if (input !== null && typeof input === \"object\" && !isArrayBuffer(input)) {\n            // if input is not ArrayLike and Iterable, get Array\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n\n            const length = arrayLike.length;\n            super(length);\n\n            for(let i = 0; i < length; ++i) {\n                // super (Uint16Array)\n                this[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n\n        // 22.2.1.2, 22.2.1.5 primitive, ArrayBuffer\n        } else {\n            switch(arguments.length) {\n                case 0:\n                    super();\n                    break;\n\n                case 1:\n                    super(input);\n                    break;\n\n                case 2:\n                    super(input, byteOffset);\n                    break;\n\n                case 3:\n                    super(input, byteOffset, length);\n                    break;\n\n                default:\n                    // @ts-ignore\n                    super(...arguments);\n            }\n        }\n\n        let proxy;\n\n        if (isTypedArrayIndexedPropertyWritable) {\n            proxy = new Proxy(this, handler);\n        } else {\n            const wrapper = Object.create(null);\n            _(wrapper).target = this;\n            proxy = new Proxy(wrapper, handler);\n        }\n\n        // proxy private storage\n        _(proxy).target = this;\n\n        // this private storage\n        _(this).proxy = proxy;\n\n        return proxy;\n    }\n\n    // static methods\n    static from(src, ...opts) {\n        if (opts.length === 0) {\n            return new Float16Array(Uint16Array.from(src, roundToFloat16Bits).buffer);\n        }\n\n        const mapFunc = opts[0];\n        const thisArg = opts[1];\n\n        return new Float16Array(Uint16Array.from(src, function (val, ...args) {\n            return roundToFloat16Bits(mapFunc.call(this, val, ...args));\n        }, thisArg).buffer);\n    }\n\n    static of(...args) {\n        return new Float16Array(args);\n    }\n\n    // iterate methods\n    * [Symbol.iterator]() {\n        for(const val of super[Symbol.iterator]()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    keys() {\n        return super.keys();\n    }\n\n    * values() {\n        for(const val of super.values()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    /** @type {() => IterableIterator<[number, number]>} */\n    * entries() {\n        for(const [i, val] of super.entries()) {\n            yield [i, convertToNumber(val)];\n        }\n    }\n\n    // functional methods\n    // @ts-ignore\n    map(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            array.push(callback.call(thisArg, val, i, _(this).proxy));\n        }\n\n        return new Float16Array(array);\n    }\n\n    // @ts-ignore\n    filter(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            if (callback.call(thisArg, val, i, _(this).proxy)) {\n                array.push(val);\n            }\n        }\n\n        return new Float16Array(array);\n    }\n\n    reduce(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        if (opts.length === 0) {\n            val = convertToNumber(this[0]);\n            start = 1;\n        } else {\n            val = opts[0];\n            start = 0;\n        }\n\n        for(let i = start, l = this.length; i < l; ++i) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    reduceRight(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        const length = this.length;\n        if (opts.length === 0) {\n            val = convertToNumber(this[length - 1]);\n            start = length - 1;\n        } else {\n            val = opts[0];\n            start = length;\n        }\n\n        for(let i = start; i--;) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    forEach(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy);\n        }\n    }\n\n    find(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return value;\n            }\n        }\n    }\n\n    findIndex(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    every(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (!callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    some(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // change element methods\n    set(input, ...opts) {\n        assertFloat16Array(this);\n\n        const offset = opts[0];\n\n        let float16bits;\n\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            float16bits = _(input).target;\n\n        // input others\n        } else {\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n            const length = arrayLike.length;\n\n            float16bits = new Uint16Array(length);\n            for(let i = 0, l = arrayLike.length; i < l; ++i) {\n                float16bits[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n        }\n\n        super.set(float16bits, offset);\n    }\n\n    reverse() {\n        assertFloat16Array(this);\n\n        super.reverse();\n\n        return _(this).proxy;\n    }\n\n    fill(value, ...opts) {\n        assertFloat16Array(this);\n\n        super.fill(roundToFloat16Bits(value), ...opts);\n\n        return _(this).proxy;\n    }\n\n    copyWithin(target, start, ...opts) {\n        assertFloat16Array(this);\n\n        super.copyWithin(target, start, ...opts);\n\n        return _(this).proxy;\n    }\n\n    sort(...opts) {\n        assertFloat16Array(this);\n\n        let compareFunction = opts[0];\n\n        if (compareFunction === undefined) {\n            compareFunction = defaultCompareFunction;\n        }\n\n        const _convertToNumber = memoize(convertToNumber);\n\n        super.sort((x, y) => { return compareFunction(_convertToNumber(x), _convertToNumber(y)); });\n\n        return _(this).proxy;\n    }\n\n    // copy element methods\n    // @ts-ignore\n    slice(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.slice(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.slice(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer);\n    }\n\n    // @ts-ignore\n    subarray(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.subarray(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.subarray(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer, float16bits.byteOffset, float16bits.length);\n    }\n\n    // contains methods\n    indexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        for(let i = from, l = length; i < l; ++i) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    lastIndexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        from = from === 0 ? length : from + 1;\n\n        if (from >= 0) {\n            from = from < length ? from : length;\n        } else {\n            from += length;\n        }\n\n        for(let i = from; i--;) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    includes(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        const isNaN = Number.isNaN(element);\n        for(let i = from, l = length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n\n            if (isNaN && Number.isNaN(value)) {\n                return true;\n            }\n\n            if (value === element) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // string methods\n    join(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        return array.join(...opts);\n    }\n\n    toLocaleString(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        // @ts-ignore\n        return array.toLocaleString(...opts);\n    }\n\n    // @ts-ignore\n    get [Symbol.toStringTag]() {\n        if (isFloat16Array(this)) {\n            return \"Float16Array\";\n        }\n    }\n}\n\nconst Float16Array$prototype = Float16Array.prototype;\n\nconst defaultFloat16ArrayMethods = new WeakSet();\nfor(const key of Reflect.ownKeys(Float16Array$prototype)) {\n    const val = Float16Array$prototype[key];\n    if (typeof val === \"function\") {\n        defaultFloat16ArrayMethods.add(val);\n    }\n}\n","/**\n * @returns {(self:object) => object}\n */\nexport function createPrivateStorage() {\n\tconst wm = new WeakMap();\n\treturn (self) => {\n\t\tlet obj = wm.get(self);\n\t\tif (obj) {\n\t\t\treturn obj;\n\t\t} else {\n\t\t\tobj = Object.create(null);\n\t\t\twm.set(self, obj);\n\t\t\treturn obj;\n\t\t}\n\t};\n}\n","import { isDataView } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to getFloat16 function must be a DataView\");\n    }\n\n    return convertToNumber( dataView.getUint16(byteOffset, ...opts) );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to setFloat16 function must be a DataView\");\n    }\n\n    dataView.setUint16(byteOffset, roundToFloat16Bits(value), ...opts);\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeDpiBlob = changeDpiBlob;\nexports.changeDpiDataUrl = changeDpiDataUrl;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createPngDataTable() {\n  /* Table of CRCs of all 8-bit messages. */\n  var crcTable = new Int32Array(256);\n  for (var n = 0; n < 256; n++) {\n    var c = n;\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xedb88320 ^ c >>> 1 : c >>> 1;\n    }\n    crcTable[n] = c;\n  }\n  return crcTable;\n}\n\nfunction calcCrc(buf) {\n  var c = -1;\n  if (!pngDataTable) pngDataTable = createPngDataTable();\n  for (var n = 0; n < buf.length; n++) {\n    c = pngDataTable[(c ^ buf[n]) & 0xFF] ^ c >>> 8;\n  }\n  return c ^ -1;\n}\n\nvar pngDataTable = void 0;\n\nvar PNG = 'image/png';\nvar JPEG = 'image/jpeg';\n\n// those are 3 possible signature of the physBlock in base64.\n// the pHYs signature block is preceed by the 4 bytes of lenght. The length of\n// the block is always 9 bytes. So a phys block has always this signature:\n// 0 0 0 9 p H Y s.\n// However the data64 encoding aligns we will always find one of those 3 strings.\n// this allow us to find this particular occurence of the pHYs block without\n// converting from b64 back to string\nvar b64PhysSignature1 = 'AAlwSFlz';\nvar b64PhysSignature2 = 'AAAJcEhZ';\nvar b64PhysSignature3 = 'AAAACXBI';\n\nvar _P = 'p'.charCodeAt(0);\nvar _H = 'H'.charCodeAt(0);\nvar _Y = 'Y'.charCodeAt(0);\nvar _S = 's'.charCodeAt(0);\n\nfunction changeDpiBlob(blob, dpi) {\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var headerChunk = blob.slice(0, 33);\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      var dataArray = new Uint8Array(fileReader.result);\n      var tail = blob.slice(33);\n      var changedArray = changeDpiOnArray(dataArray, dpi, blob.type);\n      resolve(new Blob([changedArray, tail], { type: blob.type }));\n    };\n    fileReader.readAsArrayBuffer(headerChunk);\n  });\n}\n\nfunction changeDpiDataUrl(base64Image, dpi) {\n  var dataSplitted = base64Image.split(',');\n  var format = dataSplitted[0];\n  var body = dataSplitted[1];\n  var type = void 0;\n  var headerLength = void 0;\n  var overwritepHYs = false;\n  if (format.indexOf(PNG) !== -1) {\n    type = PNG;\n    var b64Index = detectPhysChunkFromDataUrl(body);\n    // 28 bytes in dataUrl are 21bytes, length of phys chunk with everything inside.\n    if (b64Index >= 0) {\n      headerLength = Math.ceil((b64Index + 28) / 3) * 4;\n      overwritepHYs = true;\n    } else {\n      headerLength = 33 / 3 * 4;\n    }\n  }\n  if (format.indexOf(JPEG) !== -1) {\n    type = JPEG;\n    headerLength = 18 / 3 * 4;\n  }\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var stringHeader = body.substring(0, headerLength);\n  var restOfData = body.substring(headerLength);\n  var headerBytes = atob(stringHeader);\n  var dataArray = new Uint8Array(headerBytes.length);\n  for (var i = 0; i < dataArray.length; i++) {\n    dataArray[i] = headerBytes.charCodeAt(i);\n  }\n  var finalArray = changeDpiOnArray(dataArray, dpi, type, overwritepHYs);\n  var base64Header = btoa(String.fromCharCode.apply(String, _toConsumableArray(finalArray)));\n  return [format, ',', base64Header, restOfData].join('');\n}\n\nfunction detectPhysChunkFromDataUrl(data) {\n  var b64index = data.indexOf(b64PhysSignature1);\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature2);\n  }\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature3);\n  }\n  // if b64index === -1 chunk is not found\n  return b64index;\n}\n\nfunction searchStartOfPhys(data) {\n  var length = data.length - 1;\n  // we check from the end since we cut the string in proximity of the header\n  // the header is within 21 bytes from the end.\n  for (var i = length; i >= 4; i--) {\n    if (data[i - 4] === 9 && data[i - 3] === _P && data[i - 2] === _H && data[i - 1] === _Y && data[i] === _S) {\n      return i - 3;\n    }\n  }\n}\n\nfunction changeDpiOnArray(dataArray, dpi, format, overwritepHYs) {\n  if (format === JPEG) {\n    dataArray[13] = 1; // 1 pixel per inch or 2 pixel per cm\n    dataArray[14] = dpi >> 8; // dpiX high byte\n    dataArray[15] = dpi & 0xff; // dpiX low byte\n    dataArray[16] = dpi >> 8; // dpiY high byte\n    dataArray[17] = dpi & 0xff; // dpiY low byte\n    return dataArray;\n  }\n  if (format === PNG) {\n    var physChunk = new Uint8Array(13);\n    // chunk header pHYs\n    // 9 bytes of data\n    // 4 bytes of crc\n    // this multiplication is because the standard is dpi per meter.\n    dpi *= 39.3701;\n    physChunk[0] = _P;\n    physChunk[1] = _H;\n    physChunk[2] = _Y;\n    physChunk[3] = _S;\n    physChunk[4] = dpi >>> 24; // dpiX highest byte\n    physChunk[5] = dpi >>> 16; // dpiX veryhigh byte\n    physChunk[6] = dpi >>> 8; // dpiX high byte\n    physChunk[7] = dpi & 0xff; // dpiX low byte\n    physChunk[8] = physChunk[4]; // dpiY highest byte\n    physChunk[9] = physChunk[5]; // dpiY veryhigh byte\n    physChunk[10] = physChunk[6]; // dpiY high byte\n    physChunk[11] = physChunk[7]; // dpiY low byte\n    physChunk[12] = 1; // dot per meter....\n\n    var crc = calcCrc(physChunk);\n\n    var crcChunk = new Uint8Array(4);\n    crcChunk[0] = crc >>> 24;\n    crcChunk[1] = crc >>> 16;\n    crcChunk[2] = crc >>> 8;\n    crcChunk[3] = crc & 0xff;\n\n    if (overwritepHYs) {\n      var startingIndex = searchStartOfPhys(dataArray);\n      dataArray.set(physChunk, startingIndex);\n      dataArray.set(crcChunk, startingIndex + 13);\n      return dataArray;\n    } else {\n      // i need to give back an array of data that is divisible by 3 so that\n      // dataurl encoding gives me integers, for luck this chunk is 17 + 4 = 21\n      // if it was we could add a text chunk contaning some info, untill desired\n      // length is met.\n\n      // chunk structur 4 bytes for length is 9\n      var chunkLength = new Uint8Array(4);\n      chunkLength[0] = 0;\n      chunkLength[1] = 0;\n      chunkLength[2] = 0;\n      chunkLength[3] = 9;\n\n      var finalHeader = new Uint8Array(54);\n      finalHeader.set(dataArray, 0);\n      finalHeader.set(chunkLength, 33);\n      finalHeader.set(physChunk, 37);\n      finalHeader.set(crcChunk, 50);\n      return finalHeader;\n    }\n  }\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import { GPULayer } from './GPULayer';\nimport {\n\tGPULayerArray,\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tFLOAT,\n\tHALF_FLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tGLSLVersion,\n\tGLSL1,\n\tGLSL3,\n\tWEBGL2,\n\tWEBGL1,\n\tEXPERIMENTAL_WEBGL,\n\tCLAMP_TO_EDGE,\n\tTextureFormat,\n\tNEAREST,\n\tRGBA,\n\tTextureType,\n\tPROGRAM_NAME_INTERNAL,\n\tCompileTimeVars,\n\tDEFAULT_PROGRAM_NAME,\n\tDEFAULT_W_UV_PROGRAM_NAME,\n\tDEFAULT_W_NORMAL_PROGRAM_NAME,\n\tDEFAULT_W_UV_NORMAL_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tDATA_LAYER_POINTS_PROGRAM_NAME,\n\tDATA_LAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tDATA_LAYER_LINES_PROGRAM_NAME,\n\tErrorCallback,\n\tDEFAULT_CIRCLE_NUM_SEGMENTS,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tUINT,\n\tGLSLPrecision,\n\tPRECISION_HIGH_P,\n\tDEFAULT_ERROR_CALLBACK,\n} from './constants';\nimport { GPUProgram } from './GPUProgram';\n// Just importing the types here.\n// Only @types/three is installed as dev dependency.\nimport {\n\tWebGLRenderer,\n\tTexture,\n\tVector4,\n} from 'three';\nimport * as utils from './Vector4';\nimport {\n\tisWebGL2,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n} from './utils';\nimport {\n\tisArray,\n\tisString,\n\tisValidFilter,\n\tisValidTextureType,\n\tisValidTextureFormat,\n\tisValidWrap,\n} from './checks';\nconst defaultVertexShaderSource = require('./glsl/vert/DefaultVertShader.glsl');\n\nexport class GPUComposer {\n\treadonly gl!: WebGLRenderingContext | WebGL2RenderingContext;\n\treadonly glslVersion!: GLSLVersion;\n\treadonly intPrecision!: GLSLPrecision;\n\treadonly floatPrecision!: GLSLPrecision;\n\t// These width and height are the current canvas at full res.\n\tprivate width!: number;\n\tprivate height!: number;\n\n\tprivate errorState = false;\n\t// For internal use only.\n\treadonly _errorCallback: ErrorCallback;\n\n\t// Save threejs renderer if passed in.\n\tprivate renderer?: WebGLRenderer;\n\tprivate readonly maxNumTextures!: number;\n\t\n\t// Precomputed buffers (inited as needed).\n\tprivate _quadPositionsBuffer?: WebGLBuffer;\n\tprivate _boundaryPositionsBuffer?: WebGLBuffer;\n\t// Store multiple circle positions buffers for various num segments, use numSegments as key.\n\tprivate _circlePositionsBuffer: { [key: number]: WebGLBuffer } = {};\n\n\tprivate pointIndexArray?: Float32Array;\n\tprivate pointIndexBuffer?: WebGLBuffer;\n\tprivate vectorFieldIndexArray?: Float32Array;\n\tprivate vectorFieldIndexBuffer?: WebGLBuffer;\n\tprivate indexedLinesIndexBuffer?: WebGLBuffer;\n\n\t// Programs for copying data (these are needed for rendering partial screen geometries).\n\tprivate readonly copyPrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/CopyFragShader.glsl'),\n\t};\n\n\t// Other util programs.\n\tprivate readonly setValuePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/SetValueFragShader.glsl'),\n\t};\n\tprivate _wrappedLineColorProgram?: GPUProgram; // We only need a FLOAT version of this.\n\tprivate readonly vectorMagnitudePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/VectorMagnitudeFragShader.glsl'),\n\t};\n\n\t// Vertex shaders are shared across all GPUProgram instances.\n\treadonly _vertexShaders: {[key in PROGRAM_NAME_INTERNAL]: {\n\t\tsrc: string,\n\t\tshader?: WebGLProgram,\n\t\tdefines?: CompileTimeVars,\n\t}} = {\n\t\t[DEFAULT_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t},\n\t\t[DEFAULT_W_UV_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'WEBGLCOMPUTE_UV_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[DEFAULT_W_NORMAL_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'WEBGLCOMPUTE_NORMAL_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[DEFAULT_W_UV_NORMAL_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'WEBGLCOMPUTE_UV_ATTRIBUTE': '1',\n\t\t\t\t'WEBGLCOMPUTE_NORMAL_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[SEGMENT_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/SegmentVertShader.glsl'),\n\t\t},\n\t\t[DATA_LAYER_POINTS_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/GPULayerPointsVertShader.glsl'),\n\t\t},\n\t\t[DATA_LAYER_VECTOR_FIELD_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/GPULayerVectorFieldVertShader.glsl'),\n\t\t},\n\t\t[DATA_LAYER_LINES_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/GPULayerLinesVertShader.glsl'),\n\t\t},\n\t};\n\n\tverboseLogging = false;\n\n\tstatic initWithThreeRenderer(\n\t\trenderer: WebGLRenderer,\n\t\tparams?: {\n\t\t\tverboseLogging?: boolean,\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\tconst composer = new GPUComposer(\n\t\t\t{\n\t\t\t\tfloatPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\tintPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\t...params,\n\t\t\t\tcanvas: renderer.domElement,\n\t\t\t\tcontext: renderer.getContext(),\n\t\t\t\tglslVersion: renderer.capabilities.isWebGL2 ? GLSL3 : GLSL1,\n\t\t\t},\n\t\t);\n\t\t// Attach renderer.\n\t\tcomposer.renderer = renderer;\n\t\treturn composer;\n\t}\n\n\tconstructor(\n\t\tparams: {\n\t\t\tcanvas: HTMLCanvasElement,\n\t\t\tcontext?: WebGLRenderingContext | WebGL2RenderingContext | null,\n\t\t\tcontextID?: typeof WEBGL2 | typeof WEBGL1 | typeof EXPERIMENTAL_WEBGL | string,\n\t\t\tcontextOptions?: {\n\t\t\t\tantialias?: boolean,\n\t\t\t\t[key: string]: any,\n\t\t\t},\n\t\t\tglslVersion?: GLSLVersion,\n\t\t\tintPrecision?: GLSLPrecision,\n\t\t\tfloatPrecision?: GLSLPrecision,\n\t\t\tverboseLogging?: boolean,\n\t\t\t// Optionally pass in an error callback in case we want to handle errors related to webgl support.\n\t\t\t// e.g. throw up a modal telling user this will not work on their device.\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['canvas', 'context', 'contextID', 'contextOptions', 'glslVersion', 'verboseLogging', 'errorCallback'];\n\t\tconst requiredKeys = ['canvas'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to new GPUComposer(params).  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to new GPUComposer(params).`);\n\t\t\t}\n\t\t});\n\n\t\tif (params.verboseLogging !== undefined) this.verboseLogging = params.verboseLogging;\n\n\t\t// Save callback in case we run into an error.\n\t\tconst self = this;\n\t\tthis._errorCallback = (message: string) => {\n\t\t\tif (self.errorState) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.errorState = true;\n\t\t\tparams.errorCallback ? params.errorCallback(message) : DEFAULT_ERROR_CALLBACK(message);\n\t\t}\n\n\t\tconst { canvas } = params;\n\t\tlet gl = params.context;\n\n\t\t// Init GL.\n\t\tif (!gl) {\n\t\t\t// Init a gl context if not passed in.\n\t\t\tif (params.contextID) {\n\t\t\t\tgl = canvas.getContext(params.contextID, params.contextOptions)  as WebGLRenderingContext | null;\n\t\t\t\tif (!gl) {\n\t\t\t\t\tconsole.warn(`Unable to initialize WebGL context with contextID: ${params.contextID}.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gl) {\n\t\t\t\tgl = canvas.getContext(WEBGL2, params.contextOptions)  as WebGL2RenderingContext | null\n\t\t\t\t\t|| canvas.getContext(WEBGL1, params.contextOptions)  as WebGLRenderingContext | null\n\t\t\t\t\t|| canvas.getContext(EXPERIMENTAL_WEBGL, params.contextOptions)  as WebGLRenderingContext | null;\n\t\t\t}\n\t\t\tif (gl === null) {\n\t\t\t\tthis._errorCallback('Unable to initialize WebGL context.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (isWebGL2(gl)) {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 2.0 context.');\n\t\t} else {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 1.0 context.');\n\t\t}\n\t\tthis.gl = gl;\n\n\t\t// Save glsl version, default to 3 if using webgl2 context.\n\t\tlet glslVersion = params.glslVersion || (isWebGL2(gl) ? GLSL3 : GLSL1);\n\t\tif (!isWebGL2(gl) && glslVersion === GLSL3) {\n\t\t\tconsole.warn('GLSL3.x is incompatible with WebGL1.0 contexts, falling back to GLSL1.');\n\t\t\tglslVersion = GLSL1; // Fall back to GLSL1 in these cases.\n\t\t}\n\t\t// TODO: check that this is valid.\n\t\tthis.glslVersion = glslVersion;\n\n\t\t// Set default int/float precision.\n\t\tthis.intPrecision = params.intPrecision || PRECISION_HIGH_P;\n\t\tthis.floatPrecision = params.floatPrecision || PRECISION_HIGH_P;\n\n\t\t// GL setup.\n\t\t// Disable depth testing globally.\n\t\tgl.disable(gl.DEPTH_TEST);\n\t\t// Set unpack alignment to 1 so we can have textures of arbitrary dimensions.\n\t\t// https://stackoverflow.com/questions/51582282/error-when-creating-textures-in-webgl-with-the-rgb-format\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\t\t// TODO: look into more of these: https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n\t\t// // Some implementations of HTMLCanvasElement's or OffscreenCanvas's CanvasRenderingContext2D store color values\n\t\t// // internally in premultiplied form. If such a canvas is uploaded to a WebGL texture with the\n\t\t// // UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter set to false, the color channels will have to be un-multiplied\n\t\t// // by the alpha channel, which is a lossy operation. The WebGL implementation therefore can not guarantee that colors\n\t\t// // with alpha < 1.0 will be preserved losslessly when first drawn to a canvas via CanvasRenderingContext2D and then\n\t\t// // uploaded to a WebGL texture when the UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter is set to false.\n\t\t// gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n\t\t// Unbind active buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\t// Canvas setup.\n\t\tthis.onResize(canvas);\n\n\t\t// Log number of textures available.\n\t\tthis.maxNumTextures = this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tif (this.verboseLogging) console.log(`${this.maxNumTextures} textures max.`);\n\t}\n\n\tisWebGL2() {\n\t\treturn isWebGL2(this.gl);\n\t}\n\n\tprivate glslKeyForType(type: GPULayerType) {\n\t\tif (this.glslVersion === GLSL1) return FLOAT;\n\t\tswitch (type) {\n\t\t\tcase HALF_FLOAT:\n\t\t\tcase FLOAT:\n\t\t\t\treturn FLOAT;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\treturn UINT;\n\t\t\tcase BYTE:\n\t\t\tcase SHORT:\n\t\t\tcase INT:\n\t\t\t\treturn INT;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid type: ${type} passed to GPUComposer.copyProgramForType.`);\n\t\t}\n\t}\n\n\t_setValueProgramForType(type: GPULayerType) {\n\t\tconst key = this.glslKeyForType(type);\n\t\tif (this.setValuePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `setValue-${key}`,\n\t\t\t\tfragmentShader: this.setValuePrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_value',\n\t\t\t\t\t\tvalue: [0, 0, 0, 0],\n\t\t\t\t\t\ttype: key === UINT ? INT : key, // TODO: is there a uint type?\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`WEBGLCOMPUTE_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.setValuePrograms[key] = program;\n\t\t}\n\t\treturn this.setValuePrograms[key]!;\n\t}\n\n\tprivate copyProgramForType(type: GPULayerType) {\n\t\tconst key = this.glslKeyForType(type);\n\t\tif (this.copyPrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `copy-${key}`,\n\t\t\t\tfragmentShader: this.copyPrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_state',\n\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\ttype: INT,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`WEBGLCOMPUTE_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.copyPrograms[key] = program;\n\t\t}\n\t\treturn this.copyPrograms[key]!;\n\t}\n\n\tprivate get wrappedLineColorProgram() {\n\t\tif (this._wrappedLineColorProgram === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: 'wrappedLineColor',\n\t\t\t\tfragmentShader: require('./glsl/frag/WrappedLineColorFragShader.glsl'),\n\t\t\t});\n\t\t\tthis._wrappedLineColorProgram = program;\n\t\t}\n\t\treturn this._wrappedLineColorProgram;\n\t}\n\n\tprivate vectorMagnitudeProgramForType(type: GPULayerType) {\n\t\tconst key = this.glslKeyForType(type);\n\t\tif (this.vectorMagnitudePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `vectorMagnitude-${key}`,\n\t\t\t\tfragmentShader: this.vectorMagnitudePrograms.src,\n\t\t\t\tdefines: {\n\t\t\t\t\t[`WEBGLCOMPUTE_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.vectorMagnitudePrograms[key] = program;\n\t\t}\n\t\treturn this.vectorMagnitudePrograms[key]!;\n\t}\n\n\tprivate get quadPositionsBuffer() {\n\t\tif (this._quadPositionsBuffer === undefined) {\n\t\t\tconst fsQuadPositions = new Float32Array([ -1, -1, 1, -1, -1, 1, 1, 1 ]);\n\t\t\tthis._quadPositionsBuffer = this.initVertexBuffer(fsQuadPositions)!;\n\t\t}\n\t\treturn this._quadPositionsBuffer!;\n\t}\n\n\tprivate get boundaryPositionsBuffer() {\n\t\tif (this._boundaryPositionsBuffer === undefined) {\n\t\t\tconst boundaryPositions = new Float32Array([ -1, -1, 1, -1, 1, 1, -1, 1, -1, -1 ]);\n\t\t\tthis._boundaryPositionsBuffer = this.initVertexBuffer(boundaryPositions)!;\n\t\t}\n\t\treturn this._boundaryPositionsBuffer!;\n\t}\n\n\tprivate getCirclePositionsBuffer(numSegments: number) {\n\t\tif (this._circlePositionsBuffer[numSegments] == undefined) {\n\t\t\tconst unitCirclePoints = [0, 0];\n\t\t\tfor (let i = 0; i <= numSegments; i++) { // TODO: should this be just less than?\n\t\t\t\tunitCirclePoints.push(\n\t\t\t\t\tMath.cos(2 * Math.PI * i / numSegments),\n\t\t\t\t\tMath.sin(2 * Math.PI * i / numSegments),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst circlePositions = new Float32Array(unitCirclePoints);\n\t\t\tconst buffer = this.initVertexBuffer(circlePositions)!;\n\t\t\tthis._circlePositionsBuffer[numSegments] = buffer;\n\t\t}\n\t\treturn this._circlePositionsBuffer[numSegments];\n\t}\n\n\tprivate initVertexBuffer(\n\t\tdata: Float32Array,\n\t) {\n\t\tconst { _errorCallback, gl } = this;\n\t\tconst buffer = gl.createBuffer();\n\t\tif (!buffer) {\n\t\t\t_errorCallback('Unable to allocate gl buffer.');\n\t\t\treturn;\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t// Add buffer data.\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\t\treturn buffer;\n\t}\n\n\t// Used internally, see GPULayer.clone() for public API.\n\t_cloneGPULayer(gpuLayer: GPULayer, name?: string) {\n\t\tlet dimensions: number | [number, number] = 0;\n\t\ttry {\n\t\t\tdimensions = gpuLayer.length;\n\t\t} catch {\n\t\t\tdimensions = [gpuLayer.width, gpuLayer.height];\n\t\t}\n\n\t\t// If read only, get state by reading to GPU.\n\t\tconst array = gpuLayer.writable ? undefined : gpuLayer.getValues();\n\n\t\tconst clone = new GPULayer(this, {\n\t\t\tname: name || `${gpuLayer.name}-clone`,\n\t\t\tdimensions,\n\t\t\ttype: gpuLayer.type,\n\t\t\tnumComponents: gpuLayer.numComponents,\n\t\t\tarray,\n\t\t\tfilter: gpuLayer.filter,\n\t\t\twrapS: gpuLayer.wrapS,\n\t\t\twrapT: gpuLayer.wrapT,\n\t\t\twritable: gpuLayer.writable,\n\t\t\tnumBuffers: gpuLayer.numBuffers,\n\t\t});\n\n\t\t// If writable, copy current state with a draw call.\n\t\tif (gpuLayer.writable) {\n\t\t\tfor (let i = 0; i < gpuLayer.numBuffers - 1; i++) {\n\t\t\t\tthis.step({\n\t\t\t\t\tprogram: this.copyProgramForType(gpuLayer.type),\n\t\t\t\t\tinput: gpuLayer.getStateAtIndex((gpuLayer.bufferIndex + i + 1) % gpuLayer.numBuffers),\n\t\t\t\t\toutput: clone,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.step({\n\t\t\t\tprogram: this.copyProgramForType(gpuLayer.type),\n\t\t\t\tinput: gpuLayer.currentState,\n\t\t\t\toutput: clone,\n\t\t\t});\n\t\t}\n\t\treturn clone;\n\t}\n\n\tinitTexture(\n\t\tparams: {\n\t\t\tname: string,\n\t\t\turl: string,\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\tformat?: TextureFormat,\n\t\t\ttype?: TextureType,\n\t\t\tonLoad?: (texture: WebGLTexture) => void,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['name', 'url', 'filter', 'wrapS', 'wrapT', 'format', 'type', 'onLoad'];\n\t\tObject.keys(params).forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to GPUComposer.initTexture with name \"${params.name}\".  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\tconst { url, name } = params;\n\t\tif (!isString(url)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have url of type string, got ${url} of type ${typeof url}.`)\n\t\t}\n\t\tif (!isString(name)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have name of type string, got ${name} of type ${typeof name}.`)\n\t\t}\n\n\t\t// Get filter type, default to nearest.\n\t\tconst filter = params.filter !== undefined ? params.filter : NEAREST;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${filter} for GPULayer \"${name}\", must be ${validFilters.join(', ')}.`);\n\t\t}\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${wrapS} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${wrapT} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\n\t\t// Get image format type, default to rgba.\n\t\tconst format = params.format !== undefined ? params.format : RGBA;\n\t\tif (!isValidTextureFormat(format)) {\n\t\t\tthrow new Error(`Invalid format: ${format} for GPULayer \"${name}\", must be ${validTextureFormats.join(', ')}.`);\n\t\t}\n\n\t\t// Get image data type, default to unsigned byte.\n\t\tconst type = params.type !== undefined ? params.type : UNSIGNED_BYTE;\n\t\tif (!isValidTextureType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${type} for GPULayer \"${name}\", must be ${validTextureTypes.join(', ')}.`);\n\t\t}\n\n\t\tconst { gl, _errorCallback } = this;\n\t\tconst texture = gl.createTexture();\n\t\tif (texture === null) {\n\t\t\tthrow new Error(`Unable to init glTexture.`);\n\t\t}\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t// Because images have to be downloaded over the internet\n\t\t// they might take a moment until they are ready.\n\t\t// Until then put a single pixel in the texture so we can\n\t\t// use it immediately. When the image has finished downloading\n\t\t// we'll update the texture with the contents of the image.\n\t\tconst level = 0;\n\t\tconst internalFormat = gl.RGBA;\n\t\tconst width = 1;\n\t\tconst height = 1;\n\t\tconst border = 0;\n\t\tconst srcFormat = gl[format];\n\t\tconst srcType = gl[type];\n\t\tconst pixel = new Uint8Array([0, 0, 0, 0]);\n\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\twidth, height, border, srcFormat, srcType, pixel);\n\n\t\tconst image = new Image();\n\t\timage.onload = () => {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\t\tsrcFormat, srcType, image);\n\n\t\t\t// WebGL1 has different requirements for power of 2 images\n\t\t\t// vs non power of 2 images so check if the image is a\n\t\t\t// power of 2 in both dimensions.\n\t\t\tif (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n\t\t\t\t// // Yes, it's a power of 2. Generate mips.\n\t\t\t\t// gl.generateMipmap(gl.TEXTURE_2D);\n\t\t\t} else {\n\t\t\t\t// TODO: finish implementing this.\n\t\t\t\tconsole.warn(`Texture ${name} dimensions [${image.width}, ${image.height}] are not power of 2.`);\n\t\t\t\t// // No, it's not a power of 2. Turn off mips and set\n\t\t\t\t// // wrapping to clamp to edge\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t}\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[filter]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[filter]);\n\n\t\t\t// Callback when texture has loaded.\n\t\t\tif (params.onLoad) params.onLoad(texture);\n\t\t};\n\t\timage.onerror = (e) => {\n\t\t\t_errorCallback(`Error loading image ${name}: ${e}`);\n\t\t}\n\t\timage.src = url;\n\n\t\treturn texture;\n\t}\n\n\tonResize(canvas: HTMLCanvasElement) {\n\t\tconst width = canvas.clientWidth;\n\t\tconst height = canvas.clientHeight;\n\t\t// Set correct canvas pixel size.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/By_example/Canvas_size_and_WebGL\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\t// Save dimensions.\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t};\n\n\tprivate drawSetup(\n\t\tprogram: WebGLProgram,\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer,\n\t) {\n\t\tconst { gl } = this;\n\t\t// Check if we are in an error state.\n\t\tif (!program) {\n\t\t\treturn;\n\t\t}\n\n\t\t// CAUTION: the order of these next few lines is important.\n\n\t\t// Get a shallow copy of current textures.\n\t\t// This line must come before this.setOutput() as it depends on current internal state.\n\t\tconst inputTextures: WebGLTexture[] = [];\n\t\tif (input) {\n\t\t\tif (input.constructor === WebGLTexture) {\n\t\t\t\tinputTextures.push(input as WebGLTexture);\n\t\t\t} else if (input.constructor === GPULayer) {\n\t\t\t\tinputTextures.push((input as GPULayer).currentState);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < (input as (GPULayer | WebGLTexture)[]).length; i++) {\n\t\t\t\t\tconst layer = (input as (GPULayer | WebGLTexture)[])[i];\n\t\t\t\t\tinputTextures.push((layer as GPULayer).currentState ? (layer as GPULayer).currentState : layer as WebGLTexture)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set output framebuffer.\n\t\t// This may modify WebGL internal state.\n\t\tthis.setOutputLayer(fullscreenRender, input, output);\n\n\t\t// Set current program.\n\t\tgl.useProgram(program);\n\n\t\t// Set input textures.\n\t\tfor (let i = 0; i < inputTextures.length; i++) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTextures[i]);\n\t\t}\n\t}\n\n\tprivate setBlendMode(shouldBlendAlpha?: boolean) {\n\t\tconst { gl } = this;\n\t\tif (shouldBlendAlpha) {\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t}\n\t}\n\n\tprivate addLayerToInputs(\n\t\tlayer: GPULayer,\n\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t) {\n\t\t// Add layer to end of input if needed.\n\t\tlet _inputLayers = input;\n\t\tif (isArray(_inputLayers)) {\n\t\t\tconst index = (_inputLayers as (GPULayer | WebGLTexture)[]).indexOf(layer);\n\t\t\tif (index < 0) {\n\t\t\t\t(_inputLayers as (GPULayer | WebGLTexture)[]).push(layer);\n\t\t\t} \n\t\t} else {\n\t\t\tif (_inputLayers !== layer) {\n\t\t\t\tconst previous = _inputLayers;\n\t\t\t\t_inputLayers = [];\n\t\t\t\tif (previous) (_inputLayers as (GPULayer | WebGLTexture)[]).push(previous);\n\t\t\t\t(_inputLayers as (GPULayer | WebGLTexture)[]).push(layer);\n\t\t\t} else {\n\t\t\t\t_inputLayers = [_inputLayers];\n\t\t\t}\n\t\t}\n\t\treturn _inputLayers as (GPULayer | WebGLTexture)[];\n\t}\n\n\tprivate passThroughLayerDataFromInputToOutput(state: GPULayer) {\n\t\t// TODO: figure out the fastest way to copy a texture.\n\t\tconst copyProgram = this.copyProgramForType(state.internalType);\n\t\tthis.step({\n\t\t\tprogram: copyProgram,\n\t\t\tinput: state,\n\t\t\toutput: state,\n\t\t});\n\t}\n\n\tprivate setOutputLayer(\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t) {\n\t\tconst { gl } = this;\n\n\t\t// Render to screen.\n\t\tif (!output) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t// Resize viewport.\n\t\t\tconst { width, height } = this;\n\t\t\tgl.viewport(0, 0, width, height);\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if output is same as one of input layers.\n\t\t// TODO: do a better job of checking if input is a texture of same GPULayer as output.\n\t\tif (input && ((input === output) || (isArray(input) && (input as (GPULayer | WebGLTexture)[]).indexOf(output) > -1))) {\n\t\t\tif (output.numBuffers === 1) {\n\t\t\t\tthrow new Error('Cannot use same buffer for input and output of a program. Try increasing the number of buffers in your output layer to at least 2 so you can render to nextState using currentState as an input.');\n\t\t\t}\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render and increment buffer so we are rendering to a different target\n\t\t\t\t// than the input texture.\n\t\t\t\toutput._bindOutputBufferForWrite(true);\n\t\t\t} else {\n\t\t\t\t// Pass input texture through to output.\n\t\t\t\tthis.passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t// Render to output without incrementing buffer.\n\t\t\t\toutput._bindOutputBufferForWrite(false);\n\t\t\t}\n\t\t} else {\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render to current buffer.\n\t\t\t\toutput._bindOutputBufferForWrite(false);\n\t\t\t} else {\n\t\t\t\t// If we are doing a sneaky thing with a swapped texture and are\n\t\t\t\t// only rendering part of the screen, we may need to add a copy operation.\n\t\t\t\tif (output._usingTextureOverrideForCurrentBuffer()) {\n\t\t\t\t\tthis.passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t}\n\t\t\t\toutput._bindOutputBufferForWrite(false);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resize viewport.\n\t\tconst { width, height } = output;\n\t\tgl.viewport(0, 0, width, height);\n\t};\n\n\tprivate setVertexAttribute(program: WebGLProgram, name: string, size: number, programName: string) {\n\t\tconst { gl } = this;\n\t\t// Point attribute to the currently bound VBO.\n\t\tconst location = gl.getAttribLocation(program, name);\n\t\tif (location < 0) {\n\t\t\tthrow new Error(`Unable to find vertex attribute \"${name}\" in program \"${programName}\".`);\n\t\t}\n\t\t// TODO: only float is supported for vertex attributes.\n\t\tgl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\n\t\t// Enable the attribute.\n\t\tgl.enableVertexAttribArray(location);\n\t}\n\n\tprivate setPositionAttribute(program: WebGLProgram, programName: string) {\n\t\tthis.setVertexAttribute(program, 'a_internal_position', 2, programName);\n\t}\n\n\tprivate setIndexAttribute(program: WebGLProgram, programName: string) {\n\t\tthis.setVertexAttribute(program, 'a_internal_index', 1, programName);\n\t}\n\n\tprivate setUVAttribute(program: WebGLProgram, programName: string) {\n\t\tthis.setVertexAttribute(program, 'a_internal_uv', 2, programName);\n\t}\n\n\t// Step for entire fullscreen quad.\n\tstep(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, quadPositionsBuffer } = this;\n\t\tconst { program, input, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, quadPositionsBuffer);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a strip of px along the boundary.\n\tstepBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tsingleEdge?: 'LEFT' | 'RIGHT' | 'TOP' | 'BOTTOM';\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, boundaryPositionsBuffer} = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this.width;\n\t\tconst height = output ? output.height : this.height;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\t// Frame needs to be offset and scaled so that all four sides are in viewport.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 - onePx[0], 1 - onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, boundaryPositionsBuffer);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.singleEdge) {\n\t\t\tswitch(params.singleEdge) {\n\t\t\t\tcase 'LEFT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 3, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RIGHT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 1, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TOP':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 2, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BOTTOM':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 0, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unknown boundary edge type: ${params.singleEdge}.`);\n\t\t\t}\n\t\t} else {\n\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program for all but a strip of px along the boundary.\n\tstepNonBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, quadPositionsBuffer } = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this.width;\n\t\tconst height = output ? output.height : this.height;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 - 2 * onePx[0], 1 - 2 * onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, quadPositionsBuffer);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a circular spot.\n\tstepCircle(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition: [number, number], // Position is in units of pixels.\n\t\t\tradius: number, // Radius is in units of pixels.\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tnumSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, width, height } = this;\n\t\tconst { program, position, radius, input, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [radius * 2 / width, radius * 2 / height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [2 * position[0] / width - 1, 2 * position[1] / height - 1], FLOAT);\n\t\tconst numSegments = params.numSegments ? params.numSegments : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (numSegments < 3) {\n\t\t\tthrow new Error(`numSegments for GPUComposer.stepCircle must be greater than 2, got ${numSegments}.`);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.getCirclePositionsBuffer(numSegments));\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\t\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a thickened line segment (rounded end caps available).\n\tstepSegment(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition1: [number, number], // Position is in units of pixels.\n\t\t\tposition2: [number, number], // Position is in units of pixels.\n\t\t\tthickness: number, // Thickness is in units of pixels.\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tendCaps?: boolean,\n\t\t\tnumCapSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState } = this;\n\t\tconst { program, position1, position2, thickness, input, output } = params;\n\t\tconst width = output ? output.width : this.width;\n\t\tconst height = output ? output.height : this.height;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._segmentProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_halfThickness', thickness / 2, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tconst diffX = position1[0] - position2[0];\n\t\tconst diffY = position1[1] - position2[1];\n\t\tconst angle = Math.atan2(diffY, diffX);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_rotation', angle, FLOAT);\n\t\tconst centerX = (position1[0] + position2[0]) / 2;\n\t\tconst centerY = (position1[1] + position2[1]) / 2;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [2 * centerX / this.width - 1, 2 * centerY / this.height - 1], FLOAT);\n\t\tconst length = Math.sqrt(diffX * diffX + diffY * diffY);\n\t\t\n\t\tconst numSegments = params.numCapSegments ? params.numCapSegments * 2 : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (params.endCaps) {\n\t\t\tif (numSegments < 6 || numSegments % 6 !== 0) {\n\t\t\t\tthrow new Error(`numSegments for GPUComposer.stepSegment must be divisible by 6, got ${numSegments}.`);\n\t\t\t}\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_internal_length', length - thickness * Math.sin(Math.PI / numSegments), FLOAT);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.getCirclePositionsBuffer(numSegments));\n\t\t} else {\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_internal_length', length - thickness, FLOAT);\n\t\t\t// Use a rectangle in case of no caps.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.quadPositionsBuffer);\n\t\t}\n\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.endCaps) {\n\t\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\n\t\t} else {\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepPolyline(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: [number, number][],\n\t\t\tthickness: number, // Thickness of line is in units of pixels.\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcloseLoop?: boolean,\n\t\t\tincludeUVs?: boolean,\n\t\t\tincludeNormals?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { program, input, output } = params;\n\t\tconst vertices = params.positions;\n\t\tconst closeLoop = !!params.closeLoop;\n\t\t\n\t\tconst { gl, width, height, errorState } = this;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Offset vertices.\n\t\tconst halfThickness = params.thickness / 2;\n\t\tconst numPositions = closeLoop ? vertices.length * 4 + 2 : (vertices.length - 1) * 4;\n\t\tconst positions = new Float32Array(2 * numPositions);\n\t\tconst uvs = params.includeUVs ? new Float32Array(2 * numPositions) : undefined;\n\t\tconst normals = params.includeNormals ? new Float32Array(2 * numPositions) : undefined;\n\n\t\t// tmp arrays.\n\t\tconst s1 = [0, 0];\n\t\tconst s2 = [0, 0];\n\t\tconst n1 = [0, 0];\n\t\tconst n2 = [0, 0];\n\t\tconst n3 = [0, 0];\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tif (!closeLoop && i === vertices.length - 1) continue;\n\t\t\t// Vertices on this segment.\n\t\t\tconst v1 = vertices[i];\n\t\t\tconst v2 = vertices[(i + 1) % vertices.length];\n\t\t\ts1[0] = v2[0] - v1[0];\n\t\t\ts1[1] = v2[1] - v1[1];\n\t\t\tconst length1 = Math.sqrt(s1[0] * s1[0] + s1[1] * s1[1]);\n\t\t\tn1[0] = s1[1] / length1;\n\t\t\tn1[1] = - s1[0] / length1;\n\n\t\t\tconst index = i * 4 + 2;\n\n\t\t\tif (!closeLoop && i === 0) {\n\t\t\t\t// Add starting points to positions array.\n\t\t\t\tpositions[0] = v1[0] + n1[0] * halfThickness;\n\t\t\t\tpositions[1] = v1[1] + n1[1] * halfThickness;\n\t\t\t\tpositions[2] = v1[0] - n1[0] * halfThickness;\n\t\t\t\tpositions[3] = v1[1] - n1[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[0] = 0;\n\t\t\t\t\tuvs[1] = 1;\n\t\t\t\t\tuvs[2] = 0;\n\t\t\t\t\tuvs[3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[0] = n1[0];\n\t\t\t\t\tnormals[1] = n1[1];\n\t\t\t\t\tnormals[2] = n1[0];\n\t\t\t\t\tnormals[3] = n1[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst u = (i + 1) / (vertices.length - 1);\n\n\t\t\t// Offset from v2.\n\t\t\tpositions[2 * index] = v2[0] + n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 1] = v2[1] + n1[1] * halfThickness;\n\t\t\tpositions[2 * index + 2] = v2[0] - n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 3] = v2[1] - n1[1] * halfThickness;\n\t\t\tif (uvs) {\n\t\t\t\tuvs[2 * index] = u;\n\t\t\t\tuvs[2 * index + 1] = 1;\n\t\t\t\tuvs[2 * index + 2] = u;\n\t\t\t\tuvs[2 * index + 3] = 0;\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[2 * index] = n1[0];\n\t\t\t\tnormals[2 * index + 1] = n1[1];\n\t\t\t\tnormals[2 * index + 2] = n1[0];\n\t\t\t\tnormals[2 * index + 3] = n1[1];\n\t\t\t}\n\n\t\t\tif ((i < vertices.length - 2) || closeLoop) {\n\t\t\t\t// Vertices on next segment.\n\t\t\t\tconst v3 = vertices[(i + 1) % vertices.length];\n\t\t\t\tconst v4 = vertices[(i + 2) % vertices.length];\n\t\t\t\ts2[0] = v4[0] - v3[0];\n\t\t\t\ts2[1] = v4[1] - v3[1];\n\t\t\t\tconst length2 = Math.sqrt(s2[0] * s2[0] + s2[1] * s2[1]);\n\t\t\t\tn2[0] = s2[1] / length2;\n\t\t\t\tn2[1] = - s2[0] / length2;\n\n\t\t\t\t// Offset from v3\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = v3[0] + n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = v3[1] + n2[1] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = v3[0] - n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = v3[1] - n2[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length))] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 1] = 1;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 2] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length))] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 1] = n2[1];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 2] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 3] = n2[1];\n\t\t\t\t}\n\n\t\t\t\t// Check the angle between adjacent segments.\n\t\t\t\tconst cross = n1[0] * n2[1] - n1[1] * n2[0];\n\t\t\t\tif (Math.abs(cross) < 1e-6) continue;\n\t\t\t\tn3[0] = n1[0] + n2[0];\n\t\t\t\tn3[1] = n1[1] + n2[1];\n\t\t\t\tconst length3 = Math.sqrt(n3[0] * n3[0] + n3[1] * n3[1]);\n\t\t\t\tn3[0] /= length3;\n\t\t\t\tn3[1] /= length3;\n\t\t\t\t// Make adjustments to positions.\n\t\t\t\tconst angle = Math.acos(n1[0] * n2[0] + n1[1] * n2[1]);\n\t\t\t\tconst offset = halfThickness / Math.cos(angle / 2);\n\t\t\t\tif (cross < 0) {\n\t\t\t\t\tpositions[2 * index] = v2[0] + n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 1] = v2[1] + n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = positions[2 * index];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = positions[2 * index + 1];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[2 * index + 2] = v2[0] - n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 3] = v2[1] - n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = positions[2 * index + 2];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = positions[2 * index + 3];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (closeLoop) {\n\t\t\t// Duplicate starting points to end of positions array.\n\t\t\tpositions[vertices.length * 8] = positions[0];\n\t\t\tpositions[vertices.length * 8 + 1] = positions[1];\n\t\t\tpositions[vertices.length * 8 + 2] = positions[2];\n\t\t\tpositions[vertices.length * 8 + 3] = positions[3];\n\t\t\tif (uvs) {\n\t\t\t\tuvs[vertices.length * 8] = uvs[0];\n\t\t\t\tuvs[vertices.length * 8 + 1] = uvs[1];\n\t\t\t\tuvs[vertices.length * 8 + 2] = uvs[2];\n\t\t\t\tuvs[vertices.length * 8 + 3] = uvs[3];\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[vertices.length * 8] = normals[0];\n\t\t\t\tnormals[vertices.length * 8 + 1] = normals[1];\n\t\t\t\tnormals[vertices.length * 8 + 2] = normals[2];\n\t\t\t\tnormals[vertices.length * 8 + 3] = normals[3];\n\t\t\t}\n\t\t}\n\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(positions)!);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(uvs)!);\n\t\t\tthis.setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(normals)!);\n\t\t\tthis.setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, numPositions);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepTriangleStrip(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: Float32Array,\n\t\t\tnormals?: Float32Array,\n\t\t\tuvs?: Float32Array,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcount?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\n\t\tconst { program, input, output, positions, uvs, normals } = params;\n\t\tconst { gl, width, height, errorState } = this;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(positions)!);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(uvs)!);\n\t\t\tthis.setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(normals)!);\n\t\t\tthis.setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\tconst count = params.count ? params.count : positions.length / 2;\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepLines(params: {\n\t\tprogram: GPUProgram,\n\t\tpositions: Float32Array,\n\t\tindices?: Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\tnormals?: Float32Array,\n\t\tuvs?: Float32Array,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\tcount?: number,\n\t\tcloseLoop?: boolean,\n\t\tshouldBlendAlpha?: boolean,\n\t}) {\n\t\tconst { gl, errorState, width, height } = this;\n\t\tconst { indices, uvs, normals, input, output, program } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && indices) {\n\t\t\tthrow new Error(`GPUComposer.stepLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\t\t\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\tconst count = params.count ? params.count : (indices ? indices.length : (params.positions.length / 2));\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\tif (indices) {\n\t\t\t// Reorder positions array to match indices.\n\t\t\tconst positions = new Float32Array(2 * count);\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst index = indices[i];\n\t\t\t\tpositions[2 * i] = params.positions[2 * index];\n\t\t\t\tpositions[2 * i + 1] = params.positions[2 * index + 1];\n\t\t\t}\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(positions)!);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(params.positions)!);\n\t\t}\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(uvs)!);\n\t\t\tthis.setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(normals)!);\n\t\t\tthis.setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsPoints(\n\t\tparams: {\n\t\t\tpositions: GPULayer, // Positions in units of pixels.\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tpointSize?: number,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, pointIndexArray, width, height } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check that numPoints is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawPoints() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\tconst { length } = positions;\n\t\tconst count = params.count || length;\n\t\tif (count > length) {\n\t\t\tthrow new Error(`Invalid count ${count} for position GPULayer of length ${length}.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);\n\t\t\tconst color = params.color || [1, 0, 0]; // Default of red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._GPULayerPointsProgram!;\n\n\t\t// Add positions to end of input if needed.\n\t\tconst input = this.addLayerToInputs(positions, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positions', input.indexOf(positions), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 / width, 1 / height], FLOAT);\n\t\t// Tell whether we are using an absolute position (2 components), or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionWithAccumulation', positions.numComponents === 4 ? 1 : 0, INT);\n\t\t// Set default pointSize.\n\t\tconst pointSize = params.pointSize || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_pointSize', pointSize, FLOAT);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapX', params.wrapX ? 1 : 0, INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapY', params.wrapY ? 1 : 0, INT);\n\t\tif (this.pointIndexBuffer === undefined || (pointIndexArray && pointIndexArray.length < count)) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\tthis.pointIndexArray = indices;\n\t\t\tthis.pointIndexBuffer = this.initVertexBuffer(indices);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.pointIndexBuffer!);\n\t\tthis.setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.POINTS, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsLines(\n\t\tparams: {\n\t\t\tpositions: GPULayer,\n\t\t\tindices?: Float32Array | Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tcloseLoop?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, width, height } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check that positions is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && params.indices) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = params.wrapX || params.wrapY ? this.wrappedLineColorProgram : this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._GPULayerLinesProgram!;\n\n\t\t// Add positionLayer to end of input if needed.\n\t\tconst input = this.addLayerToInputs(positions, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// TODO: cache indexArray if no indices passed in.\n\t\tconst indices = params.indices ? params.indices : initSequentialFloatArray(params.count || positions.length);\n\t\tconst count = params.count ? params.count : indices.length;\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positions', input.indexOf(positions), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 / width, 1 / height], FLOAT);\n\t\t// Tell whether we are using an absolute position (2 components), or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionWithAccumulation', positions.numComponents === 4 ? 1 : 0, INT);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapX', params.wrapX ? 1 : 0, INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapY', params.wrapY ? 1 : 0, INT);\n\t\tif (this.indexedLinesIndexBuffer === undefined) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tlet floatArray: Float32Array;\n\t\t\tif (indices.constructor !== Float32Array) {\n\t\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\t\tfloatArray = new Float32Array(indices.length);\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\tfloatArray[i] = indices[i];\n\t\t\t\t}\n\t\t\t\tconsole.warn(`Converting indices array of type ${indices.constructor} to Float32Array in GPUComposer.drawIndexedLines for WebGL compatibility, you may want to use a Float32Array to store this information so the conversion is not required.`);\n\t\t\t} else {\n\t\t\t\tfloatArray = indices as Float32Array;\n\t\t\t}\n\t\t\tthis.indexedLinesIndexBuffer = this.initVertexBuffer(floatArray);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.indexedLinesIndexBuffer!);\n\t\t\t// Copy buffer data.\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\t\t}\n\t\tthis.setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsVectorField(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tvectorSpacing?: number,\n\t\t\tvectorScale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, vectorFieldIndexArray, width, height } = this;\n\t\tconst { data, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check that field is valid.\n\t\tif (data.numComponents !== 2) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsVectorField() must be passed a fieldLayer with 2 components, got fieldLayer \"${data.name}\" with ${data.numComponents} components.`)\n\t\t}\n\t\t// Check aspect ratio.\n\t\t// const dimensions = [vectorLayer.width, vectorLayer.height];\n\t\t// if (Math.abs(dimensions[0] / dimensions[1] - width / height) > 0.01) {\n\t\t// \tthrow new Error(`Invalid aspect ratio ${(dimensions[0] / dimensions[1]).toFixed(3)} vector GPULayer with dimensions [${dimensions[0]}, ${dimensions[1]}], expected ${(width / height).toFixed(3)}.`);\n\t\t// }\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._GPULayerVectorFieldProgram!;\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this.addLayerToInputs(data, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_vectors', input.indexOf(data), INT);\n\t\t// Set default scale.\n\t\tconst vectorScale = params.vectorScale || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [vectorScale / width, vectorScale / height], FLOAT);\n\t\tconst vectorSpacing = params.vectorSpacing || 10;\n\t\tconst spacedDimensions = [Math.floor(width / vectorSpacing), Math.floor(height / vectorSpacing)] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_dimensions', spacedDimensions, FLOAT);\n\t\tconst length = 2 * spacedDimensions[0] * spacedDimensions[1];\n\t\tif (this.vectorFieldIndexBuffer === undefined || (vectorFieldIndexArray && vectorFieldIndexArray.length < length)) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\tthis.vectorFieldIndexArray = indices;\n\t\t\tthis.vectorFieldIndexBuffer = this.initVertexBuffer(indices);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vectorFieldIndexBuffer!);\n\t\tthis.setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.LINES, 0, length);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerMagnitude(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tscale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, quadPositionsBuffer } = this;\n\t\tconst { data, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst program = this.vectorMagnitudeProgramForType(data.type);\n\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\tprogram.setUniform('u_color', color, FLOAT);\n\t\tconst scale = params.scale || 1;\n\t\tprogram.setUniform('u_scale', scale, FLOAT);\n\t\tprogram.setUniform('u_internal_numDimensions', data.numComponents, INT);\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this.addLayerToInputs(data, params.input);\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_data', input.indexOf(data), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, quadPositionsBuffer);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tattachGPULayerToThreeTexture(GPULayer: GPULayer, texture: Texture) {\n\t\tif (!this.renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer.');\n\t\t}\n\t\t// Link webgl texture to threejs object.\n\t\t// This is not officially supported.\n\t\tif (GPULayer.numBuffers > 1) {\n\t\t\tthrow new Error(`GPULayer \"${GPULayer.name}\" contains multiple WebGL textures (one for each buffer) that are flip-flopped during compute cycles, please choose a GPULayer with one buffer.`);\n\t\t}\n\t\tconst offsetTextureProperties = this.renderer.properties.get(texture);\n\t\toffsetTextureProperties.__webglTexture = GPULayer.currentState;\n\t\toffsetTextureProperties.__webglInit = true;\n\t}\n\n\tresetThreeState() {\n\t\tif (!this.renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer, use GPUComposer.initWithThreeRenderer() to initialize GPUComposer instead.');\n\t\t}\n\t\tconst { gl } = this;\n\t\t// Reset viewport.\n\t\tconst viewport = this.renderer.getViewport(new utils.Vector4() as Vector4);\n\t\tgl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n\t\t// Unbind framebuffer (render to screen).\n\t\tthis.renderer.setRenderTarget(null);\n\t\t// Reset texture bindings.\n\t\tthis.renderer.resetState();\n\t}\n\t\n\tdispose() {\n\t\tconst {\n\t\t\tgl, verboseLogging,\n\t\t\t_vertexShaders,\n\t\t\tcopyPrograms, setValuePrograms, vectorMagnitudePrograms,\n\t\t} = this;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUComposer.`);\n\n\t\t// TODO: delete buffers.\n\n\t\t// Delete vertex shaders.\n\t\tObject.values(_vertexShaders).forEach(vertexShader => {\n\t\t\tif (vertexShader.shader) {\n\t\t\t\tgl.deleteShader(vertexShader.shader);\n\t\t\t\tdelete vertexShader.shader;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Delete fragment shaders.\n\t\tObject.values(copyPrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(copyPrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete copyPrograms[key];\n\t\t});\n\t\tObject.values(setValuePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(setValuePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete setValuePrograms[key];\n\t\t});\n\t\tObject.values(vectorMagnitudePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(vectorMagnitudePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete vectorMagnitudePrograms[key];\n\t\t});\n\t\tthis._wrappedLineColorProgram?.dispose();\n\t\tdelete this._wrappedLineColorProgram;\n\n\t\tdelete this.renderer;\n\t\t// @ts-ignore\n\t\tdelete this.gl;\n\n\t\t// GL context will be garbage collected by webgl.\n\t}\n}","import { setFloat16, getFloat16 } from '@petamoriken/float16';\n// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { saveAs } from 'file-saver';\nimport { GPUComposer } from './GPUComposer';\nimport {\n\tisNumber,\n\tisPositiveInteger,\n\tisValidClearValue,\n\tisValidDataType,\n\tisValidFilter,\n\tisValidWrap,\n} from './checks';\nimport {\n\tHALF_FLOAT,\n\tFLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tNEAREST,\n\tLINEAR,\n\tCLAMP_TO_EDGE,\n\tGPULayerArray,\n\tGPULayerFilter,\n\tGPULayerNumComponents,\n\tGPULayerType,\n\tGPULayerWrap,\n\tGLSL1,\n\tGPULayerBuffer,\n\tvalidArrayTypes,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidDataTypes,\n } from './constants';\nimport {\n\treadyToRead,\n} from './utils';\nimport {\n\tcalcGPULayerSize,\n\tgetGLTextureParameters,\n\tgetGPULayerInternalFilter,\n\tgetGPULayerInternalType,\n\tgetGPULayerInternalWrap,\n\tinitArrayForType,\n} from './GPULayerHelpers';\n\nexport class GPULayer {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly composer: GPUComposer;\n\n\treadonly name: string; // Name of GPULayer, used for error logging.\n\treadonly type: GPULayerType; // Input type passed in during setup.\n\treadonly numComponents: GPULayerNumComponents; // Number of RGBA channels to use for this GPULayer.\n\treadonly filter: GPULayerFilter; // Interpolation filter for pixel read operations.\n\treadonly wrapS: GPULayerWrap; // Input wrap type passed in during setup.\n\treadonly wrapT: GPULayerWrap; // Input wrap type passed in during setup.\n\treadonly writable: boolean;\n\tprivate _clearValue!: number | number[]; // Value to set when clear() is called.\n\n\t// Each GPULayer may contain a number of buffers to store different instances of the state.\n\t// e.g [currentState, previousState]\n\tprivate _bufferIndex = 0;\n\treadonly numBuffers;\n\tprivate readonly buffers: GPULayerBuffer[] = [];\n\n\t// Texture sizes.\n\t_length?: number; // This is only used for 1D data layers, _length is used internally, access with GPULayer.length.\n\tprivate _width: number; // Access with GPULayer.width.\n\tprivate _height: number; // Access with GPULayer.height.\n\n\t// GPULayer settings.\n\t// Due to variable browser support of WebGL features, \"internal\" variables may be different\n\t// from the parameter originally passed in.  These variables are set so that they match the original\n\t// parameter as best as possible, but fragment shader polyfills may be required.\n\t// All \"gl\" variables are used to initialize internal WebGLTexture.\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\treadonly glInternalFormat: number;\n\treadonly glFormat: number;\n\t// GPULayer.internalType corresponds to GPULayer.glType, may be different from GPULayer.type.\n\treadonly internalType: GPULayerType; \n\treadonly glType: number;\n\t// Internally, GPULayer.glNumChannels may represent a larger number of channels than GPULayer.numComponents.\n\t// For example, writable RGB textures are not supported in WebGL2, must use RGBA instead.\n\treadonly glNumChannels: number;\n\t// GPULayer.internalFilter corresponds to GPULayer.glFilter, may be different from GPULayer.filter.\n\treadonly internalFilter: GPULayerFilter;\n\treadonly glFilter: number;\n\t// GPULayer.internalWrapS corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapS.\n\treadonly internalWrapS: GPULayerWrap;\n\treadonly glWrapS: number;\n\t// GPULayer.internalWrapT corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapT.\n\treadonly internalWrapT: GPULayerWrap;\n\treadonly glWrapT: number;\n\t\n\t// Optimizations so that \"copying\" can happen without draw calls.\n\tprivate textureOverrides?: (WebGLTexture | undefined)[];\n\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\tdimensions: number | [number, number],\n\t\t\ttype: GPULayerType,\n\t\t\tnumComponents: GPULayerNumComponents,\n\t\t\tarray?: GPULayerArray | number[],\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\twritable?: boolean,\n\t\t\tnumBuffers?: number,\n\t\t\tclearValue?: number | number[],\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPULayer \"${name}\": must pass GPUComposer instance to GPULayer(composer, params).`);\n\t\t}\n\t\t// Check params.\n\t\tconst validKeys = ['name', 'dimensions', 'type', 'numComponents', 'array', 'filter', 'wrapS', 'wrapT', 'writable', 'numBuffers', 'clearValue'];\n\t\tconst requiredKeys = ['name', 'dimensions', 'type', 'numComponents'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPULayer(composer, params) with name \"${params.name}\".  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPUProgram(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { dimensions, type, numComponents, array } = params;\n\t\tconst { gl, _errorCallback, glslVersion } = composer;\n\n\t\t// Save params.\n\t\tthis.composer = composer;\n\t\tthis.name = name;\n\n\t\t// numComponents must be between 1 and 4.\n\t\tif (!isPositiveInteger(numComponents) || numComponents > 4) {\n\t\t\tthrow new Error(`Invalid numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t\t}\n\t\tthis.numComponents = numComponents;\n\n\t\t// Writable defaults to false.\n\t\tconst writable = !!params.writable;\n\t\tthis.writable = writable;\n\n\t\t// Set dimensions, may be 1D or 2D.\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, composer.verboseLogging);\n\t\tthis._length = length;\n\t\tif (!isPositiveInteger(width)) {\n\t\t\tthrow new Error(`Invalid width: ${width} for GPULayer \"${name}\".`);\n\t\t}\n\t\tthis._width = width;\n\t\tif (!isPositiveInteger(height)) {\n\t\t\tthrow new Error(`Invalid length: ${height} for GPULayer \"${name}\".`);\n\t\t}\n\t\tthis._height = height;\n\n\t\t// Set filtering - if we are processing a 1D array, default to NEAREST filtering.\n\t\t// Else default to LINEAR (interpolation) filtering for float types and NEAREST for integer types.\n\t\tconst defaultFilter = length ? NEAREST : ((type === FLOAT || type == HALF_FLOAT) ? LINEAR : NEAREST);\n\t\tconst filter = params.filter !== undefined ? params.filter : defaultFilter;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${filter} for GPULayer \"${name}\", must be one of [${validFilters.join(', ')}].`);\n\t\t}\n\t\t// Don't allow LINEAR filtering on integer types, it is not supported.\n\t\tif (filter === LINEAR && !(type === FLOAT || type == HALF_FLOAT)) {\n\t\t\tthrow new Error(`LINEAR filtering is not supported on integer types, please use NEAREST filtering for GPULayer \"${name}\" with type: ${type}.`);\n\t\t}\n\t\tthis.filter = filter;\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${wrapS} for GPULayer \"${name}\", must be one of [${validWraps.join(', ')}].`);\n\t\t}\n\t\tthis.wrapS = wrapS;\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${wrapT} for GPULayer \"${name}\", must be one of [${validWraps.join(', ')}].`);\n\t\t}\n\t\tthis.wrapT = wrapT;\n\n\t\t// Set data type.\n\t\tif (!isValidDataType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${type} for GPULayer \"${name}\", must be one of [${validDataTypes.join(', ')}].`);\n\t\t}\n\t\tthis.type = type;\n\t\tconst internalType = getGPULayerInternalType({\n\t\t\tgl,\n\t\t\ttype,\n\t\t\tglslVersion,\n\t\t\twritable,\n\t\t\tname,\n\t\t\terrorCallback: _errorCallback,\n\t\t});\n\t\tthis.internalType = internalType;\n\t\t// Set gl texture parameters.\n\t\tconst {\n\t\t\tglFormat,\n\t\t\tglInternalFormat,\n\t\t\tglType,\n\t\t\tglNumChannels,\n\t\t} = getGLTextureParameters({\n\t\t\tgl,\n\t\t\tname,\n\t\t\tnumComponents,\n\t\t\twritable,\n\t\t\tinternalType,\n\t\t\tglslVersion,\n\t\t\terrorCallback: _errorCallback,\n\t\t});\n\t\tthis.glInternalFormat = glInternalFormat;\n\t\tthis.glFormat = glFormat;\n\t\tthis.glType = glType;\n\t\tthis.glNumChannels = glNumChannels;\n\n\t\t// Set internal filtering/wrap types.\n\t\tthis.internalFilter = getGPULayerInternalFilter({ gl, filter, internalType, name, errorCallback: _errorCallback });\n\t\tthis.glFilter = gl[this.internalFilter];\n\t\tthis.internalWrapS = getGPULayerInternalWrap({ gl, wrap: wrapS, name });\n\t\tthis.glWrapS = gl[this.internalWrapS];\n\t\tthis.internalWrapT = getGPULayerInternalWrap({ gl, wrap: wrapT, name });\n\t\tthis.glWrapT = gl[this.internalWrapT];\n\n\t\t// Num buffers is the number of states to store for this data.\n\t\tconst numBuffers = params.numBuffers !== undefined ? params.numBuffers : 1;\n\t\tif (!isPositiveInteger(numBuffers)) {\n\t\t\tthrow new Error(`Invalid numBuffers: ${numBuffers} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tthis.numBuffers = numBuffers;\n\n\t\t// clearValue defaults to zero.\n\t\t// Wait until after type has been set to set clearValue.\n\t\tconst clearValue = params.clearValue !== undefined ? params.clearValue : 0;\n\t\tthis.clearValue = clearValue; // Setter can only be called after this.numComponents has been set.\n\n\t\tthis.initBuffers(array);\n\t}\n\n\tget bufferIndex() {\n\t\treturn this._bufferIndex;\n\t}\n\n\tsaveCurrentStateToGPULayer(layer: GPULayer) {\n\t\t// A method for saving a copy of the current state without a draw call.\n\t\t// Draw calls are expensive, this optimization helps.\n\t\tif (this.numBuffers < 2) {\n\t\t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" with less than 2 buffers.`);\n\t\t}\n\t\tif (!this.writable) {\n\t\t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on read-only GPULayer \"${this.name}\".`);\n\t\t}\n\t\tif (layer.writable) {\n\t\t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" using writable GPULayer \"${layer.name}\".`)\n\t\t}\n\t\t// Check that texture params are the same.\n\t\tif (layer.glWrapS !== this.glWrapS || layer.glWrapT !== this.glWrapT ||\n\t\t\tlayer.wrapS !== this.wrapS || layer.wrapT !== this.wrapT ||\n\t\t\tlayer.width !== this.width || layer.height !== this.height ||\n\t\t\tlayer.glFilter !== this.glFilter || layer.filter !== this.filter ||\n\t\t\tlayer.glNumChannels !== this.glNumChannels || layer.numComponents !== this.numComponents ||\n\t\t\tlayer.glType !== this.glType || layer.type !== this.type ||\n\t\t\tlayer.glFormat !== this.glFormat || layer.glInternalFormat !== this.glInternalFormat) {\n\t\t\t\tthrow new Error(`Incompatible texture params between GPULayers \"${layer.name}\" and \"${this.name}\".`);\n\t\t}\n\n\t\t// If we have not already inited overrides array, do so now.\n\t\tif (!this.textureOverrides) {\n\t\t\tthis.textureOverrides = [];\n\t\t\tfor (let i = 0; i < this.numBuffers; i++) {\n\t\t\t\tthis.textureOverrides.push(undefined);\n\t\t\t}\n\t\t}\n\n\t\t// Check if we already have an override in place.\n\t\tif (this.textureOverrides[this.bufferIndex]) {\n\t\t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\", this GPULayer has not written new state since last call to GPULayer.saveCurrentStateToGPULayer.`);\n\t\t}\n\t\tconst { currentState } = this;\n\t\tthis.textureOverrides[this.bufferIndex] = currentState;\n\t\t// Swap textures.\n\t\tthis.buffers[this.bufferIndex].texture = layer.currentState;\n\t\tlayer._setCurrentStateTexture(currentState);\n\n\t\t// Bind swapped texture to framebuffer.\n\t\tconst { gl } = this.composer;\n\t\tconst { framebuffer, texture } = this.buffers[this.bufferIndex];\n\t\tif (!framebuffer) throw new Error(`No framebuffer for writable GPULayer \"${this.name}\".`);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t// Unbind.\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\t// This is used internally.\n\t_setCurrentStateTexture(texture: WebGLTexture) {\n\t\tif (this.writable) {\n\t\t\tthrow new Error(`Can't call GPULayer._setCurrentStateTexture on writable texture \"${this.name}\".`);\n\t\t}\n\t\tthis.buffers[this.bufferIndex].texture = texture;\n\t}\n\n\tprivate validateDataArray(array: GPULayerArray | number[]) {\n\t\tconst { numComponents, glNumChannels, internalType, width, height } = this;\n\t\tconst length = this._length;\n\n\t\t// Check that data is correct length (user error).\n\t\tif (array.length !== width * height * numComponents) { // Either the correct length for WebGLTexture size\n\t\t\tif (!length || (length &&  array.length !== length * numComponents)) { // Of the correct length for 1D array.\n\t\t\t\tthrow new Error(`Invalid data length: ${array.length} for GPULayer \"${this.name}\" of ${length ? `length ${length} and ` : ''}dimensions: [${width}, ${height}] and numComponents: ${numComponents}.`);\n\t\t\t}\n\t\t}\n\n\t\t// Get array type to figure out if we need to type cast.\n\t\t// For webgl1.0 we may need to cast an int type to a FLOAT or HALF_FLOAT.\n\t\tlet shouldTypeCast = false;\n\t\tswitch(array.constructor) {\n\t\t\tcase Array:\n\t\t\t\tshouldTypeCast = true;\n\t\t\t\tbreak;\n\t\t\tcase Float32Array:\n\t\t\t\tshouldTypeCast = internalType !== FLOAT;\n\t\t\t\tbreak;\n\t\t\tcase Uint8Array:\n\t\t\t\tshouldTypeCast = internalType !== UNSIGNED_BYTE;\n\t\t\t\tbreak;\n\t\t\tcase Int8Array:\n\t\t\t\tshouldTypeCast = internalType !== BYTE;\n\t\t\t\tbreak;\n\t\t\tcase Uint16Array:\n\t\t\t\tshouldTypeCast = internalType !== UNSIGNED_SHORT;\n\t\t\t\tbreak;\n\t\t\tcase Int16Array:\n\t\t\t\tshouldTypeCast = internalType !== SHORT;\n\t\t\t\tbreak;\n\t\t\tcase Uint32Array:\n\t\t\t\tshouldTypeCast = internalType !== UNSIGNED_INT;\n\t\t\t\tbreak;\n\t\t\tcase Int32Array:\n\t\t\t\tshouldTypeCast = internalType !== INT;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid array type: ${array.constructor.name} for GPULayer \"${this.name}\", please use one of [${validArrayTypes.map(constructor => constructor.name).join(', ')}].`);\n\t\t}\n\n\t\tconst imageSize = width * height * glNumChannels;\n\t\t// Then check if array needs to be lengthened.\n\t\t// This could be because glNumChannels !== numComponents.\n\t\t// Or because length !== width * height.\n\t\tconst incorrectSize = array.length !== imageSize;\n\t\t// We have to handle the case of Float16 specially by converting data to Uint16Array.\n\t\tconst handleFloat16 = internalType === HALF_FLOAT;\n\t\t\n\t\tlet validatedArray = array as GPULayerArray;\n\t\tif (shouldTypeCast || incorrectSize || handleFloat16) {\n\t\t\tvalidatedArray = initArrayForType(internalType, imageSize);\n\t\t\t// Fill new data array with old data.\n\t\t\tconst view = handleFloat16 ? new DataView(validatedArray.buffer) : null;\n\t\t\tfor (let i = 0, _len = array.length / numComponents; i < _len; i++) {\n\t\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\t\tconst value = array[i * numComponents + j];\n\t\t\t\t\tconst index = i * glNumChannels + j;\n\t\t\t\t\tif (handleFloat16) {\n\t\t\t\t\t\tsetFloat16(view!, 2 * index, value, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalidatedArray[index] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn validatedArray;\n\t}\n\n\tprivate initBuffers(\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst {\n\t\t\tname,\n\t\t\tnumBuffers,\n\t\t\tcomposer,\n\t\t\tglInternalFormat,\n\t\t\tglFormat,\n\t\t\tglType,\n\t\t\tglFilter,\n\t\t\tglWrapS,\n\t\t\tglWrapT,\n\t\t\twritable,\n\t\t\twidth,\n\t\t\theight,\n\t\t} = this;\n\t\tconst { gl, _errorCallback } = composer;\n\n\t\tconst validatedArray = array ? this.validateDataArray(array) : undefined;\n\n\t\t// Init a texture for each buffer.\n\t\tfor (let i = 0; i < numBuffers; i++) {\n\t\t\tconst texture = gl.createTexture();\n\t\t\tif (!texture) {\n\t\t\t\t_errorCallback(`Could not init texture for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\t\t// TODO: are there other params to look into:\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, glWrapS);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, glWrapT);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glFilter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glFilter);\n\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, validatedArray ? validatedArray : null);\n\t\t\t\n\t\t\tconst buffer: GPULayerBuffer = {\n\t\t\t\ttexture,\n\t\t\t};\n\n\t\t\tif (writable) {\n\t\t\t\t// Init a framebuffer for this texture so we can write to it.\n\t\t\t\tconst framebuffer = gl.createFramebuffer();\n\t\t\t\tif (!framebuffer) {\n\t\t\t\t\t_errorCallback(`Could not init framebuffer for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\t\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\t\tif(status != gl.FRAMEBUFFER_COMPLETE){\n\t\t\t\t\t_errorCallback(`Invalid status for framebuffer for GPULayer \"${name}\": ${status}.`);\n\t\t\t\t}\n\n\t\t\t\t// Add framebuffer.\n\t\t\t\tbuffer.framebuffer = framebuffer;\n\t\t\t}\n\t\t\t\n\t\t\t// Save this buffer to the list.\n\t\t\tthis.buffers.push(buffer);\n\t\t}\n\t\t// Unbind.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\tgetStateAtIndex(index: number) {\n\t\tif (index < 0 || index >= this.numBuffers) {\n\t\t\tthrow new Error(`Invalid buffer index: ${index} for GPULayer \"${this.name}\" with ${this.numBuffers} buffer${this.numBuffers > 1 ? 's' : ''}.`)\n\t\t}\n\t\tif (this.textureOverrides && this.textureOverrides[index]) return this.textureOverrides[index]!;\n\t\treturn this.buffers[index].texture;\n\t}\n\n\tget currentState() {\n\t\treturn this.getStateAtIndex(this.bufferIndex);\n\t}\n\n\tget lastState() {\n\t\tif (this.numBuffers === 1) {\n\t\t\tthrow new Error(`Cannot access lastState on GPULayer \"${this.name}\" with only one buffer.`);\n\t\t}\n\t\treturn this.getStateAtIndex((this.bufferIndex - 1 + this.numBuffers) % this.numBuffers);\n\t}\n\n\t// This is used internally.\n\t_usingTextureOverrideForCurrentBuffer() {\n\t\treturn this.textureOverrides && this.textureOverrides[this.bufferIndex];\n\t}\n\n\tincrementBufferIndex() {\n\t\t// Increment bufferIndex.\n\t\tthis._bufferIndex = (this.bufferIndex + 1) % this.numBuffers;\n\t}\n\n\t// This is used internally.\n\t_bindOutputBufferForWrite(\n\t\tincrementBufferIndex: boolean,\n\t) {\n\t\tif (incrementBufferIndex) {\n\t\t\tthis.incrementBufferIndex();\n\t\t}\n\t\tthis._bindOutputBuffer();\n\n\t\t// We are going to do a data write, if we have overrides enabled, we can remove them.\n\t\tif (this.textureOverrides) {\n\t\t\tthis.textureOverrides[this.bufferIndex] = undefined;\n\t\t}\n\t}\n\n\t// This is used internally.\n\t_bindOutputBuffer() {\n\t\tconst { gl } = this.composer;\n\t\tconst { framebuffer } = this.buffers[this.bufferIndex];\n\t\tif (!framebuffer) {\n\t\t\tthrow new Error(`GPULayer \"${this.name}\" is not writable.`);\n\t\t}\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t}\n\n\tsetFromArray(array: GPULayerArray | number[], applyToAllBuffers = false) {\n\t\tconst { composer, glInternalFormat, glFormat, glType, numBuffers, width, height, bufferIndex } = this;\n\t\tconst { gl } = composer;\n\t\tconst validatedArray = this.validateDataArray(array);\n\t\t// TODO: check that this is working.\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tconst texture = this.getStateAtIndex(i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, validatedArray);\n\t\t}\n\t\t// Unbind texture.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tresize(\n\t\tdimensions: number | [number, number],\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst { name, composer } = this;\n\t\tconst { verboseLogging } = composer;\n\t\tif (verboseLogging) console.log(`Resizing GPULayer \"${name}\" to ${JSON.stringify(dimensions)}.`);\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, verboseLogging);\n\t\tthis._length = length;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis.destroyBuffers();\n\t\tthis.initBuffers(array);\n\t}\n\n\tget clearValue() {\n\t\treturn this._clearValue;\n\t}\n\n\tset clearValue(clearValue: number | number[]) {\n\t\tconst { numComponents, type } = this;\n\t\tif (!isValidClearValue(clearValue, numComponents, type)) {\n\t\t\tthrow new Error(`Invalid clearValue: ${JSON.stringify(clearValue)} for GPULayer \"${this.name}\", expected ${type} or array of ${type} of length ${numComponents}.`);\n\t\t}\n\t\tthis._clearValue = clearValue;\n\t}\n\n\tclear(applyToAllBuffers = false) {\n\t\tconst { name, composer, clearValue, numBuffers, bufferIndex, type } = this;\n\t\tconst { verboseLogging } = composer;\n\t\tif (verboseLogging) console.log(`Clearing GPULayer \"${name}\".`);\n\n\t\tconst value: number[] = [];\n\t\tif (isNumber(clearValue)) {\n\t\t\tvalue.push(clearValue as number, clearValue as number, clearValue as number, clearValue as number);\n\t\t} else {\n\t\t\tvalue.push(...clearValue as number[]);\n\t\t\tfor (let j = value.length; j < 4; j++) {\n\t\t\t\tvalue.push(0);\n\t\t\t}\n\t\t}\n\t\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tif (this.writable) {\n\t\t\tconst program = composer._setValueProgramForType(type);\n\t\t\tprogram.setUniform('u_value', value as [number, number, number, number]);\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t// Write clear value to buffers.\n\t\t\t\tcomposer.step({\n\t\t\t\t\tprogram,\n\t\t\t\t\toutput: this,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// Init a typed array containing clearValue and pass to buffers.\n\t\t\tconst {\n\t\t\t\twidth, height, glNumChannels, internalType,\n\t\t\t\tglInternalFormat, glFormat, glType,\n\t\t\t} = this;\n\t\t\tconst { gl } = composer;\n\t\t\tconst fillLength = this._length ? this._length : width * height;\n\t\t\tconst array = initArrayForType(internalType, width * height * glNumChannels);\n\t\t\tconst float16View = internalType === HALF_FLOAT ? new DataView(array.buffer) : null;\n\t\t\tfor (let j = 0; j < fillLength; j++) {\n\t\t\t\tfor (let k = 0; k < glNumChannels; k++) {\n\t\t\t\t\tconst index = j * glNumChannels + k;\n\t\t\t\t\tif (internalType === HALF_FLOAT) {\n\t\t\t\t\t\t// Float16s need to be handled separately.\n\t\t\t\t\t\tsetFloat16(float16View!, 2 * index, value[k], true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray[index] = value[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst texture = this.getStateAtIndex(i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, array);\n\t\t\t}\n\t\t\t// Unbind texture.\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t}\n\t}\n\n\tget width() {\n\t\treturn this._width;\n\t}\n\n\tget height() {\n\t\treturn this._height;\n\t}\n\n\tget length() {\n\t\tif (!this._length) {\n\t\t\tthrow new Error(`Cannot access length on 2D GPULayer \"${this.name}\".`);\n\t\t}\n\t\treturn this._length;\n\t}\n\n\tgetValues() {\n\t\tconst { width, height, composer, numComponents, type } = this;\n\t\tconst { gl, glslVersion } = composer;\n\n\t\t// In case GPULayer was not the last output written to.\n\t\tthis._bindOutputBuffer();\n\n\t\tlet { glNumChannels, glType, glFormat, internalType } = this;\n\t\tlet values;\n\t\tswitch (internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tif (gl.FLOAT !== undefined) {\n\t\t\t\t\t// Firefox requires that RGBA/FLOAT is used for readPixels of float16 types.\n\t\t\t\t\tglNumChannels = 4;\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tglType = gl.FLOAT;\n\t\t\t\t\tvalues = new Float32Array(width * height * glNumChannels);\n\t\t\t\t} else {\n\t\t\t\t\tvalues = new Uint16Array(width * height * glNumChannels);\n\t\t\t\t}\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak\n\t\t\tcase FLOAT:\n\t\t\t\t// Chrome and Firefox require that RGBA/FLOAT is used for readPixels of float32 types.\n\t\t\t\t// https://github.com/KhronosGroup/WebGL/issues/2747\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\tvalues = new Float32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tif (glslVersion === GLSL1) {\n\t\t\t\t\t// Firefox requires that RGBA/UNSIGNED_BYTE is used for readPixels of unsigned byte types.\n\t\t\t\t\tglNumChannels = 4;\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tvalues = new Uint8Array(width * height * glNumChannels);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Uint32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tglType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tglType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Int32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported internalType ${internalType} for getValues().`);\n\t\t}\n\n\t\tif (readyToRead(gl)) {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\n\t\t\tgl.readPixels(0, 0, width, height, glFormat, glType, values);\n\t\t\tconst OUTPUT_LENGTH = (this._length ? this._length : width * height) * numComponents;\n\n\t\t\t// Convert uint16 to float32 if needed.\n\t\t\tconst handleFloat16Conversion = internalType === HALF_FLOAT && values.constructor === Uint16Array;\n\t\t\t// @ts-ignore\n\t\t\tconst view = handleFloat16Conversion ? new DataView((values as Uint16Array).buffer) : undefined;\n\n\t\t\t// We may use a different internal type than the assigned type of the GPULayer.\n\t\t\tlet output: GPULayerArray = internalType === type ? values : initArrayForType(type, OUTPUT_LENGTH, true);\n\n\t\t\t// In some cases glNumChannels may be > numComponents.\n\t\t\tif (handleFloat16Conversion || output !== values || numComponents !== glNumChannels) {\n\t\t\t\tfor (let i = 0, length = width * height; i < length; i++) {\n\t\t\t\t\tconst index1 = i * glNumChannels;\n\t\t\t\t\tconst index2 = i * numComponents;\n\t\t\t\t\tif (index2 >= OUTPUT_LENGTH) break;\n\t\t\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\t\t\tif (handleFloat16Conversion) {\n\t\t\t\t\t\t\toutput[index2 + j] = getFloat16(view!, 2 * (index1 + j), true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toutput[index2 + j] = values[index1 + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (output.length !== OUTPUT_LENGTH) {\n\t\t\t\toutput = output.slice(0, OUTPUT_LENGTH);\n\t\t\t}\n\t\t\treturn output;\n\t\t} else {\n\t\t\tthrow new Error(`Unable to read values from Buffer with status: ${gl.checkFramebufferStatus(gl.FRAMEBUFFER)}.`);\n\t\t}\n\t}\n\n\tsavePNG(params: {\n\t\tfilename: string,\n\t\tdpi?: number,\n\t\tmultiplier?: number,\n\t\tcallback: (data: string | Blob, filename?: string) => void,\n\t}) {\n\t\tconst values = this.getValues();\n\t\tconst { width, height, type, name, numComponents } = this;\n\t\tlet { dpi } = params;\n\t\tconst callback = params.callback || saveAs;\n\t\tconst filename = params.filename || name;\n\t\tconst multiplier = params.multiplier ||\n\t\t\t(type === FLOAT || type === HALF_FLOAT) ? 255 : 1;\n\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n    \tcanvas.height = height;\n\t\tconst context = canvas.getContext('2d')!;\n\t\tconst imageData = context.getImageData(0, 0, width, height);\n\t\tconst buffer = imageData.data;\n\t\t// Have to flip the y axis since PNGs are written top to bottom.\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tconst index = y * width + x;\n\t\t\t\tconst indexFlipped = (height - 1 - y) * width + x;\n\t\t\t\tfor (let i = 0; i < numComponents; i++) {\n\t\t\t\t\tbuffer[4 * indexFlipped + i] = values[numComponents * index + i] * multiplier;\n\t\t\t\t}\n\t\t\t\tif (numComponents === 1) {\n\t\t\t\t\t// Make monochrome.\n\t\t\t\t\tbuffer[4 * indexFlipped + 1] = buffer[4 * indexFlipped];\n\t\t\t\t\tbuffer[4 * indexFlipped + 2] = buffer[4 * indexFlipped];\n\t\t\t\t}\n\t\t\t\tif (numComponents < 4) {\n\t\t\t\t\tbuffer[4 * indexFlipped + 3] = 255; // Set alpha channel to 255.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcontext.putImageData(imageData, 0, 0);\n\n\t\tcanvas!.toBlob((blob) => {\n\t\t\tif (!blob) {\n\t\t\t\tconsole.warn(`Problem saving PNG from GPULayer \"${name}\", unable to init blob.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (dpi) {\n\t\t\t\tchangeDpiBlob(blob, dpi).then((blob: Blob) =>{\n\t\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t}\n\t\t\t\n\t\t}, 'image/png');\n\t}\n\n\tprivate destroyBuffers() {\n\t\tconst { composer, buffers } = this;\n\t\tconst { gl } = composer;\n\t\tbuffers.forEach(buffer => {\n\t\t\tconst { framebuffer, texture } = buffer;\n\t\t\tgl.deleteTexture(texture);\n\t\t\tif (framebuffer) {\n\t\t\t\tgl.deleteFramebuffer(framebuffer);\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tdelete buffer.texture;\n\t\t\tdelete buffer.framebuffer;\n\t\t});\n\t\tbuffers.length = 0;\n\n\t\t// These are technically owned by another GPULayer,\n\t\t// so we are not responsible for deleting them from gl context.\n\t\tdelete this.textureOverrides;\n\t}\n\n\tdispose() {\n\t\tconst { name, composer } = this;\n\t\tconst { verboseLogging } = composer;\n\t\tif (verboseLogging) console.log(`Deallocating GPULayer \"${name}\".`);\n\t\n\t\tthis.destroyBuffers();\n\t\t// @ts-ignore\n\t\tdelete this.composer;\n\t}\n\n\tclone(name?: string) {\n\t\t// Make a deep copy.\n\t\treturn this.composer._cloneGPULayer(this, name);\n\t}\n}\n","import {\n\tisNumber,\n\tisPositiveInteger,\n} from './checks';\nimport {\n\tBYTE,\n\tCLAMP_TO_EDGE,\n\tFLOAT,\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tHALF_FLOAT,\n\tINT,\n\tNEAREST,\n\tSHORT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_INT,\n\tUNSIGNED_SHORT,\n\tErrorCallback,\n\tGLSLVersion,\n\tGLSL3,\n\tGPULayerNumComponents,\n\tGLSL1,\n} from './constants';\nimport {\n\tEXT_COLOR_BUFFER_FLOAT,\n\tgetExtension,\n\tOES_TEXTURE_FLOAT,\n\tOES_TEXTURE_FLOAT_LINEAR,\n\tOES_TEXTURE_HALF_FLOAT,\n\tOES_TEXTURE_HAlF_FLOAT_LINEAR,\n} from './extensions';\nimport { isWebGL2 } from './utils';\n\n// Memoize results.\nconst results = {\n\tframebufferWriteSupport: {} as { [key: string]: boolean },\n}\n\nexport function initArrayForType(\n\ttype: GPULayerType,\n\tlength: number,\n\thalfFloatsAsFloats = false,\n) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\t\tif (halfFloatsAsFloats) return new Float32Array(length);\n\t\t\treturn new Uint16Array(length);\n\t\tcase FLOAT:\n\t\t\treturn new Float32Array(length);\n\t\tcase UNSIGNED_BYTE:\n\t\t\treturn new Uint8Array(length);\n\t\tcase BYTE:\n\t\t\treturn new Int8Array(length);\n\t\tcase UNSIGNED_SHORT:\n\t\t\treturn new Uint16Array(length);\n\t\tcase SHORT:\n\t\t\treturn new Int16Array(length);\n\t\tcase UNSIGNED_INT:\n\t\t\treturn new Uint32Array(length);\n\t\tcase INT:\n\t\t\treturn new Int32Array(length);\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported type: ${type}.`);\n\t}\n}\n\nexport function calcGPULayerSize(\n\tsize: number | [number, number],\n\tname: string,\n\tverboseLogging: boolean,\n) {\n\tlet length, width, height;\n\tif (isNumber(size as number)) {\n\t\tif (!isPositiveInteger(size)) {\n\t\t\tthrow new Error(`Invalid length: ${size} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tlength = size as number;\n\t\t// Calc power of two width and height for length.\n\t\tlet exp = 1;\n\t\tlet remainder = length;\n\t\twhile (remainder > 2) {\n\t\t\texp++;\n\t\t\tremainder /= 2;\n\t\t}\n\t\twidth = Math.pow(2, Math.floor(exp / 2) + exp % 2);\n\t\theight = Math.pow(2, Math.floor(exp/2));\n\t\tif (verboseLogging) {\n\t\t\tconsole.log(`Using [${width}, ${height}] for 1D array of length ${size} in GPULayer \"${name}\".`);\n\t\t}\n\t} else {\n\t\twidth = (size as [number, number])[0];\n\t\tif (!isPositiveInteger(width)) {\n\t\t\tthrow new Error(`Invalid width: ${width} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\theight = (size as [number, number])[1];\n\t\tif (!isPositiveInteger(height)) {\n\t\t\tthrow new Error(`Invalid height: ${height} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t}\n\treturn { width, height, length };\n}\n\nexport function getGPULayerInternalWrap(\n\tparams: {\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\twrap: GPULayerWrap,\n\t\tname: string,\n\t},\n) {\n\tconst { gl, wrap, name } = params;\n\t// Webgl2.0 supports all combinations of types and filtering.\n\tif (isWebGL2(gl)) {\n\t\treturn wrap;\n\t}\n\t// CLAMP_TO_EDGE is always supported.\n\tif (wrap === CLAMP_TO_EDGE) {\n\t\treturn wrap;\n\t}\n\tif (!isWebGL2(gl)) {\n\t\t// TODO: we may want to handle this in the frag shader.\n\t\t// REPEAT and MIRROR_REPEAT wrap not supported for non-power of 2 textures in safari.\n\t\t// I've tested this and it seems that some power of 2 textures will work (512 x 512),\n\t\t// but not others (1024x1024), so let's just change all WebGL 1.0 to CLAMP.\n\t\t// Without this, we currently get an error at drawArrays():\n\t\t// \"WebGL: drawArrays: texture bound to texture unit 0 is not renderable.\n\t\t// It maybe non-power-of-2 and have incompatible texture filtering or is not\n\t\t// 'texture complete', or it is a float/half-float type with linear filtering and\n\t\t// without the relevant float/half-float linear extension enabled.\"\n\t\tconsole.warn(`Falling back to CLAMP_TO_EDGE wrapping for GPULayer \"${name}\" for WebGL 1.`);\n\t\treturn CLAMP_TO_EDGE;\n\t}\n\treturn wrap;\n}\n\nexport function getGPULayerInternalFilter(\n\tparams: {\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\tfilter: GPULayerFilter,\n\t\tinternalType: GPULayerType,\n\t\tname: string,\n\t\terrorCallback: ErrorCallback,\n\t},\n) {\n\tconst { gl, errorCallback, internalType, name } = params;\n\tlet { filter } = params;\n\tif (filter === NEAREST) {\n\t\t// NEAREST filtering is always supported.\n\t\treturn filter;\n\t}\n\n\tif (internalType === HALF_FLOAT) {\n\t\t// TODO: test if float linear extension is actually working.\n\t\tconst extension = getExtension(gl, OES_TEXTURE_HAlF_FLOAT_LINEAR, errorCallback, true)\n\t\t\t|| getExtension(gl, OES_TEXTURE_FLOAT_LINEAR, errorCallback, true);\n\t\tif (!extension) {\n\t\t\tconsole.warn(`Falling back to NEAREST filter for GPULayer \"${name}\".`);\n\t\t\t//TODO: add a fallback that does this filtering in the frag shader.\n\t\t\tfilter = NEAREST;\n\t\t}\n\t} if (internalType === FLOAT) {\n\t\tconst extension = getExtension(gl, OES_TEXTURE_FLOAT_LINEAR, errorCallback, true);\n\t\tif (!extension) {\n\t\t\tconsole.warn(`Falling back to NEAREST filter for GPULayer \"${name}\".`);\n\t\t\t//TODO: add a fallback that does this filtering in the frag shader.\n\t\t\tfilter = NEAREST;\n\t\t}\n\t}\n\treturn filter;\n}\n\nfunction shouldCastIntTypeAsFloat(\n\tparams: {\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\ttype: GPULayerType,\n\t\tglslVersion: GLSLVersion,\n\t}\n) {\n\tconst { gl, type, glslVersion } = params;\n\t// All types are supported by WebGL2 + glsl3.\n\tif (glslVersion === GLSL3 && isWebGL2(gl)) return false;\n\t// Int textures (other than UNSIGNED_BYTE) are not supported by WebGL1.0 or glsl1.x.\n\t// https://stackoverflow.com/questions/55803017/how-to-select-webgl-glsl-sampler-type-from-texture-format-properties\n\t// Use HALF_FLOAT/FLOAT instead.\n\t// Some large values of INT and UNSIGNED_INT are not supported unfortunately.\n\t// See tests for more information.\n\treturn type === BYTE || type === SHORT || type === INT || type === UNSIGNED_SHORT || type === UNSIGNED_INT;\n}\n\nexport function getGLTextureParameters(\n\tparams: {\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\tname: string,\n\t\tnumComponents: GPULayerNumComponents,\n\t\tinternalType: GPULayerType,\n\t\twritable: boolean,\n\t\tglslVersion: GLSLVersion,\n\t\terrorCallback: ErrorCallback,\n\t}\n) {\n\tconst { gl, errorCallback, name, numComponents, internalType, writable, glslVersion } = params;\n\t// https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\n\tlet glType: number | undefined,\n\t\tglFormat: number | undefined,\n\t\tglInternalFormat: number | undefined,\n\t\tglNumChannels: number | undefined;\n\n\tif (isWebGL2(gl)) {\n\t\tglNumChannels = numComponents;\n\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t\t// The sized internal format RGBxxx are not color-renderable for some reason.\n\t\t// If numComponents == 3 for a writable texture, use RGBA instead.\n\t\t// Page 5 of https://www.khronos.org/files/webgl20-reference-guide.pdf\n\t\tif (numComponents === 3 && writable) {\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\tif (internalType === FLOAT || internalType === HALF_FLOAT) {\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = gl.RGB;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t} else if (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t\t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\t\tif (writable) {\n\t\t\t\t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGBA.\n\t\t\t\tglNumChannels = 4;\n\t\t\t}\n\t\t\t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGB/RGBA.\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\tcase 2:\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = gl.RGB;\n\t\t\t\t\tglNumChannels = 3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tglNumChannels = 4;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t} else {\n\t\t\t// This case will only be hit by GLSL 3.\n\t\t\t// Int textures are not supported in GLSL1.\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGB_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tif (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t\t\t\tglInternalFormat = glFormat;\n\t\t\t\t} else {\n\t\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\tglType = gl.BYTE;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\tglType = gl.SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\tglType = gl.UNSIGNED_SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\tglType = gl.INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: ${internalType} for GPULayer \"${name}\".`);\n\t\t}\n\t} else {\n\t\t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\tif (writable) {\n\t\t\t// For read only textures in WebGL 1, use RGBA.\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\t// For read only textures in WebGL 1, use RGB/RGBA.\n\t\tswitch (numComponents) {\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\t\tglFormat = gl.RGB;\n\t\t\t\tglInternalFormat = gl.RGB;\n\t\t\t\tglNumChannels = 3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\tglInternalFormat = gl.RGBA;\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase FLOAT:\n\t\t\t\tglType = gl.FLOAT;\n\t\t\t\tbreak;\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT || getExtension(gl, OES_TEXTURE_HALF_FLOAT, errorCallback).HALF_FLOAT_OES as number;\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tbreak;\n\t\t\t// No other types are supported in glsl1.x\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: ${internalType} in WebGL 1.0 for GPULayer \"${name}\".`);\n\t\t}\n\t}\n\n\t// Check for missing params.\n\tif (glType === undefined || glFormat === undefined || glInternalFormat === undefined) {\n\t\tconst missingParams = [];\n\t\tif (glType === undefined) missingParams.push('glType');\n\t\tif (glFormat === undefined) missingParams.push('glFormat');\n\t\tif (glInternalFormat === undefined) missingParams.push('glInternalFormat');\n\t\tthrow new Error(`Invalid type: ${internalType} for numComponents: ${numComponents}, unable to init parameter${missingParams.length > 1 ? 's' : ''} ${missingParams.join(', ')} for GPULayer \"${name}\".`);\n\t}\n\tif (glNumChannels === undefined || numComponents < 1 || numComponents > 4 || glNumChannels < numComponents) {\n\t\tthrow new Error(`Invalid numChannels: ${glNumChannels} for numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t}\n\n\treturn {\n\t\tglFormat,\n\t\tglInternalFormat,\n\t\tglType,\n\t\tglNumChannels,\n\t};\n}\n\nfunction testFramebufferWrite(\n\tparams: {\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\ttype: GPULayerType,\n\t\tglslVersion: GLSLVersion,\n\t},\n) {\n\tconst { gl, type, glslVersion } = params;\n\n\tconst key = `${isWebGL2(gl),type,glslVersion}`;\n\tif (results.framebufferWriteSupport[key] !== undefined) {\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\n\tconst texture = gl.createTexture();\n\tif (!texture) {\n\t\tresults.framebufferWriteSupport[key] = false;\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t// Default to most widely supported settings.\n\tconst wrapS = gl[CLAMP_TO_EDGE];\n\tconst wrapT = gl[CLAMP_TO_EDGE];\n\tconst filter = gl[NEAREST];\n\t// Use non-power of two dimensions to check for more universal support.\n\t// (In case size of GPULayer is changed at a later point).\n\tconst width = 100;\n\tconst height = 100;\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\n\tconst { glInternalFormat, glFormat, glType } = getGLTextureParameters({\n\t\tgl,\n\t\tname: 'testFramebufferWrite',\n\t\tnumComponents: 1,\n\t\twritable: true,\n\t\tinternalType: type,\n\t\tglslVersion,\n\t\terrorCallback: () => {},\n\t});\n\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, null);\n\n\t// Init a framebuffer for this texture so we can write to it.\n\tconst framebuffer = gl.createFramebuffer();\n\tif (!framebuffer) {\n\t\t// Clear out allocated memory.\n\t\tgl.deleteTexture(texture);\n\t\tresults.framebufferWriteSupport[key] = false;\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\tconst validStatus = status === gl.FRAMEBUFFER_COMPLETE;\n\n\t// Clear out allocated memory.\n\tgl.deleteTexture(texture);\n\tgl.deleteFramebuffer(framebuffer);\n\n\tresults.framebufferWriteSupport[key] = validStatus;\n\treturn results.framebufferWriteSupport[key];\n}\n\nexport function getGPULayerInternalType(\n\tparams: {\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\ttype: GPULayerType,\n\t\tglslVersion: GLSLVersion,\n\t\twritable: boolean,\n\t\tname: string,\n\t\terrorCallback: ErrorCallback,\n\t},\n) {\n\tconst { gl, errorCallback, writable, name, glslVersion } = params;\n\tconst { type } = params;\n\tlet internalType = type;\n\t// Check if int types are supported.\n\tconst intCast = shouldCastIntTypeAsFloat(params);\n\tif (intCast) {\n\t\tif (internalType === UNSIGNED_BYTE || internalType === BYTE) {\n\t\t\t// Integers between 0 and 2048 can be exactly represented by half float (and also between −2048 and 0)\n\t\t\tinternalType = HALF_FLOAT;\n\t\t} else {\n\t\t\t// Integers between 0 and 16777216 can be exactly represented by float32 (also applies for negative integers between −16777216 and 0)\n\t\t\t// This is sufficient for UNSIGNED_SHORT and SHORT types.\n\t\t\t// Large UNSIGNED_INT and INT cannot be represented by FLOAT type.\n\t\t\tconsole.warn(`Falling back ${internalType} type to FLOAT type for glsl1.x support for GPULayer \"${name}\".\nLarge UNSIGNED_INT or INT with absolute value > 16,777,216 are not supported, on mobile UNSIGNED_INT, INT, UNSIGNED_SHORT, and SHORT with absolute value > 2,048 may not be supported.`);\n\t\t\tinternalType = FLOAT;\n\t\t}\n\t}\n\t// Check if float32 supported.\n\tif (!isWebGL2(gl)) {\n\t\tif (internalType === FLOAT) {\n\t\t\tconst extension = getExtension(gl, OES_TEXTURE_FLOAT, errorCallback, true);\n\t\t\tif (!extension) {\n\t\t\t\tconsole.warn(`FLOAT not supported, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t}\n\t\t\t// https://stackoverflow.com/questions/17476632/webgl-extension-support-across-browsers\n\t\t\t// Rendering to a floating-point texture may not be supported,\n\t\t\t// even if the OES_texture_float extension is supported.\n\t\t\t// Typically, this fails on current mobile hardware.\n\t\t\t// To check if this is supported, you have to call the WebGL\n\t\t\t// checkFramebufferStatus() function.\n\t\t\tif (writable) {\n\t\t\t\tconst valid = testFramebufferWrite({ gl, type: internalType, glslVersion });\n\t\t\t\tif (!valid && internalType !== HALF_FLOAT) {\n\t\t\t\t\tconsole.warn(`FLOAT not supported for writing operations, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Must support at least half float if using a float type.\n\t\tif (internalType === HALF_FLOAT) {\n\t\t\tgetExtension(gl, OES_TEXTURE_HALF_FLOAT, errorCallback);\n\t\t\t// TODO: https://stackoverflow.com/questions/54248633/cannot-create-half-float-oes-texture-from-uint16array-on-ipad\n\t\t\tif (writable) {\n\t\t\t\tconst valid = testFramebufferWrite({ gl, type: internalType, glslVersion });\n\t\t\t\tif (!valid) {\n\t\t\t\t\terrorCallback(`This browser does not support rendering to HALF_FLOAT textures.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Load additional extensions if needed.\n\tif (writable && isWebGL2(gl) && (internalType === HALF_FLOAT || internalType === FLOAT)) {\n\t\tgetExtension(gl, EXT_COLOR_BUFFER_FLOAT, errorCallback);\n\t}\n\treturn internalType;\n}\n","import { GPUComposer } from './GPUComposer';\nimport {\n\tisArray,\n\tisBoolean,\n\tisObject,\n\tisString,\n} from './checks';\nimport {\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tUniform,\n\tUniformType,\n\tUniformInternalType,\n\tUniformValue,\n\tCompileTimeVars,\n\tPROGRAM_NAME_INTERNAL,\n\tDEFAULT_PROGRAM_NAME,\n\tDEFAULT_W_UV_PROGRAM_NAME,\n\tDEFAULT_W_NORMAL_PROGRAM_NAME,\n\tDEFAULT_W_UV_NORMAL_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tDATA_LAYER_POINTS_PROGRAM_NAME,\n\tDATA_LAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tDATA_LAYER_LINES_PROGRAM_NAME,\n\tINT,\n\tUINT,\n\tGLSL1,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n} from './constants';\nimport {\n\tcompileShader,\n\tpreprocessFragmentShader,\n\tpreprocessVertexShader,\n\tinitGLProgram,\n\tuniformInternalTypeForValue,\n\tisWebGL2,\n} from './utils';\n\nexport class GPUProgram {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly composer: GPUComposer;\n\n\t// Name of GPUProgram, used for error logging.\n\treadonly name: string;\n\n\t// Compiled fragment shader.\n\tprivate fragmentShader!: WebGLShader;\n\t// Source code for fragment shader.\n\t// Hold onto this in case we need to recompile with different #defines.\n\tprivate readonly fragmentShaderSource: string;\n\t// #define variables for fragment shader program.\n\tprivate readonly defines: CompileTimeVars = {};\n\t// Uniform locations, values, and types.\n\tprivate readonly uniforms: { [ key: string]: Uniform } = {};\n\n\t// Store WebGLProgram's - we need to compile several WebGLPrograms of GPUProgram.fragmentShader + various vertex shaders.\n\t// Each combination of vertex + fragment shader requires a separate WebGLProgram.\n\t// These programs are compiled on the fly as needed.\n\tprivate readonly programs: {[key in PROGRAM_NAME_INTERNAL]?: WebGLProgram } = {};\n\n\t/**\n     * Create a GPUProgram.\n     * @param {GPUComposer} composer - The current GPUComposer instance.\n     * @param {Object} params - GPUProgram parameters.\n     */\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\t// We may want to pass in an array of shader string sources, if split across several files.\n\t\t\tfragmentShader: string | string[],\n\t\t\tuniforms?: {\n\t\t\t\tname: string,\n\t\t\t\tvalue: UniformValue,\n\t\t\t\ttype: UniformType,\n\t\t\t}[],\n\t\t\t// We'll allow some compile-time variables to be passed in as #define to the preprocessor for the fragment shader.\n\t\t\tdefines?: CompileTimeVars,\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPUProgram \"${name}\": must pass GPUComposer instance to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!params) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass params to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!isObject(params)) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass valid params object to GPUProgram(composer, params), got ${JSON.stringify(params)}.`);\n\t\t}\n\t\tconst validKeys = ['name', 'fragmentShader', 'uniforms', 'defines'];\n\t\tconst requiredKeys = ['name', 'fragmentShader'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPUProgram(composer, params) with name \"${name}\".  Valid keys are ${JSON.stringify(validKeys)}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPUProgram(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { fragmentShader, uniforms, defines } = params;\n\t\t\n\n\t\t// Save arguments.\n\t\tthis.composer = composer;\n\t\tthis.name = name;\n\n\t\t// Compile fragment shader.\n\t\tconst fragmentShaderSource = isString(fragmentShader) ?\n\t\t\tfragmentShader as string :\n\t\t\t(fragmentShader as string[]).join('\\n');\n\t\tthis.fragmentShaderSource = preprocessFragmentShader(\n\t\t\tfragmentShaderSource, composer.glslVersion,\n\t\t);\n\t\tthis.recompile(defines || this.defines);\n\n\t\tif (uniforms) {\n\t\t\tfor (let i = 0; i < uniforms.length; i++) {\n\t\t\t\tconst { name, value, type } = uniforms[i];\n\t\t\t\tthis.setUniform(name, value, type);\n\t\t\t}\n\t\t}\n\t}\n\n\trecompile(defines: CompileTimeVars) {\n\t\tconst { composer, name, fragmentShaderSource } = this;\n\t\tconst {\n\t\t\tgl,\n\t\t\t_errorCallback,\n\t\t\tverboseLogging,\n\t\t\tglslVersion,\n\t\t\tfloatPrecision,\n\t\t\tintPrecision,\n\t\t} = composer;\n\n\t\t// Update this.defines if needed.\n\t\t// Passed in defines param may only be a partial list.\n\t\tlet definesNeedUpdate = false;\n\t\tconst keys = Object.keys(defines);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tif (this.defines[key] !== defines[key]) {\n\t\t\t\tdefinesNeedUpdate = true;\n\t\t\t\tthis.defines[key] = defines[key];\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.fragmentShader && !definesNeedUpdate) {\n\t\t\t// No need to recompile.\n\t\t\treturn;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Compiling fragment shader for GPUProgram \"${name}\" with defines: ${JSON.stringify(this.defines)}`);\n\t\tconst shader = compileShader(\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t\tfragmentShaderSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\tname,\n\t\t\t_errorCallback,\n\t\t\tthis.defines,\n\t\t);\n\t\tif (!shader) {\n\t\t\t_errorCallback(`Unable to compile fragment shader for GPUProgram \"${name}\".`);\n\t\t\treturn;\n\t\t}\n\t\tthis.fragmentShader = shader;\n\t}\n\n\tprivate getProgramWithName(name: PROGRAM_NAME_INTERNAL) {\n\t\t// Check if we've already compiled program.\n\t\tif (this.programs[name]) return this.programs[name];\n\t\t// Otherwise, we need to compile a new program on the fly.\n\t\tconst { composer, uniforms, fragmentShader } = this;\n\t\tconst {\n\t\t\t_errorCallback,\n\t\t\t_vertexShaders,\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t} = composer;\n\t\tconst vertexShader = _vertexShaders[name];\n\t\tif (vertexShader.shader === undefined) {\n\t\t\tconst { composer } = this;\n\t\t\tconst { gl } = composer;\n\t\t\t// Init a vertex shader.\n\t\t\tif (vertexShader.src === '') {\n\t\t\t\tthrow new Error(`No source for vertex shader ${this.name} : ${name}`);\n\t\t\t}\n\t\t\tconst vertexShaderSource = preprocessVertexShader(vertexShader.src, glslVersion);\n\t\t\tconst shader = compileShader(\n\t\t\t\tgl,\n\t\t\t\tglslVersion,\n\t\t\t\tintPrecision,\n\t\t\t\tfloatPrecision,\n\t\t\t\tvertexShaderSource,\n\t\t\t\tgl.VERTEX_SHADER,\n\t\t\t\tthis.name,\n\t\t\t\t_errorCallback,\n\t\t\t\tvertexShader.defines,\n\t\t\t);\n\t\t\tif (!shader) {\n\t\t\t\t_errorCallback(`Unable to compile \"${name}\" vertex shader for GPUProgram \"${this.name}\".`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvertexShader.shader = shader;\n\t\t}\n\t\tconst program = initGLProgram(gl, fragmentShader, vertexShader.shader, this.name, _errorCallback);\n\t\tif (program === undefined) {\n\t\t\t_errorCallback(`Unable to init program \"${name}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\t// If we have any uniforms set for this GPUProgram, add those to WebGLProgram we just inited.\n\t\tconst uniformNames = Object.keys(uniforms);\n\t\tfor (let i = 0; i < uniformNames.length; i++) {\n\t\t\tconst uniformName = uniformNames[i];\n\t\t\tconst uniform = uniforms[uniformName];\n\t\t\tconst { value, type } = uniform;\n\t\t\tthis.setProgramUniform(program, name, uniformName, value, type);\n\t\t}\n\n\t\tthis.programs[name] = program;\n\t\treturn program;\n\t}\n\n\t// These getters are used internally.\n\tget _defaultProgram() {\n\t\treturn this.getProgramWithName(DEFAULT_PROGRAM_NAME);\n\t}\n\tget _defaultProgramWithUV() {\n\t\treturn this.getProgramWithName(DEFAULT_W_UV_PROGRAM_NAME);\n\t}\n\tget _defaultProgramWithNormal() {\n\t\treturn this.getProgramWithName(DEFAULT_W_NORMAL_PROGRAM_NAME);\n\t}\n\tget _defaultProgramWithUVNormal() {\n\t\treturn this.getProgramWithName(DEFAULT_W_UV_NORMAL_PROGRAM_NAME);\n\t}\n\tget _segmentProgram() {\n\t\treturn this.getProgramWithName(SEGMENT_PROGRAM_NAME);\n\t}\n\tget _GPULayerPointsProgram() {\n\t\treturn this.getProgramWithName(DATA_LAYER_POINTS_PROGRAM_NAME);\n\t}\n\tget _GPULayerVectorFieldProgram() {\n\t\treturn this.getProgramWithName(DATA_LAYER_VECTOR_FIELD_PROGRAM_NAME);\n\t}\n\tget _GPULayerLinesProgram() {\n\t\treturn this.getProgramWithName(DATA_LAYER_LINES_PROGRAM_NAME);\n\t}\n\n\tprivate setProgramUniform(\n\t\tprogram: WebGLProgram,\n\t\tprogramName: string,\n\t\tname: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformInternalType,\n\t) {\n\t\tconst { composer, uniforms } = this;\n\t\tconst { gl, _errorCallback } = composer;\n\t\t// Set active program.\n\t\tgl.useProgram(program);\n\n\t\tlet location = uniforms[name]?.location[programName];\n\t\t// Init a location for WebGLProgram if needed.\n\t\tif (location === undefined) {\n\t\t\tconst _location = gl.getUniformLocation(program, name);\n\t\t\tif (!_location) {\n\t\t\t\t_errorCallback(`Could not init uniform \"${name}\" for program \"${this.name}\".\nCheck that uniform is present in shader code, unused uniforms may be removed by compiler.\nAlso check that uniform type in shader code matches type ${type}.\nError code: ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocation = _location;\n\t\t\t// Save location for future use.\n\t\t\tif (uniforms[name]) {\n\t\t\t\tuniforms[name].location[programName] = location;\n\t\t\t}\n\t\t}\n\n\t\t// Set uniform.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform\n\t\tswitch (type) {\n\t\t\tcase FLOAT_1D_UNIFORM:\n\t\t\t\tgl.uniform1f(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_2D_UNIFORM:\n\t\t\t\tgl.uniform2fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_3D_UNIFORM:\n\t\t\t\tgl.uniform3fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_4D_UNIFORM:\n\t\t\t\tgl.uniform4fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_1D_UNIFORM:\n\t\t\t\tif (isBoolean(value)) {\n\t\t\t\t\t// We are setting boolean uniforms with uniform1i.\n\t\t\t\t\tgl.uniform1i(location, value ? 1 : 0);\n\t\t\t\t} else {\n\t\t\t\t\tgl.uniform1i(location, value as number);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase INT_2D_UNIFORM:\n\t\t\t\tgl.uniform2iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_3D_UNIFORM:\n\t\t\t\tgl.uniform3iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_4D_UNIFORM:\n\t\t\t\tgl.uniform4iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_1D_UNIFORM:\n\t\t\t\t(gl as WebGL2RenderingContext).uniform1ui(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase UINT_2D_UNIFORM:\n\t\t\t\t(gl as WebGL2RenderingContext).uniform2uiv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_3D_UNIFORM:\n\t\t\t\t(gl as WebGL2RenderingContext).uniform3uiv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_4D_UNIFORM:\n\t\t\t\t(gl as WebGL2RenderingContext).uniform4uiv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown uniform type ${type} for GPUProgram \"${this.name}\".`);\n\t\t}\n\t}\n\n\tsetUniform(\n\t\tname: string,\n\t\tvalue: UniformValue,\n\t\ttype?: UniformType,\n\t) {\n\t\tconst { programs, uniforms, composer } = this;\n\t\tconst { verboseLogging } = composer;\n\n\t\t// Uint is not supported in webgl1.\n\t\tif (!isWebGL2(composer.gl) && type === UINT) {\n\t\t\ttype = INT;\n\t\t}\n\n\t\t// Check that length of value is correct.\n\t\tif (isArray(value)) {\n\t\t\tconst length = (value as number[]).length;\n\t\t\tif (length > 4) throw new Error(`Invalid uniform value: [${(value as number[]).join(', ')}] passed to GPUProgram \"${this.name}, uniforms must be of type number[] with length <= 4, number, or boolean.\"`)\n\t\t}\n\n\t\tlet currentType = uniforms[name]?.type;\n\t\tif (type) {\n\t\t\tconst internalType = uniformInternalTypeForValue(value, type, this.name);\n\t\t\tif (currentType === undefined) currentType = internalType;\n\t\t\telse {\n\t\t\t\t// console.warn(`Don't need to pass in type to GPUProgram.setUniform for previously inited uniform \"${uniformName}\"`);\n\t\t\t\t// Check that types match previously set uniform.\n\t\t\t\tif (currentType !== internalType) {\n\t\t\t\t\tthrow new Error(`Uniform \"${name}\" for GPUProgram \"${this.name}\" cannot change from type ${currentType} to type ${internalType}.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (currentType === undefined) {\n\t\t\tthrow new Error(`Unknown type for uniform \"${name}\", please pass in type to GPUProgram.setUniform(name, value, type) when initing a new uniform.`);\n\t\t}\n\n\t\tif (!uniforms[name]) {\n\t\t\t// Init uniform if needed.\n\t\t\tuniforms[name] = { type: currentType, location: {}, value };\n\t\t} else {\n\t\t\t// Deep check is value has changed.\n\t\t\tif (isArray(value)) {\n\t\t\t\tlet isChanged = true;\n\t\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\t\tif (uniforms[name].value !== value) {\n\t\t\t\t\t\tisChanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isChanged) return; // No change.\n\t\t\t} else if (uniforms[name].value === value) {\n\t\t\t\treturn; // No change.\n\t\t\t}\n\t\t\t// Update value.\n\t\t\tuniforms[name].value = value;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Setting uniform \"${name}\" for program \"${this.name}\" to value ${JSON.stringify(value)} with type ${currentType}.`)\n\n\t\t// Update any active programs.\n\t\tconst keys = Object.keys(programs);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst programName = keys[i] as PROGRAM_NAME_INTERNAL;\n\t\t\tthis.setProgramUniform(programs[programName]!, programName, name, value, currentType);\n\t\t}\n\t};\n\n\t// This is used internally.\n\t_setVertexUniform(\n\t\tprogram: WebGLProgram,\n\t\tuniformName: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformType,\n\t) {\n\t\tif (!program) {\n\t\t\tthrow new Error('Must pass in valid WebGLProgram to setVertexUniform, got undefined.');\n\t\t}\n\t\tconst programName = Object.keys(this.programs).find(key => this.programs[key as PROGRAM_NAME_INTERNAL] === program);\n\t\tif (!programName) {\n\t\t\tthrow new Error(`Could not find valid vertex programName for WebGLProgram in GPUProgram \"${this.name}\".`);\n\t\t}\n\t\tconst internalType = uniformInternalTypeForValue(value, type, this.name);\n\t\tthis.setProgramUniform(program, programName, uniformName, value, internalType);\n\t}\n\n\tdispose() {\n\t\tconst { composer, fragmentShader, programs } = this;\n\t\tconst { gl, verboseLogging } = composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUProgram \"${this.name}\".`);\n\n\t\t// Unbind all gl data before deleting.\n\t\tObject.values(programs).forEach(program => {\n\t\t\tif (program) gl.deleteProgram(program);\n\t\t});\n\t\tObject.keys(this.programs).forEach(key => {\n\t\t\tdelete this.programs[key as PROGRAM_NAME_INTERNAL];\n\t\t});\n\n\t\t// Delete fragment shader.\n\t\tgl.deleteShader(fragmentShader);\n\t\t// @ts-ignore\n\t\tdelete this.fragmentShader;\n\t\t// Vertex shaders are owned by GPUComposer and shared across many GPUPrograms.\n\n\t\t// Delete all references.\n\t\t// @ts-ignore\n\t\tdelete this.composer;\n\t\t// @ts-ignore\n\t\tdelete this.name;\n\t\t// @ts-ignore\n\t\tdelete this.fragmentShaderSource;\n\t\t// @ts-ignore\n\t\tdelete this.defines;\n\t\t// @ts-ignore\n\t\tdelete this.uniforms;\n\t\t// @ts-ignore\n\t\tdelete this.programs;\n\t}\n}\n","// These are the parts of threejs Vector4 that we need.\nexport class Vector4 {\n\tx: number;\n\ty: number;\n\tz: number;\n\tw: number;\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\tget width() {\n\t\treturn this.z;\n\t}\n\tget height() {\n\t\treturn this.w;\n\t}\n\tcopy(v: Vector4) {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t\treturn this;\n\t}\n}","import {\n\tvalidDataTypes,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tGPULayerType,\n\tHALF_FLOAT,\n\tFLOAT,\n\tBYTE,\n\tSHORT,\n\tINT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_SHORT,\n\tUNSIGNED_INT,\n} from './constants';\n\nexport function isValidDataType(type: string) {\n\treturn validDataTypes.indexOf(type) > -1;\n}\n\nexport function isValidFilter(type: string) {\n\treturn validFilters.indexOf(type) > -1;\n}\n\nexport function isValidWrap(type: string) {\n\treturn validWraps.indexOf(type) > -1;\n}\n\n// For image urls that are passed in and inited as textures.\nexport function isValidTextureFormat(type: string) {\n\treturn validTextureFormats.indexOf(type) > -1;\n}\nexport function isValidTextureType(type: string) {\n\treturn validTextureTypes.indexOf(type) > -1;\n}\n\nexport function isValidClearValue(clearValue: number | number[], numComponents: number, type: GPULayerType) {\n\tif (isArray(clearValue)) {\n\t\t// Length of clearValue must match numComponents.\n\t\tif ((clearValue as number[]).length !== numComponents) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < (clearValue as number[]).length; i++) {\n\t\t\tif (!isNumberOfType((clearValue as number[])[i], type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (!isNumberOfType(clearValue, type)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function isNumberOfType(value: any, type: GPULayerType) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\tcase FLOAT:\n\t\t\treturn isNumber(value);\n\t\tcase BYTE:\n\t\t\t// -(2 ** 7)\n\t\t\tif (value < -128) return false;\n\t\t\t// 2 ** 7 - 1\n\t\t\tif (value > 127) return false;\n\t\t\treturn isInteger(value);\n\t\tcase SHORT:\n\t\t\t// -(2 ** 15)\n\t\t\tif (value < -32768) return false;\n\t\t\t// 2 ** 15 - 1\n\t\t\tif (value > 32767) return false;\n\t\t\treturn isInteger(value);\n\t\tcase INT:\n\t\t\t// -(2 ** 31)\n\t\t\tif (value < -2147483648) return false;\n\t\t\t// 2 ** 31 - 1\n\t\t\tif (value > 2147483647) return false;\n\t\t\treturn isInteger(value);\n\t\tcase UNSIGNED_BYTE:\n\t\t\t// 2 ** 8 - 1\n\t\t\tif (value > 255) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_SHORT:\n\t\t\t// 2 ** 16 - 1\n\t\t\tif (value > 65535) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_INT:\n\t\t\t// 2 ** 32 - 1\n\t\t\tif (value > 4294967295) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown type ${type}`);\n\t}\n}\n\nexport function isNumber(value: any) {\n\treturn !Number.isNaN(value) && typeof value === 'number' && Number.isFinite(value);\n}\n\nexport function isInteger(value: any) {\n\treturn isNumber(value) && (value % 1 === 0);\n}\n\nexport function isPositiveInteger(value: any) {\n\treturn isInteger(value) && value > 0;\n}\n\nexport function isNonNegativeInteger(value: any) {\n\treturn isInteger(value) &&  value >= 0;\n}\n\nexport function isString(value: any){\n\treturn typeof value === 'string';\n}\n\nexport function isArray(value: any) {\n\treturn Array.isArray(value);\n}\n\nexport function isObject(value: any) {\n\treturn typeof value === 'object' && !isArray(value) && value !== null;\n}\n\nexport function isBoolean(value: any) {\n\treturn typeof value === 'boolean';\n}","export const HALF_FLOAT = 'HALF_FLOAT';\nexport const FLOAT = 'FLOAT';\nexport const UNSIGNED_BYTE = 'UNSIGNED_BYTE';\nexport const BYTE = 'BYTE';\nexport const UNSIGNED_SHORT = 'UNSIGNED_SHORT';\nexport const SHORT = 'SHORT';\nexport const UNSIGNED_INT = 'UNSIGNED_INT';\nexport const INT = 'INT';\nexport const BOOL = 'BOOL';\nexport const UINT = 'UINT';\n\nexport const LINEAR = 'LINEAR';\nexport const NEAREST = 'NEAREST';\n\nexport const REPEAT = 'REPEAT';\nexport const CLAMP_TO_EDGE = 'CLAMP_TO_EDGE';\n// export const MIRRORED_REPEAT = 'MIRRORED_REPEAT';\n\nexport const RGB = 'RGB';\nexport const RGBA = 'RGBA';\n\nexport type GPULayerArray =  Float32Array | Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array;\nexport const validArrayTypes = [Float32Array, Uint8Array, Int8Array, Uint16Array, Int16Array, Uint32Array, Int32Array, Array];\nexport type GPULayerType = typeof HALF_FLOAT | typeof FLOAT | typeof UNSIGNED_BYTE | typeof BYTE | typeof UNSIGNED_SHORT | typeof SHORT | typeof UNSIGNED_INT | typeof INT;\nexport const validDataTypes = [HALF_FLOAT, FLOAT, UNSIGNED_BYTE, BYTE, UNSIGNED_SHORT, SHORT, UNSIGNED_INT, INT];\nexport type GPULayerNumComponents = 1 | 2 | 3 | 4;\nexport type GPULayerFilter = typeof LINEAR | typeof NEAREST;\nexport const validFilters = [LINEAR, NEAREST];\nexport const validWraps = [CLAMP_TO_EDGE, REPEAT]; // MIRRORED_REPEAT\nexport type GPULayerWrap = typeof REPEAT | typeof CLAMP_TO_EDGE;// | typeof MIRRORED_REPEAT;\n\n// For image urls that are passed in and inited as textures.\nexport type TextureFormat = typeof RGB | typeof RGBA;\nexport const validTextureFormats = [RGB, RGBA];\nexport type TextureType = typeof UNSIGNED_BYTE;\nexport const validTextureTypes = [UNSIGNED_BYTE];\n\nexport const GLSL3 = '300 es';\nexport const GLSL1 = '100';\nexport type GLSLVersion = typeof GLSL1 | typeof GLSL3;\n\nexport const WEBGL2 = 'webgl2';\nexport const WEBGL1 = 'webgl';\nexport const EXPERIMENTAL_WEBGL = 'experimental-webgl';\n\nexport const PRECISION_LOW_P = 'lowp';\nexport const PRECISION_MEDIUM_P = 'mediump';\nexport const PRECISION_HIGH_P = 'highp';\nexport type GLSLPrecision = typeof PRECISION_LOW_P | typeof PRECISION_MEDIUM_P | typeof PRECISION_HIGH_P;\n\n// Uniform types.\nexport const FLOAT_1D_UNIFORM = '1f';\nexport const FLOAT_2D_UNIFORM = '2f';\nexport const FLOAT_3D_UNIFORM = '3f';\nexport const FLOAT_4D_UNIFORM = '4f';\nexport const INT_1D_UNIFORM = '1i';\nexport const INT_2D_UNIFORM = '2i';\nexport const INT_3D_UNIFORM = '3i';\nexport const INT_4D_UNIFORM = '4i';\nexport const UINT_1D_UNIFORM = '1ui';\nexport const UINT_2D_UNIFORM = '2ui';\nexport const UINT_3D_UNIFORM = '3ui';\nexport const UINT_4D_UNIFORM = '4ui';\n\nexport type UniformType = typeof FLOAT | typeof INT | typeof UINT | typeof BOOL;\nexport type UniformInternalType = \n\ttypeof FLOAT_1D_UNIFORM |\n\ttypeof FLOAT_2D_UNIFORM |\n\ttypeof FLOAT_3D_UNIFORM |\n\ttypeof FLOAT_4D_UNIFORM |\n\ttypeof INT_1D_UNIFORM |\n\ttypeof INT_2D_UNIFORM |\n\ttypeof INT_3D_UNIFORM |\n\ttypeof INT_4D_UNIFORM |\n\ttypeof UINT_1D_UNIFORM |\n\ttypeof UINT_2D_UNIFORM |\n\ttypeof UINT_3D_UNIFORM |\n\ttypeof UINT_4D_UNIFORM;\nexport type UniformValue = boolean | number | number[];\nexport type Uniform = { \n\tlocation: { [key: string]: WebGLUniformLocation },\n\ttype: UniformInternalType,\n\tvalue: UniformValue,\n};\n\n// Vertex shaders.\nexport const DEFAULT_PROGRAM_NAME = 'DEFAULT';\nexport const DEFAULT_W_UV_PROGRAM_NAME = 'DEFAULT_W_UV';\nexport const DEFAULT_W_NORMAL_PROGRAM_NAME = 'DEFAULT_W_NORMAL';\nexport const DEFAULT_W_UV_NORMAL_PROGRAM_NAME = 'DEFAULT_W_UV_NORMAL';\nexport const SEGMENT_PROGRAM_NAME = 'SEGMENT';\nexport const DATA_LAYER_POINTS_PROGRAM_NAME = 'DATA_LAYER_POINTS';\nexport const DATA_LAYER_LINES_PROGRAM_NAME = 'DATA_LAYER_LINES';\nexport const DATA_LAYER_VECTOR_FIELD_PROGRAM_NAME = 'DATA_LAYER_VECTOR_FIELD';\nexport type PROGRAM_NAME_INTERNAL =\n\ttypeof DEFAULT_PROGRAM_NAME |\n\ttypeof DEFAULT_W_UV_PROGRAM_NAME |\n\ttypeof DEFAULT_W_NORMAL_PROGRAM_NAME |\n\ttypeof DEFAULT_W_UV_NORMAL_PROGRAM_NAME |\n\ttypeof SEGMENT_PROGRAM_NAME |\n\ttypeof DATA_LAYER_POINTS_PROGRAM_NAME |\n\ttypeof DATA_LAYER_LINES_PROGRAM_NAME |\n\ttypeof DATA_LAYER_VECTOR_FIELD_PROGRAM_NAME;\n\n// Pass in #defines as strings to make it easier to control float vs int.\nexport type CompileTimeVars = { [key: string]: string };\n\nexport type GPULayerBuffer = {\n\ttexture: WebGLTexture,\n\tframebuffer?: WebGLFramebuffer,\n}\n\nexport type ErrorCallback = (message: string) => void;\nexport const DEFAULT_ERROR_CALLBACK = (msg: string) => { throw new Error(msg); };\n\nexport const DEFAULT_CIRCLE_NUM_SEGMENTS = 18;// Must be divisible by 6 to work with stepSegment().","import { ErrorCallback } from './constants';\n\nconst extensions: { [key: string]: any } = {};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float\n// Float is provided by default in WebGL2 contexts.\n// This extension implicitly enables the WEBGL_color_buffer_float extension (if supported), which allows rendering to 32-bit floating-point color buffers.\nexport const OES_TEXTURE_FLOAT = 'OES_texture_float';\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_half_float\n// Half float is supported by modern mobile browsers, float not yet supported.\n// Half float is provided by default for Webgl2 contexts.\n// This extension implicitly enables the EXT_color_buffer_half_float extension (if supported), which allows rendering to 16-bit floating point formats.\nexport const OES_TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n// TODO: Seems like linear filtering of floats may be supported in some browsers without these extensions?\n// https://www.khronos.org/registry/OpenGL/extensions/OES/OES_texture_float_linear.txt\nexport const OES_TEXTURE_FLOAT_LINEAR = 'OES_texture_float_linear';\nexport const OES_TEXTURE_HAlF_FLOAT_LINEAR = 'OES_texture_half_float_linear';\n// https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n// Adds gl.UNSIGNED_SHORT, gl.UNSIGNED_INT types to textImage2D in WebGL1.0\nexport const WEBGL_DEPTH_TEXTURE = 'WEBGL_depth_texture';\n// EXT_COLOR_BUFFER_FLOAT adds ability to render to a variety of floating pt textures.\n// This is needed for the WebGL2 contexts that do not support OES_TEXTURE_FLOAT / OES_TEXTURE_HALF_FLOAT extensions.\n// https://developer.mozilla.org/en-US/docs/Web/API/EXT_color_buffer_float\n// https://stackoverflow.com/questions/34262493/framebuffer-incomplete-attachment-for-texture-with-internal-format\n// https://stackoverflow.com/questions/36109347/framebuffer-incomplete-attachment-only-happens-on-android-w-firefox\nexport const EXT_COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n\nexport function getExtension(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\textensionName: string,\n\terrorCallback: ErrorCallback,\n\toptional = false,\n) {\n\t// Check if we've already loaded the extension.\n\tif (extensions[extensionName] !== undefined) return extensions[extensionName];\n\n\tlet extension;\n\ttry {\n\t\textension = gl.getExtension(extensionName);\n\t} catch (e) {}\n\tif (extension) {\n\t\t// Cache this extension.\n\t\textensions[extensionName] = extension;\n\t\tconsole.log(`Loaded extension: ${extensionName}.`);\n\t} else {\n\t\textensions[extensionName] = false; // Cache the bad extension lookup.\n\t\tconsole.warn(`Unsupported ${optional ? 'optional ' : ''}extension: ${extensionName}.`);\n\t}\n\t// If the extension is not optional, throw error.\n\tif (!extension && !optional) {\n\t\terrorCallback(`Required extension unsupported by this device / browser: ${extensionName}.`);\n\t}\n\treturn extension;\n}","import {\n\tmakeShaderHeader,\n\tcompileShader,\n\tinitGLProgram,\n\tisWebGL2,\n\tisWebGL2Supported,\n\treadyToRead,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n\tpreprocessFragmentShader,\n\tpreprocessVertexShader,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n\tuniformInternalTypeForValue,\n} from './utils';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport { GPUProgram } from './GPUProgram';\nimport * as checks from './checks';\n\n// These exports are only used for testing.\nconst _testing = {\n\tmakeShaderHeader,\n\tcompileShader,\n\tinitGLProgram,\n\treadyToRead,\n\tpreprocessVertexShader,\n\tpreprocessFragmentShader,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n\tuniformInternalTypeForValue,\n\t...checks,\n}\n\n// Named exports.\nexport * from './constants';\nexport {\n\tGPUComposer,\n\tGPULayer,\n\tGPUProgram,\n\tisWebGL2,\n\tisWebGL2Supported,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n\t_testing,\n}","import {\n\tisArray,\n\tisBoolean,\n\tisInteger,\n\tisNonNegativeInteger,\n\tisNumber,\n\tisString,\n} from './checks';\nimport {\n\tBOOL,\n\tCompileTimeVars,\n\tDEFAULT_ERROR_CALLBACK,\n\tErrorCallback,\n\tFLOAT,\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tGLSL1,\n\tGLSL3,\n\tGLSLPrecision,\n\tGLSLVersion,\n\tINT,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tPRECISION_HIGH_P,\n\tPRECISION_MEDIUM_P,\n\tUINT,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n\tUniformType,\n\tUniformValue,\n\tWEBGL1,\n\tWEBGL2,\n} from './constants';\nconst precisionSource = require('./glsl/common/precision.glsl');\n\n// Memoize results.\nconst results = {\n\tsupportsWebGL2: undefined as undefined | boolean,\n\tsupportsHighpVertex: undefined as  undefined | boolean,\n\tsupportsHighpFragment: undefined as undefined | boolean,\n\tmediumpVertexPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n\tmediumpFragmentPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n}\n\nfunction intForPrecision(precision: GLSLPrecision) {\n\tif (precision === PRECISION_HIGH_P) return 2;\n\tif (precision === PRECISION_MEDIUM_P) return 1;\n\treturn 0;\n}\n\nfunction convertDefinesToString(defines: CompileTimeVars) {\n\tlet definesSource = '';\n\tconst keys = Object.keys(defines);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\t// Check that define is passed in as a string.\n\t\tif (!isString(key) || !isString(defines[key])) {\n\t\t\tthrow new Error(`GPUProgram defines must be passed in as key value pairs that are both strings, got key value pair of type [${typeof key} : ${typeof defines[key]}].`)\n\t\t}\n\t\tdefinesSource += `#define ${key} ${defines[key]}\\n`;\n\t}\n\treturn definesSource;\n}\n\nexport function makeShaderHeader(\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tdefines?: CompileTimeVars,\n) {\n\tconst versionSource = glslVersion === GLSL3 ? `#version ${GLSL3}\\n` : '';\n\tconst definesSource = defines ? convertDefinesToString(defines) : '';\n\tconst precisionDefinesSource = convertDefinesToString({\n\t\tWEBGLCOMPUTE_INT_PRECISION: `${intForPrecision(intPrecision)}`,\n\t\tWEBGLCOMPUTE_FLOAT_PRECISION: `${intForPrecision(floatPrecision)}`,\n\t});\n\treturn `${versionSource}${definesSource}${precisionDefinesSource}${precisionSource}`;\n}\n\n// Copied from http://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html\nexport function compileShader(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tshaderSource: string,\n\tshaderType: number,\n\tprogramName: string,\n\t_errorCallback: ErrorCallback,\n\tdefines?: CompileTimeVars,\n) {\n\tshaderSource = `${makeShaderHeader(\n\t\tglslVersion,\n\t\tintPrecision,\n\t\tfloatPrecision,\n\t\tdefines,\n\t)}${shaderSource}`;\n\t// Create the shader object\n\tconst shader = gl.createShader(shaderType);\n\tif (!shader) {\n\t\t_errorCallback('Unable to init gl shader.');\n\t\treturn null;\n\t}\n\n\t// Set the shader source code.\n\tgl.shaderSource(shader, shaderSource);\n\n\t// Compile the shader\n\tgl.compileShader(shader);\n\n\t// Check if it compiled\n\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\tif (!success) {\n\t\t// Something went wrong during compilation - print the error.\n\t\t_errorCallback(`Could not compile ${shaderType === gl.FRAGMENT_SHADER ? 'fragment' : 'vertex'}\n\t\t\t shader for program \"${programName}\": ${gl.getShaderInfoLog(shader)}.`);\n\t\treturn null;\n\t}\n\treturn shader;\n}\n\nexport function initGLProgram(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tfragmentShader: WebGLShader,\n\tvertexShader: WebGLShader,\n\tname: string,\n\t_errorCallback: ErrorCallback,\n) {\n\t// Create a program.\n\tconst program = gl.createProgram();\n\tif (!program) {\n\t\t_errorCallback(`Unable to init gl program for GPUProgram \"${name}\", gl.createProgram() has failed.`);\n\t\treturn;\n\t}\n\t// Link the program.\n\tgl.attachShader(program, fragmentShader);\n\tgl.attachShader(program, vertexShader);\n\tgl.linkProgram(program);\n\t// Check if it linked.\n\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\tif (!success) {\n\t\t// Something went wrong with the link.\n\t\t_errorCallback(`GPUProgram \"${name}\" failed to link: ${gl.getProgramInfoLog(program)}`);\n\t\treturn;\n\t}\n\treturn program;\n}\n\nexport function isWebGL2(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\t// This code is pulled from https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLCapabilities.js\n\t// @ts-ignore\n\treturn (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) || (typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext);\n}\n\nexport function isWebGL2Supported() {\n\tif (results.supportsWebGL2 === undefined) {\n\t\tconst gl = document.createElement('canvas').getContext(WEBGL2);\n\t\t// GL context and canvas will be garbage collected.\n\t\tresults.supportsWebGL2 = !!gl;\n\t\treturn true;\n\t}\n\treturn results.supportsWebGL2;\n}\n\nexport function readyToRead(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\treturn gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n};\n\nfunction isHighpSupported(vsSource: string, fsSource: string) {\n\t// This is supposed to be relatively easy. You call gl.getShaderPrecisionFormat, you pass in the shader type,\n\t// VERTEX_SHADER or FRAGMENT_SHADER and you pass in one of LOW_FLOAT, MEDIUM_FLOAT, HIGH_FLOAT, LOW_INT, MEDIUM_INT, HIGH_INT,\n\t// and it returns the precision info.\n\t// Unfortunately Safari has a bug here which means checking this way will fail on iPhone, at least as of April 2020.\n\t// https://webglfundamentals.org/webgl/webgl-precision-lowp-mediump-highp.html\n\tconst gl = document.createElement('canvas').getContext(WEBGL1);\n\tif (!gl) {\n\t\tthrow new Error(`Unable to init webgl context.`);\n\t}\n\ttry {\n\t\tconst vs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tvsSource,\n\t\t\tgl.VERTEX_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst fs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tfsSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst program = initGLProgram(gl, fs, vs, 'highpFragmentTest', DEFAULT_ERROR_CALLBACK)!;\n\t\t// Deallocate everything.\n\t\tgl.deleteProgram(program);\n\t\tgl.deleteShader(vs);\n\t\tgl.deleteShader(fs);\n\t\t// GL context and canvas will be garbage collected.\n\t} catch {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport function isHighpSupportedInVertexShader() {\n\tif (results.supportsHighpVertex === undefined) {\n\t\tconst vertexSupport = isHighpSupported(\n\t\t\t'void main() { highp float test = 0.524; gl_Position = vec4(test, test, 0, 1); }',\n\t\t\t'void main() { gl_FragColor = vec4(0); }',\n\t\t);\n\t\tresults.supportsHighpVertex = vertexSupport;\n\t}\n\treturn results.supportsHighpVertex;\n}\n\nexport function isHighpSupportedInFragmentShader() {\n\tif (results.supportsHighpFragment === undefined) {\n\t\tconst fragmentSupport = isHighpSupported(\n\t\t\t'void main() { gl_Position = vec4(0.5, 0.5, 0, 1); }',\n\t\t\t'void main() { highp float test = 1.35; gl_FragColor = vec4(test); }',\n\t\t);\n\t\tresults.supportsHighpFragment = fragmentSupport;\n\t}\n\treturn results.supportsHighpFragment;\n}\n\nfunction test1PxCalc(\n\tname: string,\n\tgl: WebGL2RenderingContext | WebGLRenderingContext,\n\tfs: WebGLShader,\n\tvs: WebGLShader,\n\taddUniforms: (program: WebGLProgram) => void,\n) {\n\tconst program = initGLProgram(gl, fs, vs, name, DEFAULT_ERROR_CALLBACK);\n\tif (!program) {\n\t\tthrow new Error(`Unable to init WebGLProgram.`);\n\t}\n\tconst positionLocation = gl.getAttribLocation(program, 'position');\n\n\t// create a buffer and setup an attribute\n\t// We wouldn't need this except for a bug in Safari.\n\t// See https://webglfundamentals.org/webgl/lessons/webgl-smallest-programs.html\n\t// and https://bugs.webkit.org/show_bug.cgi?id=197592\n\tconst buffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ARRAY_BUFFER, 1, gl.STATIC_DRAW);\n\tgl.enableVertexAttribArray(positionLocation);\n\tgl.vertexAttribPointer(\n\t\tpositionLocation,\n\t\t1,                // pull 1 value per vertex shader iteration from buffer\n\t\tgl.UNSIGNED_BYTE, // type of data in buffer,\n\t\tfalse,            // don't normalize\n\t\t0,                // bytes to advance per iteration (0 = compute from size and type)\n\t\t0,                // offset into buffer\n\t);\n\n\tgl.viewport(0, 0, 1, 1);\n\tgl.useProgram(program);\n\n\taddUniforms(program);\n\t\n\tgl.drawArrays(\n\t\tgl.POINTS,\n\t\t0, // offset\n\t\t1, // number of vertices to process\n\t);\n\n\tconst pixel = new Uint8Array(4);\n\tgl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n\n\t// Deallocate everything.\n\tgl.deleteProgram(program);\n\tgl.deleteShader(vs);\n\tgl.deleteShader(fs);\n\tgl.deleteBuffer(buffer);\n\t// GL context and canvas will be garbage collected.\n\n\treturn pixel;\n}\n\n// From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\nexport function getVertexShaderMediumpPrecision() {\n\tif (results.mediumpVertexPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\t/** @type {HTMLCanvasElement} */\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tuniform mediump vec3 v;\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t\tv_result = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_FragColor = v_result;\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionVertexTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpVertexPrecision = mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpVertexPrecision;\n}\n\n// From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\nexport function getFragmentShaderMediumpPrecision() {\n\tif (results.mediumpFragmentPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P,`\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tuniform mediump vec3 v;\n\tvoid main() {\n\t\tgl_FragColor = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionFragmentTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpFragmentPrecision =  mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpFragmentPrecision;\n}\n\nexport function isPowerOf2(value: number) {\n\t// Use bitwise operation to evaluate this.\n\treturn value > 0 && (value & (value - 1)) == 0;\n}\n\nexport function initSequentialFloatArray(length: number) {\n\tconst array = new Float32Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tarray[i] = i;\n\t}\n\treturn array;\n}\n\nfunction preprocessShader(shaderSource: string) {\n\t// Strip out any version numbers.\n\t// https://github.com/Jam3/glsl-version-regex\n\tlet origSrc = shaderSource.slice();\n\tshaderSource = shaderSource.replace(/^\\s*\\#version\\s+([0-9]+(\\s+[a-zA-Z]+)?)\\s*/, '');\n\tif (shaderSource !== origSrc) {\n\t\tconsole.warn('WebGLCompute expects shader source that does not contain #version declarations, removing...');\n\t}\n\t// Strip out any precision declarations.\n\torigSrc = shaderSource.slice();\n\tshaderSource = shaderSource.replace(/\\s*precision\\s+((highp)|(mediump)|(lowp))\\s+[a-zA-Z0-9]+\\s*;/g, '');\n\tif (shaderSource !== origSrc) {\n\t\tconsole.warn('WebGLCompute expects shader source that does not contain precision declarations, removing...');\n\t}\n\treturn shaderSource;\n}\n\nfunction convertShaderToGLSL1(shaderSource: string) {\n\t// TODO: there are probably more to add here.\n\tshaderSource = shaderSource.replace(/((\\bisampler2D\\b)|(\\busampler2D\\b))/g, 'sampler2D');\n\tshaderSource = shaderSource.replace(/((\\bivec2\\b)|(\\buvec2\\b))/g, 'vec2');\n\tshaderSource = shaderSource.replace(/((\\bivec3\\b)|(\\buvec3\\b))/g, 'vec3');\n\tshaderSource = shaderSource.replace(/((\\bivec4\\b)|(\\buvec4\\b))/g, 'vec4');\n\tshaderSource = shaderSource.replace(/\\buint\\b/g, 'int');\n\tshaderSource = shaderSource.replace(/\\buint\\(/g, 'int(');\n\t// Convert texture to texture2D.\n\tshaderSource = shaderSource.replace(/\\btexture\\(/g, 'texture2D(');\n\treturn shaderSource;\n}\n\nfunction convertVertexShaderToGLSL1(shaderSource: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to attribute.\n\tshaderSource = shaderSource.replace(/\\bin\\b/, 'attribute');\n\t// Convert out to varying.\n\tshaderSource = shaderSource.replace(/\\bout\\b/g, 'varying');\n\treturn shaderSource;\n}\n\nfunction convertFragmentShaderToGLSL1(shaderSource: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to varying.\n\tshaderSource = shaderSource.replace(/\\bin\\b/g, 'varying');\n\t// Convert out to gl_FragColor.\n\tshaderSource = shaderSource.replace(/\\bout \\w+ out_fragColor;/g, '');\n\tshaderSource = shaderSource.replace(/\\bout_fragColor\\s+=/, 'gl_FragColor =');\n\treturn shaderSource;\n}\n\nexport function preprocessVertexShader(shaderSource: string, glslVersion: GLSLVersion) {\n\tshaderSource = preprocessShader(shaderSource);\n\t// Check if highp supported in vertex shaders.\n\tif (!isHighpSupportedInVertexShader()) {\n\t\tconsole.warn('highp not supported in vertex shader, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = shaderSource.replace(/\\bhighp\\b/, 'mediump');\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertVertexShaderToGLSL1(shaderSource);\n}\n\nexport function preprocessFragmentShader(shaderSource: string, glslVersion: GLSLVersion) {\n\tshaderSource = preprocessShader(shaderSource);\n\t// Check if highp supported in fragment shaders.\n\tif (!isHighpSupportedInFragmentShader()) {\n\t\tconsole.warn('highp not supported in fragment shader, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = shaderSource.replace(/\\bhighp\\b/, 'mediump');\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertFragmentShaderToGLSL1(shaderSource);\n}\n\nexport function uniformInternalTypeForValue(\n\tvalue: UniformValue,\n\ttype: UniformType,\n\tprogramName: string,\n) {\n\tif (type === FLOAT) {\n\t\t// Check that we are dealing with a number.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNumber((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNumber(value)) {\n\t\t\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn FLOAT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn FLOAT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn FLOAT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn FLOAT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected float or float[] of length 1-4.`);\n\t} else if (type === INT) {\n\t\t// Check that we are dealing with an int.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn INT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn INT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn INT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn INT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected int or int[] of length 1-4.`);\n\t} else if (type === UINT) {\n\t\t// Check that we are dealing with a uint.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNonNegativeInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNonNegativeInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn UINT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn UINT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn UINT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn UINT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t} else if (type === BOOL) {\n\t\tif (isBoolean(value)) {\n\t\t\t// Boolean types are passed in as ints.\n\t\t\t// This suggest floats work as well, but ints seem more natural:\n\t\t\t// https://github.com/KhronosGroup/WebGL/blob/main/sdk/tests/conformance/uniforms/gl-uniform-bool.html\n\t\t\treturn INT_1D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid uniform value: ${JSON.stringify(value)} for program \"${programName}\", expected boolean.`);\n\t} else {\n\t\tthrow new Error(`Invalid uniform type: ${type} for program \"${programName}\", expected ${FLOAT} or ${INT} of ${BOOL}.`);\n\t}\n}","module.exports = \"#if (WEBGLCOMPUTE_INT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp int;\\n#if (__VERSION__ == 300)\\nprecision highp isampler2D;precision highp usampler2D;\\n#endif\\n#else\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#endif\\n#if (WEBGLCOMPUTE_INT_PRECISION == 1)\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#if (WEBGLCOMPUTE_INT_PRECISION == 0)\\nprecision lowp int;\\n#if (__VERSION__ == 300)\\nprecision lowp isampler2D;precision lowp usampler2D;\\n#endif\\n#endif\\n#if (WEBGLCOMPUTE_FLOAT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;precision highp sampler2D;\\n#else\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#endif\\n#if (WEBGLCOMPUTE_FLOAT_PRECISION == 1)\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#if (WEBGLCOMPUTE_FLOAT_PRECISION == 0)\\nprecision lowp float;precision lowp sampler2D;\\n#endif\\n\"","module.exports = \"in vec2 v_UV;\\n#ifdef WEBGLCOMPUTE_FLOAT\\nuniform sampler2D u_state;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nuniform isampler2D u_state;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nuniform usampler2D u_state;\\n#endif\\n#ifdef WEBGLCOMPUTE_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=A(u_state,v_UV);}\"","module.exports = \"#ifdef WEBGLCOMPUTE_FLOAT\\nuniform vec4 u_value;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nuniform ivec4 u_value;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nuniform uvec4 u_value;\\n#endif\\n#ifdef WEBGLCOMPUTE_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=u_value;}\"","module.exports = \"in vec2 v_UV;uniform vec3 u_color;uniform float u_scale;\\n#ifdef WEBGLCOMPUTE_FLOAT\\nuniform sampler2D u_internal_data;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nuniform isampler2D u_internal_data;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nuniform usampler2D u_internal_data;\\n#endif\\nout vec4 out_fragColor;void main(){uvec4 A=B(u_internal_data,v_UV);float C=length(A);out_fragColor=vec4(C*u_scale*u_color,1);}\"","module.exports = \"in vec2 v_lineWrapping;uniform vec4 u_value;out vec4 out_fragColor;void main(){if((v_lineWrapping.x!=0.&&v_lineWrapping.x!=1.)||(v_lineWrapping.y!=0.&&v_lineWrapping.y!=1.)){discard;return;}out_fragColor=vec4(u_value);}\"","module.exports = \"in vec2 a_internal_position;\\n#ifdef WEBGLCOMPUTE_UV_ATTRIBUTE\\nin vec2 a_internal_uv;\\n#endif\\n#ifdef WEBGLCOMPUTE_NORMAL_ATTRIBUTE\\nin vec2 a_internal_normal;\\n#endif\\nuniform vec2 u_internal_scale;uniform vec2 u_internal_translation;out vec2 v_UV;out vec2 v_UV_local;\\n#ifdef WEBGLCOMPUTE_NORMAL_ATTRIBUTE\\nout vec2 v_normal;\\n#endif\\nvoid main(){\\n#ifdef WEBGLCOMPUTE_UV_ATTRIBUTE\\nv_UV_local=a_internal_uv;\\n#else\\nv_UV_local=a_internal_position;\\n#endif\\n#ifdef WEBGLCOMPUTE_NORMAL_ATTRIBUTE\\nv_normal=a_internal_normal;\\n#endif\\nvec2 A=u_internal_scale*a_internal_position+u_internal_translation;v_UV=0.5*(A+1.);gl_Position=vec4(A,0,1);}\"","module.exports = \"float A(float B,float C){float D=B-floor((B+0.5)/C)*C;return floor(D+0.5);}in float a_internal_index;uniform sampler2D u_internal_positions;uniform vec2 u_internal_positionsDimensions;uniform vec2 u_internal_scale;uniform bool u_internal_positionWithAccumulation;uniform bool u_internal_wrapX;uniform bool u_internal_wrapY;out vec2 v_UV;out vec2 v_lineWrapping;out float v_index;void main(){vec2 E=vec2(A(a_internal_index,u_internal_positionsDimensions.x),floor(floor(a_internal_index+0.5)/u_internal_positionsDimensions.x))/u_internal_positionsDimensions;vec4 F=G(u_internal_positions,E);vec2 H=F.rg;if(u_internal_positionWithAccumulation)H+=F.ba;v_UV=H*u_internal_scale;v_lineWrapping=vec2(0.);if(u_internal_wrapX){if(v_UV.x<0.){v_UV.x+=1.;v_lineWrapping.x=1.;}else if(v_UV.x>1.){v_UV.x-=1.;v_lineWrapping.x=1.;}}if(u_internal_wrapY){if(v_UV.y<0.){v_UV.y+=1.;v_lineWrapping.y=1.;}else if(v_UV.y>1.){v_UV.y-=1.;v_lineWrapping.y=1.;}}vec2 I=v_UV*2.-1.;v_index=a_internal_index;gl_Position=vec4(I,0,1);}\"","module.exports = \"float A(float B,float C){float D=B-floor((B+0.5)/C)*C;return floor(D+0.5);}in float a_internal_index;uniform sampler2D u_internal_positions;uniform vec2 u_internal_positionsDimensions;uniform vec2 u_internal_scale;uniform float u_internal_pointSize;uniform bool u_internal_positionWithAccumulation;uniform bool u_internal_wrapX;uniform bool u_internal_wrapY;out vec2 v_UV;out float v_index;void main(){vec2 E=vec2(A(a_internal_index,u_internal_positionsDimensions.x),floor(floor(a_internal_index+0.5)/u_internal_positionsDimensions.x))/u_internal_positionsDimensions;vec4 F=G(u_internal_positions,E);vec2 H=F.rg;if(u_internal_positionWithAccumulation)H+=F.ba;v_UV=H*u_internal_scale;if(u_internal_wrapX){if(v_UV.x<0.)v_UV.x+=1.;if(v_UV.x>1.)v_UV.x-=1.;}if(u_internal_wrapY){if(v_UV.y<0.)v_UV.y+=1.;if(v_UV.y>1.)v_UV.y-=1.;}vec2 I=v_UV*2.-1.;v_index=a_internal_index;gl_PointSize=u_internal_pointSize;gl_Position=vec4(I,0,1);}\"","module.exports = \"float A(float B,float C){float D=B-floor((B+0.5)/C)*C;return floor(D+0.5);}in float a_internal_index;uniform sampler2D u_internal_vectors;uniform vec2 u_internal_dimensions;uniform vec2 u_internal_scale;out vec2 v_UV;out float v_index;void main(){float E=floor((a_internal_index+0.5)/2.);v_UV=vec2(A(E,u_internal_dimensions.x),floor(floor(E+0.5)/u_internal_dimensions.x))/u_internal_dimensions;if(A(a_internal_index,2.)>0.){vec2 F=G(u_internal_vectors,v_UV).xy;v_UV+=F*u_internal_scale;}vec2 H=v_UV*2.-1.;v_index=a_internal_index;gl_Position=vec4(H,0,1);}\"","module.exports = \"in vec2 a_internal_position;uniform float u_internal_halfThickness;uniform vec2 u_internal_scale;uniform float u_internal_length;uniform float u_internal_rotation;uniform vec2 u_internal_translation;out vec2 v_UV_local;out vec2 v_UV;mat2 A(float B){return mat2(cos(B),-sin(B),sin(B),cos(B));}void main(){v_UV_local=0.5*(a_internal_position+1.);vec2 C=a_internal_position;C*=u_internal_halfThickness;if(C.x<0.){C.x-=u_internal_length/2.;v_UV_local.x=0.;}else if(C.x>0.){C.x+=u_internal_length/2.;v_UV_local.x=1.;}C=u_internal_scale*(A(-u_internal_rotation)*C)+u_internal_translation;v_UV=0.5*(C+1.);gl_Position=vec4(C,0,1);}\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://WebGLCompute/webpack/universalModuleDefinition","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/lib.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/hfround.js","webpack://WebGLCompute/./node_modules/lodash-es/_root.js","webpack://WebGLCompute/./node_modules/lodash-es/_Symbol.js","webpack://WebGLCompute/./node_modules/lodash-es/_getRawTag.js","webpack://WebGLCompute/./node_modules/lodash-es/_objectToString.js","webpack://WebGLCompute/./node_modules/lodash-es/_baseGetTag.js","webpack://WebGLCompute/./node_modules/lodash-es/isObject.js","webpack://WebGLCompute/./node_modules/lodash-es/isFunction.js","webpack://WebGLCompute/./node_modules/lodash-es/_coreJsData.js","webpack://WebGLCompute/./node_modules/lodash-es/_isMasked.js","webpack://WebGLCompute/./node_modules/lodash-es/_toSource.js","webpack://WebGLCompute/./node_modules/lodash-es/_baseIsNative.js","webpack://WebGLCompute/./node_modules/lodash-es/_getValue.js","webpack://WebGLCompute/./node_modules/lodash-es/_getNative.js","webpack://WebGLCompute/./node_modules/lodash-es/_nativeCreate.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashClear.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashDelete.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashGet.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashHas.js","webpack://WebGLCompute/./node_modules/lodash-es/_hashSet.js","webpack://WebGLCompute/./node_modules/lodash-es/_Hash.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheClear.js","webpack://WebGLCompute/./node_modules/lodash-es/eq.js","webpack://WebGLCompute/./node_modules/lodash-es/_assocIndexOf.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheDelete.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheGet.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheHas.js","webpack://WebGLCompute/./node_modules/lodash-es/_listCacheSet.js","webpack://WebGLCompute/./node_modules/lodash-es/_ListCache.js","webpack://WebGLCompute/./node_modules/lodash-es/_Map.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheClear.js","webpack://WebGLCompute/./node_modules/lodash-es/_isKeyable.js","webpack://WebGLCompute/./node_modules/lodash-es/_getMapData.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheDelete.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheGet.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheHas.js","webpack://WebGLCompute/./node_modules/lodash-es/_mapCacheSet.js","webpack://WebGLCompute/./node_modules/lodash-es/_MapCache.js","webpack://WebGLCompute/./node_modules/lodash-es/memoize.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/bug.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/spec.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/is.js","webpack://WebGLCompute/./node_modules/lodash-es/isObjectLike.js","webpack://WebGLCompute/./node_modules/lodash-es/_baseIsArrayBuffer.js","webpack://WebGLCompute/./node_modules/lodash-es/_baseUnary.js","webpack://WebGLCompute/./node_modules/lodash-es/isArrayBuffer.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/Float16Array.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/private.js","webpack://WebGLCompute/./node_modules/@petamoriken/float16/src/dataView.js","webpack://WebGLCompute/./node_modules/changedpi/dist/index.js","webpack://WebGLCompute/./node_modules/file-saver/dist/FileSaver.min.js","webpack://WebGLCompute/./node_modules/lodash-es/_freeGlobal.js","webpack://WebGLCompute/./node_modules/lodash-es/_nodeUtil.js","webpack://WebGLCompute/./src/GPUComposer.ts","webpack://WebGLCompute/./src/GPULayer.ts","webpack://WebGLCompute/./src/GPULayerHelpers.ts","webpack://WebGLCompute/./src/GPUProgram.ts","webpack://WebGLCompute/./src/Vector4.ts","webpack://WebGLCompute/./src/checks.ts","webpack://WebGLCompute/./src/constants.ts","webpack://WebGLCompute/./src/extensions.ts","webpack://WebGLCompute/./src/index.ts","webpack://WebGLCompute/./src/utils.ts","webpack://WebGLCompute/./src/glsl/common/precision.glsl","webpack://WebGLCompute/./src/glsl/frag/CopyFragShader.glsl","webpack://WebGLCompute/./src/glsl/frag/SetValueFragShader.glsl","webpack://WebGLCompute/./src/glsl/frag/VectorMagnitudeFragShader.glsl","webpack://WebGLCompute/./src/glsl/frag/WrappedLineColorFragShader.glsl","webpack://WebGLCompute/./src/glsl/vert/DefaultVertShader.glsl","webpack://WebGLCompute/./src/glsl/vert/LayerLinesVertShader.glsl","webpack://WebGLCompute/./src/glsl/vert/LayerPointsVertShader.glsl","webpack://WebGLCompute/./src/glsl/vert/LayerVectorFieldVertShader.glsl","webpack://WebGLCompute/./src/glsl/vert/SegmentVertShader.glsl","webpack://WebGLCompute/webpack/bootstrap","webpack://WebGLCompute/webpack/runtime/define property getters","webpack://WebGLCompute/webpack/runtime/global","webpack://WebGLCompute/webpack/runtime/harmony module decorator","webpack://WebGLCompute/webpack/runtime/hasOwnProperty shorthand","webpack://WebGLCompute/webpack/runtime/make namespace object","webpack://WebGLCompute/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","buffer","ArrayBuffer","floatView","Float32Array","uint32View","Uint32Array","baseTable","shiftTable","i","e","roundToFloat16Bits","num","f","mantissaTable","exponentTable","offsetTable","m","convertToNumber","float16bits","hfround","Number","isFinite","freeSelf","Object","Function","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","undefined","value","isOwn","call","tag","unmasked","result","type","uid","maskSrcKey","exec","func","funcToString","reIsHostCtor","reIsNative","RegExp","replace","test","object","key","this","__data__","size","has","data","Hash","entries","index","length","clear","entry","set","get","other","array","splice","Array","pop","push","ListCache","map","MapCache","memoize","resolver","TypeError","memoized","args","arguments","apply","cache","Cache","isTypedArrayIndexedPropertyWritable","getOwnPropertyDescriptor","Uint8Array","writable","ToInteger","target","number","isNaN","Math","trunc","defaultCompareFunction","x","y","isNaN_x","isNaN_y","isPlusZero_x","isPlusZero_y","is","isDataView","view","DataView","isStringNumberKey","nodeIsArrayBuffer","_","wm","WeakMap","obj","create","createPrivateStorage","isFloat16Array","Float16Array","assertFloat16Array","copyToArray","applyHandler","thisArg","defaultFloat16ArrayMethods","Reflect","handler","wrapper","ret","proxy","Proxy","isFrozen","getPrototypeOf","setPrototypeOf","defineProperty","descriptor","deleteProperty","isExtensible","preventExtensions","ownKeys","Uint16Array","input","byteOffset","super","arrayLike","Symbol","iterator","src","opts","from","mapFunc","val","keys","values","callback","l","start","offset","reverse","fill","copyWithin","compareFunction","_convertToNumber","sort","slice","subarray","element","join","toLocaleString","toStringTag","Float16Array$prototype","WeakSet","add","getFloat16","dataView","getUint16","setFloat16","setUint16","calcCrc","buf","c","pngDataTable","crcTable","Int32Array","n","k","createPngDataTable","changeDpiBlob","blob","dpi","headerChunk","Promise","resolve","reject","fileReader","FileReader","onload","dataArray","tail","changedArray","changeDpiOnArray","Blob","readAsArrayBuffer","changeDpiDataUrl","base64Image","dataSplitted","split","format","body","headerLength","overwritepHYs","indexOf","PNG","b64Index","b64index","b64PhysSignature1","b64PhysSignature2","b64PhysSignature3","detectPhysChunkFromDataUrl","ceil","JPEG","stringHeader","substring","restOfData","headerBytes","atob","charCodeAt","finalArray","base64Header","btoa","String","fromCharCode","arr","isArray","arr2","_toConsumableArray","_P","_H","_Y","_S","physChunk","crc","crcChunk","startingIndex","searchStartOfPhys","chunkLength","finalHeader","b","a","autoBom","console","warn","d","XMLHttpRequest","open","responseType","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","global","navigator","userAgent","saveAs","HTMLAnchorElement","h","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","innerText","HTMLElement","safari","onloadend","readAsDataURL","freeExports","nodeType","freeModule","freeProcess","types","require","binding","defaultVertexShaderSource","params","errorState","_circlePositionsBuffer","extensions","copyPrograms","setValuePrograms","vectorMagnitudePrograms","_vertexShaders","DEFAULT_PROGRAM_NAME","DEFAULT_W_UV_PROGRAM_NAME","defines","DEFAULT_W_NORMAL_PROGRAM_NAME","DEFAULT_W_UV_NORMAL_PROGRAM_NAME","SEGMENT_PROGRAM_NAME","LAYER_POINTS_PROGRAM_NAME","LAYER_VECTOR_FIELD_PROGRAM_NAME","LAYER_LINES_PROGRAM_NAME","verboseLogging","validKeys","forEach","Error","errorCallback","message","DEFAULT_ERROR_CALLBACK","canvas","gl","context","contextID","getContext","contextOptions","WEBGL2","WEBGL1","EXPERIMENTAL_WEBGL","isWebGL2","log","glslVersion","GLSL3","GLSL1","intPrecision","PRECISION_HIGH_P","floatPrecision","disable","DEPTH_TEST","pixelStorei","UNPACK_ALIGNMENT","bindBuffer","ARRAY_BUFFER","resize","clientWidth","clientHeight","maxNumTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","initWithThreeRenderer","renderer","composer","GPUComposer","capabilities","precision","domElement","glslKeyForType","FLOAT","HALF_FLOAT","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","UINT","BYTE","SHORT","INT","_setValueProgramForType","program","GPUProgram","fragmentShader","uniforms","copyProgramForType","_wrappedLineColorProgram","vectorMagnitudeProgramForType","_quadPositionsBuffer","fsQuadPositions","initVertexBuffer","_boundaryPositionsBuffer","boundaryPositions","getCirclePositionsBuffer","numSegments","unitCirclePoints","cos","PI","sin","circlePositions","createBuffer","bufferData","STATIC_DRAW","_cloneGPULayer","gpuLayer","dimensions","width","height","getValues","clone","GPULayer","numComponents","filter","wrapS","wrapT","numBuffers","step","getStateAtIndex","bufferIndex","output","currentState","initTexture","url","isString","NEAREST","isValidFilter","validFilters","CLAMP_TO_EDGE","isValidWrap","validWraps","RGBA","isValidTextureFormat","validTextureFormats","isValidTextureType","validTextureTypes","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","srcFormat","srcType","pixel","texImage2D","image","Image","isPowerOf2","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","onLoad","_getVertexShaderWithName","programName","vertexShader","shader","preprocessedSrc","preprocessVertexShader","compileShader","VERTEX_SHADER","drawSetup","fullscreenRender","inputTextures","constructor","WebGLTexture","layer","setOutputLayer","useProgram","activeTexture","TEXTURE0","setBlendMode","shouldBlendAlpha","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","addLayerToInputs","_inputLayers","previous","passThroughLayerDataFromInputToOutput","state","copyProgram","internalType","_bindOutputBufferForWrite","_usingTextureOverrideForCurrentBuffer","viewport","bindFramebuffer","FRAMEBUFFER","setVertexAttribute","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","setPositionAttribute","setIndexAttribute","setUVAttribute","quadPositionsBuffer","glProgram","_defaultProgram","_setVertexUniform","drawArrays","TRIANGLE_STRIP","stepBoundary","boundaryPositionsBuffer","onePx","singleEdge","LINES","LINE_LOOP","stepNonBoundary","stepCircle","position","radius","DEFAULT_CIRCLE_NUM_SEGMENTS","TRIANGLE_FAN","stepSegment","position1","position2","thickness","_segmentProgram","diffX","diffY","angle","atan2","centerX","centerY","sqrt","numCapSegments","endCaps","stepPolyline","vertices","positions","closeLoop","halfThickness","numPositions","uvs","includeUVs","normals","includeNormals","s1","s2","n1","n2","n3","v1","v2","length1","u","v3","v4","length2","cross","abs","length3","acos","_defaultProgramWithUVNormal","_defaultProgramWithUV","_defaultProgramWithNormal","stepTriangleStrip","count","stepLines","indices","LINE_STRIP","drawLayerAsPoints","pointIndexArray","color","setUniform","_layerPointsProgram","pointSize","positionLayerDimensions","wrapX","wrapY","pointIndexBuffer","initSequentialFloatArray","POINTS","drawLayerAsLines","wrappedLineColorProgram","_layerLinesProgram","indexedLinesIndexBuffer","floatArray","drawLayerAsVectorField","vectorFieldIndexArray","_layerVectorFieldProgram","vectorScale","vectorSpacing","spacedDimensions","floor","vectorFieldIndexBuffer","drawLayerMagnitude","scale","resetThreeState","getViewport","utils","Vector4","setRenderTarget","resetState","dispose","deleteShader","_clearValue","_bufferIndex","buffers","isPositiveInteger","calcGPULayerSize","_length","_width","_height","defaultFilter","LINEAR","isValidDataType","validDataTypes","getGPULayerInternalType","getGLTextureParameters","glFormat","glInternalFormat","glType","glNumChannels","internalFilter","getGPULayerInternalFilter","glFilter","internalWrapS","getGPULayerInternalWrap","wrap","glWrapS","internalWrapT","glWrapT","clearValue","initBuffers","validatedArray","validateGPULayerArray","getError","framebuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","textureOverrides","incrementBufferIndex","_bindOutputBuffer","setFromArray","applyToAllBuffers","endIndex","JSON","stringify","destroyBuffers","isValidClearValue","isNumber","startIndex","fillLength","initArrayForType","float16View","is1D","RGBA_INTEGER","readyToRead","readPixels","OUTPUT_LENGTH","handleFloat16Conversion","index1","index2","savePNG","filename","multiplier","imageData","getImageData","indexFlipped","putImageData","toBlob","then","attachToThreeTexture","offsetTextureProperties","properties","__webglTexture","__webglInit","deleteTexture","deleteFramebuffer","results","framebufferWriteSupport","halfFloatsAsFloats","Int8Array","Int16Array","shouldCastIntTypeAsFloat","RED","RG","RGB","RED_INTEGER","RG_INTEGER","RGB_INTEGER","R16F","RG16F","RGB16F","RGBA16F","R32F","RG32F","RGB32F","RGBA32F","R8UI","RG8UI","RGB8UI","RGBA8UI","R8I","RG8I","RGB8I","RGBA8I","R16I","RG16I","RGB16I","RGBA16I","R16UI","RG16UI","RGB16UI","RGBA16UI","R32I","RG32I","RGB32I","RGBA32I","R32UI","RG32UI","RGB32UI","RGBA32UI","getExtension","OES_TEXTURE_HALF_FLOAT","HALF_FLOAT_OES","missingParams","testFramebufferWrite","validStatus","exp","remainder","pow","OES_TEXTURE_HAlF_FLOAT_LINEAR","OES_TEXTURE_FLOAT_LINEAR","OES_TEXTURE_FLOAT","EXT_COLOR_BUFFER_FLOAT","shouldTypeCast","validArrayTypes","arrayLength","shouldResize","_len","programs","isObject","fragmentShaderSource","preprocessFragmentShader","compile","definesNeedUpdate","FRAGMENT_SHADER","getProgramWithName","initGLProgram","uniformNames","uniformName","uniform","setProgramUniform","_location","getUniformLocation","FLOAT_1D_UNIFORM","uniform1f","FLOAT_2D_UNIFORM","uniform2fv","FLOAT_3D_UNIFORM","uniform3fv","FLOAT_4D_UNIFORM","uniform4fv","INT_1D_UNIFORM","isBoolean","uniform1i","INT_2D_UNIFORM","uniform2iv","INT_3D_UNIFORM","uniform3iv","INT_4D_UNIFORM","uniform4iv","UINT_1D_UNIFORM","uniform1ui","UINT_2D_UNIFORM","uniform2uiv","UINT_3D_UNIFORM","uniform3uiv","UINT_4D_UNIFORM","uniform4uiv","currentType","uniformInternalTypeForValue","isChanged","find","deleteProgram","z","w","copy","v","isNumberOfType","isInteger","isNonNegativeInteger","BOOL","REPEAT","PRECISION_LOW_P","PRECISION_MEDIUM_P","msg","WEBGL_DEPTH_TEXTURE","extensionName","optional","extension","isWebGL2Supported","isHighpSupportedInVertexShader","isHighpSupportedInFragmentShader","getVertexShaderMediumpPrecision","getFragmentShaderMediumpPrecision","_testing","makeShaderHeader","checks","GPULayerHelpers","precisionSource","supportsWebGL2","supportsHighpVertex","supportsHighpFragment","mediumpVertexPrecision","mediumpFragmentPrecision","intForPrecision","convertDefinesToString","definesSource","WEBGLCOMPUTE_INT_PRECISION","WEBGLCOMPUTE_FLOAT_PRECISION","shaderSource","shaderType","createShader","shaderHeader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","WebGL2RenderingContext","WebGL2ComputeRenderingContext","isHighpSupported","vsSource","fsSource","vs","fs","vertexSupport","fragmentSupport","test1PxCalc","addUniforms","positionLocation","deleteBuffer","preprocessShader","origLength","convertShaderToGLSL1","expected","vLocation","uniform3f","mediumpPrecision","convertVertexShaderToGLSL1","convertFragmentShaderToGLSL1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","definition","o","enumerable","globalThis","hmd","children","prop","r"],"mappings":"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","file":"webgl-compute.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebGLCompute\"] = factory();\n\telse\n\t\troot[\"WebGLCompute\"] = factory();\n})(self, function() {\nreturn ","// algorithm: ftp://ftp.fox-toolkit.org/pub/fasthalffloatconversion.pdf\n\nconst buffer = new ArrayBuffer(4);\nconst floatView = new Float32Array(buffer);\nconst uint32View = new Uint32Array(buffer);\n\n\nconst baseTable = new Uint32Array(512);\nconst shiftTable = new Uint32Array(512);\n\nfor(let i = 0; i < 256; ++i) {\n    const e = i - 127;\n\n    // very small number (0, -0)\n    if (e < -27) {\n        baseTable[i | 0x000] = 0x0000;\n        baseTable[i | 0x100] = 0x8000;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // small number (denorm)\n    } else if (e < -14) {\n        baseTable[i | 0x000] =  0x0400 >> (-e - 14);\n        baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n        shiftTable[i | 0x000] = -e - 1;\n        shiftTable[i | 0x100] = -e - 1;\n\n    // normal number\n    } else if (e <= 15) {\n        baseTable[i | 0x000] =  (e + 15) << 10;\n        baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n\n    // large number (Infinity, -Infinity)\n    } else if (e < 128) {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 24;\n        shiftTable[i | 0x100] = 24;\n\n    // stay (NaN, Infinity, -Infinity)\n    } else {\n        baseTable[i | 0x000] = 0x7c00;\n        baseTable[i | 0x100] = 0xfc00;\n        shiftTable[i | 0x000] = 13;\n        shiftTable[i | 0x100] = 13;\n    }\n}\n\n/**\n * round a number to a half float number bits.\n * @param {number} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n    floatView[0] = num;\n\n    const f = uint32View[0];\n    const e = (f >> 23) & 0x1ff;\n    return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\n\nconst mantissaTable = new Uint32Array(2048);\nconst exponentTable = new Uint32Array(64);\nconst offsetTable = new Uint32Array(64);\n\nmantissaTable[0] = 0;\nfor(let i = 1; i < 1024; ++i) {\n    let m = i << 13;    // zero pad mantissa bits\n    let e = 0;          // zero exponent\n\n    // normalized\n    while((m & 0x00800000) === 0) {\n        e -= 0x00800000;    // decrement exponent\n        m <<= 1;\n    }\n\n    m &= ~0x00800000;   // clear leading 1 bit\n    e += 0x38800000;    // adjust bias\n\n    mantissaTable[i] = m | e;\n}\nfor(let i = 1024; i < 2048; ++i) {\n    mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nexponentTable[0] = 0;\nfor(let i = 1; i < 31; ++i) {\n    exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor(let i = 33; i < 63; ++i) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\noffsetTable[0] = 0;\nfor(let i = 1; i < 64; ++i) {\n    if (i === 32) {\n        offsetTable[i] = 0;\n    } else {\n        offsetTable[i] = 1024;\n    }\n}\n\n/**\n * convert a half float number bits to a number.\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n    const m = float16bits >> 10;\n    uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n    return floatView[0];\n}\n","import { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns the nearest half precision float representation of a number.\n * @param {number} num\n * @returns {number}\n */\nexport default function hfround(num) {\n    num = Number(num);\n\n    // for optimization\n    if (!Number.isFinite(num) || num === 0) {\n        return num;\n    }\n\n    const x16 = roundToFloat16Bits(num);\n    return convertToNumber(x16);\n}\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","/**\n * JavaScriptCore <= 12 bug\n * @see https://bugs.webkit.org/show_bug.cgi?id=171606\n */\nexport const isTypedArrayIndexedPropertyWritable = Object.getOwnPropertyDescriptor(new Uint8Array(1), 0).writable;\n","/**\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToInteger(target) {\n    let number = typeof target !== \"number\" ? Number(target) : target;\n    if (Number.isNaN(number)) {\n        number = 0;\n    }\n    return Math.trunc(number);\n}\n\n/**\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompareFunction(x, y) {\n    const [isNaN_x, isNaN_y] = [Number.isNaN(x), Number.isNaN(y)];\n\n    if (isNaN_x && isNaN_y) {\n        return 0;\n    }\n\n    if (isNaN_x) {\n        return 1;\n    }\n\n    if (isNaN_y) {\n        return -1;\n    }\n\n    if (x < y) {\n        return -1;\n    }\n\n    if (x > y) {\n        return 1;\n    }\n\n    if (x === 0 && y === 0) {\n        const [isPlusZero_x, isPlusZero_y] = [Object.is(x, 0), Object.is(y, 0)];\n\n        if (!isPlusZero_x && isPlusZero_y) {\n            return -1;\n        }\n\n        if (isPlusZero_x && !isPlusZero_y) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n","import { ToInteger } from \"./spec\";\n\nexport { default as isArrayBuffer } from \"lodash-es/isArrayBuffer\";\n\n/**\n * @param {unknown} view\n * @returns {boolean}\n */\nexport function isDataView(view) {\n    return view instanceof DataView;\n}\n\n/**\n * @param {unknown} key\n * @returns {boolean}\n */\nexport function isStringNumberKey(key) {\n    return typeof key === \"string\" && key === ToInteger(key) + \"\";\n}\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/**\n * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n */\nfunction baseIsArrayBuffer(value) {\n  return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n}\n\nexport default baseIsArrayBuffer;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\n\n/**\n * Checks if `value` is classified as an `ArrayBuffer` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n * @example\n *\n * _.isArrayBuffer(new ArrayBuffer(2));\n * // => true\n *\n * _.isArrayBuffer(new Array(2));\n * // => false\n */\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\nexport default isArrayBuffer;\n","import memoize from \"lodash-es/memoize\";\nimport { isTypedArrayIndexedPropertyWritable } from \"./bug\";\nimport { isArrayBuffer, isStringNumberKey } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\nimport { createPrivateStorage } from \"./private\";\nimport { ToInteger, defaultCompareFunction } from \"./spec\";\n\nconst _ = createPrivateStorage();\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isFloat16Array(target) {\n    return target instanceof Float16Array;\n}\n\n/**\n * @param {unknown} target\n * @throws {TypeError}\n */\nfunction assertFloat16Array(target) {\n    if (!isFloat16Array(target)) {\n        throw new TypeError(\"This is not a Float16Array\");\n    }\n}\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isDefaultFloat16ArrayMethods(target) {\n    return typeof target === \"function\" && defaultFloat16ArrayMethods.has(target);\n}\n\n/**\n * @param {Float16Array} float16bits\n * @return {number[]}\n */\nfunction copyToArray(float16bits) {\n    const length = float16bits.length;\n\n    const array = new Array(length);\n    for(let i = 0; i < length; ++i) {\n        array[i] = convertToNumber(float16bits[i]);\n    }\n\n    return array;\n}\n\n/** @type {ProxyHandler<Function>} */\nconst applyHandler = {\n    apply(func, thisArg, args) {\n        // peel off proxy\n        if (isFloat16Array(thisArg) && isDefaultFloat16ArrayMethods(func)) {\n            return Reflect.apply(func, _(thisArg).target ,args);\n        }\n\n        return Reflect.apply(func, thisArg, args);\n    },\n};\n\n/** @type {ProxyHandler<Float16Array>} */\nconst handler = {\n    get(target, key) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.has(target, key) ? convertToNumber(Reflect.get(target, key)) : undefined;\n        } else {\n            const ret = wrapper !== null && Reflect.has(wrapper, key) ? Reflect.get(wrapper, key) : Reflect.get(target, key);\n\n            if (typeof ret !== \"function\") {\n                return ret;\n            }\n\n            // TypedArray methods can't be called by Proxy Object\n            let proxy = _(ret).proxy;\n\n            if (proxy === undefined) {\n                proxy = _(ret).proxy = new Proxy(ret, applyHandler);\n            }\n\n            return proxy;\n        }\n    },\n\n    set(target, key, value) {\n        let wrapper = null;\n        if (!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if (isStringNumberKey(key)) {\n            return Reflect.set(target, key, roundToFloat16Bits(value));\n        } else {\n            // frozen object can't change prototype property\n            if (wrapper !== null && (!Reflect.has(target, key) || Object.isFrozen(wrapper))) {\n                return Reflect.set(wrapper, key, value);\n            } else {\n                return Reflect.set(target, key, value);\n            }\n        }\n    },\n};\n\nif (!isTypedArrayIndexedPropertyWritable) {\n    handler.getPrototypeOf = (wrapper) => { return Reflect.getPrototypeOf(_(wrapper).target); };\n    handler.setPrototypeOf = (wrapper, prototype) => { return Reflect.setPrototypeOf(_(wrapper).target, prototype); };\n\n    handler.defineProperty = (wrapper, key, descriptor) => {\n        const target = _(wrapper).target;\n        return !Reflect.has(target, key) || Object.isFrozen(wrapper) ? Reflect.defineProperty(wrapper, key, descriptor) : Reflect.defineProperty(target, key, descriptor);\n    };\n    handler.deleteProperty = (wrapper, key) => {\n        const target = _(wrapper).target;\n        return Reflect.has(wrapper, key) ? Reflect.deleteProperty(wrapper, key) : Reflect.deleteProperty(target, key);\n    };\n\n    handler.has = (wrapper, key) => { return Reflect.has(wrapper, key) || Reflect.has(_(wrapper).target, key); };\n\n    handler.isExtensible = (wrapper) => { return Reflect.isExtensible(wrapper); };\n    handler.preventExtensions = (wrapper) => { return Reflect.preventExtensions(wrapper); };\n\n    handler.getOwnPropertyDescriptor = (wrapper, key) => { return Reflect.getOwnPropertyDescriptor(wrapper, key); };\n    handler.ownKeys = (wrapper) => { return Reflect.ownKeys(wrapper); };\n}\n\nexport default class Float16Array extends Uint16Array {\n\n    constructor(input, byteOffset, length) {\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            super(_(input).target);\n\n        // 22.2.1.3, 22.2.1.4 TypedArray, Array, ArrayLike, Iterable\n        } else if (input !== null && typeof input === \"object\" && !isArrayBuffer(input)) {\n            // if input is not ArrayLike and Iterable, get Array\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n\n            const length = arrayLike.length;\n            super(length);\n\n            for(let i = 0; i < length; ++i) {\n                // super (Uint16Array)\n                this[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n\n        // 22.2.1.2, 22.2.1.5 primitive, ArrayBuffer\n        } else {\n            switch(arguments.length) {\n                case 0:\n                    super();\n                    break;\n\n                case 1:\n                    super(input);\n                    break;\n\n                case 2:\n                    super(input, byteOffset);\n                    break;\n\n                case 3:\n                    super(input, byteOffset, length);\n                    break;\n\n                default:\n                    // @ts-ignore\n                    super(...arguments);\n            }\n        }\n\n        let proxy;\n\n        if (isTypedArrayIndexedPropertyWritable) {\n            proxy = new Proxy(this, handler);\n        } else {\n            const wrapper = Object.create(null);\n            _(wrapper).target = this;\n            proxy = new Proxy(wrapper, handler);\n        }\n\n        // proxy private storage\n        _(proxy).target = this;\n\n        // this private storage\n        _(this).proxy = proxy;\n\n        return proxy;\n    }\n\n    // static methods\n    static from(src, ...opts) {\n        if (opts.length === 0) {\n            return new Float16Array(Uint16Array.from(src, roundToFloat16Bits).buffer);\n        }\n\n        const mapFunc = opts[0];\n        const thisArg = opts[1];\n\n        return new Float16Array(Uint16Array.from(src, function (val, ...args) {\n            return roundToFloat16Bits(mapFunc.call(this, val, ...args));\n        }, thisArg).buffer);\n    }\n\n    static of(...args) {\n        return new Float16Array(args);\n    }\n\n    // iterate methods\n    * [Symbol.iterator]() {\n        for(const val of super[Symbol.iterator]()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    keys() {\n        return super.keys();\n    }\n\n    * values() {\n        for(const val of super.values()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    /** @type {() => IterableIterator<[number, number]>} */\n    * entries() {\n        for(const [i, val] of super.entries()) {\n            yield [i, convertToNumber(val)];\n        }\n    }\n\n    // functional methods\n    // @ts-ignore\n    map(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            array.push(callback.call(thisArg, val, i, _(this).proxy));\n        }\n\n        return new Float16Array(array);\n    }\n\n    // @ts-ignore\n    filter(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            if (callback.call(thisArg, val, i, _(this).proxy)) {\n                array.push(val);\n            }\n        }\n\n        return new Float16Array(array);\n    }\n\n    reduce(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        if (opts.length === 0) {\n            val = convertToNumber(this[0]);\n            start = 1;\n        } else {\n            val = opts[0];\n            start = 0;\n        }\n\n        for(let i = start, l = this.length; i < l; ++i) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    reduceRight(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        const length = this.length;\n        if (opts.length === 0) {\n            val = convertToNumber(this[length - 1]);\n            start = length - 1;\n        } else {\n            val = opts[0];\n            start = length;\n        }\n\n        for(let i = start; i--;) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    forEach(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy);\n        }\n    }\n\n    find(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return value;\n            }\n        }\n    }\n\n    findIndex(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if (callback.call(thisArg, value, i, _(this).proxy)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    every(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (!callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    some(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if (callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // change element methods\n    set(input, ...opts) {\n        assertFloat16Array(this);\n\n        const offset = opts[0];\n\n        let float16bits;\n\n        // input Float16Array\n        if (isFloat16Array(input)) {\n            float16bits = _(input).target;\n\n        // input others\n        } else {\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n            const length = arrayLike.length;\n\n            float16bits = new Uint16Array(length);\n            for(let i = 0, l = arrayLike.length; i < l; ++i) {\n                float16bits[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n        }\n\n        super.set(float16bits, offset);\n    }\n\n    reverse() {\n        assertFloat16Array(this);\n\n        super.reverse();\n\n        return _(this).proxy;\n    }\n\n    fill(value, ...opts) {\n        assertFloat16Array(this);\n\n        super.fill(roundToFloat16Bits(value), ...opts);\n\n        return _(this).proxy;\n    }\n\n    copyWithin(target, start, ...opts) {\n        assertFloat16Array(this);\n\n        super.copyWithin(target, start, ...opts);\n\n        return _(this).proxy;\n    }\n\n    sort(...opts) {\n        assertFloat16Array(this);\n\n        let compareFunction = opts[0];\n\n        if (compareFunction === undefined) {\n            compareFunction = defaultCompareFunction;\n        }\n\n        const _convertToNumber = memoize(convertToNumber);\n\n        super.sort((x, y) => { return compareFunction(_convertToNumber(x), _convertToNumber(y)); });\n\n        return _(this).proxy;\n    }\n\n    // copy element methods\n    // @ts-ignore\n    slice(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.slice(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.slice(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer);\n    }\n\n    // @ts-ignore\n    subarray(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.subarray(...opts);\n        } catch(e) {\n            if (e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.subarray(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer, float16bits.byteOffset, float16bits.length);\n    }\n\n    // contains methods\n    indexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        for(let i = from, l = length; i < l; ++i) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    lastIndexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        from = from === 0 ? length : from + 1;\n\n        if (from >= 0) {\n            from = from < length ? from : length;\n        } else {\n            from += length;\n        }\n\n        for(let i = from; i--;) {\n            if (convertToNumber(this[i]) === element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    includes(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if (from < 0) {\n            from += length;\n            if (from < 0) {\n                from = 0;\n            }\n        }\n\n        const isNaN = Number.isNaN(element);\n        for(let i = from, l = length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n\n            if (isNaN && Number.isNaN(value)) {\n                return true;\n            }\n\n            if (value === element) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // string methods\n    join(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        return array.join(...opts);\n    }\n\n    toLocaleString(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        // @ts-ignore\n        return array.toLocaleString(...opts);\n    }\n\n    // @ts-ignore\n    get [Symbol.toStringTag]() {\n        if (isFloat16Array(this)) {\n            return \"Float16Array\";\n        }\n    }\n}\n\nconst Float16Array$prototype = Float16Array.prototype;\n\nconst defaultFloat16ArrayMethods = new WeakSet();\nfor(const key of Reflect.ownKeys(Float16Array$prototype)) {\n    const val = Float16Array$prototype[key];\n    if (typeof val === \"function\") {\n        defaultFloat16ArrayMethods.add(val);\n    }\n}\n","/**\n * @returns {(self:object) => object}\n */\nexport function createPrivateStorage() {\n\tconst wm = new WeakMap();\n\treturn (self) => {\n\t\tlet obj = wm.get(self);\n\t\tif (obj) {\n\t\t\treturn obj;\n\t\t} else {\n\t\t\tobj = Object.create(null);\n\t\t\twm.set(self, obj);\n\t\t\treturn obj;\n\t\t}\n\t};\n}\n","import { isDataView } from \"./is\";\nimport { convertToNumber, roundToFloat16Bits } from \"./lib\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to getFloat16 function must be a DataView\");\n    }\n\n    return convertToNumber( dataView.getUint16(byteOffset, ...opts) );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView.\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n    if (!isDataView(dataView)) {\n        throw new TypeError(\"First argument to setFloat16 function must be a DataView\");\n    }\n\n    dataView.setUint16(byteOffset, roundToFloat16Bits(value), ...opts);\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeDpiBlob = changeDpiBlob;\nexports.changeDpiDataUrl = changeDpiDataUrl;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createPngDataTable() {\n  /* Table of CRCs of all 8-bit messages. */\n  var crcTable = new Int32Array(256);\n  for (var n = 0; n < 256; n++) {\n    var c = n;\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xedb88320 ^ c >>> 1 : c >>> 1;\n    }\n    crcTable[n] = c;\n  }\n  return crcTable;\n}\n\nfunction calcCrc(buf) {\n  var c = -1;\n  if (!pngDataTable) pngDataTable = createPngDataTable();\n  for (var n = 0; n < buf.length; n++) {\n    c = pngDataTable[(c ^ buf[n]) & 0xFF] ^ c >>> 8;\n  }\n  return c ^ -1;\n}\n\nvar pngDataTable = void 0;\n\nvar PNG = 'image/png';\nvar JPEG = 'image/jpeg';\n\n// those are 3 possible signature of the physBlock in base64.\n// the pHYs signature block is preceed by the 4 bytes of lenght. The length of\n// the block is always 9 bytes. So a phys block has always this signature:\n// 0 0 0 9 p H Y s.\n// However the data64 encoding aligns we will always find one of those 3 strings.\n// this allow us to find this particular occurence of the pHYs block without\n// converting from b64 back to string\nvar b64PhysSignature1 = 'AAlwSFlz';\nvar b64PhysSignature2 = 'AAAJcEhZ';\nvar b64PhysSignature3 = 'AAAACXBI';\n\nvar _P = 'p'.charCodeAt(0);\nvar _H = 'H'.charCodeAt(0);\nvar _Y = 'Y'.charCodeAt(0);\nvar _S = 's'.charCodeAt(0);\n\nfunction changeDpiBlob(blob, dpi) {\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var headerChunk = blob.slice(0, 33);\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      var dataArray = new Uint8Array(fileReader.result);\n      var tail = blob.slice(33);\n      var changedArray = changeDpiOnArray(dataArray, dpi, blob.type);\n      resolve(new Blob([changedArray, tail], { type: blob.type }));\n    };\n    fileReader.readAsArrayBuffer(headerChunk);\n  });\n}\n\nfunction changeDpiDataUrl(base64Image, dpi) {\n  var dataSplitted = base64Image.split(',');\n  var format = dataSplitted[0];\n  var body = dataSplitted[1];\n  var type = void 0;\n  var headerLength = void 0;\n  var overwritepHYs = false;\n  if (format.indexOf(PNG) !== -1) {\n    type = PNG;\n    var b64Index = detectPhysChunkFromDataUrl(body);\n    // 28 bytes in dataUrl are 21bytes, length of phys chunk with everything inside.\n    if (b64Index >= 0) {\n      headerLength = Math.ceil((b64Index + 28) / 3) * 4;\n      overwritepHYs = true;\n    } else {\n      headerLength = 33 / 3 * 4;\n    }\n  }\n  if (format.indexOf(JPEG) !== -1) {\n    type = JPEG;\n    headerLength = 18 / 3 * 4;\n  }\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var stringHeader = body.substring(0, headerLength);\n  var restOfData = body.substring(headerLength);\n  var headerBytes = atob(stringHeader);\n  var dataArray = new Uint8Array(headerBytes.length);\n  for (var i = 0; i < dataArray.length; i++) {\n    dataArray[i] = headerBytes.charCodeAt(i);\n  }\n  var finalArray = changeDpiOnArray(dataArray, dpi, type, overwritepHYs);\n  var base64Header = btoa(String.fromCharCode.apply(String, _toConsumableArray(finalArray)));\n  return [format, ',', base64Header, restOfData].join('');\n}\n\nfunction detectPhysChunkFromDataUrl(data) {\n  var b64index = data.indexOf(b64PhysSignature1);\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature2);\n  }\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature3);\n  }\n  // if b64index === -1 chunk is not found\n  return b64index;\n}\n\nfunction searchStartOfPhys(data) {\n  var length = data.length - 1;\n  // we check from the end since we cut the string in proximity of the header\n  // the header is within 21 bytes from the end.\n  for (var i = length; i >= 4; i--) {\n    if (data[i - 4] === 9 && data[i - 3] === _P && data[i - 2] === _H && data[i - 1] === _Y && data[i] === _S) {\n      return i - 3;\n    }\n  }\n}\n\nfunction changeDpiOnArray(dataArray, dpi, format, overwritepHYs) {\n  if (format === JPEG) {\n    dataArray[13] = 1; // 1 pixel per inch or 2 pixel per cm\n    dataArray[14] = dpi >> 8; // dpiX high byte\n    dataArray[15] = dpi & 0xff; // dpiX low byte\n    dataArray[16] = dpi >> 8; // dpiY high byte\n    dataArray[17] = dpi & 0xff; // dpiY low byte\n    return dataArray;\n  }\n  if (format === PNG) {\n    var physChunk = new Uint8Array(13);\n    // chunk header pHYs\n    // 9 bytes of data\n    // 4 bytes of crc\n    // this multiplication is because the standard is dpi per meter.\n    dpi *= 39.3701;\n    physChunk[0] = _P;\n    physChunk[1] = _H;\n    physChunk[2] = _Y;\n    physChunk[3] = _S;\n    physChunk[4] = dpi >>> 24; // dpiX highest byte\n    physChunk[5] = dpi >>> 16; // dpiX veryhigh byte\n    physChunk[6] = dpi >>> 8; // dpiX high byte\n    physChunk[7] = dpi & 0xff; // dpiX low byte\n    physChunk[8] = physChunk[4]; // dpiY highest byte\n    physChunk[9] = physChunk[5]; // dpiY veryhigh byte\n    physChunk[10] = physChunk[6]; // dpiY high byte\n    physChunk[11] = physChunk[7]; // dpiY low byte\n    physChunk[12] = 1; // dot per meter....\n\n    var crc = calcCrc(physChunk);\n\n    var crcChunk = new Uint8Array(4);\n    crcChunk[0] = crc >>> 24;\n    crcChunk[1] = crc >>> 16;\n    crcChunk[2] = crc >>> 8;\n    crcChunk[3] = crc & 0xff;\n\n    if (overwritepHYs) {\n      var startingIndex = searchStartOfPhys(dataArray);\n      dataArray.set(physChunk, startingIndex);\n      dataArray.set(crcChunk, startingIndex + 13);\n      return dataArray;\n    } else {\n      // i need to give back an array of data that is divisible by 3 so that\n      // dataurl encoding gives me integers, for luck this chunk is 17 + 4 = 21\n      // if it was we could add a text chunk contaning some info, untill desired\n      // length is met.\n\n      // chunk structur 4 bytes for length is 9\n      var chunkLength = new Uint8Array(4);\n      chunkLength[0] = 0;\n      chunkLength[1] = 0;\n      chunkLength[2] = 0;\n      chunkLength[3] = 9;\n\n      var finalHeader = new Uint8Array(54);\n      finalHeader.set(dataArray, 0);\n      finalHeader.set(chunkLength, 33);\n      finalHeader.set(physChunk, 37);\n      finalHeader.set(crcChunk, 50);\n      return finalHeader;\n    }\n  }\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import { GPULayer } from './GPULayer';\nimport {\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tFLOAT,\n\tHALF_FLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tGLSLVersion,\n\tGLSL1,\n\tGLSL3,\n\tWEBGL2,\n\tWEBGL1,\n\tEXPERIMENTAL_WEBGL,\n\tCLAMP_TO_EDGE,\n\tTextureFormat,\n\tNEAREST,\n\tRGBA,\n\tTextureType,\n\tPROGRAM_NAME_INTERNAL,\n\tCompileTimeVars,\n\tDEFAULT_PROGRAM_NAME,\n\tDEFAULT_W_UV_PROGRAM_NAME,\n\tDEFAULT_W_NORMAL_PROGRAM_NAME,\n\tDEFAULT_W_UV_NORMAL_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tLAYER_POINTS_PROGRAM_NAME,\n\tLAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tLAYER_LINES_PROGRAM_NAME,\n\tErrorCallback,\n\tDEFAULT_CIRCLE_NUM_SEGMENTS,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tUINT,\n\tGLSLPrecision,\n\tPRECISION_HIGH_P,\n\tDEFAULT_ERROR_CALLBACK,\n} from './constants';\nimport { GPUProgram } from './GPUProgram';\n// Just importing the types here.\n// Only @types/three is installed as dev dependency.\nimport {\n\tWebGLRenderer,\n\tTexture,\n\tVector4,\n} from 'three';\nimport * as utils from './Vector4';\nimport {\n\tisWebGL2,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n\tpreprocessVertexShader,\n\tcompileShader,\n} from './utils';\nimport {\n\tisArray,\n\tisString,\n\tisValidFilter,\n\tisValidTextureType,\n\tisValidTextureFormat,\n\tisValidWrap,\n} from './checks';\nconst defaultVertexShaderSource = require('./glsl/vert/DefaultVertShader.glsl');\n\nexport class GPUComposer {\n\treadonly canvas: HTMLCanvasElement;\n\treadonly gl!: WebGLRenderingContext | WebGL2RenderingContext;\n\treadonly glslVersion!: GLSLVersion;\n\treadonly intPrecision!: GLSLPrecision;\n\treadonly floatPrecision!: GLSLPrecision;\n\t// These width and height are the current canvas at full res.\n\tprivate width!: number;\n\tprivate height!: number;\n\n\tprivate errorState = false;\n\treadonly errorCallback: ErrorCallback;\n\n\t// Save threejs renderer if passed in.\n\treadonly renderer?: WebGLRenderer;\n\tprivate readonly maxNumTextures!: number;\n\t\n\t// Precomputed buffers (inited as needed).\n\tprivate _quadPositionsBuffer?: WebGLBuffer;\n\tprivate _boundaryPositionsBuffer?: WebGLBuffer;\n\t// Store multiple circle positions buffers for various num segments, use numSegments as key.\n\tprivate _circlePositionsBuffer: { [key: number]: WebGLBuffer } = {};\n\n\tprivate pointIndexArray?: Float32Array;\n\tprivate pointIndexBuffer?: WebGLBuffer;\n\tprivate vectorFieldIndexArray?: Float32Array;\n\tprivate vectorFieldIndexBuffer?: WebGLBuffer;\n\tprivate indexedLinesIndexBuffer?: WebGLBuffer;\n\n\t// Keep track of all GL extensions that have been loaded.\n\treadonly extensions: { [key: string]: any } = {};\n\n\t// Programs for copying data (these are needed for rendering partial screen geometries).\n\tprivate readonly copyPrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/CopyFragShader.glsl'),\n\t};\n\n\t// Other util programs.\n\tprivate readonly setValuePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/SetValueFragShader.glsl'),\n\t};\n\tprivate _wrappedLineColorProgram?: GPUProgram; // We only need a FLOAT version of this.\n\tprivate readonly vectorMagnitudePrograms: {\n\t\tsrc: string,\n\t\t[FLOAT]?: GPUProgram,\n\t\t[INT]?: GPUProgram,\n\t\t[UINT]?: GPUProgram,\n\t} = {\n\t\tsrc: require('./glsl/frag/VectorMagnitudeFragShader.glsl'),\n\t};\n\n\t// Vertex shaders are shared across all GPUProgram instances.\n\treadonly _vertexShaders: {[key in PROGRAM_NAME_INTERNAL]: {\n\t\tsrc: string,\n\t\tshader?: WebGLProgram,\n\t\tdefines?: CompileTimeVars,\n\t}} = {\n\t\t[DEFAULT_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t},\n\t\t[DEFAULT_W_UV_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'WEBGLCOMPUTE_UV_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[DEFAULT_W_NORMAL_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'WEBGLCOMPUTE_NORMAL_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[DEFAULT_W_UV_NORMAL_PROGRAM_NAME]: {\n\t\t\tsrc: defaultVertexShaderSource,\n\t\t\tdefines: {\n\t\t\t\t'WEBGLCOMPUTE_UV_ATTRIBUTE': '1',\n\t\t\t\t'WEBGLCOMPUTE_NORMAL_ATTRIBUTE': '1',\n\t\t\t},\n\t\t},\n\t\t[SEGMENT_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/SegmentVertShader.glsl'),\n\t\t},\n\t\t[LAYER_POINTS_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerPointsVertShader.glsl'),\n\t\t},\n\t\t[LAYER_VECTOR_FIELD_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerVectorFieldVertShader.glsl'),\n\t\t},\n\t\t[LAYER_LINES_PROGRAM_NAME]: {\n\t\t\tsrc: require('./glsl/vert/LayerLinesVertShader.glsl'),\n\t\t},\n\t};\n\n\tverboseLogging = false;\n\n\tstatic initWithThreeRenderer(\n\t\trenderer: WebGLRenderer,\n\t\tparams?: {\n\t\t\tverboseLogging?: boolean,\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\tconst composer = new GPUComposer(\n\t\t\t{\n\t\t\t\tfloatPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\tintPrecision: renderer.capabilities.precision as GLSLPrecision || PRECISION_HIGH_P,\n\t\t\t\t...params,\n\t\t\t\tcanvas: renderer.domElement,\n\t\t\t\tcontext: renderer.getContext(),\n\t\t\t\tglslVersion: renderer.capabilities.isWebGL2 ? GLSL3 : GLSL1,\n\t\t\t},\n\t\t);\n\t\t// Attach renderer.\n\t\t// @ts-ignore\n\t\tcomposer.renderer = renderer;\n\t\treturn composer;\n\t}\n\n\tconstructor(\n\t\tparams: {\n\t\t\tcanvas: HTMLCanvasElement,\n\t\t\tcontext?: WebGLRenderingContext | WebGL2RenderingContext | null,\n\t\t\tcontextID?: typeof WEBGL2 | typeof WEBGL1 | typeof EXPERIMENTAL_WEBGL | string,\n\t\t\tcontextOptions?: {\n\t\t\t\tantialias?: boolean,\n\t\t\t\t[key: string]: any,\n\t\t\t},\n\t\t\tglslVersion?: GLSLVersion,\n\t\t\tintPrecision?: GLSLPrecision,\n\t\t\tfloatPrecision?: GLSLPrecision,\n\t\t\tverboseLogging?: boolean,\n\t\t\t// Optionally pass in an error callback in case we want to handle errors related to webgl support.\n\t\t\t// e.g. throw up a modal telling user this will not work on their device.\n\t\t\terrorCallback?: ErrorCallback,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['canvas', 'context', 'contextID', 'contextOptions', 'glslVersion', 'verboseLogging', 'errorCallback'];\n\t\tconst requiredKeys = ['canvas'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to new GPUComposer(params).  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to new GPUComposer(params).`);\n\t\t\t}\n\t\t});\n\n\t\tif (params.verboseLogging !== undefined) this.verboseLogging = params.verboseLogging;\n\n\t\t// Save callback in case we run into an error.\n\t\tconst self = this;\n\t\tthis.errorCallback = (message: string) => {\n\t\t\tif (self.errorState) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.errorState = true;\n\t\t\tparams.errorCallback ? params.errorCallback(message) : DEFAULT_ERROR_CALLBACK(message);\n\t\t}\n\n\t\tconst { canvas } = params;\n\t\tthis.canvas = canvas;\n\t\tlet gl = params.context;\n\n\t\t// Init GL.\n\t\tif (!gl) {\n\t\t\t// Init a gl context if not passed in.\n\t\t\tif (params.contextID) {\n\t\t\t\tgl = canvas.getContext(params.contextID, params.contextOptions)  as WebGLRenderingContext | null;\n\t\t\t\tif (!gl) {\n\t\t\t\t\tconsole.warn(`Unable to initialize WebGL context with contextID: ${params.contextID}.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gl) {\n\t\t\t\tgl = canvas.getContext(WEBGL2, params.contextOptions)  as WebGL2RenderingContext | null\n\t\t\t\t\t|| canvas.getContext(WEBGL1, params.contextOptions)  as WebGLRenderingContext | null\n\t\t\t\t\t|| canvas.getContext(EXPERIMENTAL_WEBGL, params.contextOptions)  as WebGLRenderingContext | null;\n\t\t\t}\n\t\t\tif (gl === null) {\n\t\t\t\tthis.errorCallback('Unable to initialize WebGL context.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (isWebGL2(gl)) {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 2.0 context.');\n\t\t} else {\n\t\t\tif (this.verboseLogging) console.log('Using WebGL 1.0 context.');\n\t\t}\n\t\tthis.gl = gl;\n\n\t\t// Save glsl version, default to 3 if using webgl2 context.\n\t\tlet glslVersion = params.glslVersion || (isWebGL2(gl) ? GLSL3 : GLSL1);\n\t\tif (!isWebGL2(gl) && glslVersion === GLSL3) {\n\t\t\tconsole.warn('GLSL3.x is incompatible with WebGL1.0 contexts, falling back to GLSL1.');\n\t\t\tglslVersion = GLSL1; // Fall back to GLSL1 in these cases.\n\t\t}\n\t\t// TODO: check that this is valid.\n\t\tthis.glslVersion = glslVersion;\n\n\t\t// Set default int/float precision.\n\t\tthis.intPrecision = params.intPrecision || PRECISION_HIGH_P;\n\t\tthis.floatPrecision = params.floatPrecision || PRECISION_HIGH_P;\n\n\t\t// GL setup.\n\t\t// Disable depth testing globally.\n\t\tgl.disable(gl.DEPTH_TEST);\n\t\t// Set unpack alignment to 1 so we can have textures of arbitrary dimensions.\n\t\t// https://stackoverflow.com/questions/51582282/error-when-creating-textures-in-webgl-with-the-rgb-format\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\t\t// TODO: look into more of these: https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n\t\t// // Some implementations of HTMLCanvasElement's or OffscreenCanvas's CanvasRenderingContext2D store color values\n\t\t// // internally in premultiplied form. If such a canvas is uploaded to a WebGL texture with the\n\t\t// // UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter set to false, the color channels will have to be un-multiplied\n\t\t// // by the alpha channel, which is a lossy operation. The WebGL implementation therefore can not guarantee that colors\n\t\t// // with alpha < 1.0 will be preserved losslessly when first drawn to a canvas via CanvasRenderingContext2D and then\n\t\t// // uploaded to a WebGL texture when the UNPACK_PREMULTIPLY_ALPHA_WEBGL pixel storage parameter is set to false.\n\t\t// gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n\t\t// Unbind active buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\t// Canvas setup.\n\t\tthis.resize(canvas.clientWidth, canvas.clientHeight);\n\n\t\t// Log number of textures available.\n\t\tthis.maxNumTextures = this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tif (this.verboseLogging) console.log(`${this.maxNumTextures} textures max.`);\n\t}\n\n\tisWebGL2() {\n\t\treturn isWebGL2(this.gl);\n\t}\n\n\tprivate glslKeyForType(type: GPULayerType) {\n\t\tif (this.glslVersion === GLSL1) return FLOAT;\n\t\tswitch (type) {\n\t\t\tcase HALF_FLOAT:\n\t\t\tcase FLOAT:\n\t\t\t\treturn FLOAT;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\treturn UINT;\n\t\t\tcase BYTE:\n\t\t\tcase SHORT:\n\t\t\tcase INT:\n\t\t\t\treturn INT;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid type: ${type} passed to GPUComposer.copyProgramForType.`);\n\t\t}\n\t}\n\n\t_setValueProgramForType(type: GPULayerType) {\n\t\tconst key = this.glslKeyForType(type);\n\t\tif (this.setValuePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `setValue-${key}`,\n\t\t\t\tfragmentShader: this.setValuePrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_value',\n\t\t\t\t\t\tvalue: [0, 0, 0, 0],\n\t\t\t\t\t\ttype: key === UINT ? INT : key, // TODO: is there a uint type?\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`WEBGLCOMPUTE_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.setValuePrograms[key] = program;\n\t\t}\n\t\treturn this.setValuePrograms[key]!;\n\t}\n\n\tprivate copyProgramForType(type: GPULayerType) {\n\t\tconst key = this.glslKeyForType(type);\n\t\tif (this.copyPrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `copy-${key}`,\n\t\t\t\tfragmentShader: this.copyPrograms.src,\n\t\t\t\tuniforms: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'u_state',\n\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\ttype: INT,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefines: {\n\t\t\t\t\t[`WEBGLCOMPUTE_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.copyPrograms[key] = program;\n\t\t}\n\t\treturn this.copyPrograms[key]!;\n\t}\n\n\tprivate get wrappedLineColorProgram() {\n\t\tif (this._wrappedLineColorProgram === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: 'wrappedLineColor',\n\t\t\t\tfragmentShader: require('./glsl/frag/WrappedLineColorFragShader.glsl'),\n\t\t\t});\n\t\t\tthis._wrappedLineColorProgram = program;\n\t\t}\n\t\treturn this._wrappedLineColorProgram;\n\t}\n\n\tprivate vectorMagnitudeProgramForType(type: GPULayerType) {\n\t\tconst key = this.glslKeyForType(type);\n\t\tif (this.vectorMagnitudePrograms[key] === undefined) {\n\t\t\tconst program = new GPUProgram(this, {\n\t\t\t\tname: `vectorMagnitude-${key}`,\n\t\t\t\tfragmentShader: this.vectorMagnitudePrograms.src,\n\t\t\t\tdefines: {\n\t\t\t\t\t[`WEBGLCOMPUTE_${key}`]: '1',\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.vectorMagnitudePrograms[key] = program;\n\t\t}\n\t\treturn this.vectorMagnitudePrograms[key]!;\n\t}\n\n\tprivate get quadPositionsBuffer() {\n\t\tif (this._quadPositionsBuffer === undefined) {\n\t\t\tconst fsQuadPositions = new Float32Array([ -1, -1, 1, -1, -1, 1, 1, 1 ]);\n\t\t\tthis._quadPositionsBuffer = this.initVertexBuffer(fsQuadPositions)!;\n\t\t}\n\t\treturn this._quadPositionsBuffer!;\n\t}\n\n\tprivate get boundaryPositionsBuffer() {\n\t\tif (this._boundaryPositionsBuffer === undefined) {\n\t\t\tconst boundaryPositions = new Float32Array([ -1, -1, 1, -1, 1, 1, -1, 1, -1, -1 ]);\n\t\t\tthis._boundaryPositionsBuffer = this.initVertexBuffer(boundaryPositions)!;\n\t\t}\n\t\treturn this._boundaryPositionsBuffer!;\n\t}\n\n\tprivate getCirclePositionsBuffer(numSegments: number) {\n\t\tif (this._circlePositionsBuffer[numSegments] == undefined) {\n\t\t\tconst unitCirclePoints = [0, 0];\n\t\t\tfor (let i = 0; i <= numSegments; i++) { // TODO: should this be just less than?\n\t\t\t\tunitCirclePoints.push(\n\t\t\t\t\tMath.cos(2 * Math.PI * i / numSegments),\n\t\t\t\t\tMath.sin(2 * Math.PI * i / numSegments),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst circlePositions = new Float32Array(unitCirclePoints);\n\t\t\tconst buffer = this.initVertexBuffer(circlePositions)!;\n\t\t\tthis._circlePositionsBuffer[numSegments] = buffer;\n\t\t}\n\t\treturn this._circlePositionsBuffer[numSegments];\n\t}\n\n\tprivate initVertexBuffer(\n\t\tdata: Float32Array,\n\t) {\n\t\tconst { errorCallback, gl } = this;\n\t\tconst buffer = gl.createBuffer();\n\t\tif (!buffer) {\n\t\t\terrorCallback('Unable to allocate gl buffer.');\n\t\t\treturn;\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t// Add buffer data.\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\t\treturn buffer;\n\t}\n\n\t// Used internally, see GPULayer.clone() for public API.\n\t_cloneGPULayer(gpuLayer: GPULayer, name?: string) {\n\t\tlet dimensions: number | [number, number] = 0;\n\t\ttry {\n\t\t\tdimensions = gpuLayer.length;\n\t\t} catch {\n\t\t\tdimensions = [gpuLayer.width, gpuLayer.height];\n\t\t}\n\n\t\t// If read only, get state by reading to GPU.\n\t\tconst array = gpuLayer.writable ? undefined : gpuLayer.getValues();\n\n\t\tconst clone = new GPULayer(this, {\n\t\t\tname: name || `${gpuLayer.name}-clone`,\n\t\t\tdimensions,\n\t\t\ttype: gpuLayer.type,\n\t\t\tnumComponents: gpuLayer.numComponents,\n\t\t\tarray,\n\t\t\tfilter: gpuLayer.filter,\n\t\t\twrapS: gpuLayer.wrapS,\n\t\t\twrapT: gpuLayer.wrapT,\n\t\t\twritable: gpuLayer.writable,\n\t\t\tnumBuffers: gpuLayer.numBuffers,\n\t\t});\n\n\t\t// If writable, copy current state with a draw call.\n\t\tif (gpuLayer.writable) {\n\t\t\tfor (let i = 0; i < gpuLayer.numBuffers - 1; i++) {\n\t\t\t\tthis.step({\n\t\t\t\t\tprogram: this.copyProgramForType(gpuLayer.type),\n\t\t\t\t\tinput: gpuLayer.getStateAtIndex((gpuLayer.bufferIndex + i + 1) % gpuLayer.numBuffers),\n\t\t\t\t\toutput: clone,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.step({\n\t\t\t\tprogram: this.copyProgramForType(gpuLayer.type),\n\t\t\t\tinput: gpuLayer.currentState,\n\t\t\t\toutput: clone,\n\t\t\t});\n\t\t}\n\t\treturn clone;\n\t}\n\n\tinitTexture(\n\t\tparams: {\n\t\t\tname: string,\n\t\t\turl: string,\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\tformat?: TextureFormat,\n\t\t\ttype?: TextureType,\n\t\t\tonLoad?: (texture: WebGLTexture) => void,\n\t\t},\n\t) {\n\t\t// Check params.\n\t\tconst validKeys = ['name', 'url', 'filter', 'wrapS', 'wrapT', 'format', 'type', 'onLoad'];\n\t\tObject.keys(params).forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid key \"${key}\" passed to GPUComposer.initTexture with name \"${params.name}\".  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\tconst { url, name } = params;\n\t\tif (!isString(url)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have url of type string, got ${url} of type ${typeof url}.`)\n\t\t}\n\t\tif (!isString(name)) {\n\t\t\tthrow new Error(`Expected GPUComposer.initTexture params to have name of type string, got ${name} of type ${typeof name}.`)\n\t\t}\n\n\t\t// Get filter type, default to nearest.\n\t\tconst filter = params.filter !== undefined ? params.filter : NEAREST;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${filter} for GPULayer \"${name}\", must be ${validFilters.join(', ')}.`);\n\t\t}\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${wrapS} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${wrapT} for GPULayer \"${name}\", must be ${validWraps.join(', ')}.`);\n\t\t}\n\n\t\t// Get image format type, default to rgba.\n\t\tconst format = params.format !== undefined ? params.format : RGBA;\n\t\tif (!isValidTextureFormat(format)) {\n\t\t\tthrow new Error(`Invalid format: ${format} for GPULayer \"${name}\", must be ${validTextureFormats.join(', ')}.`);\n\t\t}\n\n\t\t// Get image data type, default to unsigned byte.\n\t\tconst type = params.type !== undefined ? params.type : UNSIGNED_BYTE;\n\t\tif (!isValidTextureType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${type} for GPULayer \"${name}\", must be ${validTextureTypes.join(', ')}.`);\n\t\t}\n\n\t\tconst { gl, errorCallback } = this;\n\t\tconst texture = gl.createTexture();\n\t\tif (texture === null) {\n\t\t\tthrow new Error(`Unable to init glTexture.`);\n\t\t}\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t// Because images have to be downloaded over the internet\n\t\t// they might take a moment until they are ready.\n\t\t// Until then put a single pixel in the texture so we can\n\t\t// use it immediately. When the image has finished downloading\n\t\t// we'll update the texture with the contents of the image.\n\t\tconst level = 0;\n\t\tconst internalFormat = gl.RGBA;\n\t\tconst width = 1;\n\t\tconst height = 1;\n\t\tconst border = 0;\n\t\tconst srcFormat = gl[format];\n\t\tconst srcType = gl[type];\n\t\tconst pixel = new Uint8Array([0, 0, 0, 0]);\n\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\twidth, height, border, srcFormat, srcType, pixel);\n\n\t\tconst image = new Image();\n\t\timage.onload = () => {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n\t\t\t\tsrcFormat, srcType, image);\n\n\t\t\t// WebGL1 has different requirements for power of 2 images\n\t\t\t// vs non power of 2 images so check if the image is a\n\t\t\t// power of 2 in both dimensions.\n\t\t\tif (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n\t\t\t\t// // Yes, it's a power of 2. Generate mips.\n\t\t\t\t// gl.generateMipmap(gl.TEXTURE_2D);\n\t\t\t} else {\n\t\t\t\t// TODO: finish implementing this.\n\t\t\t\tconsole.warn(`Texture ${name} dimensions [${image.width}, ${image.height}] are not power of 2.`);\n\t\t\t\t// // No, it's not a power of 2. Turn off mips and set\n\t\t\t\t// // wrapping to clamp to edge\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t// gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t}\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[filter]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[filter]);\n\n\t\t\t// Callback when texture has loaded.\n\t\t\tif (params.onLoad) params.onLoad(texture);\n\t\t};\n\t\timage.onerror = (e) => {\n\t\t\terrorCallback(`Error loading image ${name}: ${e}`);\n\t\t}\n\t\timage.src = url;\n\n\t\treturn texture;\n\t}\n\n\t_getVertexShaderWithName(name: PROGRAM_NAME_INTERNAL, programName: string) {\n\t\tconst {\n\t\t\terrorCallback,\n\t\t\t_vertexShaders,\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t} = this;\n\t\tconst vertexShader = _vertexShaders[name];\n\t\tif (vertexShader.shader === undefined) {\n\t\t\t// Init a vertex shader (this only happens once for each possible vertex shader across all GPUPrograms).\n\t\t\tif (vertexShader.src === '') {\n\t\t\t\tthrow new Error(`Error compiling GPUProgram \"${programName}\": no source for vertex shader with name \"${name}\".`);\n\t\t\t}\n\t\t\tconst preprocessedSrc = preprocessVertexShader(vertexShader.src, glslVersion);\n\t\t\tconst shader = compileShader(\n\t\t\t\tgl,\n\t\t\t\tglslVersion,\n\t\t\t\tintPrecision,\n\t\t\t\tfloatPrecision,\n\t\t\t\tpreprocessedSrc,\n\t\t\t\tgl.VERTEX_SHADER,\n\t\t\t\tprogramName,\n\t\t\t\terrorCallback,\n\t\t\t\tvertexShader.defines,\n\t\t\t);\n\t\t\tif (!shader) {\n\t\t\t\terrorCallback(`Unable to compile \"${name}\" vertex shader for GPUProgram \"${programName}\".`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Save the results so this does not have to be repeated.\n\t\t\tvertexShader.shader = shader;\n\t\t}\n\t\treturn vertexShader.shader;\n\t}\n\n\tresize(width: number, height: number) {\n\t\tconst { canvas } = this;\n\t\t// Set correct canvas pixel size.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/By_example/Canvas_size_and_WebGL\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\t// Save dimensions.\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t};\n\n\tprivate drawSetup(\n\t\tprogram: WebGLProgram,\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer,\n\t) {\n\t\tconst { gl } = this;\n\t\t// Check if we are in an error state.\n\t\tif (!program) {\n\t\t\treturn;\n\t\t}\n\n\t\t// CAUTION: the order of these next few lines is important.\n\n\t\t// Get a shallow copy of current textures.\n\t\t// This line must come before this.setOutput() as it depends on current internal state.\n\t\tconst inputTextures: WebGLTexture[] = [];\n\t\tif (input) {\n\t\t\tif (input.constructor === WebGLTexture) {\n\t\t\t\tinputTextures.push(input as WebGLTexture);\n\t\t\t} else if (input.constructor === GPULayer) {\n\t\t\t\tinputTextures.push((input as GPULayer).currentState);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < (input as (GPULayer | WebGLTexture)[]).length; i++) {\n\t\t\t\t\tconst layer = (input as (GPULayer | WebGLTexture)[])[i];\n\t\t\t\t\tinputTextures.push((layer as GPULayer).currentState ? (layer as GPULayer).currentState : layer as WebGLTexture)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set output framebuffer.\n\t\t// This may modify WebGL internal state.\n\t\tthis.setOutputLayer(fullscreenRender, input, output);\n\n\t\t// Set current program.\n\t\tgl.useProgram(program);\n\n\t\t// Set input textures.\n\t\tfor (let i = 0; i < inputTextures.length; i++) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTextures[i]);\n\t\t}\n\t}\n\n\tprivate setBlendMode(shouldBlendAlpha?: boolean) {\n\t\tconst { gl } = this;\n\t\tif (shouldBlendAlpha) {\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t}\n\t}\n\n\tprivate addLayerToInputs(\n\t\tlayer: GPULayer,\n\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t) {\n\t\t// Add layer to end of input if needed.\n\t\tlet _inputLayers = input;\n\t\tif (isArray(_inputLayers)) {\n\t\t\tconst index = (_inputLayers as (GPULayer | WebGLTexture)[]).indexOf(layer);\n\t\t\tif (index < 0) {\n\t\t\t\t(_inputLayers as (GPULayer | WebGLTexture)[]).push(layer);\n\t\t\t} \n\t\t} else {\n\t\t\tif (_inputLayers !== layer) {\n\t\t\t\tconst previous = _inputLayers;\n\t\t\t\t_inputLayers = [];\n\t\t\t\tif (previous) (_inputLayers as (GPULayer | WebGLTexture)[]).push(previous);\n\t\t\t\t(_inputLayers as (GPULayer | WebGLTexture)[]).push(layer);\n\t\t\t} else {\n\t\t\t\t_inputLayers = [_inputLayers];\n\t\t\t}\n\t\t}\n\t\treturn _inputLayers as (GPULayer | WebGLTexture)[];\n\t}\n\n\tprivate passThroughLayerDataFromInputToOutput(state: GPULayer) {\n\t\t// TODO: figure out the fastest way to copy a texture.\n\t\tconst copyProgram = this.copyProgramForType(state.internalType);\n\t\tthis.step({\n\t\t\tprogram: copyProgram,\n\t\t\tinput: state,\n\t\t\toutput: state,\n\t\t});\n\t}\n\n\tprivate setOutputLayer(\n\t\tfullscreenRender: boolean,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t) {\n\t\tconst { gl } = this;\n\n\t\t// Render to screen.\n\t\tif (!output) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t// Resize viewport.\n\t\t\tconst { width, height } = this;\n\t\t\tgl.viewport(0, 0, width, height);\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if output is same as one of input layers.\n\t\t// TODO: do a better job of checking if input is a texture of same GPULayer as output.\n\t\tif (input && ((input === output) || (isArray(input) && (input as (GPULayer | WebGLTexture)[]).indexOf(output) > -1))) {\n\t\t\tif (output.numBuffers === 1) {\n\t\t\t\tthrow new Error('Cannot use same buffer for input and output of a program. Try increasing the number of buffers in your output layer to at least 2 so you can render to nextState using currentState as an input.');\n\t\t\t}\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render and increment buffer so we are rendering to a different target\n\t\t\t\t// than the input texture.\n\t\t\t\toutput._bindOutputBufferForWrite(true);\n\t\t\t} else {\n\t\t\t\t// Pass input texture through to output.\n\t\t\t\tthis.passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t// Render to output without incrementing buffer.\n\t\t\t\toutput._bindOutputBufferForWrite(false);\n\t\t\t}\n\t\t} else {\n\t\t\tif (fullscreenRender) {\n\t\t\t\t// Render to current buffer.\n\t\t\t\toutput._bindOutputBufferForWrite(false);\n\t\t\t} else {\n\t\t\t\t// If we are doing a sneaky thing with a swapped texture and are\n\t\t\t\t// only rendering part of the screen, we may need to add a copy operation.\n\t\t\t\tif (output._usingTextureOverrideForCurrentBuffer()) {\n\t\t\t\t\tthis.passThroughLayerDataFromInputToOutput(output);\n\t\t\t\t}\n\t\t\t\toutput._bindOutputBufferForWrite(false);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resize viewport.\n\t\tconst { width, height } = output;\n\t\tgl.viewport(0, 0, width, height);\n\t};\n\n\tprivate setVertexAttribute(program: WebGLProgram, name: string, size: number, programName: string) {\n\t\tconst { gl } = this;\n\t\t// Point attribute to the currently bound VBO.\n\t\tconst location = gl.getAttribLocation(program, name);\n\t\tif (location < 0) {\n\t\t\tthrow new Error(`Unable to find vertex attribute \"${name}\" in program \"${programName}\".`);\n\t\t}\n\t\t// TODO: only float is supported for vertex attributes.\n\t\tgl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\n\t\t// Enable the attribute.\n\t\tgl.enableVertexAttribArray(location);\n\t}\n\n\tprivate setPositionAttribute(program: WebGLProgram, programName: string) {\n\t\tthis.setVertexAttribute(program, 'a_internal_position', 2, programName);\n\t}\n\n\tprivate setIndexAttribute(program: WebGLProgram, programName: string) {\n\t\tthis.setVertexAttribute(program, 'a_internal_index', 1, programName);\n\t}\n\n\tprivate setUVAttribute(program: WebGLProgram, programName: string) {\n\t\tthis.setVertexAttribute(program, 'a_internal_uv', 2, programName);\n\t}\n\n\t// Step for entire fullscreen quad.\n\tstep(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, quadPositionsBuffer } = this;\n\t\tconst { program, input, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, quadPositionsBuffer);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a strip of px along the boundary.\n\tstepBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tsingleEdge?: 'LEFT' | 'RIGHT' | 'TOP' | 'BOTTOM';\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, boundaryPositionsBuffer} = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this.width;\n\t\tconst height = output ? output.height : this.height;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\t// Frame needs to be offset and scaled so that all four sides are in viewport.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 - onePx[0], 1 - onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, boundaryPositionsBuffer);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.singleEdge) {\n\t\t\tswitch(params.singleEdge) {\n\t\t\t\tcase 'LEFT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 3, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RIGHT':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 1, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TOP':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 2, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BOTTOM':\n\t\t\t\t\tgl.drawArrays(gl.LINES, 0, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unknown boundary edge type: ${params.singleEdge}.`);\n\t\t\t}\n\t\t} else {\n\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program for all but a strip of px along the boundary.\n\tstepNonBoundary(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, quadPositionsBuffer } = this;\n\t\tconst { program, input, output } = params;\n\t\tconst width = output ? output.width : this.width;\n\t\tconst height = output ? output.height : this.height;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tconst onePx = [ 1 / width, 1 / height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 - 2 * onePx[0], 1 - 2 * onePx[1]], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', onePx, FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, quadPositionsBuffer);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a circular spot.\n\tstepCircle(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition: [number, number], // Position is in units of pixels.\n\t\t\tradius: number, // Radius is in units of pixels.\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tnumSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, width, height } = this;\n\t\tconst { program, position, radius, input, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [radius * 2 / width, radius * 2 / height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [2 * position[0] / width - 1, 2 * position[1] / height - 1], FLOAT);\n\t\tconst numSegments = params.numSegments ? params.numSegments : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (numSegments < 3) {\n\t\t\tthrow new Error(`numSegments for GPUComposer.stepCircle must be greater than 2, got ${numSegments}.`);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.getCirclePositionsBuffer(numSegments));\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\t\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\t// Step program only for a thickened line segment (rounded end caps available).\n\tstepSegment(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tposition1: [number, number], // Position is in units of pixels.\n\t\t\tposition2: [number, number], // Position is in units of pixels.\n\t\t\tthickness: number, // Thickness is in units of pixels.\n\t\t\tinput?:  (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tendCaps?: boolean,\n\t\t\tnumCapSegments?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState } = this;\n\t\tconst { program, position1, position2, thickness, input, output } = params;\n\t\tconst width = output ? output.width : this.width;\n\t\tconst height = output ? output.height : this.height;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = program._segmentProgram!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_halfThickness', thickness / 2, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tconst diffX = position1[0] - position2[0];\n\t\tconst diffY = position1[1] - position2[1];\n\t\tconst angle = Math.atan2(diffY, diffX);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_rotation', angle, FLOAT);\n\t\tconst centerX = (position1[0] + position2[0]) / 2;\n\t\tconst centerY = (position1[1] + position2[1]) / 2;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [2 * centerX / this.width - 1, 2 * centerY / this.height - 1], FLOAT);\n\t\tconst length = Math.sqrt(diffX * diffX + diffY * diffY);\n\t\t\n\t\tconst numSegments = params.numCapSegments ? params.numCapSegments * 2 : DEFAULT_CIRCLE_NUM_SEGMENTS;\n\t\tif (params.endCaps) {\n\t\t\tif (numSegments < 6 || numSegments % 6 !== 0) {\n\t\t\t\tthrow new Error(`numSegments for GPUComposer.stepSegment must be divisible by 6, got ${numSegments}.`);\n\t\t\t}\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_internal_length', length - thickness * Math.sin(Math.PI / numSegments), FLOAT);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.getCirclePositionsBuffer(numSegments));\n\t\t} else {\n\t\t\t// Have to subtract a small offset from length.\n\t\t\tprogram._setVertexUniform(glProgram, 'u_internal_length', length - thickness, FLOAT);\n\t\t\t// Use a rectangle in case of no caps.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.quadPositionsBuffer);\n\t\t}\n\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\t\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.endCaps) {\n\t\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, numSegments + 2);\n\t\t} else {\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepPolyline(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: [number, number][],\n\t\t\tthickness: number, // Thickness of line is in units of pixels.\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcloseLoop?: boolean,\n\t\t\tincludeUVs?: boolean,\n\t\t\tincludeNormals?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { program, input, output } = params;\n\t\tconst vertices = params.positions;\n\t\tconst closeLoop = !!params.closeLoop;\n\t\t\n\t\tconst { gl, width, height, errorState } = this;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Offset vertices.\n\t\tconst halfThickness = params.thickness / 2;\n\t\tconst numPositions = closeLoop ? vertices.length * 4 + 2 : (vertices.length - 1) * 4;\n\t\tconst positions = new Float32Array(2 * numPositions);\n\t\tconst uvs = params.includeUVs ? new Float32Array(2 * numPositions) : undefined;\n\t\tconst normals = params.includeNormals ? new Float32Array(2 * numPositions) : undefined;\n\n\t\t// tmp arrays.\n\t\tconst s1 = [0, 0];\n\t\tconst s2 = [0, 0];\n\t\tconst n1 = [0, 0];\n\t\tconst n2 = [0, 0];\n\t\tconst n3 = [0, 0];\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tif (!closeLoop && i === vertices.length - 1) continue;\n\t\t\t// Vertices on this segment.\n\t\t\tconst v1 = vertices[i];\n\t\t\tconst v2 = vertices[(i + 1) % vertices.length];\n\t\t\ts1[0] = v2[0] - v1[0];\n\t\t\ts1[1] = v2[1] - v1[1];\n\t\t\tconst length1 = Math.sqrt(s1[0] * s1[0] + s1[1] * s1[1]);\n\t\t\tn1[0] = s1[1] / length1;\n\t\t\tn1[1] = - s1[0] / length1;\n\n\t\t\tconst index = i * 4 + 2;\n\n\t\t\tif (!closeLoop && i === 0) {\n\t\t\t\t// Add starting points to positions array.\n\t\t\t\tpositions[0] = v1[0] + n1[0] * halfThickness;\n\t\t\t\tpositions[1] = v1[1] + n1[1] * halfThickness;\n\t\t\t\tpositions[2] = v1[0] - n1[0] * halfThickness;\n\t\t\t\tpositions[3] = v1[1] - n1[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[0] = 0;\n\t\t\t\t\tuvs[1] = 1;\n\t\t\t\t\tuvs[2] = 0;\n\t\t\t\t\tuvs[3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[0] = n1[0];\n\t\t\t\t\tnormals[1] = n1[1];\n\t\t\t\t\tnormals[2] = n1[0];\n\t\t\t\t\tnormals[3] = n1[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst u = (i + 1) / (vertices.length - 1);\n\n\t\t\t// Offset from v2.\n\t\t\tpositions[2 * index] = v2[0] + n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 1] = v2[1] + n1[1] * halfThickness;\n\t\t\tpositions[2 * index + 2] = v2[0] - n1[0] * halfThickness;\n\t\t\tpositions[2 * index + 3] = v2[1] - n1[1] * halfThickness;\n\t\t\tif (uvs) {\n\t\t\t\tuvs[2 * index] = u;\n\t\t\t\tuvs[2 * index + 1] = 1;\n\t\t\t\tuvs[2 * index + 2] = u;\n\t\t\t\tuvs[2 * index + 3] = 0;\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[2 * index] = n1[0];\n\t\t\t\tnormals[2 * index + 1] = n1[1];\n\t\t\t\tnormals[2 * index + 2] = n1[0];\n\t\t\t\tnormals[2 * index + 3] = n1[1];\n\t\t\t}\n\n\t\t\tif ((i < vertices.length - 2) || closeLoop) {\n\t\t\t\t// Vertices on next segment.\n\t\t\t\tconst v3 = vertices[(i + 1) % vertices.length];\n\t\t\t\tconst v4 = vertices[(i + 2) % vertices.length];\n\t\t\t\ts2[0] = v4[0] - v3[0];\n\t\t\t\ts2[1] = v4[1] - v3[1];\n\t\t\t\tconst length2 = Math.sqrt(s2[0] * s2[0] + s2[1] * s2[1]);\n\t\t\t\tn2[0] = s2[1] / length2;\n\t\t\t\tn2[1] = - s2[0] / length2;\n\n\t\t\t\t// Offset from v3\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = v3[0] + n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = v3[1] + n2[1] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = v3[0] - n2[0] * halfThickness;\n\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = v3[1] - n2[1] * halfThickness;\n\t\t\t\tif (uvs) {\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length))] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 1] = 1;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 2] = u;\n\t\t\t\t\tuvs[2 * ((index + 2) % (4 * vertices.length)) + 3] = 0;\n\t\t\t\t}\n\t\t\t\tif (normals) {\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length))] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 1] = n2[1];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 2] = n2[0];\n\t\t\t\t\tnormals[2 * ((index + 2) % (4 * vertices.length)) + 3] = n2[1];\n\t\t\t\t}\n\n\t\t\t\t// Check the angle between adjacent segments.\n\t\t\t\tconst cross = n1[0] * n2[1] - n1[1] * n2[0];\n\t\t\t\tif (Math.abs(cross) < 1e-6) continue;\n\t\t\t\tn3[0] = n1[0] + n2[0];\n\t\t\t\tn3[1] = n1[1] + n2[1];\n\t\t\t\tconst length3 = Math.sqrt(n3[0] * n3[0] + n3[1] * n3[1]);\n\t\t\t\tn3[0] /= length3;\n\t\t\t\tn3[1] /= length3;\n\t\t\t\t// Make adjustments to positions.\n\t\t\t\tconst angle = Math.acos(n1[0] * n2[0] + n1[1] * n2[1]);\n\t\t\t\tconst offset = halfThickness / Math.cos(angle / 2);\n\t\t\t\tif (cross < 0) {\n\t\t\t\t\tpositions[2 * index] = v2[0] + n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 1] = v2[1] + n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length))] = positions[2 * index];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 1] = positions[2 * index + 1];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[2 * index + 2] = v2[0] - n3[0] * offset;\n\t\t\t\t\tpositions[2 * index + 3] = v2[1] - n3[1] * offset;\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 2] = positions[2 * index + 2];\n\t\t\t\t\tpositions[2 * ((index + 2) % (4 * vertices.length)) + 3] = positions[2 * index + 3];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (closeLoop) {\n\t\t\t// Duplicate starting points to end of positions array.\n\t\t\tpositions[vertices.length * 8] = positions[0];\n\t\t\tpositions[vertices.length * 8 + 1] = positions[1];\n\t\t\tpositions[vertices.length * 8 + 2] = positions[2];\n\t\t\tpositions[vertices.length * 8 + 3] = positions[3];\n\t\t\tif (uvs) {\n\t\t\t\tuvs[vertices.length * 8] = uvs[0];\n\t\t\t\tuvs[vertices.length * 8 + 1] = uvs[1];\n\t\t\t\tuvs[vertices.length * 8 + 2] = uvs[2];\n\t\t\t\tuvs[vertices.length * 8 + 3] = uvs[3];\n\t\t\t}\n\t\t\tif (normals) {\n\t\t\t\tnormals[vertices.length * 8] = normals[0];\n\t\t\t\tnormals[vertices.length * 8 + 1] = normals[1];\n\t\t\t\tnormals[vertices.length * 8 + 2] = normals[2];\n\t\t\t\tnormals[vertices.length * 8 + 3] = normals[3];\n\t\t\t}\n\t\t}\n\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(positions)!);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(uvs)!);\n\t\t\tthis.setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(normals)!);\n\t\t\tthis.setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, numPositions);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepTriangleStrip(\n\t\tparams: {\n\t\t\tprogram: GPUProgram,\n\t\t\tpositions: Float32Array,\n\t\t\tnormals?: Float32Array,\n\t\t\tuvs?: Float32Array,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\t\tcount?: number,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\n\t\tconst { program, input, output, positions, uvs, normals } = params;\n\t\tconst { gl, width, height, errorState } = this;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\t// Init positions buffer.\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(positions)!);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(uvs)!);\n\t\t\tthis.setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(normals)!);\n\t\t\tthis.setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\tconst count = params.count ? params.count : positions.length / 2;\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tstepLines(params: {\n\t\tprogram: GPUProgram,\n\t\tpositions: Float32Array,\n\t\tindices?: Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\tnormals?: Float32Array,\n\t\tuvs?: Float32Array,\n\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\toutput?: GPULayer, // Undefined renders to screen.\n\t\tcount?: number,\n\t\tcloseLoop?: boolean,\n\t\tshouldBlendAlpha?: boolean,\n\t}) {\n\t\tconst { gl, errorState, width, height } = this;\n\t\tconst { indices, uvs, normals, input, output, program } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && indices) {\n\t\t\tthrow new Error(`GPUComposer.stepLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\t\t\n\t\tconst glProgram = (uvs ?\n\t\t\t(normals ? program._defaultProgramWithUVNormal : program._defaultProgramWithUV) :\n\t\t\t(normals ? program._defaultProgramWithNormal : program._defaultProgram)\n\t\t)!;\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\tconst count = params.count ? params.count : (indices ? indices.length : (params.positions.length / 2));\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [2 / width, 2 / height], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [-1, -1], FLOAT);\n\t\tif (indices) {\n\t\t\t// Reorder positions array to match indices.\n\t\t\tconst positions = new Float32Array(2 * count);\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst index = indices[i];\n\t\t\t\tpositions[2 * i] = params.positions[2 * index];\n\t\t\t\tpositions[2 * i + 1] = params.positions[2 * index + 1];\n\t\t\t}\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(positions)!);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(params.positions)!);\n\t\t}\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\t\tif (uvs) {\n\t\t\t// Init uv buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(uvs)!);\n\t\t\tthis.setUVAttribute(glProgram, program.name);\n\t\t}\n\t\tif (normals) {\n\t\t\t// Init normals buffer.\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.initVertexBuffer(normals)!);\n\t\t\tthis.setVertexAttribute(glProgram, 'a_internal_normal', 2, program.name);\n\t\t}\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsPoints(\n\t\tparams: {\n\t\t\tpositions: GPULayer, // Positions in units of pixels.\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tpointSize?: number,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, pointIndexArray, width, height } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check that numPoints is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawPoints() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\tconst { length } = positions;\n\t\tconst count = params.count || length;\n\t\tif (count > length) {\n\t\t\tthrow new Error(`Invalid count ${count} for position GPULayer of length ${length}.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);\n\t\t\tconst color = params.color || [1, 0, 0]; // Default of red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerPointsProgram!;\n\n\t\t// Add positions to end of input if needed.\n\t\tconst input = this.addLayerToInputs(positions, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positions', input.indexOf(positions), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 / width, 1 / height], FLOAT);\n\t\t// Tell whether we are using an absolute position (2 components), or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionWithAccumulation', positions.numComponents === 4 ? 1 : 0, INT);\n\t\t// Set default pointSize.\n\t\tconst pointSize = params.pointSize || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_pointSize', pointSize, FLOAT);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapX', params.wrapX ? 1 : 0, INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapY', params.wrapY ? 1 : 0, INT);\n\t\tif (this.pointIndexBuffer === undefined || (pointIndexArray && pointIndexArray.length < count)) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\tthis.pointIndexArray = indices;\n\t\t\tthis.pointIndexBuffer = this.initVertexBuffer(indices);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.pointIndexBuffer!);\n\t\tthis.setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.POINTS, 0, count);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsLines(\n\t\tparams: {\n\t\t\tpositions: GPULayer,\n\t\t\tindices?: Float32Array | Uint16Array | Uint32Array | Int16Array | Int32Array,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tcount?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\twrapX?: boolean,\n\t\t\twrapY?: boolean,\n\t\t\tcloseLoop?: boolean,\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, width, height } = this;\n\t\tconst { positions, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check that positions is valid.\n\t\tif (positions.numComponents !== 2 && positions.numComponents !== 4) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() must be passed a position GPULayer with either 2 or 4 components, got position GPULayer \"${positions.name}\" with ${positions.numComponents} components.`)\n\t\t}\n\t\t// Check that params are valid.\n\t\tif (params.closeLoop && params.indices) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsLines() can't be called with closeLoop == true and indices.`);\n\t\t}\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = params.wrapX || params.wrapY ? this.wrappedLineColorProgram : this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerLinesProgram!;\n\n\t\t// Add positionLayer to end of input if needed.\n\t\tconst input = this.addLayerToInputs(positions, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// TODO: cache indexArray if no indices passed in.\n\t\tconst indices = params.indices ? params.indices : initSequentialFloatArray(params.count || positions.length);\n\t\tconst count = params.count ? params.count : indices.length;\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positions', input.indexOf(positions), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1 / width, 1 / height], FLOAT);\n\t\t// Tell whether we are using an absolute position (2 components), or position with accumulation buffer (4 components, better floating pt accuracy).\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionWithAccumulation', positions.numComponents === 4 ? 1 : 0, INT);\n\t\tconst positionLayerDimensions = [positions.width, positions.height] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_positionsDimensions', positionLayerDimensions, FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapX', params.wrapX ? 1 : 0, INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_wrapY', params.wrapY ? 1 : 0, INT);\n\t\tif (this.indexedLinesIndexBuffer === undefined) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tlet floatArray: Float32Array;\n\t\t\tif (indices.constructor !== Float32Array) {\n\t\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\t\tfloatArray = new Float32Array(indices.length);\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\tfloatArray[i] = indices[i];\n\t\t\t\t}\n\t\t\t\tconsole.warn(`Converting indices array of type ${indices.constructor} to Float32Array in GPUComposer.drawIndexedLines for WebGL compatibility, you may want to use a Float32Array to store this information so the conversion is not required.`);\n\t\t\t} else {\n\t\t\t\tfloatArray = indices as Float32Array;\n\t\t\t}\n\t\t\tthis.indexedLinesIndexBuffer = this.initVertexBuffer(floatArray);\n\t\t} else {\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.indexedLinesIndexBuffer!);\n\t\t\t// Copy buffer data.\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\t\t}\n\t\tthis.setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tif (params.indices) {\n\t\t\tgl.drawArrays(gl.LINES, 0, count);\n\t\t} else {\n\t\t\tif (params.closeLoop) {\n\t\t\t\tgl.drawArrays(gl.LINE_LOOP, 0, count);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, count);\n\t\t\t}\n\t\t}\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerAsVectorField(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tprogram?: GPUProgram,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tvectorSpacing?: number,\n\t\t\tvectorScale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, vectorFieldIndexArray, width, height } = this;\n\t\tconst { data, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check that field is valid.\n\t\tif (data.numComponents !== 2) {\n\t\t\tthrow new Error(`GPUComposer.drawLayerAsVectorField() must be passed a fieldLayer with 2 components, got fieldLayer \"${data.name}\" with ${data.numComponents} components.`)\n\t\t}\n\t\t// Check aspect ratio.\n\t\t// const dimensions = [vectorLayer.width, vectorLayer.height];\n\t\t// if (Math.abs(dimensions[0] / dimensions[1] - width / height) > 0.01) {\n\t\t// \tthrow new Error(`Invalid aspect ratio ${(dimensions[0] / dimensions[1]).toFixed(3)} vector GPULayer with dimensions [${dimensions[0]}, ${dimensions[1]}], expected ${(width / height).toFixed(3)}.`);\n\t\t// }\n\n\t\tlet program = params.program;\n\t\tif (program === undefined) {\n\t\t\tprogram = this._setValueProgramForType(FLOAT);;\n\t\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\t\tprogram.setUniform('u_value', [...color, 1], FLOAT);\n\t\t}\n\t\tconst glProgram = program._layerVectorFieldProgram!;\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this.addLayerToInputs(data, params.input);\n\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, false, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_vectors', input.indexOf(data), INT);\n\t\t// Set default scale.\n\t\tconst vectorScale = params.vectorScale || 1;\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [vectorScale / width, vectorScale / height], FLOAT);\n\t\tconst vectorSpacing = params.vectorSpacing || 10;\n\t\tconst spacedDimensions = [Math.floor(width / vectorSpacing), Math.floor(height / vectorSpacing)] as [number, number];\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_dimensions', spacedDimensions, FLOAT);\n\t\tconst length = 2 * spacedDimensions[0] * spacedDimensions[1];\n\t\tif (this.vectorFieldIndexBuffer === undefined || (vectorFieldIndexArray && vectorFieldIndexArray.length < length)) {\n\t\t\t// Have to use float32 array bc int is not supported as a vertex attribute type.\n\t\t\tconst indices = initSequentialFloatArray(length);\n\t\t\tthis.vectorFieldIndexArray = indices;\n\t\t\tthis.vectorFieldIndexBuffer = this.initVertexBuffer(indices);\n\t\t}\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vectorFieldIndexBuffer!);\n\t\tthis.setIndexAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.LINES, 0, length);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tdrawLayerMagnitude(\n\t\tparams: {\n\t\t\tdata: GPULayer,\n\t\t\tinput?: (GPULayer | WebGLTexture)[] | GPULayer | WebGLTexture,\n\t\t\toutput?: GPULayer,\n\t\t\tscale?: number,\n\t\t\tcolor?: [number, number, number],\n\t\t\tshouldBlendAlpha?: boolean,\n\t\t},\n\t) {\n\t\tconst { gl, errorState, quadPositionsBuffer } = this;\n\t\tconst { data, output } = params;\n\n\t\t// Ignore if we are in error state.\n\t\tif (errorState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst program = this.vectorMagnitudeProgramForType(data.type);\n\t\tconst color = params.color || [1, 0, 0]; // Default to red.\n\t\tprogram.setUniform('u_color', color, FLOAT);\n\t\tconst scale = params.scale || 1;\n\t\tprogram.setUniform('u_scale', scale, FLOAT);\n\t\tprogram.setUniform('u_internal_numDimensions', data.numComponents, INT);\n\n\t\tconst glProgram = program._defaultProgram!;\n\n\t\t// Add data to end of input if needed.\n\t\tconst input = this.addLayerToInputs(data, params.input);\n\t\t// Do setup - this must come first.\n\t\tthis.drawSetup(glProgram, true, input, output);\n\n\t\t// Update uniforms and buffers.\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_data', input.indexOf(data), INT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_scale', [1, 1], FLOAT);\n\t\tprogram._setVertexUniform(glProgram, 'u_internal_translation', [0, 0], FLOAT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, quadPositionsBuffer);\n\t\tthis.setPositionAttribute(glProgram, program.name);\n\n\t\t// Draw.\n\t\tthis.setBlendMode(params.shouldBlendAlpha);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\tgl.disable(gl.BLEND);\n\t}\n\n\tresetThreeState() {\n\t\tif (!this.renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer, use GPUComposer.initWithThreeRenderer() to initialize GPUComposer instead.');\n\t\t}\n\t\tconst { gl } = this;\n\t\t// Reset viewport.\n\t\tconst viewport = this.renderer.getViewport(new utils.Vector4() as Vector4);\n\t\tgl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n\t\t// Unbind framebuffer (render to screen).\n\t\tthis.renderer.setRenderTarget(null);\n\t\t// Reset texture bindings.\n\t\tthis.renderer.resetState();\n\t}\n\t\n\tdispose() {\n\t\tconst {\n\t\t\tgl, verboseLogging,\n\t\t\t_vertexShaders,\n\t\t\tcopyPrograms, setValuePrograms, vectorMagnitudePrograms,\n\t\t} = this;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUComposer.`);\n\n\t\t// TODO: delete buffers.\n\n\t\t// Delete vertex shaders.\n\t\tObject.values(_vertexShaders).forEach(vertexShader => {\n\t\t\tif (vertexShader.shader) {\n\t\t\t\tgl.deleteShader(vertexShader.shader);\n\t\t\t\tdelete vertexShader.shader;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Delete fragment shaders.\n\t\tObject.values(copyPrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(copyPrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete copyPrograms[key];\n\t\t});\n\t\tObject.values(setValuePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(setValuePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete setValuePrograms[key];\n\t\t});\n\t\tObject.values(vectorMagnitudePrograms).forEach(program => {\n\t\t\t// @ts-ignore\n\t\t\tif ((program as GPUProgram).dispose) (program as GPUProgram).dispose();\n\t\t});\n\t\tObject.keys(vectorMagnitudePrograms).forEach(key => {\n\t\t\t// @ts-ignore\n\t\t\tdelete vectorMagnitudePrograms[key];\n\t\t});\n\t\tthis._wrappedLineColorProgram?.dispose();\n\t\tdelete this._wrappedLineColorProgram;\n\n\t\t// @ts-ignore\n\t\tdelete this.renderer;\n\t\t// @ts-ignore\n\t\tdelete this.gl;\n\t\t// @ts-ignore;\n\t\tdelete this.canvas;\n\t\t// GL context will be garbage collected by webgl.\n\t}\n}","import { setFloat16, getFloat16 } from '@petamoriken/float16';\n// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { saveAs } from 'file-saver';\nimport { GPUComposer } from './GPUComposer';\nimport {\n\tisNumber,\n\tisPositiveInteger,\n\tisValidClearValue,\n\tisValidDataType,\n\tisValidFilter,\n\tisValidWrap,\n} from './checks';\nimport {\n\tHALF_FLOAT,\n\tFLOAT,\n\tUNSIGNED_BYTE,\n\tBYTE,\n\tUNSIGNED_SHORT,\n\tSHORT,\n\tUNSIGNED_INT,\n\tINT,\n\tNEAREST,\n\tLINEAR,\n\tCLAMP_TO_EDGE,\n\tGPULayerArray,\n\tGPULayerFilter,\n\tGPULayerNumComponents,\n\tGPULayerType,\n\tGPULayerWrap,\n\tGLSL1,\n\tGPULayerBuffer,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidDataTypes,\n } from './constants';\nimport {\n\treadyToRead,\n} from './utils';\nimport {\n\tcalcGPULayerSize,\n\tgetGLTextureParameters,\n\tgetGPULayerInternalFilter,\n\tgetGPULayerInternalType,\n\tgetGPULayerInternalWrap,\n\tinitArrayForType,\n\tvalidateGPULayerArray,\n} from './GPULayerHelpers';\nimport { Texture } from 'three';\n\nexport class GPULayer {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly composer: GPUComposer;\n\n\treadonly name: string; // Name of GPULayer, used for error logging.\n\treadonly type: GPULayerType; // Input type passed in during setup.\n\treadonly numComponents: GPULayerNumComponents; // Number of RGBA channels to use for this GPULayer.\n\treadonly filter: GPULayerFilter; // Interpolation filter for pixel read operations.\n\treadonly wrapS: GPULayerWrap; // Input x wrap type passed in during setup.\n\treadonly wrapT: GPULayerWrap; // Input y wrap type passed in during setup.\n\treadonly writable: boolean;\n\tprivate _clearValue: number | number[] = 0; // Value to set when clear() is called, defaults to zero.  Access with GPULayer.clearValue.\n\n\t// Each GPULayer may contain a number of buffers to store different instances of the state.\n\t// e.g [currentState, previousState]\n\tprivate _bufferIndex = 0;\n\treadonly numBuffers;\n\tprivate readonly buffers: GPULayerBuffer[] = [];\n\n\t// Texture sizes.\n\tprivate _length?: number; // This is only used for 1D data layers, access with GPULayer.length.\n\tprivate _width: number; // Access with GPULayer.width.\n\tprivate _height: number; // Access with GPULayer.height.\n\n\t// GPULayer settings.\n\t// Due to variable browser support of WebGL features, \"internal\" variables may be different\n\t// from the parameter originally passed in.  These variables are set so that they match the original\n\t// parameter as best as possible, but fragment shader polyfills may be required.\n\t// All \"gl\" variables are used to initialize internal WebGLTexture.\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\treadonly glInternalFormat: number;\n\treadonly glFormat: number;\n\t// GPULayer.internalType corresponds to GPULayer.glType, may be different from GPULayer.type.\n\treadonly internalType: GPULayerType; \n\treadonly glType: number;\n\t// Internally, GPULayer.glNumChannels may represent a larger number of channels than GPULayer.numComponents.\n\t// For example, writable RGB textures are not supported in WebGL2, must use RGBA instead.\n\treadonly glNumChannels: number;\n\t// GPULayer.internalFilter corresponds to GPULayer.glFilter, may be different from GPULayer.filter.\n\treadonly internalFilter: GPULayerFilter;\n\treadonly glFilter: number;\n\t// GPULayer.internalWrapS corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapS.\n\treadonly internalWrapS: GPULayerWrap;\n\treadonly glWrapS: number;\n\t// GPULayer.internalWrapT corresponds to GPULayer.glWrapS, may be different from GPULayer.wrapT.\n\treadonly internalWrapT: GPULayerWrap;\n\treadonly glWrapT: number;\n\t\n\t// Optimizations so that \"copying\" can happen without draw calls.\n\t// TODO: take a second look at this.\n\tprivate textureOverrides?: (WebGLTexture | undefined)[];\n\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\tdimensions: number | [number, number],\n\t\t\ttype: GPULayerType,\n\t\t\tnumComponents: GPULayerNumComponents,\n\t\t\tarray?: GPULayerArray | number[],\n\t\t\tfilter?: GPULayerFilter,\n\t\t\twrapS?: GPULayerWrap,\n\t\t\twrapT?: GPULayerWrap,\n\t\t\twritable?: boolean,\n\t\t\tnumBuffers?: number,\n\t\t\tclearValue?: number | number[],\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPULayer \"${name}\": must pass GPUComposer instance to GPULayer(composer, params).`);\n\t\t}\n\t\t// Check params.\n\t\tconst validKeys = ['name', 'dimensions', 'type', 'numComponents', 'array', 'filter', 'wrapS', 'wrapT', 'writable', 'numBuffers', 'clearValue'];\n\t\tconst requiredKeys = ['name', 'dimensions', 'type', 'numComponents'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPULayer(composer, params) with name \"${params.name}\".  Valid keys are ${validKeys.join(', ')}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPUProgram(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { dimensions, type, numComponents } = params;\n\t\tconst { gl } = composer;\n\n\t\t// Save params.\n\t\tthis.composer = composer;\n\t\tthis.name = name;\n\n\t\t// numComponents must be between 1 and 4.\n\t\tif (!isPositiveInteger(numComponents) || numComponents > 4) {\n\t\t\tthrow new Error(`Invalid numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t\t}\n\t\tthis.numComponents = numComponents;\n\n\t\t// Writable defaults to false.\n\t\tconst writable = !!params.writable;\n\t\tthis.writable = writable;\n\n\t\t// Set dimensions, may be 1D or 2D.\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, composer.verboseLogging);\n\t\tthis._length = length;\n\t\tif (!isPositiveInteger(width)) {\n\t\t\tthrow new Error(`Invalid width: ${width} for GPULayer \"${name}\".`);\n\t\t}\n\t\tthis._width = width;\n\t\tif (!isPositiveInteger(height)) {\n\t\t\tthrow new Error(`Invalid length: ${height} for GPULayer \"${name}\".`);\n\t\t}\n\t\tthis._height = height;\n\n\t\t// Set filtering - if we are processing a 1D array, default to NEAREST filtering.\n\t\t// Else default to LINEAR (interpolation) filtering for float types and NEAREST for integer types.\n\t\tconst defaultFilter = length ? NEAREST : ((type === FLOAT || type == HALF_FLOAT) ? LINEAR : NEAREST);\n\t\tconst filter = params.filter !== undefined ? params.filter : defaultFilter;\n\t\tif (!isValidFilter(filter)) {\n\t\t\tthrow new Error(`Invalid filter: ${filter} for GPULayer \"${name}\", must be one of [${validFilters.join(', ')}].`);\n\t\t}\n\t\t// Don't allow LINEAR filtering on integer types, it is not supported.\n\t\tif (filter === LINEAR && !(type === FLOAT || type == HALF_FLOAT)) {\n\t\t\tthrow new Error(`LINEAR filtering is not supported on integer types, please use NEAREST filtering for GPULayer \"${name}\" with type: ${type}.`);\n\t\t}\n\t\tthis.filter = filter;\n\n\t\t// Get wrap types, default to clamp to edge.\n\t\tconst wrapS = params.wrapS !== undefined ? params.wrapS : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapS)) {\n\t\t\tthrow new Error(`Invalid wrapS: ${wrapS} for GPULayer \"${name}\", must be one of [${validWraps.join(', ')}].`);\n\t\t}\n\t\tthis.wrapS = wrapS;\n\t\tconst wrapT = params.wrapT !== undefined ? params.wrapT : CLAMP_TO_EDGE;\n\t\tif (!isValidWrap(wrapT)) {\n\t\t\tthrow new Error(`Invalid wrapT: ${wrapT} for GPULayer \"${name}\", must be one of [${validWraps.join(', ')}].`);\n\t\t}\n\t\tthis.wrapT = wrapT;\n\n\t\t// Set data type.\n\t\tif (!isValidDataType(type)) {\n\t\t\tthrow new Error(`Invalid type: ${type} for GPULayer \"${name}\", must be one of [${validDataTypes.join(', ')}].`);\n\t\t}\n\t\tthis.type = type;\n\t\tconst internalType = getGPULayerInternalType({\n\t\t\tcomposer,\n\t\t\ttype,\n\t\t\twritable,\n\t\t\tname,\n\t\t});\n\t\tthis.internalType = internalType;\n\t\t// Set gl texture parameters.\n\t\tconst {\n\t\t\tglFormat,\n\t\t\tglInternalFormat,\n\t\t\tglType,\n\t\t\tglNumChannels,\n\t\t} = getGLTextureParameters({\n\t\t\tcomposer,\n\t\t\tname,\n\t\t\tnumComponents,\n\t\t\twritable,\n\t\t\tinternalType,\n\t\t});\n\t\tthis.glInternalFormat = glInternalFormat;\n\t\tthis.glFormat = glFormat;\n\t\tthis.glType = glType;\n\t\tthis.glNumChannels = glNumChannels;\n\n\t\t// Set internal filtering/wrap types.\n\t\tthis.internalFilter = getGPULayerInternalFilter({ composer, filter, internalType, name });\n\t\tthis.glFilter = gl[this.internalFilter];\n\t\tthis.internalWrapS = getGPULayerInternalWrap({ composer, wrap: wrapS, name });\n\t\tthis.glWrapS = gl[this.internalWrapS];\n\t\tthis.internalWrapT = getGPULayerInternalWrap({ composer, wrap: wrapT, name });\n\t\tthis.glWrapT = gl[this.internalWrapT];\n\n\t\t// Num buffers is the number of states to store for this data.\n\t\tconst numBuffers = params.numBuffers !== undefined ? params.numBuffers : 1;\n\t\tif (!isPositiveInteger(numBuffers)) {\n\t\t\tthrow new Error(`Invalid numBuffers: ${numBuffers} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tthis.numBuffers = numBuffers;\n\n\t\t// Wait until after type has been set to set clearValue.\n\t\tif (params.clearValue !== undefined) {\n\t\t\tthis.clearValue = params.clearValue; // Setter can only be called after this.numComponents has been set.\n\t\t}\n\n\t\tthis.initBuffers(params.array);\n\t}\n\n\tget bufferIndex() {\n\t\treturn this._bufferIndex;\n\t}\n\n\t// saveCurrentStateToGPULayer(layer: GPULayer) {\n\t// \t// A method for saving a copy of the current state without a draw call.\n\t// \t// Draw calls are expensive, this optimization helps.\n\t// \tif (this.numBuffers < 2) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" with less than 2 buffers.`);\n\t// \t}\n\t// \tif (!this.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on read-only GPULayer \"${this.name}\".`);\n\t// \t}\n\t// \tif (layer.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\" using writable GPULayer \"${layer.name}\".`)\n\t// \t}\n\t// \t// Check that texture params are the same.\n\t// \tif (layer.glWrapS !== this.glWrapS || layer.glWrapT !== this.glWrapT ||\n\t// \t\tlayer.wrapS !== this.wrapS || layer.wrapT !== this.wrapT ||\n\t// \t\tlayer.width !== this.width || layer.height !== this.height ||\n\t// \t\tlayer.glFilter !== this.glFilter || layer.filter !== this.filter ||\n\t// \t\tlayer.glNumChannels !== this.glNumChannels || layer.numComponents !== this.numComponents ||\n\t// \t\tlayer.glType !== this.glType || layer.type !== this.type ||\n\t// \t\tlayer.glFormat !== this.glFormat || layer.glInternalFormat !== this.glInternalFormat) {\n\t// \t\t\tthrow new Error(`Incompatible texture params between GPULayers \"${layer.name}\" and \"${this.name}\".`);\n\t// \t}\n\n\t// \t// If we have not already inited overrides array, do so now.\n\t// \tif (!this.textureOverrides) {\n\t// \t\tthis.textureOverrides = [];\n\t// \t\tfor (let i = 0; i < this.numBuffers; i++) {\n\t// \t\t\tthis.textureOverrides.push(undefined);\n\t// \t\t}\n\t// \t}\n\n\t// \t// Check if we already have an override in place.\n\t// \tif (this.textureOverrides[this.bufferIndex]) {\n\t// \t\tthrow new Error(`Can't call GPULayer.saveCurrentStateToGPULayer on GPULayer \"${this.name}\", this GPULayer has not written new state since last call to GPULayer.saveCurrentStateToGPULayer.`);\n\t// \t}\n\t// \tconst { currentState } = this;\n\t// \tthis.textureOverrides[this.bufferIndex] = currentState;\n\t// \t// Swap textures.\n\t// \tthis.buffers[this.bufferIndex].texture = layer.currentState;\n\t// \tlayer._setCurrentStateTexture(currentState);\n\n\t// \t// Bind swapped texture to framebuffer.\n\t// \tconst { gl } = this.composer;\n\t// \tconst { framebuffer, texture } = this.buffers[this.bufferIndex];\n\t// \tif (!framebuffer) throw new Error(`No framebuffer for writable GPULayer \"${this.name}\".`);\n\t// \tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// \t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t// \tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t// \t// Unbind.\n\t// \tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t// }\n\n\t// // This is used internally.\n\t// _setCurrentStateTexture(texture: WebGLTexture) {\n\t// \tif (this.writable) {\n\t// \t\tthrow new Error(`Can't call GPULayer._setCurrentStateTexture on writable texture \"${this.name}\".`);\n\t// \t}\n\t// \tthis.buffers[this.bufferIndex].texture = texture;\n\t// }\n\n\tprivate initBuffers(\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst {\n\t\t\tname,\n\t\t\tnumBuffers,\n\t\t\tcomposer,\n\t\t\tglInternalFormat,\n\t\t\tglFormat,\n\t\t\tglType,\n\t\t\tglFilter,\n\t\t\tglWrapS,\n\t\t\tglWrapT,\n\t\t\twritable,\n\t\t\twidth,\n\t\t\theight,\n\t\t} = this;\n\t\tconst { gl, errorCallback } = composer;\n\n\t\tconst validatedArray = array ? validateGPULayerArray(array, this) : undefined;\n\n\t\t// Init a texture for each buffer.\n\t\tfor (let i = 0; i < numBuffers; i++) {\n\t\t\tconst texture = gl.createTexture();\n\t\t\tif (!texture) {\n\t\t\t\terrorCallback(`Could not init texture for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\t\t// TODO: are there other params to look into:\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, glWrapS);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, glWrapT);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glFilter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glFilter);\n\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, validatedArray ? validatedArray : null);\n\t\t\t\n\t\t\tconst buffer: GPULayerBuffer = {\n\t\t\t\ttexture,\n\t\t\t};\n\n\t\t\tif (writable) {\n\t\t\t\t// Init a framebuffer for this texture so we can write to it.\n\t\t\t\tconst framebuffer = gl.createFramebuffer();\n\t\t\t\tif (!framebuffer) {\n\t\t\t\t\terrorCallback(`Could not init framebuffer for GPULayer \"${name}\": ${gl.getError()}.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\t\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\t\tif(status != gl.FRAMEBUFFER_COMPLETE){\n\t\t\t\t\terrorCallback(`Invalid status for framebuffer for GPULayer \"${name}\": ${status}.`);\n\t\t\t\t}\n\n\t\t\t\t// Add framebuffer.\n\t\t\t\tbuffer.framebuffer = framebuffer;\n\t\t\t}\n\t\t\t\n\t\t\t// Save this buffer to the list.\n\t\t\tthis.buffers.push(buffer);\n\t\t}\n\t\t// Unbind.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\tgetStateAtIndex(index: number) {\n\t\tif (index < 0 || index >= this.numBuffers) {\n\t\t\tthrow new Error(`Invalid buffer index: ${index} for GPULayer \"${this.name}\" with ${this.numBuffers} buffer${this.numBuffers > 1 ? 's' : ''}.`)\n\t\t}\n\t\tif (this.textureOverrides && this.textureOverrides[index]) return this.textureOverrides[index]!;\n\t\treturn this.buffers[index].texture;\n\t}\n\n\tget currentState() {\n\t\treturn this.getStateAtIndex(this.bufferIndex);\n\t}\n\n\tget lastState() {\n\t\tif (this.numBuffers === 1) {\n\t\t\tthrow new Error(`Cannot access lastState on GPULayer \"${this.name}\" with only one buffer.`);\n\t\t}\n\t\treturn this.getStateAtIndex((this.bufferIndex - 1 + this.numBuffers) % this.numBuffers);\n\t}\n\n\t// This is used internally.\n\t_usingTextureOverrideForCurrentBuffer() {\n\t\treturn this.textureOverrides && this.textureOverrides[this.bufferIndex];\n\t}\n\n\tincrementBufferIndex() {\n\t\t// Increment bufferIndex.\n\t\tthis._bufferIndex = (this.bufferIndex + 1) % this.numBuffers;\n\t}\n\n\t// This is used internally.\n\t_bindOutputBufferForWrite(\n\t\tincrementBufferIndex: boolean,\n\t) {\n\t\tif (incrementBufferIndex) {\n\t\t\tthis.incrementBufferIndex();\n\t\t}\n\t\tthis._bindOutputBuffer();\n\n\t\t// We are going to do a data write, if we have overrides enabled, we can remove them.\n\t\tif (this.textureOverrides) {\n\t\t\tthis.textureOverrides[this.bufferIndex] = undefined;\n\t\t}\n\t}\n\n\t// This is used internally.\n\t_bindOutputBuffer() {\n\t\tconst { gl } = this.composer;\n\t\tconst { framebuffer } = this.buffers[this.bufferIndex];\n\t\tif (!framebuffer) {\n\t\t\tthrow new Error(`GPULayer \"${this.name}\" is not writable.`);\n\t\t}\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t}\n\n\tsetFromArray(array: GPULayerArray | number[], applyToAllBuffers = false) {\n\t\tconst { composer, glInternalFormat, glFormat, glType, numBuffers, width, height, bufferIndex } = this;\n\t\tconst { gl } = composer;\n\t\tconst validatedArray = validateGPULayerArray(array, this);\n\t\t// TODO: check that this is working.\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tconst texture = this.getStateAtIndex(i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, validatedArray);\n\t\t}\n\t\t// Unbind texture.\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tresize(\n\t\tdimensions: number | [number, number],\n\t\tarray?: GPULayerArray | number[],\n\t) {\n\t\tconst { name, composer } = this;\n\t\tconst { verboseLogging } = composer;\n\t\tif (verboseLogging) console.log(`Resizing GPULayer \"${name}\" to ${JSON.stringify(dimensions)}.`);\n\t\tconst { length, width, height } = calcGPULayerSize(dimensions, name, verboseLogging);\n\t\tthis._length = length;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis.destroyBuffers();\n\t\tthis.initBuffers(array);\n\t}\n\n\tget clearValue() {\n\t\treturn this._clearValue;\n\t}\n\n\tset clearValue(clearValue: number | number[]) {\n\t\tconst { numComponents, type } = this;\n\t\tif (!isValidClearValue(clearValue, numComponents, type)) {\n\t\t\tthrow new Error(`Invalid clearValue: ${JSON.stringify(clearValue)} for GPULayer \"${this.name}\", expected ${type} or array of ${type} of length ${numComponents}.`);\n\t\t}\n\t\tthis._clearValue = clearValue;\n\t}\n\n\tclear(applyToAllBuffers = false) {\n\t\tconst { name, composer, clearValue, numBuffers, bufferIndex, type } = this;\n\t\tconst { verboseLogging } = composer;\n\t\tif (verboseLogging) console.log(`Clearing GPULayer \"${name}\".`);\n\n\t\tconst value: number[] = [];\n\t\tif (isNumber(clearValue)) {\n\t\t\tvalue.push(clearValue as number, clearValue as number, clearValue as number, clearValue as number);\n\t\t} else {\n\t\t\tvalue.push(...clearValue as number[]);\n\t\t\tfor (let j = value.length; j < 4; j++) {\n\t\t\t\tvalue.push(0);\n\t\t\t}\n\t\t}\n\t\n\t\tconst startIndex = applyToAllBuffers ? 0 : bufferIndex;\n\t\tconst endIndex = applyToAllBuffers ? numBuffers : bufferIndex + 1;\n\t\tif (this.writable) {\n\t\t\tconst program = composer._setValueProgramForType(type);\n\t\t\tprogram.setUniform('u_value', value as [number, number, number, number]);\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t// Write clear value to buffers.\n\t\t\t\tcomposer.step({\n\t\t\t\t\tprogram,\n\t\t\t\t\toutput: this,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// Init a typed array containing clearValue and pass to buffers.\n\t\t\tconst {\n\t\t\t\twidth, height, glNumChannels, internalType,\n\t\t\t\tglInternalFormat, glFormat, glType,\n\t\t\t} = this;\n\t\t\tconst { gl } = composer;\n\t\t\tconst fillLength = this._length ? this._length : width * height;\n\t\t\tconst array = initArrayForType(internalType, width * height * glNumChannels);\n\t\t\tconst float16View = internalType === HALF_FLOAT ? new DataView(array.buffer) : null;\n\t\t\tfor (let j = 0; j < fillLength; j++) {\n\t\t\t\tfor (let k = 0; k < glNumChannels; k++) {\n\t\t\t\t\tconst index = j * glNumChannels + k;\n\t\t\t\t\tif (internalType === HALF_FLOAT) {\n\t\t\t\t\t\t// Float16s need to be handled separately.\n\t\t\t\t\t\tsetFloat16(float16View!, 2 * index, value[k], true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray[index] = value[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst texture = this.getStateAtIndex(i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, array);\n\t\t\t}\n\t\t\t// Unbind texture.\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t}\n\t}\n\n\tget width() {\n\t\treturn this._width;\n\t}\n\n\tget height() {\n\t\treturn this._height;\n\t}\n\n\tget length() {\n\t\tif (!this._length) {\n\t\t\tthrow new Error(`Cannot access length on 2D GPULayer \"${this.name}\".`);\n\t\t}\n\t\treturn this._length;\n\t}\n\n\tis1D() {\n\t\treturn this._length !== undefined;\n\t}\n\n\tgetValues() {\n\t\tconst { width, height, composer, numComponents, type } = this;\n\t\tconst { gl, glslVersion } = composer;\n\n\t\t// In case GPULayer was not the last output written to.\n\t\tthis._bindOutputBuffer();\n\n\t\tlet { glNumChannels, glType, glFormat, internalType } = this;\n\t\tlet values;\n\t\tswitch (internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tif (gl.FLOAT !== undefined) {\n\t\t\t\t\t// Firefox requires that RGBA/FLOAT is used for readPixels of float16 types.\n\t\t\t\t\tglNumChannels = 4;\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tglType = gl.FLOAT;\n\t\t\t\t\tvalues = new Float32Array(width * height * glNumChannels);\n\t\t\t\t} else {\n\t\t\t\t\tvalues = new Uint16Array(width * height * glNumChannels);\n\t\t\t\t}\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak\n\t\t\tcase FLOAT:\n\t\t\t\t// Chrome and Firefox require that RGBA/FLOAT is used for readPixels of float32 types.\n\t\t\t\t// https://github.com/KhronosGroup/WebGL/issues/2747\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\tvalues = new Float32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tif (glslVersion === GLSL1) {\n\t\t\t\t\t// Firefox requires that RGBA/UNSIGNED_BYTE is used for readPixels of unsigned byte types.\n\t\t\t\t\tglNumChannels = 4;\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tvalues = new Uint8Array(width * height * glNumChannels);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tvalues = new Uint32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/UNSIGNED_INT is used for readPixels of unsigned int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Uint32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Uint32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tglType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int8Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tglType = gl.INT;\n\t\t\t\tvalues = new Int32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int16Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\t// Firefox requires that RGBA_INTEGER/INT is used for readPixels of int types.\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\tvalues = new Int32Array(width * height * glNumChannels);\n\t\t\t\t// // The following works in Chrome.\n\t\t\t\t// values = new Int32Array(width * height * glNumChannels);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported internalType ${internalType} for getValues().`);\n\t\t}\n\n\t\tif (readyToRead(gl)) {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels\n\t\t\tgl.readPixels(0, 0, width, height, glFormat, glType, values);\n\t\t\tconst OUTPUT_LENGTH = (this._length ? this._length : width * height) * numComponents;\n\n\t\t\t// Convert uint16 to float32 if needed.\n\t\t\tconst handleFloat16Conversion = internalType === HALF_FLOAT && values.constructor === Uint16Array;\n\t\t\t// @ts-ignore\n\t\t\tconst view = handleFloat16Conversion ? new DataView((values as Uint16Array).buffer) : undefined;\n\n\t\t\t// We may use a different internal type than the assigned type of the GPULayer.\n\t\t\tlet output: GPULayerArray = internalType === type ? values : initArrayForType(type, OUTPUT_LENGTH, true);\n\n\t\t\t// In some cases glNumChannels may be > numComponents.\n\t\t\tif (handleFloat16Conversion || output !== values || numComponents !== glNumChannels) {\n\t\t\t\tfor (let i = 0, length = width * height; i < length; i++) {\n\t\t\t\t\tconst index1 = i * glNumChannels;\n\t\t\t\t\tconst index2 = i * numComponents;\n\t\t\t\t\tif (index2 >= OUTPUT_LENGTH) break;\n\t\t\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\t\t\tif (handleFloat16Conversion) {\n\t\t\t\t\t\t\toutput[index2 + j] = getFloat16(view!, 2 * (index1 + j), true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toutput[index2 + j] = values[index1 + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (output.length !== OUTPUT_LENGTH) {\n\t\t\t\toutput = output.slice(0, OUTPUT_LENGTH);\n\t\t\t}\n\t\t\treturn output;\n\t\t} else {\n\t\t\tthrow new Error(`Unable to read values from Buffer with status: ${gl.checkFramebufferStatus(gl.FRAMEBUFFER)}.`);\n\t\t}\n\t}\n\n\tsavePNG(params: {\n\t\tfilename: string,\n\t\tdpi?: number,\n\t\tmultiplier?: number,\n\t\tcallback: (data: string | Blob, filename?: string) => void,\n\t}) {\n\t\tconst values = this.getValues();\n\t\tconst { width, height, type, name, numComponents } = this;\n\t\tlet { dpi } = params;\n\t\tconst callback = params.callback || saveAs;\n\t\tconst filename = params.filename || name;\n\t\tconst multiplier = params.multiplier ||\n\t\t\t(type === FLOAT || type === HALF_FLOAT) ? 255 : 1;\n\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n    \tcanvas.height = height;\n\t\tconst context = canvas.getContext('2d')!;\n\t\tconst imageData = context.getImageData(0, 0, width, height);\n\t\tconst buffer = imageData.data;\n\t\t// Have to flip the y axis since PNGs are written top to bottom.\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tconst index = y * width + x;\n\t\t\t\tconst indexFlipped = (height - 1 - y) * width + x;\n\t\t\t\tfor (let i = 0; i < numComponents; i++) {\n\t\t\t\t\tbuffer[4 * indexFlipped + i] = values[numComponents * index + i] * multiplier;\n\t\t\t\t}\n\t\t\t\tif (numComponents === 1) {\n\t\t\t\t\t// Make monochrome.\n\t\t\t\t\tbuffer[4 * indexFlipped + 1] = buffer[4 * indexFlipped];\n\t\t\t\t\tbuffer[4 * indexFlipped + 2] = buffer[4 * indexFlipped];\n\t\t\t\t}\n\t\t\t\tif (numComponents < 4) {\n\t\t\t\t\tbuffer[4 * indexFlipped + 3] = 255; // Set alpha channel to 255.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcontext.putImageData(imageData, 0, 0);\n\n\t\tcanvas!.toBlob((blob) => {\n\t\t\tif (!blob) {\n\t\t\t\tconsole.warn(`Problem saving PNG from GPULayer \"${name}\", unable to init blob.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (dpi) {\n\t\t\t\tchangeDpiBlob(blob, dpi).then((blob: Blob) =>{\n\t\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(blob, `${filename}.png`);\n\t\t\t}\n\t\t\t\n\t\t}, 'image/png');\n\t}\n\n\tattachToThreeTexture(texture: Texture) {\n\t\tconst { composer, numBuffers, currentState, name } = this;\n\t\tconst { renderer } = composer;\n\t\tif (!renderer) {\n\t\t\tthrow new Error('GPUComposer was not inited with a renderer.');\n\t\t}\n\t\t// Link webgl texture to threejs object.\n\t\t// This is not officially supported.\n\t\tif (numBuffers > 1) {\n\t\t\tthrow new Error(`GPULayer \"${name}\" contains multiple WebGL textures (one for each buffer) that are flip-flopped during compute cycles, please choose a GPULayer with one buffer.`);\n\t\t}\n\t\tconst offsetTextureProperties = renderer.properties.get(texture);\n\t\toffsetTextureProperties.__webglTexture = currentState;\n\t\toffsetTextureProperties.__webglInit = true;\n\t}\n\n\tprivate destroyBuffers() {\n\t\tconst { composer, buffers } = this;\n\t\tconst { gl } = composer;\n\t\tbuffers.forEach(buffer => {\n\t\t\tconst { framebuffer, texture } = buffer;\n\t\t\tgl.deleteTexture(texture);\n\t\t\tif (framebuffer) {\n\t\t\t\tgl.deleteFramebuffer(framebuffer);\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tdelete buffer.texture;\n\t\t\tdelete buffer.framebuffer;\n\t\t});\n\t\tbuffers.length = 0;\n\n\t\t// These are technically owned by another GPULayer,\n\t\t// so we are not responsible for deleting them from gl context.\n\t\tdelete this.textureOverrides;\n\t}\n\n\tdispose() {\n\t\tconst { name, composer } = this;\n\t\tconst { gl, verboseLogging } = composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPULayer \"${name}\".`);\n\n\t\tif (!gl) throw new Error(`Must call dispose() on all GPULayers before calling dispose() on GPUComposer.`);\n\t\n\t\tthis.destroyBuffers();\n\t\t// @ts-ignore\n\t\tdelete this.composer;\n\t}\n\n\tclone(name?: string) {\n\t\t// Make a deep copy.\n\t\treturn this.composer._cloneGPULayer(this, name);\n\t}\n}","import { setFloat16 } from '@petamoriken/float16';\nimport {\n\tisNumber,\n\tisPositiveInteger,\n} from './checks';\nimport {\n\tBYTE,\n\tCLAMP_TO_EDGE,\n\tFLOAT,\n\tGPULayerFilter,\n\tGPULayerType,\n\tGPULayerWrap,\n\tHALF_FLOAT,\n\tINT,\n\tNEAREST,\n\tSHORT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_INT,\n\tUNSIGNED_SHORT,\n\tGLSL3,\n\tGPULayerNumComponents,\n\tGLSL1,\n\tGPULayerArray,\n\tvalidArrayTypes,\n} from './constants';\nimport {\n\tEXT_COLOR_BUFFER_FLOAT,\n\tgetExtension,\n\tOES_TEXTURE_FLOAT,\n\tOES_TEXTURE_FLOAT_LINEAR,\n\tOES_TEXTURE_HALF_FLOAT,\n\tOES_TEXTURE_HAlF_FLOAT_LINEAR,\n} from './extensions';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport { isWebGL2 } from './utils';\n\n// Memoize results.\nconst results = {\n\tframebufferWriteSupport: {} as { [key: string]: boolean },\n}\n\n/**\n * Init empty typed array for type, optionally use Float32Array for HALF_FLOAT.\n * Used internally.\n */\nexport function initArrayForType(\n\ttype: GPULayerType,\n\tlength: number,\n\thalfFloatsAsFloats = false,\n) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\t\tif (halfFloatsAsFloats) return new Float32Array(length);\n\t\t\treturn new Uint16Array(length);\n\t\tcase FLOAT:\n\t\t\treturn new Float32Array(length);\n\t\tcase UNSIGNED_BYTE:\n\t\t\treturn new Uint8Array(length);\n\t\tcase BYTE:\n\t\t\treturn new Int8Array(length);\n\t\tcase UNSIGNED_SHORT:\n\t\t\treturn new Uint16Array(length);\n\t\tcase SHORT:\n\t\t\treturn new Int16Array(length);\n\t\tcase UNSIGNED_INT:\n\t\t\treturn new Uint32Array(length);\n\t\tcase INT:\n\t\t\treturn new Int32Array(length);\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported type: \"${type}\".`);\n\t}\n}\n\n/**\n * Calc 2D size [width, height] for GPU layer given a 1D or 2D size parameter.\n * If 1D size supplied, nearest power of 2 width/height is generated.\n * Also checks that size elements are valid.\n * Used internally.\n */\n// TODO: should we relax adherence to power of 2?\nexport function calcGPULayerSize(\n\tsize: number | [number, number],\n\tname: string,\n\tverboseLogging: boolean,\n) {\n\tif (isNumber(size as number)) {\n\t\tif (!isPositiveInteger(size)) {\n\t\t\tthrow new Error(`Invalid length: ${size} for GPULayer \"${name}\", must be positive integer.`);\n\t\t}\n\t\tconst length = size as number;\n\t\t// Calc power of two width and height for length.\n\t\tlet exp = 1;\n\t\tlet remainder = length;\n\t\twhile (remainder > 2) {\n\t\t\texp++;\n\t\t\tremainder /= 2;\n\t\t}\n\t\tconst width = Math.pow(2, Math.floor(exp / 2) + exp % 2);\n\t\tconst height = Math.pow(2, Math.floor(exp/2));\n\t\tif (verboseLogging) {\n\t\t\tconsole.log(`Using [${width}, ${height}] for 1D array of length ${size} in GPULayer \"${name}\".`);\n\t\t}\n\t\treturn { width, height, length };\n\t}\n\tconst width = (size as [number, number])[0];\n\tif (!isPositiveInteger(width)) {\n\t\tthrow new Error(`Invalid width: ${width} for GPULayer \"${name}\", must be positive integer.`);\n\t}\n\tconst height = (size as [number, number])[1];\n\tif (!isPositiveInteger(height)) {\n\t\tthrow new Error(`Invalid height: ${height} for GPULayer \"${name}\", must be positive integer.`);\n\t}\n\treturn { width, height };\n}\n\n/**\n * Get the GL wrap type to use internally in GPULayer, based on browser support.\n * Used internally.\n */\nexport function getGPULayerInternalWrap(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\twrap: GPULayerWrap,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, wrap, name } = params;\n\tconst { gl } = composer;\n\t// Webgl2.0 supports all combinations of types and filtering.\n\tif (isWebGL2(gl)) {\n\t\treturn wrap;\n\t}\n\t// CLAMP_TO_EDGE is always supported.\n\tif (wrap === CLAMP_TO_EDGE) {\n\t\treturn wrap;\n\t}\n\tif (!isWebGL2(gl)) {\n\t\t// TODO: we may want to handle this in the frag shader.\n\t\t// REPEAT and MIRROR_REPEAT wrap not supported for non-power of 2 textures in safari.\n\t\t// I've tested this and it seems that some power of 2 textures will work (512 x 512),\n\t\t// but not others (1024x1024), so let's just change all WebGL 1.0 to CLAMP.\n\t\t// Without this, we currently get an error at drawArrays():\n\t\t// \"WebGL: drawArrays: texture bound to texture unit 0 is not renderable.\n\t\t// It maybe non-power-of-2 and have incompatible texture filtering or is not\n\t\t// 'texture complete', or it is a float/half-float type with linear filtering and\n\t\t// without the relevant float/half-float linear extension enabled.\"\n\t\tconsole.warn(`Falling back to CLAMP_TO_EDGE wrapping for GPULayer \"${name}\" for WebGL 1.`);\n\t\treturn CLAMP_TO_EDGE;\n\t}\n\treturn wrap;\n}\n\n/**\n * Get the GL filter type to use internally in GPULayer, based on browser support.\n * Used internally.\n */\nexport function getGPULayerInternalFilter(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tfilter: GPULayerFilter,\n\t\tinternalType: GPULayerType,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, internalType, name } = params;\n\tlet { filter } = params;\n\tif (filter === NEAREST) {\n\t\t// NEAREST filtering is always supported.\n\t\treturn filter;\n\t}\n\n\tif (internalType === HALF_FLOAT) {\n\t\t// TODO: test if float linear extension is actually working.\n\t\tconst extension = getExtension(composer, OES_TEXTURE_HAlF_FLOAT_LINEAR, true)\n\t\t\t|| getExtension(composer, OES_TEXTURE_FLOAT_LINEAR, true);\n\t\tif (!extension) {\n\t\t\tconsole.warn(`Falling back to NEAREST filter for GPULayer \"${name}\".`);\n\t\t\t//TODO: add a fallback that does this filtering in the frag shader.\n\t\t\tfilter = NEAREST;\n\t\t}\n\t} if (internalType === FLOAT) {\n\t\tconst extension = getExtension(composer, OES_TEXTURE_FLOAT_LINEAR, true);\n\t\tif (!extension) {\n\t\t\tconsole.warn(`Falling back to NEAREST filter for GPULayer \"${name}\".`);\n\t\t\t//TODO: add a fallback that does this filtering in the frag shader.\n\t\t\tfilter = NEAREST;\n\t\t}\n\t}\n\treturn filter;\n}\n\n/**\n * Returns whether to cast int type as floats, as needed by browser.\n * Used internally.\n */\nexport function shouldCastIntTypeAsFloat(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\ttype: GPULayerType,\n\t}\n) {\n\tconst { type, composer } = params;\n\tconst { gl, glslVersion } = composer;\n\t// All types are supported by WebGL2 + glsl3.\n\tif (glslVersion === GLSL3 && isWebGL2(gl)) return false;\n\t// Int textures (other than UNSIGNED_BYTE) are not supported by WebGL1.0 or glsl1.x.\n\t// https://stackoverflow.com/questions/55803017/how-to-select-webgl-glsl-sampler-type-from-texture-format-properties\n\t// Use HALF_FLOAT/FLOAT instead.\n\t// Some large values of INT and UNSIGNED_INT are not supported unfortunately.\n\t// See tests for more information.\n\treturn type === BYTE || type === SHORT || type === INT || type === UNSIGNED_SHORT || type === UNSIGNED_INT;\n}\n\n/**\n * Returns GLTexture parameters for GPULayer, based on browser support.\n * Used internally.\n */\nexport function getGLTextureParameters(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tname: string,\n\t\tnumComponents: GPULayerNumComponents,\n\t\tinternalType: GPULayerType,\n\t\twritable: boolean,\n\t}\n) {\n\tconst { composer, name, numComponents, internalType, writable } = params;\n\tconst { gl, glslVersion } = composer;\n\t// https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\n\tlet glType: number | undefined,\n\t\tglFormat: number | undefined,\n\t\tglInternalFormat: number | undefined,\n\t\tglNumChannels: number | undefined;\n\n\tif (isWebGL2(gl)) {\n\t\tglNumChannels = numComponents;\n\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\t\t// The sized internal format RGBxxx are not color-renderable for some reason.\n\t\t// If numComponents == 3 for a writable texture, use RGBA instead.\n\t\t// Page 5 of https://www.khronos.org/files/webgl20-reference-guide.pdf\n\t\tif (numComponents === 3 && writable) {\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\tif (internalType === FLOAT || internalType === HALF_FLOAT) {\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = gl.RGB;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t} else if (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t\t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\t\tif (writable) {\n\t\t\t\t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGBA.\n\t\t\t\tglNumChannels = 4;\n\t\t\t}\n\t\t\t// For read only UNSIGNED_BYTE textures in GLSL 1, use RGB/RGBA.\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\tcase 2:\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = gl.RGB;\n\t\t\t\t\tglNumChannels = 3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\t\tglNumChannels = 4;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t} else {\n\t\t\t// This case will only be hit by GLSL 3.\n\t\t\t// Int textures are not supported in GLSL1.\n\t\t\tswitch (glNumChannels) {\n\t\t\t\tcase 1:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RED_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RG_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGB_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tglFormat = (gl as WebGL2RenderingContext).RGBA_INTEGER;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t}\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).FLOAT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tif (glslVersion === GLSL1 && internalType === UNSIGNED_BYTE) {\n\t\t\t\t\tglInternalFormat = glFormat;\n\t\t\t\t} else {\n\t\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8UI;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase BYTE:\n\t\t\t\tglType = gl.BYTE;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA8I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SHORT:\n\t\t\t\tglType = gl.SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_SHORT:\n\t\t\t\tglType = gl.UNSIGNED_SHORT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA16UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase INT:\n\t\t\t\tglType = gl.INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32I;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_INT:\n\t\t\t\tglType = gl.UNSIGNED_INT;\n\t\t\t\tswitch (glNumChannels) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).R32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RG32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGB32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tglInternalFormat = (gl as WebGL2RenderingContext).RGBA32UI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unsupported glNumChannels: ${glNumChannels} for GPULayer \"${name}\".`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: \"${internalType}\" for GPULayer \"${name}\".`);\n\t\t}\n\t} else {\n\t\t// Don't use gl.ALPHA or gl.LUMINANCE_ALPHA here bc we should expect the values in the R and RG channels.\n\t\tif (writable) {\n\t\t\t// For read only textures in WebGL 1, use RGBA.\n\t\t\tglNumChannels = 4;\n\t\t}\n\t\t// For read only textures in WebGL 1, use RGB/RGBA.\n\t\tswitch (numComponents) {\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\t\tglFormat = gl.RGB;\n\t\t\t\tglInternalFormat = gl.RGB;\n\t\t\t\tglNumChannels = 3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tglFormat = gl.RGBA;\n\t\t\t\tglInternalFormat = gl.RGBA;\n\t\t\t\tglNumChannels = 4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t\t}\n\t\tswitch (internalType) {\n\t\t\tcase FLOAT:\n\t\t\t\tglType = gl.FLOAT;\n\t\t\t\tbreak;\n\t\t\tcase HALF_FLOAT:\n\t\t\t\tglType = (gl as WebGL2RenderingContext).HALF_FLOAT || getExtension(composer, OES_TEXTURE_HALF_FLOAT).HALF_FLOAT_OES as number;\n\t\t\t\tbreak;\n\t\t\tcase UNSIGNED_BYTE:\n\t\t\t\tglType = gl.UNSIGNED_BYTE;\n\t\t\t\tbreak;\n\t\t\t// No other types are supported in WebGL1.\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported type: \"${internalType}\" in WebGL 1.0 for GPULayer \"${name}\".`);\n\t\t}\n\t}\n\n\t// Check for missing params.\n\tif (glType === undefined || glFormat === undefined || glInternalFormat === undefined) {\n\t\tconst missingParams = [];\n\t\tif (glType === undefined) missingParams.push('glType');\n\t\tif (glFormat === undefined) missingParams.push('glFormat');\n\t\tif (glInternalFormat === undefined) missingParams.push('glInternalFormat');\n\t\tthrow new Error(`Invalid type: ${internalType} for numComponents: ${numComponents}, unable to init parameter${missingParams.length > 1 ? 's' : ''} ${missingParams.join(', ')} for GPULayer \"${name}\".`);\n\t}\n\tif (glNumChannels === undefined || numComponents < 1 || numComponents > 4 || glNumChannels < numComponents) {\n\t\tthrow new Error(`Invalid numChannels: ${glNumChannels} for numComponents: ${numComponents} for GPULayer \"${name}\".`);\n\t}\n\n\treturn {\n\t\tglFormat,\n\t\tglInternalFormat,\n\t\tglType,\n\t\tglNumChannels,\n\t};\n}\n\n/**\n * \n * @param params \n * @returns \n */\nexport function testFramebufferWrite(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\tinternalType: GPULayerType,\n\t},\n) {\n\tconst { composer, internalType } = params;\n\tconst { gl, glslVersion } = composer;\n\n\tconst key = `${isWebGL2(gl),internalType,glslVersion}`;\n\tif (results.framebufferWriteSupport[key] !== undefined) {\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\n\tconst texture = gl.createTexture();\n\tif (!texture) {\n\t\tresults.framebufferWriteSupport[key] = false;\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t// Default to most widely supported settings.\n\tconst wrapS = gl[CLAMP_TO_EDGE];\n\tconst wrapT = gl[CLAMP_TO_EDGE];\n\tconst filter = gl[NEAREST];\n\t// Use non-power of two dimensions to check for more universal support.\n\t// (In case size of GPULayer is changed at a later point).\n\tconst width = 100;\n\tconst height = 100;\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\n\tconst { glInternalFormat, glFormat, glType } = getGLTextureParameters({\n\t\tcomposer,\n\t\tname: 'testFramebufferWrite',\n\t\tnumComponents: 1,\n\t\twritable: true,\n\t\tinternalType,\n\t});\n\tgl.texImage2D(gl.TEXTURE_2D, 0, glInternalFormat, width, height, 0, glFormat, glType, null);\n\n\t// Init a framebuffer for this texture so we can write to it.\n\tconst framebuffer = gl.createFramebuffer();\n\tif (!framebuffer) {\n\t\t// Clear out allocated memory.\n\t\tgl.deleteTexture(texture);\n\t\tresults.framebufferWriteSupport[key] = false;\n\t\treturn results.framebufferWriteSupport[key];\n\t}\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\tconst validStatus = status === gl.FRAMEBUFFER_COMPLETE;\n\n\t// Clear out allocated memory.\n\tgl.deleteTexture(texture);\n\tgl.deleteFramebuffer(framebuffer);\n\n\tresults.framebufferWriteSupport[key] = validStatus;\n\treturn results.framebufferWriteSupport[key];\n}\n\n/**\n * Get the GL type to use internally in GPULayer, based on browser support.\n * Used internally, only exported for testing purposes.\n */\nexport function getGPULayerInternalType(\n\tparams: {\n\t\tcomposer: GPUComposer,\n\t\ttype: GPULayerType,\n\t\twritable: boolean,\n\t\tname: string,\n\t},\n) {\n\tconst { composer, writable, name } = params;\n\tconst { gl, errorCallback } = composer;\n\tconst { type } = params;\n\tlet internalType = type;\n\t// Check if int types are supported.\n\tconst intCast = shouldCastIntTypeAsFloat(params);\n\tif (intCast) {\n\t\tif (internalType === UNSIGNED_BYTE || internalType === BYTE) {\n\t\t\t// Integers between 0 and 2048 can be exactly represented by half float (and also between −2048 and 0)\n\t\t\tinternalType = HALF_FLOAT;\n\t\t} else {\n\t\t\t// Integers between 0 and 16777216 can be exactly represented by float32 (also applies for negative integers between −16777216 and 0)\n\t\t\t// This is sufficient for UNSIGNED_SHORT and SHORT types.\n\t\t\t// Large UNSIGNED_INT and INT cannot be represented by FLOAT type.\n\t\t\tconsole.warn(`Falling back ${internalType} type to FLOAT type for glsl1.x support for GPULayer \"${name}\".\nLarge UNSIGNED_INT or INT with absolute value > 16,777,216 are not supported, on mobile UNSIGNED_INT, INT, UNSIGNED_SHORT, and SHORT with absolute value > 2,048 may not be supported.`);\n\t\t\tinternalType = FLOAT;\n\t\t}\n\t}\n\t// Check if float32 supported.\n\tif (!isWebGL2(gl)) {\n\t\tif (internalType === FLOAT) {\n\t\t\tconst extension = getExtension(composer, OES_TEXTURE_FLOAT, true);\n\t\t\tif (!extension) {\n\t\t\t\tconsole.warn(`FLOAT not supported, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t}\n\t\t\t// https://stackoverflow.com/questions/17476632/webgl-extension-support-across-browsers\n\t\t\t// Rendering to a floating-point texture may not be supported,\n\t\t\t// even if the OES_texture_float extension is supported.\n\t\t\t// Typically, this fails on current mobile hardware.\n\t\t\t// To check if this is supported, you have to call the WebGL\n\t\t\t// checkFramebufferStatus() function.\n\t\t\tif (writable) {\n\t\t\t\tconst valid = testFramebufferWrite({ composer, internalType: internalType });\n\t\t\t\tif (!valid && internalType !== HALF_FLOAT) {\n\t\t\t\t\tconsole.warn(`FLOAT not supported for writing operations, falling back to HALF_FLOAT type for GPULayer \"${name}\".`);\n\t\t\t\t\tinternalType = HALF_FLOAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Must support at least half float if using a float type.\n\t\tif (internalType === HALF_FLOAT) {\n\t\t\tgetExtension(composer, OES_TEXTURE_HALF_FLOAT);\n\t\t\t// TODO: https://stackoverflow.com/questions/54248633/cannot-create-half-float-oes-texture-from-uint16array-on-ipad\n\t\t\tif (writable) {\n\t\t\t\tconst valid = testFramebufferWrite({ composer, internalType: internalType });\n\t\t\t\tif (!valid) {\n\t\t\t\t\terrorCallback(`This browser does not support rendering to HALF_FLOAT textures.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Load additional extensions if needed.\n\tif (writable && isWebGL2(gl) && (internalType === HALF_FLOAT || internalType === FLOAT)) {\n\t\tgetExtension(composer, EXT_COLOR_BUFFER_FLOAT);\n\t}\n\treturn internalType;\n}\n\n/**\n * Recasts typed array to match GPULayer.internalType.\n * Used internally.\n */\nexport function validateGPULayerArray(array: GPULayerArray | number[], layer: GPULayer) {\n\tconst { numComponents, glNumChannels, internalType, width, height, name } = layer;\n\tconst length = layer.is1D() ? layer.length : null;\n\n\t// Check that data is correct length (user error).\n\tif (array.length !== width * height * numComponents) { // Either the correct length for WebGLTexture size\n\t\tif (!length || (length &&  array.length !== length * numComponents)) { // Of the correct length for 1D array.\n\t\t\tthrow new Error(`Invalid data length: ${array.length} for GPULayer \"${name}\" of ${length ? `length ${length} and ` : ''}dimensions: [${width}, ${height}] and numComponents: ${numComponents}.`);\n\t\t}\n\t}\n\n\t// Get array type to figure out if we need to type cast.\n\t// For webgl1.0 we may need to cast an int type to a FLOAT or HALF_FLOAT.\n\tlet shouldTypeCast = false;\n\tswitch(array.constructor) {\n\t\tcase Array:\n\t\t\tshouldTypeCast = true;\n\t\t\tbreak;\n\t\tcase Float32Array:\n\t\t\tshouldTypeCast = internalType !== FLOAT;\n\t\t\tbreak;\n\t\tcase Uint8Array:\n\t\t\tshouldTypeCast = internalType !== UNSIGNED_BYTE;\n\t\t\tbreak;\n\t\tcase Int8Array:\n\t\t\tshouldTypeCast = internalType !== BYTE;\n\t\t\tbreak;\n\t\tcase Uint16Array:\n\t\t\t// User may have converted to HALF_FLOAT already.\n\t\t\t// We need to add this check in case type is UNSIGNED_SHORT and internal type is HALF_FLOAT.\n\t\t\t// (This can happen for some WebGL1 contexts.)\n\t\t\t// if (type === HALF_FLOAT) {\n\t\t\t// \tshouldTypeCast = internalType !== HALF_FLOAT;\n\t\t\t// \t// In order to complete this, we will also need to handle converting from Uint16Array to some other type.\n\t\t\t// \t// Are there cases where HALF_FLOAT is not supported?\n\t\t\t// } else {\n\t\t\t\tshouldTypeCast = internalType !== UNSIGNED_SHORT\n\t\t\t// }\n\t\t\tbreak;\n\t\tcase Int16Array:\n\t\t\tshouldTypeCast = internalType !== SHORT;\n\t\t\tbreak;\n\t\tcase Uint32Array:\n\t\t\tshouldTypeCast = internalType !== UNSIGNED_INT;\n\t\t\tbreak;\n\t\tcase Int32Array:\n\t\t\tshouldTypeCast = internalType !== INT;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(`Invalid array type: ${array.constructor.name} for GPULayer \"${name}\", please use one of [${validArrayTypes.map(constructor => constructor.name).join(', ')}].`);\n\t}\n\n\t// Then check if array needs to be lengthened.\n\t// This could be because glNumChannels !== numComponents or because length !== width * height.\n\tconst arrayLength = width * height * glNumChannels;\n\tconst shouldResize = array.length !== arrayLength;\n\t\t\n\tlet validatedArray = array as GPULayerArray;\n\tif (shouldTypeCast || shouldResize) {\n\t\tvalidatedArray = initArrayForType(internalType, arrayLength);\n\t\t// Fill new data array with old data.\n\t\t// We have to handle the case of Float16 specially by converting data to Uint16Array.\n\t\tconst view = (internalType === HALF_FLOAT && shouldTypeCast) ? new DataView(validatedArray.buffer) : null;\n\t\tfor (let i = 0, _len = array.length / numComponents; i < _len; i++) {\n\t\t\tfor (let j = 0; j < numComponents; j++) {\n\t\t\t\tconst value = array[i * numComponents + j];\n\t\t\t\tconst index = i * glNumChannels + j;\n\t\t\t\tif (view) {\n\t\t\t\t\tsetFloat16(view, 2 * index, value, true);\n\t\t\t\t} else {\n\t\t\t\t\tvalidatedArray[index] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn validatedArray;\n}","import { GPUComposer } from './GPUComposer';\nimport {\n\tisArray,\n\tisBoolean,\n\tisObject,\n\tisString,\n} from './checks';\nimport {\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tUniform,\n\tUniformType,\n\tUniformInternalType,\n\tUniformValue,\n\tCompileTimeVars,\n\tPROGRAM_NAME_INTERNAL,\n\tDEFAULT_PROGRAM_NAME,\n\tDEFAULT_W_UV_PROGRAM_NAME,\n\tDEFAULT_W_NORMAL_PROGRAM_NAME,\n\tDEFAULT_W_UV_NORMAL_PROGRAM_NAME,\n\tSEGMENT_PROGRAM_NAME,\n\tLAYER_POINTS_PROGRAM_NAME,\n\tLAYER_VECTOR_FIELD_PROGRAM_NAME,\n\tLAYER_LINES_PROGRAM_NAME,\n\tINT,\n\tUINT,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n} from './constants';\nimport {\n\tcompileShader,\n\tpreprocessFragmentShader,\n\tinitGLProgram,\n\tuniformInternalTypeForValue,\n\tisWebGL2,\n} from './utils';\n\nexport class GPUProgram {\n\t// Keep a reference to GPUComposer.\n\tprivate readonly composer: GPUComposer;\n\n\t// Name of GPUProgram, used for error logging.\n\treadonly name: string;\n\n\t// Compiled fragment shader.\n\tprivate fragmentShader!: WebGLShader;\n\t// Source code for fragment shader.\n\t// Hold onto this in case we need to recompile with different #defines.\n\tprivate readonly fragmentShaderSource: string;\n\t// #define variables for fragment shader program.\n\tprivate readonly defines: CompileTimeVars = {};\n\t// Uniform locations, values, and types.\n\tprivate readonly uniforms: { [ key: string]: Uniform } = {};\n\n\t// Store WebGLProgram's - we need to compile several WebGLPrograms of GPUProgram.fragmentShader + various vertex shaders.\n\t// Each combination of vertex + fragment shader requires a separate WebGLProgram.\n\t// These programs are compiled on the fly as needed.\n\tprivate readonly programs: {[key in PROGRAM_NAME_INTERNAL]?: WebGLProgram } = {};\n\n\t/**\n     * Create a GPUProgram.\n     * @param {GPUComposer} composer - The current GPUComposer instance.\n     * @param {Object} params - GPUProgram parameters.\n     */\n\tconstructor(\n\t\tcomposer: GPUComposer,\n\t\tparams: {\n\t\t\tname: string,\n\t\t\t// We may want to pass in an array of shader string sources, if split across several files.\n\t\t\tfragmentShader: string | string[],\n\t\t\tuniforms?: {\n\t\t\t\tname: string,\n\t\t\t\tvalue: UniformValue,\n\t\t\t\ttype: UniformType,\n\t\t\t}[],\n\t\t\t// We'll allow some compile-time variables to be passed in as #define to the preprocessor for the fragment shader.\n\t\t\tdefines?: CompileTimeVars,\n\t\t},\n\t) {\n\t\t// Check constructor parameters.\n\t\tconst { name } = (params || {});\n\t\tif (!composer) {\n\t\t\tthrow new Error(`Error initing GPUProgram \"${name}\": must pass GPUComposer instance to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!params) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass params to GPUProgram(composer, params).`);\n\t\t}\n\t\tif (!isObject(params)) {\n\t\t\tthrow new Error(`Error initing GPUProgram: must pass valid params object to GPUProgram(composer, params), got ${JSON.stringify(params)}.`);\n\t\t}\n\t\tconst validKeys = ['name', 'fragmentShader', 'uniforms', 'defines'];\n\t\tconst requiredKeys = ['name', 'fragmentShader'];\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tif (validKeys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Invalid params key \"${key}\" passed to GPUProgram(composer, params) with name \"${name}\".  Valid keys are ${JSON.stringify(validKeys)}.`);\n\t\t\t}\n\t\t});\n\t\t// Check for required keys.\n\t\trequiredKeys.forEach(key => {\n\t\t\tif (keys.indexOf(key) < 0) {\n\t\t\t\tthrow new Error(`Required params key \"${key}\" was not passed to GPUProgram(composer, params) with name \"${name}\".`);\n\t\t\t}\n\t\t});\n\n\t\tconst { fragmentShader, uniforms, defines } = params;\n\n\t\t// Save arguments.\n\t\tthis.composer = composer;\n\t\tthis.name = name;\n\n\t\t// Compile fragment shader.\n\t\tconst fragmentShaderSource = isString(fragmentShader) ?\n\t\t\tfragmentShader as string :\n\t\t\t(fragmentShader as string[]).join('\\n');\n\t\tthis.fragmentShaderSource = preprocessFragmentShader(\n\t\t\tfragmentShaderSource, composer.glslVersion,\n\t\t);\n\t\tthis.compile(defines); // Compiling also saves defines.\n\n\t\t// Set program uniforms.\n\t\tif (uniforms) {\n\t\t\tfor (let i = 0; i < uniforms.length; i++) {\n\t\t\t\tconst { name, value, type } = uniforms[i];\n\t\t\t\tthis.setUniform(name, value, type);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Compile fragment shader for GPUProgram.\n\t * Used internally, called only one.\n\t */\n\tprivate compile(defines?: CompileTimeVars) {\n\t\tconst { composer, name, fragmentShaderSource } = this;\n\t\tconst {\n\t\t\tgl,\n\t\t\terrorCallback,\n\t\t\tverboseLogging,\n\t\t\tglslVersion,\n\t\t\tfloatPrecision,\n\t\t\tintPrecision,\n\t\t} = composer;\n\n\t\t// Update this.defines if needed.\n\t\t// Passed in defines param may only be a partial list.\n\t\tlet definesNeedUpdate = false;\n\t\tif (defines) {\n\t\t\tconst keys = Object.keys(defines);\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tif (this.defines[key] !== defines[key]) {\n\t\t\t\t\tdefinesNeedUpdate = true;\n\t\t\t\t\tthis.defines[key] = defines[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.fragmentShader && !definesNeedUpdate) {\n\t\t\t// No need to recompile.\n\t\t\treturn;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Compiling fragment shader for GPUProgram \"${name}\" with defines: ${JSON.stringify(this.defines)}`);\n\t\tconst shader = compileShader(\n\t\t\tgl,\n\t\t\tglslVersion,\n\t\t\tintPrecision,\n\t\t\tfloatPrecision,\n\t\t\tfragmentShaderSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\tname,\n\t\t\terrorCallback,\n\t\t\tthis.defines,\n\t\t);\n\t\tif (!shader) {\n\t\t\terrorCallback(`Unable to compile fragment shader for GPUProgram \"${name}\".`);\n\t\t\treturn;\n\t\t}\n\t\tthis.fragmentShader = shader;\n\t\t\n\t\t// If we decided to call this multiple times, we will need to attach the shader to all existing programs.\n\t}\n\n\t/**\n\t * Get GLProgram associated with a specific vertex shader.\n\t * Used internally.\n\t */\n\tprivate getProgramWithName(name: PROGRAM_NAME_INTERNAL) {\n\t\t// Check if we've already compiled program.\n\t\tif (this.programs[name]) return this.programs[name];\n\n\t\t// Otherwise, we need to compile a new program on the fly.\n\t\tconst { composer, uniforms, fragmentShader } = this;\n\t\tconst { gl, errorCallback } = composer;\n\n\t\tconst vertexShader = composer._getVertexShaderWithName(name, this.name);\n\t\tif (vertexShader === undefined) {\n\t\t\terrorCallback(`Unable to init vertex shader \"${name}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst program = initGLProgram(gl, vertexShader, fragmentShader, this.name, errorCallback);\n\t\tif (program === undefined) {\n\t\t\terrorCallback(`Unable to init program \"${name}\" for GPUProgram \"${this.name}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\t// If we have any uniforms set for this GPUProgram, add those to WebGLProgram we just inited.\n\t\tconst uniformNames = Object.keys(uniforms);\n\t\tfor (let i = 0; i < uniformNames.length; i++) {\n\t\t\tconst uniformName = uniformNames[i];\n\t\t\tconst uniform = uniforms[uniformName];\n\t\t\tconst { value, type } = uniform;\n\t\t\tthis.setProgramUniform(program, name, uniformName, value, type);\n\t\t}\n\n\t\tthis.programs[name] = program;\n\t\treturn program;\n\t}\n\tget _defaultProgram() {\n\t\treturn this.getProgramWithName(DEFAULT_PROGRAM_NAME);\n\t}\n\tget _defaultProgramWithUV() {\n\t\treturn this.getProgramWithName(DEFAULT_W_UV_PROGRAM_NAME);\n\t}\n\tget _defaultProgramWithNormal() {\n\t\treturn this.getProgramWithName(DEFAULT_W_NORMAL_PROGRAM_NAME);\n\t}\n\tget _defaultProgramWithUVNormal() {\n\t\treturn this.getProgramWithName(DEFAULT_W_UV_NORMAL_PROGRAM_NAME);\n\t}\n\tget _segmentProgram() {\n\t\treturn this.getProgramWithName(SEGMENT_PROGRAM_NAME);\n\t}\n\tget _layerPointsProgram() {\n\t\treturn this.getProgramWithName(LAYER_POINTS_PROGRAM_NAME);\n\t}\n\tget _layerVectorFieldProgram() {\n\t\treturn this.getProgramWithName(LAYER_VECTOR_FIELD_PROGRAM_NAME);\n\t}\n\tget _layerLinesProgram() {\n\t\treturn this.getProgramWithName(LAYER_LINES_PROGRAM_NAME);\n\t}\n\n\t/**\n\t * Set uniform for GLProgram.\n\t * Used internally.\n\t */\n\tprivate setProgramUniform(\n\t\tprogram: WebGLProgram,\n\t\tprogramName: string,\n\t\tname: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformInternalType,\n\t) {\n\t\tconst { composer, uniforms } = this;\n\t\tconst { gl, errorCallback } = composer;\n\t\t// Set active program.\n\t\tgl.useProgram(program);\n\n\t\tlet location = uniforms[name]?.location[programName];\n\t\t// Init a location for WebGLProgram if needed.\n\t\tif (location === undefined) {\n\t\t\tconst _location = gl.getUniformLocation(program, name);\n\t\t\tif (!_location) {\n\t\t\t\terrorCallback(`Could not init uniform \"${name}\" for program \"${this.name}\".\nCheck that uniform is present in shader code, unused uniforms may be removed by compiler.\nAlso check that uniform type in shader code matches type ${type}.\nError code: ${gl.getError()}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocation = _location;\n\t\t\t// Save location for future use.\n\t\t\tif (uniforms[name]) {\n\t\t\t\tuniforms[name].location[programName] = location;\n\t\t\t}\n\t\t}\n\n\t\t// Set uniform.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform\n\t\tswitch (type) {\n\t\t\tcase FLOAT_1D_UNIFORM:\n\t\t\t\tgl.uniform1f(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_2D_UNIFORM:\n\t\t\t\tgl.uniform2fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_3D_UNIFORM:\n\t\t\t\tgl.uniform3fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase FLOAT_4D_UNIFORM:\n\t\t\t\tgl.uniform4fv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_1D_UNIFORM:\n\t\t\t\tif (isBoolean(value)) {\n\t\t\t\t\t// We are setting boolean uniforms with uniform1i.\n\t\t\t\t\tgl.uniform1i(location, value ? 1 : 0);\n\t\t\t\t} else {\n\t\t\t\t\tgl.uniform1i(location, value as number);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase INT_2D_UNIFORM:\n\t\t\t\tgl.uniform2iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_3D_UNIFORM:\n\t\t\t\tgl.uniform3iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase INT_4D_UNIFORM:\n\t\t\t\tgl.uniform4iv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_1D_UNIFORM:\n\t\t\t\t(gl as WebGL2RenderingContext).uniform1ui(location, value as number);\n\t\t\t\tbreak;\n\t\t\tcase UINT_2D_UNIFORM:\n\t\t\t\t(gl as WebGL2RenderingContext).uniform2uiv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_3D_UNIFORM:\n\t\t\t\t(gl as WebGL2RenderingContext).uniform3uiv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tcase UINT_4D_UNIFORM:\n\t\t\t\t(gl as WebGL2RenderingContext).uniform4uiv(location, value as number[]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown uniform type ${type} for GPUProgram \"${this.name}\".`);\n\t\t}\n\t}\n\n\t/**\n\t * Set fragment shader uniform for GPUProgram.\n\t * @param name - Uniform name as string.\n\t * @param value - Uniform value as boolean, number, or number[].\n\t * @param type - (optional) Uniform type: INT, UINT, FLOAT, BOOL.\n\t * @returns \n\t */\n\tsetUniform(\n\t\tname: string,\n\t\tvalue: UniformValue,\n\t\ttype?: UniformType,\n\t) {\n\t\tconst { programs, uniforms, composer } = this;\n\t\tconst { verboseLogging } = composer;\n\n\t\t// Uint is not supported in webgl1.\n\t\tif (!isWebGL2(composer.gl) && type === UINT) {\n\t\t\ttype = INT;\n\t\t}\n\n\t\t// Check that length of value is correct.\n\t\tif (isArray(value)) {\n\t\t\tconst length = (value as number[]).length;\n\t\t\tif (length > 4) throw new Error(`Invalid uniform value: [${(value as number[]).join(', ')}] passed to GPUProgram \"${this.name}, uniforms must be of type number[] with length <= 4, number, or boolean.\"`)\n\t\t}\n\n\t\tlet currentType = uniforms[name]?.type;\n\t\tif (type) {\n\t\t\tconst internalType = uniformInternalTypeForValue(value, type, name, this.name);\n\t\t\tif (currentType === undefined) currentType = internalType;\n\t\t\telse {\n\t\t\t\t// console.warn(`Don't need to pass in type to GPUProgram.setUniform for previously inited uniform \"${uniformName}\"`);\n\t\t\t\t// Check that types match previously set uniform.\n\t\t\t\tif (currentType !== internalType) {\n\t\t\t\t\tthrow new Error(`Uniform \"${name}\" for GPUProgram \"${this.name}\" cannot change from type ${currentType} to type ${internalType}.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (currentType === undefined) {\n\t\t\tthrow new Error(`Unknown type for uniform \"${name}\", please pass in type to GPUProgram.setUniform(name, value, type) when initing a new uniform.`);\n\t\t}\n\n\t\tif (!uniforms[name]) {\n\t\t\t// Init uniform if needed.\n\t\t\tuniforms[name] = { type: currentType, location: {}, value };\n\t\t} else {\n\t\t\t// Deep check is value has changed.\n\t\t\tif (isArray(value)) {\n\t\t\t\tlet isChanged = true;\n\t\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\t\tif (uniforms[name].value !== value) {\n\t\t\t\t\t\tisChanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isChanged) return; // No change.\n\t\t\t} else if (uniforms[name].value === value) {\n\t\t\t\treturn; // No change.\n\t\t\t}\n\t\t\t// Update value.\n\t\t\tuniforms[name].value = value;\n\t\t}\n\n\t\tif (verboseLogging) console.log(`Setting uniform \"${name}\" for program \"${this.name}\" to value ${JSON.stringify(value)} with type ${currentType}.`)\n\n\t\t// Update any active programs.\n\t\tconst keys = Object.keys(programs);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst programName = keys[i] as PROGRAM_NAME_INTERNAL;\n\t\t\tthis.setProgramUniform(programs[programName]!, programName, name, value, currentType);\n\t\t}\n\t};\n\n\t/**\n\t * Set vertex shader uniform for GPUProgram.\n\t * Used internally.\n\t */\n\t_setVertexUniform(\n\t\tprogram: WebGLProgram,\n\t\tuniformName: string,\n\t\tvalue: UniformValue,\n\t\ttype: UniformType,\n\t) {\n\t\tif (!program) {\n\t\t\tthrow new Error('Must pass in valid WebGLProgram to setVertexUniform, got undefined.');\n\t\t}\n\t\tconst programName = Object.keys(this.programs).find(key => this.programs[key as PROGRAM_NAME_INTERNAL] === program);\n\t\tif (!programName) {\n\t\t\tthrow new Error(`Could not find valid vertex programName for WebGLProgram in GPUProgram \"${this.name}\".`);\n\t\t}\n\t\tconst internalType = uniformInternalTypeForValue(value, type, uniformName, this.name);\n\t\tthis.setProgramUniform(program, programName, uniformName, value, internalType);\n\t}\n\n\t/**\n\t * Deallocate GPUProgram instance and associated WebGL properties.\n\t */\n\tdispose() {\n\t\tconst { composer, fragmentShader, programs } = this;\n\t\tconst { gl, verboseLogging } = composer;\n\n\t\tif (verboseLogging) console.log(`Deallocating GPUProgram \"${this.name}\".`);\n\t\tif (!gl) throw new Error(`Must call dispose() on all GPUPrograms before calling dispose() on GPUComposer.`);\n\n\t\t// Unbind all gl data before deleting.\n\t\tObject.values(programs).forEach(program => {\n\t\t\tif (program) gl.deleteProgram(program);\n\t\t});\n\t\tObject.keys(this.programs).forEach(key => {\n\t\t\tdelete this.programs[key as PROGRAM_NAME_INTERNAL];\n\t\t});\n\n\t\t// Delete fragment shader.\n\t\tgl.deleteShader(fragmentShader);\n\t\t// @ts-ignore\n\t\tdelete this.fragmentShader;\n\t\t// Vertex shaders are owned by GPUComposer and shared across many GPUPrograms.\n\n\t\t// Delete all references.\n\t\t// @ts-ignore\n\t\tdelete this.composer;\n\t\t// @ts-ignore\n\t\tdelete this.name;\n\t\t// @ts-ignore\n\t\tdelete this.fragmentShaderSource;\n\t\t// @ts-ignore\n\t\tdelete this.defines;\n\t\t// @ts-ignore\n\t\tdelete this.uniforms;\n\t\t// @ts-ignore\n\t\tdelete this.programs;\n\t}\n}\n","/**\n * These are the parts of threejs Vector4 that we need.\n * Used internally.\n */\nexport class Vector4 {\n\tx: number;\n\ty: number;\n\tz: number;\n\tw: number;\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t}\n\tget width() {\n\t\treturn this.z;\n\t}\n\tget height() {\n\t\treturn this.w;\n\t}\n\tcopy(v: Vector4) {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = v.w;\n\t\treturn this;\n\t}\n}","import {\n\tvalidDataTypes,\n\tvalidFilters,\n\tvalidWraps,\n\tvalidTextureFormats,\n\tvalidTextureTypes,\n\tGPULayerType,\n\tHALF_FLOAT,\n\tFLOAT,\n\tBYTE,\n\tSHORT,\n\tINT,\n\tUNSIGNED_BYTE,\n\tUNSIGNED_SHORT,\n\tUNSIGNED_INT,\n} from './constants';\n\n/**\n * Checks if type is valid GPULayer data type.\n * Used internally.\n */\nexport function isValidDataType(type: string) {\n\treturn validDataTypes.indexOf(type) > -1;\n}\n\n/**\n * Checks if filter is valid GPULayer filter type.\n * Used internally.\n */\nexport function isValidFilter(type: string) {\n\treturn validFilters.indexOf(type) > -1;\n}\n\n/**\n * Checks if wrap is valid GPULayer wrap type.\n * Used internally.\n */\nexport function isValidWrap(type: string) {\n\treturn validWraps.indexOf(type) > -1;\n}\n\n// For image urls that are passed in and inited as textures.\n// TODO: add docs\nexport function isValidTextureFormat(type: string) {\n\treturn validTextureFormats.indexOf(type) > -1;\n}\n// TODO: add docs\nexport function isValidTextureType(type: string) {\n\treturn validTextureTypes.indexOf(type) > -1;\n}\n\n/**\n * Checks if value is valid GPULayer clear value for numComponents and type.\n * Used internally.\n */\nexport function isValidClearValue(clearValue: number | number[], numComponents: number, type: GPULayerType) {\n\tif (isArray(clearValue)) {\n\t\t// Length of clearValue must match numComponents.\n\t\tif ((clearValue as number[]).length !== numComponents) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < (clearValue as number[]).length; i++) {\n\t\t\tif (!isNumberOfType((clearValue as number[])[i], type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (!isNumberOfType(clearValue, type)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Checks if value is valid number for a given GPULayer type.\n * Checks extrema values.\n * Used internally.\n */\nexport function isNumberOfType(value: any, type: GPULayerType) {\n\tswitch (type) {\n\t\tcase HALF_FLOAT:\n\t\tcase FLOAT:\n\t\t\treturn isNumber(value);\n\t\tcase BYTE:\n\t\t\t// -(2 ** 7)\n\t\t\tif (value < -128) return false;\n\t\t\t// 2 ** 7 - 1\n\t\t\tif (value > 127) return false;\n\t\t\treturn isInteger(value);\n\t\tcase SHORT:\n\t\t\t// -(2 ** 15)\n\t\t\tif (value < -32768) return false;\n\t\t\t// 2 ** 15 - 1\n\t\t\tif (value > 32767) return false;\n\t\t\treturn isInteger(value);\n\t\tcase INT:\n\t\t\t// -(2 ** 31)\n\t\t\tif (value < -2147483648) return false;\n\t\t\t// 2 ** 31 - 1\n\t\t\tif (value > 2147483647) return false;\n\t\t\treturn isInteger(value);\n\t\tcase UNSIGNED_BYTE:\n\t\t\t// 2 ** 8 - 1\n\t\t\tif (value > 255) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_SHORT:\n\t\t\t// 2 ** 16 - 1\n\t\t\tif (value > 65535) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tcase UNSIGNED_INT:\n\t\t\t// 2 ** 32 - 1\n\t\t\tif (value > 4294967295) return false;\n\t\t\treturn isNonNegativeInteger(value);\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown type ${type}`);\n\t}\n}\n\n/**\n * Checks if value is finite number.\n * Used internally.\n */\nexport function isNumber(value: any) {\n\treturn !Number.isNaN(value) && typeof value === 'number' && Number.isFinite(value);\n}\n\n/**\n * Checks if value is finite integer.\n * Used internally.\n */\nexport function isInteger(value: any) {\n\treturn isNumber(value) && (value % 1 === 0);\n}\n\n/**\n * Checks if value is finite positive integer (> 0).\n * Used internally.\n */\nexport function isPositiveInteger(value: any) {\n\treturn isInteger(value) && value > 0;\n}\n\n/**\n * Checks if value is finite non-negative integer (>= 0).\n * Used internally.\n */\nexport function isNonNegativeInteger(value: any) {\n\treturn isInteger(value) &&  value >= 0;\n}\n\n/**\n * Checks if value is string.\n * Used internally.\n */\nexport function isString(value: any){\n\treturn typeof value === 'string';\n}\n\n/**\n * Checks if value is array.\n * Used internally.\n */\nexport function isArray(value: any) {\n\treturn Array.isArray(value);\n}\n\n/**\n * Checks if value is JS object {}.\n * Used internally.\n */\nexport function isObject(value: any) {\n\treturn typeof value === 'object' && !isArray(value) && value !== null;\n}\n\n/**\n * Checks if value is boolean.\n * Used internally.\n */\nexport function isBoolean(value: any) {\n\treturn typeof value === 'boolean';\n}","// Data types.\nexport const HALF_FLOAT = 'HALF_FLOAT';\nexport const FLOAT = 'FLOAT';\nexport const UNSIGNED_BYTE = 'UNSIGNED_BYTE';\nexport const BYTE = 'BYTE';\nexport const UNSIGNED_SHORT = 'UNSIGNED_SHORT';\nexport const SHORT = 'SHORT';\nexport const UNSIGNED_INT = 'UNSIGNED_INT';\nexport const INT = 'INT';\nexport const BOOL = 'BOOL';\nexport const UINT = 'UINT';\n\n// Filter types.\nexport const LINEAR = 'LINEAR';\nexport const NEAREST = 'NEAREST';\n\n// Wrap types.\nexport const REPEAT = 'REPEAT';\nexport const CLAMP_TO_EDGE = 'CLAMP_TO_EDGE';\n// export const MIRRORED_REPEAT = 'MIRRORED_REPEAT';\n\n// GPULayer parameter types.\nexport type GPULayerArray =  Float32Array | Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array;\nexport const validArrayTypes = [Float32Array, Uint8Array, Int8Array, Uint16Array, Int16Array, Uint32Array, Int32Array, Array];\nexport type GPULayerType = typeof HALF_FLOAT | typeof FLOAT | typeof UNSIGNED_BYTE | typeof BYTE | typeof UNSIGNED_SHORT | typeof SHORT | typeof UNSIGNED_INT | typeof INT;\nexport const validDataTypes = [HALF_FLOAT, FLOAT, UNSIGNED_BYTE, BYTE, UNSIGNED_SHORT, SHORT, UNSIGNED_INT, INT];\nexport type GPULayerNumComponents = 1 | 2 | 3 | 4;\nexport type GPULayerFilter = typeof LINEAR | typeof NEAREST;\nexport const validFilters = [LINEAR, NEAREST];\nexport const validWraps = [CLAMP_TO_EDGE, REPEAT]; // MIRRORED_REPEAT\nexport type GPULayerWrap = typeof REPEAT | typeof CLAMP_TO_EDGE;// | typeof MIRRORED_REPEAT;\n\n// TODO: change this?\n// For image urls that are passed in and inited as textures.\nexport const RGB = 'RGB';\nexport const RGBA = 'RGBA';\nexport type TextureFormat = typeof RGB | typeof RGBA;\nexport const validTextureFormats = [RGB, RGBA];\nexport type TextureType = typeof UNSIGNED_BYTE;\nexport const validTextureTypes = [UNSIGNED_BYTE];\n\n// GLSL versions.\nexport const GLSL3 = '300 es';\nexport const GLSL1 = '100';\nexport type GLSLVersion = typeof GLSL1 | typeof GLSL3;\n\n// WebGL versions.\nexport const WEBGL2 = 'webgl2';\nexport const WEBGL1 = 'webgl';\nexport const EXPERIMENTAL_WEBGL = 'experimental-webgl';\n\n// Precision declarations.\nexport const PRECISION_LOW_P = 'lowp';\nexport const PRECISION_MEDIUM_P = 'mediump';\nexport const PRECISION_HIGH_P = 'highp';\nexport type GLSLPrecision = typeof PRECISION_LOW_P | typeof PRECISION_MEDIUM_P | typeof PRECISION_HIGH_P;\n\n// Uniform types.\nexport const FLOAT_1D_UNIFORM = '1f';\nexport const FLOAT_2D_UNIFORM = '2f';\nexport const FLOAT_3D_UNIFORM = '3f';\nexport const FLOAT_4D_UNIFORM = '4f';\nexport const INT_1D_UNIFORM = '1i';\nexport const INT_2D_UNIFORM = '2i';\nexport const INT_3D_UNIFORM = '3i';\nexport const INT_4D_UNIFORM = '4i';\nexport const UINT_1D_UNIFORM = '1ui';\nexport const UINT_2D_UNIFORM = '2ui';\nexport const UINT_3D_UNIFORM = '3ui';\nexport const UINT_4D_UNIFORM = '4ui';\n\n// Uniform types and values.\nexport type UniformType = typeof FLOAT | typeof INT | typeof UINT | typeof BOOL;\nexport type UniformInternalType = \n\ttypeof FLOAT_1D_UNIFORM |\n\ttypeof FLOAT_2D_UNIFORM |\n\ttypeof FLOAT_3D_UNIFORM |\n\ttypeof FLOAT_4D_UNIFORM |\n\ttypeof INT_1D_UNIFORM |\n\ttypeof INT_2D_UNIFORM |\n\ttypeof INT_3D_UNIFORM |\n\ttypeof INT_4D_UNIFORM |\n\ttypeof UINT_1D_UNIFORM |\n\ttypeof UINT_2D_UNIFORM |\n\ttypeof UINT_3D_UNIFORM |\n\ttypeof UINT_4D_UNIFORM;\nexport type UniformValue = boolean | number | number[];\nexport type Uniform = { \n\tlocation: { [key: string]: WebGLUniformLocation },\n\ttype: UniformInternalType,\n\tvalue: UniformValue,\n};\n\n// Vertex shader types.\nexport const DEFAULT_PROGRAM_NAME = 'DEFAULT';\nexport const DEFAULT_W_UV_PROGRAM_NAME = 'DEFAULT_W_UV';\nexport const DEFAULT_W_NORMAL_PROGRAM_NAME = 'DEFAULT_W_NORMAL';\nexport const DEFAULT_W_UV_NORMAL_PROGRAM_NAME = 'DEFAULT_W_UV_NORMAL';\nexport const SEGMENT_PROGRAM_NAME = 'SEGMENT';\nexport const LAYER_POINTS_PROGRAM_NAME = 'LAYER_POINTS';\nexport const LAYER_LINES_PROGRAM_NAME = 'LAYER_LINES';\nexport const LAYER_VECTOR_FIELD_PROGRAM_NAME = 'LAYER_VECTOR_FIELD';\nexport type PROGRAM_NAME_INTERNAL =\n\ttypeof DEFAULT_PROGRAM_NAME |\n\ttypeof DEFAULT_W_UV_PROGRAM_NAME |\n\ttypeof DEFAULT_W_NORMAL_PROGRAM_NAME |\n\ttypeof DEFAULT_W_UV_NORMAL_PROGRAM_NAME |\n\ttypeof SEGMENT_PROGRAM_NAME |\n\ttypeof LAYER_POINTS_PROGRAM_NAME |\n\ttypeof LAYER_LINES_PROGRAM_NAME |\n\ttypeof LAYER_VECTOR_FIELD_PROGRAM_NAME;\n\n// Pass in #defines as strings to make it easier to control float vs int.\nexport type CompileTimeVars = { [key: string]: string };\n\n// Each buffer in GPULayer contains a WebGLTexture and WebGLFramebuffer.\nexport type GPULayerBuffer = {\n\ttexture: WebGLTexture,\n\tframebuffer?: WebGLFramebuffer,\n}\n\n// Error callback, defaults to throwing an error.\nexport type ErrorCallback = (message: string) => void;\nexport const DEFAULT_ERROR_CALLBACK = (msg: string) => { throw new Error(msg); };\n\n// For stepCircle() and stepSegment() (with end caps).\nexport const DEFAULT_CIRCLE_NUM_SEGMENTS = 18;// Must be divisible by 6 to work with stepSegment().","import { GPUComposer } from './GPUComposer';\n\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float\n// Float is provided by default in WebGL2 contexts.\n// This extension implicitly enables the WEBGL_color_buffer_float extension (if supported), which allows rendering to 32-bit floating-point color buffers.\nexport const OES_TEXTURE_FLOAT = 'OES_texture_float';\n// https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_half_float\n// Half float is supported by modern mobile browsers, float not yet supported.\n// Half float is provided by default for Webgl2 contexts.\n// This extension implicitly enables the EXT_color_buffer_half_float extension (if supported), which allows rendering to 16-bit floating point formats.\nexport const OES_TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n// TODO: Seems like linear filtering of floats may be supported in some browsers without these extensions?\n// https://www.khronos.org/registry/OpenGL/extensions/OES/OES_texture_float_linear.txt\nexport const OES_TEXTURE_FLOAT_LINEAR = 'OES_texture_float_linear';\nexport const OES_TEXTURE_HAlF_FLOAT_LINEAR = 'OES_texture_half_float_linear';\n// https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n// Adds gl.UNSIGNED_SHORT, gl.UNSIGNED_INT types to textImage2D in WebGL1.0\nexport const WEBGL_DEPTH_TEXTURE = 'WEBGL_depth_texture';\n// EXT_COLOR_BUFFER_FLOAT adds ability to render to a variety of floating pt textures.\n// This is needed for the WebGL2 contexts that do not support OES_TEXTURE_FLOAT / OES_TEXTURE_HALF_FLOAT extensions.\n// https://developer.mozilla.org/en-US/docs/Web/API/EXT_color_buffer_float\n// https://stackoverflow.com/questions/34262493/framebuffer-incomplete-attachment-for-texture-with-internal-format\n// https://stackoverflow.com/questions/36109347/framebuffer-incomplete-attachment-only-happens-on-android-w-firefox\nexport const EXT_COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n\nexport function getExtension(\n\tcomposer: GPUComposer,\n\textensionName: string,\n\toptional = false,\n) {\n\t// Check if we've already loaded the extension.\n\tif (composer.extensions[extensionName] !== undefined) return composer.extensions[extensionName];\n\n\tconst { gl, errorCallback } = composer;\n\tlet extension;\n\ttry {\n\t\textension = gl.getExtension(extensionName);\n\t} catch (e) {}\n\tif (extension) {\n\t\t// Cache this extension.\n\t\tcomposer.extensions[extensionName] = extension;\n\t\tconsole.log(`Loaded extension: ${extensionName}.`);\n\t} else {\n\t\tcomposer.extensions[extensionName] = false; // Cache the bad extension lookup.\n\t\tconsole.warn(`Unsupported ${optional ? 'optional ' : ''}extension: ${extensionName}.`);\n\t}\n\t// If the extension is not optional, throw error.\n\tif (!extension && !optional) {\n\t\terrorCallback(`Required extension unsupported by this device / browser: ${extensionName}.`);\n\t}\n\treturn extension;\n}","import {\n\tmakeShaderHeader,\n\tcompileShader,\n\tinitGLProgram,\n\tisWebGL2,\n\tisWebGL2Supported,\n\treadyToRead,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n\tpreprocessFragmentShader,\n\tpreprocessVertexShader,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n\tuniformInternalTypeForValue,\n} from './utils';\nimport { GPUComposer } from './GPUComposer';\nimport { GPULayer } from './GPULayer';\nimport { GPUProgram } from './GPUProgram';\nimport * as checks from './checks';\nimport * as GPULayerHelpers from './GPULayerHelpers';\n\n// These exports are only used for testing.\nconst _testing = {\n\tmakeShaderHeader,\n\tcompileShader,\n\tinitGLProgram,\n\treadyToRead,\n\tpreprocessVertexShader,\n\tpreprocessFragmentShader,\n\tisPowerOf2,\n\tinitSequentialFloatArray,\n\tuniformInternalTypeForValue,\n\t...checks,\n\t...GPULayerHelpers,\n}\n\n// Named exports.\nexport * from './constants';\nexport {\n\tGPUComposer,\n\tGPULayer,\n\tGPUProgram,\n\tisWebGL2,\n\tisWebGL2Supported,\n\tisHighpSupportedInVertexShader,\n\tisHighpSupportedInFragmentShader,\n\tgetVertexShaderMediumpPrecision,\n\tgetFragmentShaderMediumpPrecision,\n\t_testing,\n}","import {\n\tisArray,\n\tisBoolean,\n\tisInteger,\n\tisNonNegativeInteger,\n\tisNumber,\n\tisString,\n} from './checks';\nimport {\n\tBOOL,\n\tCompileTimeVars,\n\tDEFAULT_ERROR_CALLBACK,\n\tErrorCallback,\n\tFLOAT,\n\tFLOAT_1D_UNIFORM,\n\tFLOAT_2D_UNIFORM,\n\tFLOAT_3D_UNIFORM,\n\tFLOAT_4D_UNIFORM,\n\tGLSL1,\n\tGLSL3,\n\tGLSLPrecision,\n\tGLSLVersion,\n\tINT,\n\tINT_1D_UNIFORM,\n\tINT_2D_UNIFORM,\n\tINT_3D_UNIFORM,\n\tINT_4D_UNIFORM,\n\tPRECISION_HIGH_P,\n\tPRECISION_LOW_P,\n\tPRECISION_MEDIUM_P,\n\tUINT,\n\tUINT_1D_UNIFORM,\n\tUINT_2D_UNIFORM,\n\tUINT_3D_UNIFORM,\n\tUINT_4D_UNIFORM,\n\tUniformType,\n\tUniformValue,\n\tWEBGL1,\n\tWEBGL2,\n} from './constants';\nconst precisionSource = require('./glsl/common/precision.glsl');\n\n/**\n * Memoize results of more complex WebGL tests (that require allocations/deallocations).\n */\nconst results = {\n\tsupportsWebGL2: undefined as undefined | boolean,\n\tsupportsHighpVertex: undefined as  undefined | boolean,\n\tsupportsHighpFragment: undefined as undefined | boolean,\n\tmediumpVertexPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n\tmediumpFragmentPrecision: undefined as undefined | typeof PRECISION_HIGH_P | typeof PRECISION_MEDIUM_P,\n}\n\n/**\n * Enum for precision values.\n * See src/glsl/common/precision.glsl for more info.\n * Used internally.\n */\nfunction intForPrecision(precision: GLSLPrecision) {\n\tif (precision === PRECISION_HIGH_P) return 2;\n\tif (precision === PRECISION_MEDIUM_P) return 1;\n\tif (precision === PRECISION_LOW_P) return 0;\n\tthrow new Error(`Unknown shader precision value: ${JSON.stringify(precision)}.`);\n}\n\n/**\n * Create a string to pass defines into shader.\n * Used internally.\n */\nfunction convertDefinesToString(defines: CompileTimeVars) {\n\tlet definesSource = '';\n\tconst keys = Object.keys(defines);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\t// Check that define is passed in as a string.\n\t\tif (!isString(key) || !isString(defines[key])) {\n\t\t\tthrow new Error(`GPUProgram defines must be passed in as key value pairs that are both strings, got key value pair of type [${typeof key} : ${typeof defines[key]}] for key ${key}.`)\n\t\t}\n\t\tdefinesSource += `#define ${key} ${defines[key]}\\n`;\n\t}\n\treturn definesSource;\n}\n\n/**\n * Create header string for fragment and vertex shaders.\n * Export this for testing purposes.\n * Used internally.\n */\nexport function makeShaderHeader(\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tdefines?: CompileTimeVars,\n) {\n\tconst versionSource = glslVersion === GLSL3 ? `#version ${GLSL3}\\n` : '';\n\tconst definesSource = defines ? convertDefinesToString(defines) : '';\n\tconst precisionDefinesSource = convertDefinesToString({\n\t\tWEBGLCOMPUTE_INT_PRECISION: `${intForPrecision(intPrecision)}`,\n\t\tWEBGLCOMPUTE_FLOAT_PRECISION: `${intForPrecision(floatPrecision)}`,\n\t});\n\treturn `${versionSource}${definesSource}${precisionDefinesSource}${precisionSource}`;\n}\n\n/**\n * Compile vertex or fragment shaders.\n * Fragment shaders may be compiled on the fly, so keep this efficient.\n * Copied from http://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html\n * Used internally.\n */\nexport function compileShader(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tglslVersion: GLSLVersion,\n\tintPrecision: GLSLPrecision,\n\tfloatPrecision: GLSLPrecision,\n\tshaderSource: string,\n\tshaderType: number,\n\tprogramName: string,\n\terrorCallback: ErrorCallback,\n\tdefines?: CompileTimeVars,\n) {\n\t// Create the shader object\n\tconst shader = gl.createShader(shaderType);\n\tif (!shader) {\n\t\terrorCallback('Unable to init gl shader.');\n\t\treturn null;\n\t}\n\n\t// Set the shader source code.\n\tconst shaderHeader = makeShaderHeader(\n\t\tglslVersion,\n\t\tintPrecision,\n\t\tfloatPrecision,\n\t\tdefines,\n\t);\n\tgl.shaderSource(shader, `${shaderHeader}${shaderSource}`);\n\n\t// Compile the shader\n\tgl.compileShader(shader);\n\n\t// Check if it compiled\n\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\tif (!success) {\n\t\t// Something went wrong during compilation - print the error.\n\t\terrorCallback(`Could not compile ${shaderType === gl.FRAGMENT_SHADER ? 'fragment' : 'vertex'}\nshader for program \"${programName}\": ${gl.getShaderInfoLog(shader)}.`);\n\t\treturn null;\n\t}\n\treturn shader;\n}\n\n/**\n * Init a WebGL program from vertex and fragment shaders.\n * GLPrograms may be inited on the fly, so keep this efficient.\n * Used internally.\n */\nexport function initGLProgram(\n\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\tvertexShader: WebGLShader,\n\tfragmentShader: WebGLShader,\n\tname: string,\n\terrorCallback: ErrorCallback,\n) {\n\t// Create a program.\n\tconst program = gl.createProgram();\n\tif (!program) {\n\t\terrorCallback(`Unable to init GL program for GPUProgram \"${name}\", gl.createProgram() has failed.`);\n\t\treturn;\n\t}\n\t// Link the program.\n\tgl.attachShader(program, vertexShader);\n\tgl.attachShader(program, fragmentShader);\n\tgl.linkProgram(program);\n\t// Check if it linked.\n\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\tif (!success) {\n\t\t// Something went wrong with the link.\n\t\terrorCallback(`GPUProgram \"${name}\" failed to link: ${gl.getProgramInfoLog(program)}`);\n\t\treturn;\n\t}\n\treturn program;\n}\n\n/**\n * Returns whether a WebGL context is WebGL1 or WebGL2.\n * This code is pulled from https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLCapabilities.js\n * @param gl - WebGLRenderingContext or WebGL2RenderingContext to test.\n * @returns boolean\n */\nexport function isWebGL2(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\t// @ts-ignore\n\treturn (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) || (typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext);\n}\n\n/**\n * Returns whether WebGL2 is supported by the current browser.\n * @returns boolean\n */\nexport function isWebGL2Supported() {\n\tif (results.supportsWebGL2 === undefined) {\n\t\tconst gl = document.createElement('canvas').getContext(WEBGL2);\n\t\t// GL context and canvas will be garbage collected.\n\t\tresults.supportsWebGL2 = isWebGL2(gl!); // Will return false in case of gl = null.\n\t\treturn true;\n\t}\n\treturn results.supportsWebGL2;\n}\n\n/**\n * Checks if the framebuffer is ready to read.\n * Used internally.\n */\nexport function readyToRead(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\treturn gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n};\n\n/**\n * Detects whether highp is supported by this browser.\n * This is supposed to be relatively easy. You call gl.getShaderPrecisionFormat, you pass in the shader type,\n * VERTEX_SHADER or FRAGMENT_SHADER and you pass in one of LOW_FLOAT, MEDIUM_FLOAT, HIGH_FLOAT, LOW_INT, MEDIUM_INT, HIGH_INT,\n * and it returns the precision info.\n * Unfortunately Safari has a bug here which means checking this way will fail on iPhone, at least as of April 2020.\n * https://webglfundamentals.org/webgl/webgl-precision-lowp-mediump-highp.html\n * Used internally.\n */\nfunction isHighpSupported(vsSource: string, fsSource: string) {\n\tconst gl = document.createElement('canvas').getContext(WEBGL1);\n\tif (!gl) {\n\t\tthrow new Error(`Unable to init webgl context.`);\n\t}\n\ttry {\n\t\tconst vs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tvsSource,\n\t\t\tgl.VERTEX_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst fs = compileShader(\n\t\t\tgl,\n\t\t\tGLSL1,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tPRECISION_HIGH_P,\n\t\t\tfsSource,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\t'highpFragmentTest',\n\t\t\tDEFAULT_ERROR_CALLBACK,\n\t\t)!;\n\t\tconst program = initGLProgram(gl, vs, fs, 'highpFragmentTest', DEFAULT_ERROR_CALLBACK)!;\n\t\t// Deallocate everything.\n\t\tgl.deleteProgram(program);\n\t\tgl.deleteShader(vs);\n\t\tgl.deleteShader(fs);\n\t\t// GL context and canvas will be garbage collected.\n\t} catch {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/**\n * Detects whether highp precision is supported in vertex shaders in the current browser.\n * @returns boolean\n */\nexport function isHighpSupportedInVertexShader() {\n\tif (results.supportsHighpVertex === undefined) {\n\t\tconst vertexSupport = isHighpSupported(\n\t\t\t'void main() { highp float test = 0.524; gl_Position = vec4(test, test, 0, 1); }',\n\t\t\t'void main() { gl_FragColor = vec4(0); }',\n\t\t);\n\t\tresults.supportsHighpVertex = vertexSupport;\n\t}\n\treturn results.supportsHighpVertex;\n}\n\n/**\n * Detects whether highp precision is supported in fragment shaders in the current browser.\n * @returns boolean\n */\nexport function isHighpSupportedInFragmentShader() {\n\tif (results.supportsHighpFragment === undefined) {\n\t\tconst fragmentSupport = isHighpSupported(\n\t\t\t'void main() { gl_Position = vec4(0.5, 0.5, 0, 1); }',\n\t\t\t'void main() { highp float test = 1.35; gl_FragColor = vec4(test); }',\n\t\t);\n\t\tresults.supportsHighpFragment = fragmentSupport;\n\t}\n\treturn results.supportsHighpFragment;\n}\n\n/**\n * Helper function to perform a 1px math calculation in order to determine WebGL capabilities.\n * From https://webglfundamentals.org/\n * Used internally.\n */\nfunction test1PxCalc(\n\tname: string,\n\tgl: WebGL2RenderingContext | WebGLRenderingContext,\n\tfs: WebGLShader,\n\tvs: WebGLShader,\n\taddUniforms: (program: WebGLProgram) => void,\n) {\n\tconst program = initGLProgram(gl, vs, fs, name, DEFAULT_ERROR_CALLBACK);\n\tif (!program) {\n\t\tthrow new Error(`Unable to init WebGLProgram.`);\n\t}\n\tconst positionLocation = gl.getAttribLocation(program, 'position');\n\n\t// create a buffer and setup an attribute\n\t// We wouldn't need this except for a bug in Safari.\n\t// See https://webglfundamentals.org/webgl/lessons/webgl-smallest-programs.html\n\t// and https://bugs.webkit.org/show_bug.cgi?id=197592\n\tconst buffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ARRAY_BUFFER, 1, gl.STATIC_DRAW);\n\tgl.enableVertexAttribArray(positionLocation);\n\tgl.vertexAttribPointer(\n\t\tpositionLocation,\n\t\t1,                // pull 1 value per vertex shader iteration from buffer\n\t\tgl.UNSIGNED_BYTE, // type of data in buffer,\n\t\tfalse,            // don't normalize\n\t\t0,                // bytes to advance per iteration (0 = compute from size and type)\n\t\t0,                // offset into buffer\n\t);\n\n\tgl.viewport(0, 0, 1, 1);\n\tgl.useProgram(program);\n\n\taddUniforms(program);\n\t\n\tgl.drawArrays(\n\t\tgl.POINTS,\n\t\t0, // offset\n\t\t1, // number of vertices to process\n\t);\n\n\tconst pixel = new Uint8Array(4);\n\tgl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n\n\t// Deallocate everything.\n\tgl.deleteProgram(program);\n\tgl.deleteShader(vs);\n\tgl.deleteShader(fs);\n\tgl.deleteBuffer(buffer);\n\t// GL context and canvas will be garbage collected.\n\n\treturn pixel;\n}\n\n/**\n * Returns the actual precision of mediump inside vertex shader.\n * From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n * @returns 'highp' or 'mediump'\n */\nexport function getVertexShaderMediumpPrecision() {\n\tif (results.mediumpVertexPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\t/** @type {HTMLCanvasElement} */\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tuniform mediump vec3 v;\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t\tv_result = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tvarying mediump vec4 v_result;\n\tvoid main() {\n\t\tgl_FragColor = v_result;\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionVertexTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionVertexTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpVertexPrecision = mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpVertexPrecision;\n}\n\n/**\n * Returns the actual precision of mediump inside fragment shader.\n * From https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n * @returns 'highp' or 'mediump'\n */\nexport function getFragmentShaderMediumpPrecision() {\n\tif (results.mediumpFragmentPrecision === undefined) {\n\t\t// This entire program is only needed because of a bug in Safari.\n\t\t// Safari doesn't correctly report precision from getShaderPrecisionFormat\n\t\t// at least as of April 2020\n\t\t// see: https://bugs.webkit.org/show_bug.cgi?id=211013\n\n\t\t// Get A WebGL context\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst gl = canvas.getContext(\"webgl\");\n\t\tif (!gl) {\n\t\t\tthrow new Error(`Unable to init webgl context.`);\n\t\t}\n\n\t\tconst vs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P,`\n\tattribute vec4 position;  // needed because of another bug in Safari\n\tvoid main() {\n\t\tgl_Position = position;\n\t\tgl_PointSize = 1.0;\n\t}\n\t\t`, gl.VERTEX_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!vs) {\n\t\t\tthrow new Error(`Unable to init vertex shader.`);\n\t\t}\n\n\t\tconst fs = compileShader(gl, GLSL1, PRECISION_MEDIUM_P, PRECISION_MEDIUM_P, `\n\tuniform mediump vec3 v;\n\tvoid main() {\n\t\tgl_FragColor = vec4(normalize(v) * 0.5 + 0.5, 1);\n\t}\n\t\t`, gl.FRAGMENT_SHADER, 'mediumpPrecisionFragmentTest', DEFAULT_ERROR_CALLBACK);\n\t\tif (!fs) {\n\t\t\tthrow new Error(`Unable to init fragment shader.`);\n\t\t}\n\n\t\t// we're going to compute the normalize vector of\n\t\t// (sqrt(2^31-1), sqrt(2^31-1), sqrt(2^31-1))\n\t\t// which should be impossible on mediump\n\t\tconst value = 2 ** 31 - 1;\n\t\tconst input = Math.sqrt(value);\n\t\tconst expected = ((input / Math.sqrt(input * input * 3)) * 0.5 + 0.5) * 255 | 0;\n\n\t\tconst pixel = test1PxCalc(\n\t\t\t'mediumpPrecisionFragmentTest',\n\t\t\tgl,\n\t\t\tfs,\n\t\t\tvs,\n\t\t\t(program: WebGLProgram) => {\n\t\t\t\tconst vLocation = gl.getUniformLocation(program, 'v');\n\t\t\t\tgl.uniform3f(vLocation, input, input, input);\n\t\t\t},\n\t\t);\n\n\t\tconst mediumpPrecision = Math.abs(pixel[0] - expected) > 16;\n\t\tresults.mediumpFragmentPrecision =  mediumpPrecision ? PRECISION_MEDIUM_P : PRECISION_HIGH_P;\n\t}\n\treturn results.mediumpFragmentPrecision;\n}\n\n/**\n * Returns whether a number is a power of 2.\n * Used internally.\n */\nexport function isPowerOf2(value: number) {\n\t// Use bitwise operation to evaluate this.\n\treturn value > 0 && (value & (value - 1)) == 0;\n}\n\n/**\n * Returns a Float32 array with sequential values [0, 1, 2, 3...].\n * Used internally.\n */\nexport function initSequentialFloatArray(length: number) {\n\tconst array = new Float32Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tarray[i] = i;\n\t}\n\treturn array;\n}\n\n/**\n * Strip out any unnecessary elements in shader source, e.g. #version and precision declarations.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * Used internally.\n */\nfunction preprocessShader(shaderSource: string) {\n\t// Strip out any version numbers.\n\t// https://github.com/Jam3/glsl-version-regex\n\tlet origLength = shaderSource.length;\n\tshaderSource = shaderSource.replace(/^\\s*\\#version\\s+([0-9]+(\\s+[a-zA-Z]+)?)\\s*/, '');\n\tif (shaderSource.length !== origLength) {\n\t\tconsole.warn('WebGLCompute expects shader source that does not contain #version declarations, removing...');\n\t}\n\t// Strip out any precision declarations.\n\torigLength = shaderSource.length;\n\tshaderSource = shaderSource.replace(/\\s*precision\\s+((highp)|(mediump)|(lowp))\\s+[a-zA-Z0-9]+\\s*;/g, '');\n\tif (shaderSource.length !== origLength) {\n\t\tconsole.warn('WebGLCompute expects shader source that does not contain precision declarations, removing...');\n\t}\n\treturn shaderSource;\n}\n\n/**\n * Common code for converting vertex/fragment shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * Used internally.\n */\nfunction convertShaderToGLSL1(shaderSource: string) {\n\t// TODO: there are probably more to add here.\n\tshaderSource = shaderSource.replace(/((\\bisampler2D\\b)|(\\busampler2D\\b))/g, 'sampler2D');\n\tshaderSource = shaderSource.replace(/((\\bivec2\\b)|(\\buvec2\\b))/g, 'vec2');\n\tshaderSource = shaderSource.replace(/((\\bivec3\\b)|(\\buvec3\\b))/g, 'vec3');\n\tshaderSource = shaderSource.replace(/((\\bivec4\\b)|(\\buvec4\\b))/g, 'vec4');\n\tshaderSource = shaderSource.replace(/\\buint\\b/g, 'int');\n\tshaderSource = shaderSource.replace(/\\buint\\(/g, 'int(');\n\t// Convert texture to texture2D.\n\tshaderSource = shaderSource.replace(/\\btexture\\(/g, 'texture2D(');\n\treturn shaderSource;\n}\n\n/**\n * Convert vertex shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * Used internally.\n */\nfunction convertVertexShaderToGLSL1(shaderSource: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to attribute.\n\tshaderSource = shaderSource.replace(/\\bin\\b/, 'attribute');\n\t// Convert out to varying.\n\tshaderSource = shaderSource.replace(/\\bout\\b/g, 'varying');\n\treturn shaderSource;\n}\n\n/**\n * Convert fragment shader source to GLSL1.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * Used internally.\n */\nfunction convertFragmentShaderToGLSL1(shaderSource: string) {\n\tshaderSource = convertShaderToGLSL1(shaderSource);\n\t// Convert in to varying.\n\tshaderSource = shaderSource.replace(/\\bin\\b/g, 'varying');\n\t// Convert out to gl_FragColor.\n\tshaderSource = shaderSource.replace(/\\bout \\w+ out_fragColor;/g, '');\n\tshaderSource = shaderSource.replace(/\\bout_fragColor\\s+=/, 'gl_FragColor =');\n\treturn shaderSource;\n}\n\n/**\n * Preprocess vertex shader for glslVersion and browser capabilities.\n * This is called once on initialization, so doesn't need to be extremely efficient.\n * Used internally.\n */\nexport function preprocessVertexShader(shaderSource: string, glslVersion: GLSLVersion) {\n\tshaderSource = preprocessShader(shaderSource);\n\t// Check if highp supported in vertex shaders.\n\tif (!isHighpSupportedInVertexShader()) {\n\t\tconsole.warn('highp not supported in vertex shader, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = shaderSource.replace(/\\bhighp\\b/, 'mediump');\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertVertexShaderToGLSL1(shaderSource);\n}\n\n/**\n * Preprocess fragment shader for glslVersion and browser capabilities.\n * This is called once on initialization of GPUProgram, so doesn't need to be extremely efficient.\n * Used internally.\n */\nexport function preprocessFragmentShader(shaderSource: string, glslVersion: GLSLVersion) {\n\tshaderSource = preprocessShader(shaderSource);\n\t// Check if highp supported in fragment shaders.\n\tif (!isHighpSupportedInFragmentShader()) {\n\t\tconsole.warn('highp not supported in fragment shader, falling back to mediump.');\n\t\t// Replace all highp with mediump.\n\t\tshaderSource = shaderSource.replace(/\\bhighp\\b/, 'mediump');\n\t}\n\tif (glslVersion === GLSL3) {\n\t\treturn shaderSource;\n\t}\n\treturn convertFragmentShaderToGLSL1(shaderSource);\n}\n\n/**\n * Check uniforms and return internal WebGL type (e.g. [1234][u]?[if])\n * Used internally.\n */\nexport function uniformInternalTypeForValue(\n\tvalue: UniformValue,\n\ttype: UniformType,\n\tuniformName: string,\n\tprogramName: string,\n) {\n\tif (type === FLOAT) {\n\t\t// Check that we are dealing with a number.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNumber((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNumber(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn FLOAT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn FLOAT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn FLOAT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn FLOAT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected float or float[] of length 1-4.`);\n\t} else if (type === INT) {\n\t\t// Check that we are dealing with an int.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn INT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn INT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn INT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn INT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected int or int[] of length 1-4.`);\n\t} else if (type === UINT) {\n\t\t// Check that we are dealing with a uint.\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < (value as number[]).length; i++) {\n\t\t\t\tif (!isNonNegativeInteger((value as number[])[i])) {\n\t\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isNonNegativeInteger(value)) {\n\t\t\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t\t\t}\n\t\t}\n\t\tif (!isArray(value) || (value as number[]).length === 1) {\n\t\t\treturn UINT_1D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 2) {\n\t\t\treturn UINT_2D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 3) {\n\t\t\treturn UINT_3D_UNIFORM;\n\t\t}\n\t\tif ((value as number[]).length === 4) {\n\t\t\treturn UINT_4D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected uint or uint[] of length 1-4.`);\n\t} else if (type === BOOL) {\n\t\tif (isBoolean(value)) {\n\t\t\t// Boolean types are passed in as ints.\n\t\t\t// This suggest floats work as well, but ints seem more natural:\n\t\t\t// https://github.com/KhronosGroup/WebGL/blob/main/sdk/tests/conformance/uniforms/gl-uniform-bool.html\n\t\t\treturn INT_1D_UNIFORM;\n\t\t}\n\t\tthrow new Error(`Invalid value ${JSON.stringify(value)} for uniform \"${uniformName}\" in program \"${programName}\", expected boolean.`);\n\t} else {\n\t\tthrow new Error(`Invalid type \"${type}\" for uniform \"${uniformName}\" in program \"${programName}\", expected ${FLOAT} or ${INT} of ${BOOL}.`);\n\t}\n}","module.exports = \"#if (WEBGLCOMPUTE_INT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp int;\\n#if (__VERSION__ == 300)\\nprecision highp isampler2D;precision highp usampler2D;\\n#endif\\n#else\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#endif\\n#if (WEBGLCOMPUTE_INT_PRECISION == 1)\\nprecision mediump int;\\n#if (__VERSION__ == 300)\\nprecision mediump isampler2D;precision mediump usampler2D;\\n#endif\\n#endif\\n#if (WEBGLCOMPUTE_INT_PRECISION == 0)\\nprecision lowp int;\\n#if (__VERSION__ == 300)\\nprecision lowp isampler2D;precision lowp usampler2D;\\n#endif\\n#endif\\n#if (WEBGLCOMPUTE_FLOAT_PRECISION == 2)\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;precision highp sampler2D;\\n#else\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#endif\\n#if (WEBGLCOMPUTE_FLOAT_PRECISION == 1)\\nprecision mediump float;precision mediump sampler2D;\\n#endif\\n#if (WEBGLCOMPUTE_FLOAT_PRECISION == 0)\\nprecision lowp float;precision lowp sampler2D;\\n#endif\\n\"","module.exports = \"in vec2 v_UV;\\n#ifdef WEBGLCOMPUTE_FLOAT\\nuniform sampler2D u_state;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nuniform isampler2D u_state;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nuniform usampler2D u_state;\\n#endif\\n#ifdef WEBGLCOMPUTE_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=texture(u_state,v_UV);}\"","module.exports = \"#ifdef WEBGLCOMPUTE_FLOAT\\nuniform vec4 u_value;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nuniform ivec4 u_value;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nuniform uvec4 u_value;\\n#endif\\n#ifdef WEBGLCOMPUTE_FLOAT\\nout vec4 out_fragColor;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nout ivec4 out_fragColor;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nout uvec4 out_fragColor;\\n#endif\\nvoid main(){out_fragColor=u_value;}\"","module.exports = \"in vec2 v_UV;uniform vec3 u_color;uniform float u_scale;\\n#ifdef WEBGLCOMPUTE_FLOAT\\nuniform sampler2D u_internal_data;\\n#endif\\n#ifdef WEBGLCOMPUTE_INT\\nuniform isampler2D u_internal_data;\\n#endif\\n#ifdef WEBGLCOMPUTE_UINT\\nuniform usampler2D u_internal_data;\\n#endif\\nout vec4 out_fragColor;void main(){uvec4 value=texture(u_internal_data,v_UV);float mag=length(value);out_fragColor=vec4(mag*u_scale*u_color,1);}\"","module.exports = \"in vec2 v_lineWrapping;uniform vec4 u_value;out vec4 out_fragColor;void main(){if((v_lineWrapping.x!=0.&&v_lineWrapping.x!=1.)||(v_lineWrapping.y!=0.&&v_lineWrapping.y!=1.)){discard;return;}out_fragColor=vec4(u_value);}\"","module.exports = \"in vec2 a_internal_position;\\n#ifdef WEBGLCOMPUTE_UV_ATTRIBUTE\\nin vec2 a_internal_uv;\\n#endif\\n#ifdef WEBGLCOMPUTE_NORMAL_ATTRIBUTE\\nin vec2 a_internal_normal;\\n#endif\\nuniform vec2 u_internal_scale;uniform vec2 u_internal_translation;out vec2 v_UV;out vec2 v_UV_local;\\n#ifdef WEBGLCOMPUTE_NORMAL_ATTRIBUTE\\nout vec2 v_normal;\\n#endif\\nvoid main(){\\n#ifdef WEBGLCOMPUTE_UV_ATTRIBUTE\\nv_UV_local=a_internal_uv;\\n#else\\nv_UV_local=a_internal_position;\\n#endif\\n#ifdef WEBGLCOMPUTE_NORMAL_ATTRIBUTE\\nv_normal=a_internal_normal;\\n#endif\\nvec2 position=u_internal_scale*a_internal_position+u_internal_translation;v_UV=0.5*(position+1.);gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_positions;uniform vec2 u_internal_positionsDimensions;uniform vec2 u_internal_scale;uniform bool u_internal_positionWithAccumulation;uniform bool u_internal_wrapX;uniform bool u_internal_wrapY;out vec2 v_UV;out vec2 v_lineWrapping;out float v_index;void main(){vec2 particleUV=vec2(modI(a_internal_index,u_internal_positionsDimensions.x),floor(floor(a_internal_index+0.5)/u_internal_positionsDimensions.x))/u_internal_positionsDimensions;vec4 positionData=texture(u_internal_positions,particleUV);vec2 positionAbsolute=positionData.rg;if(u_internal_positionWithAccumulation)positionAbsolute+=positionData.ba;v_UV=positionAbsolute*u_internal_scale;v_lineWrapping=vec2(0.);if(u_internal_wrapX){if(v_UV.x<0.){v_UV.x+=1.;v_lineWrapping.x=1.;}else if(v_UV.x>1.){v_UV.x-=1.;v_lineWrapping.x=1.;}}if(u_internal_wrapY){if(v_UV.y<0.){v_UV.y+=1.;v_lineWrapping.y=1.;}else if(v_UV.y>1.){v_UV.y-=1.;v_lineWrapping.y=1.;}}vec2 position=v_UV*2.-1.;v_index=a_internal_index;gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_positions;uniform vec2 u_internal_positionsDimensions;uniform vec2 u_internal_scale;uniform float u_internal_pointSize;uniform bool u_internal_positionWithAccumulation;uniform bool u_internal_wrapX;uniform bool u_internal_wrapY;out vec2 v_UV;out float v_index;void main(){vec2 particleUV=vec2(modI(a_internal_index,u_internal_positionsDimensions.x),floor(floor(a_internal_index+0.5)/u_internal_positionsDimensions.x))/u_internal_positionsDimensions;vec4 positionData=texture(u_internal_positions,particleUV);vec2 positionAbsolute=positionData.rg;if(u_internal_positionWithAccumulation)positionAbsolute+=positionData.ba;v_UV=positionAbsolute*u_internal_scale;if(u_internal_wrapX){if(v_UV.x<0.)v_UV.x+=1.;if(v_UV.x>1.)v_UV.x-=1.;}if(u_internal_wrapY){if(v_UV.y<0.)v_UV.y+=1.;if(v_UV.y>1.)v_UV.y-=1.;}vec2 position=v_UV*2.-1.;v_index=a_internal_index;gl_PointSize=u_internal_pointSize;gl_Position=vec4(position,0,1);}\"","module.exports = \"float modI(float a,float b){float m=a-floor((a+0.5)/b)*b;return floor(m+0.5);}in float a_internal_index;uniform sampler2D u_internal_vectors;uniform vec2 u_internal_dimensions;uniform vec2 u_internal_scale;out vec2 v_UV;out float v_index;void main(){float index=floor((a_internal_index+0.5)/2.);v_UV=vec2(modI(index,u_internal_dimensions.x),floor(floor(index+0.5)/u_internal_dimensions.x))/u_internal_dimensions;if(modI(a_internal_index,2.)>0.){vec2 vectorData=texture(u_internal_vectors,v_UV).xy;v_UV+=vectorData*u_internal_scale;}vec2 position=v_UV*2.-1.;v_index=a_internal_index;gl_Position=vec4(position,0,1);}\"","module.exports = \"in vec2 a_internal_position;uniform float u_internal_halfThickness;uniform vec2 u_internal_scale;uniform float u_internal_length;uniform float u_internal_rotation;uniform vec2 u_internal_translation;out vec2 v_UV_local;out vec2 v_UV;mat2 rotate2d(float _angle){return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));}void main(){v_UV_local=0.5*(a_internal_position+1.);vec2 position=a_internal_position;position*=u_internal_halfThickness;if(position.x<0.){position.x-=u_internal_length/2.;v_UV_local.x=0.;}else if(position.x>0.){position.x+=u_internal_length/2.;v_UV_local.x=1.;}position=u_internal_scale*(rotate2d(-u_internal_rotation)*position)+u_internal_translation;v_UV=0.5*(position+1.);gl_Position=vec4(position,0,1);}\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"sourceRoot":""}